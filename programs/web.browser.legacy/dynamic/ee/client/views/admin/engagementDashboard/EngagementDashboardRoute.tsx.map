)]}'
{"version":3,"sources":["meteor://ðŸ’»app/ee/client/views/admin/engagementDashboard/EngagementDashboardRoute.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { usePermission, useRouter, useSetModal, useCurrentModal, useTranslation, useRouteParameter } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React, { useEffect } from 'react';\n\nimport { getURL } from '../../../../../app/utils/client/getURL';\nimport GenericUpsellModal from '../../../../../client/components/GenericUpsellModal';\nimport { useUpsellActions } from '../../../../../client/components/GenericUpsellModal/hooks';\nimport PageSkeleton from '../../../../../client/components/PageSkeleton';\nimport { useEndpointAction } from '../../../../../client/hooks/useEndpointAction';\nimport NotAuthorizedPage from '../../../../../client/views/notAuthorized/NotAuthorizedPage';\nimport { useHasLicenseModule } from '../../../hooks/useHasLicenseModule';\nimport EngagementDashboardPage from './EngagementDashboardPage';\n\nconst isValidTab = (tab: string | undefined): tab is 'users' | 'messages' | 'channels' =>\n\ttypeof tab === 'string' && ['users', 'messages', 'channels'].includes(tab);\n\nconst EngagementDashboardRoute = (): ReactElement | null => {\n\tconst t = useTranslation();\n\tconst canViewEngagementDashboard = usePermission('view-engagement-dashboard');\n\tconst setModal = useSetModal();\n\tconst isModalOpen = useCurrentModal() !== null;\n\n\tconst router = useRouter();\n\tconst tab = useRouteParameter('tab');\n\tconst eventStats = useEndpointAction('POST', '/v1/statistics.telemetry');\n\n\tconst hasEngagementDashboard = useHasLicenseModule('engagement-dashboard') as boolean;\n\n\tconst { shouldShowUpsell, handleManageSubscription } = useUpsellActions(hasEngagementDashboard);\n\n\tuseEffect(() => {\n\t\tif (shouldShowUpsell) {\n\t\t\tsetModal(\n\t\t\t\t<GenericUpsellModal\n\t\t\t\t\ttitle={t('Engagement_Dashboard')}\n\t\t\t\t\timg={getURL('images/engagement.png')}\n\t\t\t\t\tsubtitle={t('Analyze_practical_usage')}\n\t\t\t\t\tdescription={t('Enrich_your_workspace')}\n\t\t\t\t\tonClose={() => setModal(null)}\n\t\t\t\t\tonConfirm={handleManageSubscription}\n\t\t\t\t\tonCancel={() => setModal(null)}\n\t\t\t\t/>,\n\t\t\t);\n\t\t}\n\n\t\trouter.subscribeToRouteChange(() => {\n\t\t\tif (!isValidTab(tab)) {\n\t\t\t\trouter.navigate(\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: '/admin/engagement/:tab?',\n\t\t\t\t\t\tparams: { tab: 'users' },\n\t\t\t\t\t},\n\t\t\t\t\t{ replace: true },\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}, [shouldShowUpsell, router, tab, setModal, t, handleManageSubscription]);\n\n\tif (isModalOpen) {\n\t\treturn <PageSkeleton />;\n\t}\n\n\tif (!canViewEngagementDashboard || !hasEngagementDashboard) {\n\t\treturn <NotAuthorizedPage />;\n\t}\n\n\teventStats({\n\t\tparams: [{ eventName: 'updateCounter', settingsId: 'Engagement_Dashboard_Load_Count' }],\n\t});\n\n\treturn (\n\t\t<EngagementDashboardPage\n\t\t\ttab={tab as 'users' | 'messages' | 'channels'}\n\t\t\tonSelectTab={(tab) =>\n\t\t\t\trouter.navigate({\n\t\t\t\t\tpattern: '/admin/engagement/:tab?',\n\t\t\t\t\tparams: { tab },\n\t\t\t\t})\n\t\t\t}\n\t\t/>\n\t);\n};\n\nexport default EngagementDashboardRoute;\n",null],"names":["usePermission","useRouter","useSetModal","useCurrentModal","useTranslation","useRouteParameter","React","useEffect","getURL","GenericUpsellModal","useUpsellActions","PageSkeleton","useEndpointAction","NotAuthorizedPage","useHasLicenseModule","EngagementDashboardPage","module","v","exportDefault","t","canViewEngagementDashboard","setModal","isModalOpen","router","tab","eventStats","hasEngagementDashboard","_useUpsellActions","shouldShowUpsell","handleManageSubscription","createElement","title","img","subtitle","description","onClose","onConfirm","onCancel","subscribeToRouteChange","includes","navigate","pattern","params","replace","eventName","settingsId","onSelectTab"],"mappings":"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"}