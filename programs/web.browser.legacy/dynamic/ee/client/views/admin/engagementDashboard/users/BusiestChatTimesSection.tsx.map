)]}'
{"version":3,"sources":["meteor://ðŸ’»app/ee/client/views/admin/engagementDashboard/users/BusiestChatTimesSection.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Select } from '@rocket.chat/fuselage';\nimport { useTranslation } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React, { useMemo, useState } from 'react';\n\nimport EngagementDashboardCardFilter from '../EngagementDashboardCardFilter';\nimport ContentForDays from './ContentForDays';\nimport ContentForHours from './ContentForHours';\n\ntype TimeUnit = 'hours' | 'days';\n\ntype BusiestChatTimesSectionProps = {\n\ttimezone: 'utc' | 'local';\n};\n\nconst BusiestChatTimesSection = ({ timezone }: BusiestChatTimesSectionProps): ReactElement => {\n\tconst t = useTranslation();\n\n\tconst [timeUnit, setTimeUnit] = useState<TimeUnit>('hours');\n\tconst timeUnitOptions = useMemo<[timeUnit: TimeUnit, label: string][]>(\n\t\t() => [\n\t\t\t['hours', t('Hours')],\n\t\t\t['days', t('Days')],\n\t\t],\n\t\t[t],\n\t);\n\n\tconst [displacement, setDisplacement] = useState(0);\n\n\tconst handleTimeUnitChange = (timeUnit: string): void => {\n\t\tsetTimeUnit(timeUnit as TimeUnit);\n\t\tsetDisplacement(0);\n\t};\n\n\tconst handlePreviousDateClick = (): void => setDisplacement((displacement) => displacement + 1);\n\tconst handleNextDateClick = (): void => setDisplacement((displacement) => displacement - 1);\n\n\tconst Content = (\n\t\t{\n\t\t\thours: ContentForHours,\n\t\t\tdays: ContentForDays,\n\t\t} as const\n\t)[timeUnit];\n\n\treturn (\n\t\t<>\n\t\t\t<EngagementDashboardCardFilter>\n\t\t\t\t<Select options={timeUnitOptions} value={timeUnit} onChange={(value) => handleTimeUnitChange(String(value))} />\n\t\t\t</EngagementDashboardCardFilter>\n\t\t\t<Content\n\t\t\t\tdisplacement={displacement}\n\t\t\t\tonPreviousDateClick={handlePreviousDateClick}\n\t\t\t\tonNextDateClick={handleNextDateClick}\n\t\t\t\ttimezone={timezone}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default BusiestChatTimesSection;\n",null],"names":["_slicedToArray","Select","useTranslation","React","useMemo","useState","EngagementDashboardCardFilter","ContentForDays","ContentForHours","module","link","default","v","exportDefault","_ref","timezone","t","_useState2","timeUnit","setTimeUnit","timeUnitOptions","_useState4","displacement","setDisplacement","handleTimeUnitChange","Content","hours","days","createElement","Fragment","options","value","onChange","String","onPreviousDateClick","onNextDateClick"],"mappings":"uBAeA,IAfAA,EAAAC,EAA+CC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA9BC,EAAMC,IAAA,CAAA,uCAAwB,CAAAC,QAAAA,SAAAA,CAAAA,EAAAX,EAAAA,CAAA,CAAA,EAAA,GAAtCS,EAAQC,IAAA,CAAM,wBAAwB,CAAAT,OAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAQ,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAP,eAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAO,EAAAA,IAAAA,CAAAA,QAAAA,CAAA,QAAA,SAAAG,CAAA,EAAAT,EAAAA,CAAA,EAAAC,QAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,SAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,mCAAAA,CAAA,QAAA,SAAAG,CAAA,EAAAN,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,mBAAAA,CAAA,QAAA,SAAAG,CAAA,EAAAL,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,oBAAAA,CAAA,QAAA,SAAAG,CAAA,EAAAJ,EAAAA,CAAA,CAAA,EAAA,GAA/CC,EAAOI,aAAU,CAee,SAAAC,CAAA,EAA6D,IAA1DC,EAAQD,EAARC,QAAQ,CACpCC,EAAId,IAEiDe,EAAAjB,EAA3BK,EAAmB,SAAQ,GAApDa,EAAQD,CAAA,CAAA,EAAA,CAAEE,EAAWF,CAAA,CAAA,EAAA,CACtBG,EAAkBhB,EACvB,WAAA,MAAM,CACL,CAAC,QAASY,EAAE,SAAS,CACrB,CAAC,OAAQA,EAAE,QAAQ,CACnB,EACD,CAACA,EAAE,EAG+CK,EAAArB,EAAXK,EAAS,GAAE,GAA5CiB,EAAYD,CAAA,CAAA,EAAA,CAAEE,EAAeF,CAAA,CAAA,EAAA,CAE9BG,EAAuB,SAACN,CAAgB,EAC7CC,EAAYD,GACZK,EAAgB,EACjB,EAKME,EACL,CACCC,MAAOlB,EACPmB,KAAMpB,EAEP,CAACW,EAAS,CAEX,OACCf,EAAAyB,aAAA,CAAAzB,EAAA0B,QAAA,CAAA,KACC1B,EAAAyB,aAAA,CAACtB,EAA6B,KAC7BH,EAAAyB,aAAA,CAAC3B,EAAM,CAAC6B,QAASV,EAAiBW,MAAOb,EAAUc,SAAU,SAACD,CAAK,EAAA,OAAKP,EAAqBS,OAAOF,GAAO,CAAC,IAE7G5B,EAAAyB,aAAA,CAACH,EAAO,CACPH,aAAcA,EACdY,oBAjB6B,WAAA,OAAYX,EAAgB,SAACD,CAAY,EAAA,OAAKA,EAAe,CAAC,EAAC,EAkB5Fa,gBAjByB,WAAA,OAAYZ,EAAgB,SAACD,CAAY,EAAA,OAAKA,EAAe,CAAC,EAAC,EAkBxFP,SAAUA,CAAS,GAIvB"}