)]}'
{"version":3,"sources":["meteor://ðŸ’»app/ee/client/views/admin/engagementDashboard/channels/ChannelsOverview.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Box, Icon, Margins, Pagination, Skeleton, Table, TableBody, TableCell, TableHead, TableRow, Tile } from '@rocket.chat/fuselage';\nimport { useTranslation } from '@rocket.chat/ui-contexts';\nimport moment from 'moment';\nimport type { ReactElement } from 'react';\nimport React, { useMemo, useState } from 'react';\n\nimport Growth from '../../../../../../client/components/dataView/Growth';\nimport DownloadDataButton from '../../../../components/dashboards/DownloadDataButton';\nimport PeriodSelector from '../../../../components/dashboards/PeriodSelector';\nimport { usePeriodSelectorState } from '../../../../components/dashboards/usePeriodSelectorState';\nimport EngagementDashboardCardFilter from '../EngagementDashboardCardFilter';\nimport { useChannelsList } from './useChannelsList';\n\nconst ChannelsOverview = (): ReactElement => {\n\tconst [period, periodSelectorProps] = usePeriodSelectorState('last 7 days', 'last 30 days', 'last 90 days');\n\n\tconst t = useTranslation();\n\n\tconst [current, setCurrent] = useState(0);\n\tconst [itemsPerPage, setItemsPerPage] = useState<25 | 50 | 100>(25);\n\n\tconst { data } = useChannelsList({\n\t\tperiod,\n\t\toffset: current,\n\t\tcount: itemsPerPage,\n\t});\n\n\tconst channels = useMemo(() => {\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn data?.channels?.map(({ room: { t, name, usernames, ts, _updatedAt }, messages, diffFromLastWeek }) => ({\n\t\t\tt,\n\t\t\tname: name || usernames?.join(' Ã— '),\n\t\t\tcreatedAt: ts,\n\t\t\tupdatedAt: _updatedAt,\n\t\t\tmessagesCount: messages,\n\t\t\tmessagesVariation: diffFromLastWeek,\n\t\t}));\n\t}, [data]);\n\n\treturn (\n\t\t<>\n\t\t\t<EngagementDashboardCardFilter>\n\t\t\t\t<PeriodSelector {...periodSelectorProps} />\n\t\t\t\t<DownloadDataButton\n\t\t\t\t\tattachmentName={`Channels_start_${data?.start}_end_${data?.end}`}\n\t\t\t\t\theaders={['Room type', 'Name', 'Messages', 'Last Update Date', 'Creation Date']}\n\t\t\t\t\tdataAvailable={!!data}\n\t\t\t\t\tdataExtractor={(): unknown[][] | undefined =>\n\t\t\t\t\t\tdata?.channels?.map(({ room: { t, name, usernames, ts, _updatedAt }, messages }) => [\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\tname || usernames?.join(' Ã— '),\n\t\t\t\t\t\t\tmessages,\n\t\t\t\t\t\t\t_updatedAt,\n\t\t\t\t\t\t\tts,\n\t\t\t\t\t\t])\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</EngagementDashboardCardFilter>\n\t\t\t<Box>\n\t\t\t\t{channels && !channels.length && (\n\t\t\t\t\t<Tile fontScale='p1' color='hint' style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t{t('No_data_found')}\n\t\t\t\t\t</Tile>\n\t\t\t\t)}\n\t\t\t\t{(!channels || channels.length) && (\n\t\t\t\t\t<Table>\n\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<TableCell>#</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{t('Channel')}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{t('Created')}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{t('Last_active')}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{t('Messages_sent')}</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t{channels?.map(({ t, name, createdAt, updatedAt, messagesCount, messagesVariation }, i) => (\n\t\t\t\t\t\t\t\t<TableRow key={i}>\n\t\t\t\t\t\t\t\t\t<TableCell>{i + 1}.</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Margins inlineEnd={4}>\n\t\t\t\t\t\t\t\t\t\t\t{(t === 'd' && <Icon name='at' />) || (t === 'p' && <Icon name='lock' />) || (t === 'c' && <Icon name='hashtag' />)}\n\t\t\t\t\t\t\t\t\t\t</Margins>\n\t\t\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>{moment(createdAt).format('L')}</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>{moment(updatedAt).format('L')}</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t{messagesCount} <Growth>{messagesVariation}</Growth>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t{!channels &&\n\t\t\t\t\t\t\t\tArray.from({ length: 5 }, (_, i) => (\n\t\t\t\t\t\t\t\t\t<TableRow key={i}>\n\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<Skeleton width='100%' />\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<Skeleton width='100%' />\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<Skeleton width='100%' />\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<Skeleton width='100%' />\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<Skeleton width='100%' />\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t\t)}\n\t\t\t\t<Pagination\n\t\t\t\t\tcurrent={current}\n\t\t\t\t\titemsPerPage={itemsPerPage}\n\t\t\t\t\titemsPerPageLabel={(): string => t('Items_per_page:')}\n\t\t\t\t\tshowingResultsLabel={({ count, current, itemsPerPage }): string =>\n\t\t\t\t\t\tt('Showing_results_of', current + 1, Math.min(current + itemsPerPage, count), count)\n\t\t\t\t\t}\n\t\t\t\t\tcount={data?.total || 0}\n\t\t\t\t\tonSetItemsPerPage={setItemsPerPage}\n\t\t\t\t\tonSetCurrent={setCurrent}\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t</>\n\t);\n};\n\nexport default ChannelsOverview;\n",null],"names":["_slicedToArray","Box","Icon","Margins","Pagination","Skeleton","Table","TableCell","TableHead","TableRow","Tile","useTranslation","moment","React","useMemo","useState","Growth","DownloadDataButton","PeriodSelector","usePeriodSelectorState","EngagementDashboardCardFilter","useChannelsList","module","link","default","v","TableBody","exportDefault","_usePeriodSelectorSta2","period","periodSelectorProps","t","_useState2","current","setCurrent","_useState4","itemsPerPage","setItemsPerPage","data","_useChannelsList","offset","count","channels","_data$channels","map","_ref","_ref$room","room","name","usernames","ts","_updatedAt","messages","diffFromLastWeek","join","createdAt","updatedAt","messagesCount","messagesVariation","createElement","Fragment","attachmentName","start","end","headers","dataAvailable","dataExtractor","_data$channels2","_ref2","_ref2$room","length","fontScale","color","style","textAlign","_ref3","i","key","inlineEnd","format","Array","from","_","width","itemsPerPageLabel","showingResultsLabel","_ref4","Math","min","total","onSetItemsPerPage","onSetCurrent"],"mappings":"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"}