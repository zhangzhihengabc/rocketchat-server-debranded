)]}'
{"version":3,"sources":["meteor://ðŸ’»app/ee/client/hooks/useVoipClient.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRegistrationInfo } from '@rocket.chat/core-typings';\nimport { WorkflowTypes } from '@rocket.chat/core-typings';\nimport { useSafely } from '@rocket.chat/fuselage-hooks';\nimport { useUser, useSetting, useEndpoint, useStream } from '@rocket.chat/ui-contexts';\nimport { KJUR } from 'jsrsasign';\nimport { useEffect, useState } from 'react';\n\nimport { VoIPUser } from '../../../client/lib/voip/VoIPUser';\nimport { useWebRtcServers } from '../../../client/providers/CallProvider/hooks/useWebRtcServers';\nimport { EEVoipClient } from '../lib/voip/EEVoipClient';\nimport { useHasLicenseModule } from './useHasLicenseModule';\n\ntype UseVoipClientResult = {\n\tvoipClient?: VoIPUser;\n\tregistrationInfo?: IRegistrationInfo;\n\terror?: Error | unknown;\n};\n\nconst empty = {};\n\nconst isSignedResponse = (data: any): data is { result: string } => typeof data?.result === 'string';\n\n// Currently we only support the websocket connection and the SIP proxy connection being from the same host,\n// we need to add a new setting for SIP proxy if we want to support different hosts for them.\nexport const useVoipClient = (): UseVoipClientResult => {\n\tconst settingVoipEnabled = Boolean(useSetting('VoIP_Enabled'));\n\n\tconst [voipConnectorEnabled, setVoipConnectorEnabled] = useSafely(useState(true));\n\n\tconst voipRetryCount = useSetting('VoIP_Retry_Count');\n\tconst enableKeepAlive = useSetting('VoIP_Enable_Keep_Alive_For_Unstable_Networks');\n\tconst registrationInfo = useEndpoint('GET', '/v1/connector.extension.getRegistrationInfoByUserId');\n\tconst membership = useEndpoint('GET', '/v1/voip/queues.getMembershipSubscription');\n\tconst user = useUser();\n\tconst subscribeToNotifyLoggedIn = useStream('notify-logged');\n\tconst iceServers = useWebRtcServers();\n\tconst [result, setResult] = useSafely(useState<UseVoipClientResult>({}));\n\n\tconst isEE = useHasLicenseModule('voip-enterprise');\n\tconst voipEnabled = settingVoipEnabled && voipConnectorEnabled;\n\n\tuseEffect(\n\t\t() =>\n\t\t\tsubscribeToNotifyLoggedIn(`voip.statuschanged`, (enabled: boolean): void => {\n\t\t\t\tsetVoipConnectorEnabled(enabled);\n\t\t\t}),\n\t\t[setResult, setVoipConnectorEnabled, subscribeToNotifyLoggedIn],\n\t);\n\n\tuseEffect(() => {\n\t\tconst uid = user?._id;\n\t\tconst userExtension = user?.extension;\n\n\t\tif (!uid || !userExtension || !voipEnabled) {\n\t\t\tsetResult(empty);\n\t\t\treturn;\n\t\t}\n\t\tlet client: VoIPUser;\n\t\tregistrationInfo({ id: uid }).then(\n\t\t\t(data) => {\n\t\t\t\tlet parsedData: IRegistrationInfo;\n\t\t\t\tif (isSignedResponse(data)) {\n\t\t\t\t\tconst result = KJUR.jws.JWS.parse(data.result);\n\t\t\t\t\tparsedData = (result.payloadObj as any)?.context as IRegistrationInfo;\n\t\t\t\t} else {\n\t\t\t\t\tparsedData = data;\n\t\t\t\t}\n\n\t\t\t\tconst {\n\t\t\t\t\textensionDetails: { extension, password },\n\t\t\t\t\tcallServerConfig: { websocketPath },\n\t\t\t\t} = parsedData;\n\n\t\t\t\t(async (): Promise<void> => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst wsURL = new URL(websocketPath);\n\t\t\t\t\t\tconst subscription = await membership({ extension });\n\n\t\t\t\t\t\tconst config = {\n\t\t\t\t\t\t\tauthUserName: extension,\n\t\t\t\t\t\t\tauthPassword: password,\n\t\t\t\t\t\t\tsipRegistrarHostnameOrIP: wsURL.host,\n\t\t\t\t\t\t\twebSocketURI: websocketPath,\n\t\t\t\t\t\t\tenableVideo: true,\n\t\t\t\t\t\t\ticeServers,\n\t\t\t\t\t\t\tconnectionRetryCount: Number(voipRetryCount),\n\t\t\t\t\t\t\tenableKeepAliveUsingOptionsForUnstableNetworks: Boolean(enableKeepAlive),\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tclient = await (isEE ? EEVoipClient.create(config) : VoIPUser.create(config));\n\n\t\t\t\t\t\t// Today we are hardcoding workflow mode.\n\t\t\t\t\t\t// In future, this should be ready from configuration\n\t\t\t\t\t\tclient.setWorkflowMode(WorkflowTypes.CONTACT_CENTER_USER);\n\t\t\t\t\t\tclient.setMembershipSubscription(subscription);\n\t\t\t\t\t\tsetResult({ voipClient: client, registrationInfo: parsedData });\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tsetResult({ error });\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t},\n\t\t\t(error: Error) => {\n\t\t\t\tsetResult({ error });\n\t\t\t},\n\t\t);\n\t\treturn (): void => {\n\t\t\tif (client) {\n\t\t\t\tclient.clear();\n\t\t\t}\n\t\t};\n\t}, [iceServers, registrationInfo, setResult, membership, voipEnabled, user?._id, user?.extension, voipRetryCount, enableKeepAlive, isEE]);\n\n\treturn result;\n};\n\nexport const isOutboundClient = (client: VoIPUser | undefined): client is EEVoipClient => client instanceof EEVoipClient;\n",null],"names":["module","link","default","_regeneratorRuntime","_slicedToArray","export","useVoipClient","isOutboundClient","WorkflowTypes","useSafely","useUser","useSetting","useEndpoint","useStream","KJUR","useEffect","useState","VoIPUser","useWebRtcServers","EEVoipClient","useHasLicenseModule","empty","settingVoipEnabled","Boolean","_useSafely2","voipConnectorEnabled","setVoipConnectorEnabled","voipRetryCount","enableKeepAlive","registrationInfo","membership","user","subscribeToNotifyLoggedIn","iceServers","_useSafely4","result","setResult","isEE","voipEnabled","enabled","client","uid","_id","userExtension","extension","id","then","data","parsedData","_result$payloadObj","wsURL","subscription","config","_parsedData","jws","JWS","parse","payloadObj","context","_parsedData$extension","extensionDetails","password","websocketPath","callServerConfig","async","_context","prev","next","URL","awrap","sent","authUserName","authPassword","sipRegistrarHostnameOrIP","host","webSocketURI","enableVideo","connectionRetryCount","Number","enableKeepAliveUsingOptionsForUnstableNetworks","create","setWorkflowMode","CONTACT_CENTER_USER","setMembershipSubscription","voipClient","t0","error","stop","Promise","clear"],"mappings":"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"}