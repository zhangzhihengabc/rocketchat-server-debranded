function module(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.validateTuple=void 0;let a=e("../../compile/codegen"),i=e("../../compile/util"),l=e("../code");function s(e,t,l=e.schema){let{gen:s,parentSchema:o,data:r,keyword:m,it:c}=e;(function(e){let{opts:a,errSchemaPath:s}=c,o=l.length,r=o===e.minItems&&(o===e.maxItems||!1===e[t]);if(a.strictTuples&&!r){let e=`"${m}" is ${o}-tuple, but minItems or maxItems/${t} are not specified or different at path "${s}"`;(0,i.checkStrictMode)(c,e,a.strictTuples)}})(o),c.opts.unevaluated&&l.length&&!0!==c.items&&(c.items=i.mergeEvaluated.items(s,l.length,c.items));let n=s.name("valid"),d=s.const("len",(0,a._)`${r}.length`);l.forEach((t,l)=>{(0,i.alwaysValidSchema)(c,t)||(s.if((0,a._)`${d} > ${l}`,()=>e.subschema({keyword:m,schemaProp:l,dataProp:l},n)),e.ok(n))})}t.validateTuple=s,t.default={keyword:"items",type:"array",schemaType:["object","array","boolean"],before:"uniqueItems",code(e){let{schema:t,it:a}=e;if(Array.isArray(t))return s(e,"additionalItems",t);a.items=!0,(0,i.alwaysValidSchema)(a,t)||e.ok((0,l.validateArray)(e))}}}
//# sourceMappingURL=/dynamic/node_modules/ajv/dist/vocabularies/applicator/de07db824cbdad9ad9c4f53a170a83afcea292f3.map
