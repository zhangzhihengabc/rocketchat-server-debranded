function module(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CodeGen=t.Name=t.nil=t.stringify=t.str=t._=t.KeywordCxt=void 0;var i=e("./compile/validate");Object.defineProperty(t,"KeywordCxt",{enumerable:!0,get:function(){return i.KeywordCxt}});var r=e("./compile/codegen");Object.defineProperty(t,"_",{enumerable:!0,get:function(){return r._}}),Object.defineProperty(t,"str",{enumerable:!0,get:function(){return r.str}}),Object.defineProperty(t,"stringify",{enumerable:!0,get:function(){return r.stringify}}),Object.defineProperty(t,"nil",{enumerable:!0,get:function(){return r.nil}}),Object.defineProperty(t,"Name",{enumerable:!0,get:function(){return r.Name}}),Object.defineProperty(t,"CodeGen",{enumerable:!0,get:function(){return r.CodeGen}});let s=e("./runtime/validation_error"),a=e("./compile/ref_error"),o=e("./compile/rules"),l=e("./compile"),n=e("./compile/codegen"),d=e("./compile/resolve"),c=e("./compile/validate/dataType"),h=e("./compile/util"),u=e("./refs/data.json"),m=e("./runtime/uri"),f=(e,t)=>new RegExp(e,t);f.code="new RegExp";let p=["removeAdditional","useDefaults","coerceTypes"],y=new Set(["validate","serialize","parse","wrapper","root","schema","keyword","pattern","formats","validate$data","func","obj","Error"]),v={errorDataPath:"",format:"`validateFormats: false` can be used instead.",nullable:'"nullable" keyword is supported by default.',jsonPointers:"Deprecated jsPropertySyntax can be used instead.",extendRefs:"Deprecated ignoreKeywordsWithRef can be used instead.",missingRefs:"Pass empty schema with $id that should be ignored to ajv.addSchema.",processCode:"Use option `code: {process: (code, schemaEnv: object) => string}`",sourceCode:"Use option `code: {source: true}`",strictDefaults:"It is default now, see option `strict`.",strictKeywords:"It is default now, see option `strict`.",uniqueItems:'"uniqueItems" keyword is always validated.',unknownFormats:"Disable strict mode or pass `true` to `ajv.addFormat` (or `formats` option).",cache:"Map is used as cache, schema object as key.",serialize:"Map is used as cache, schema object as key.",ajvErrors:"It is default now."},g={ignoreKeywordsWithRef:"",jsPropertySyntax:"",unicode:'"minLength"/"maxLength" account for unicode characters by default.'};class w{constructor(e={}){this.schemas={},this.refs={},this.formats={},this._compilations=new Set,this._loading={},this._cache=new Map,e=this.opts={...e,...function(e){var t,i,r,s,a,o,l,n,d,c,h,u,p,y,v,g,w,S,b,E,_,j,$,k,R;let x=e.strict,O=null===(t=e.code)||void 0===t?void 0:t.optimize,T=!0===O||void 0===O?1:O||0,K=null!==(r=null===(i=e.code)||void 0===i?void 0:i.regExp)&&void 0!==r?r:f,A=null!==(s=e.uriResolver)&&void 0!==s?s:m.default;return{strictSchema:null===(o=null!==(a=e.strictSchema)&&void 0!==a?a:x)||void 0===o||o,strictNumbers:null===(n=null!==(l=e.strictNumbers)&&void 0!==l?l:x)||void 0===n||n,strictTypes:null!==(c=null!==(d=e.strictTypes)&&void 0!==d?d:x)&&void 0!==c?c:"log",strictTuples:null!==(u=null!==(h=e.strictTuples)&&void 0!==h?h:x)&&void 0!==u?u:"log",strictRequired:null!==(y=null!==(p=e.strictRequired)&&void 0!==p?p:x)&&void 0!==y&&y,code:e.code?{...e.code,optimize:T,regExp:K}:{optimize:T,regExp:K},loopRequired:null!==(v=e.loopRequired)&&void 0!==v?v:200,loopEnum:null!==(g=e.loopEnum)&&void 0!==g?g:200,meta:null===(w=e.meta)||void 0===w||w,messages:null===(S=e.messages)||void 0===S||S,inlineRefs:null===(b=e.inlineRefs)||void 0===b||b,schemaId:null!==(E=e.schemaId)&&void 0!==E?E:"$id",addUsedSchema:null===(_=e.addUsedSchema)||void 0===_||_,validateSchema:null===(j=e.validateSchema)||void 0===j||j,validateFormats:null===($=e.validateFormats)||void 0===$||$,unicodeRegExp:null===(k=e.unicodeRegExp)||void 0===k||k,int32range:null===(R=e.int32range)||void 0===R||R,uriResolver:A}}(e)};let{es5:t,lines:i}=this.opts.code;this.scope=new n.ValueScope({scope:{},prefixes:y,es5:t,lines:i}),this.logger=function(e){if(!1===e)return k;if(void 0===e)return console;if(e.log&&e.warn&&e.error)return e;throw Error("logger must implement log, warn and error methods")}(e.logger);let r=e.validateFormats;e.validateFormats=!1,this.RULES=(0,o.getRules)(),S.call(this,v,e,"NOT SUPPORTED"),S.call(this,g,e,"DEPRECATED","warn"),this._metaOpts=$.call(this),e.formats&&_.call(this),this._addVocabularies(),this._addDefaultMetaSchema(),e.keywords&&j.call(this,e.keywords),"object"==typeof e.meta&&this.addMetaSchema(e.meta),E.call(this),e.validateFormats=r}_addVocabularies(){this.addKeyword("$async")}_addDefaultMetaSchema(){let{$data:e,meta:t,schemaId:i}=this.opts,r=u;"id"===i&&((r={...u}).id=r.$id,delete r.$id),t&&e&&this.addMetaSchema(r,r[i],!1)}defaultMeta(){let{meta:e,schemaId:t}=this.opts;return this.opts.defaultMeta="object"==typeof e?e[t]||e:void 0}validate(e,t){let i;if("string"==typeof e){if(!(i=this.getSchema(e)))throw Error(`no schema with key or ref "${e}"`)}else i=this.compile(e);let r=i(t);return"$async"in i||(this.errors=i.errors),r}compile(e,t){let i=this._addSchema(e,t);return i.validate||this._compileSchemaEnv(i)}compileAsync(e,t){if("function"!=typeof this.opts.loadSchema)throw Error("options.loadSchema should be a function");let{loadSchema:i}=this.opts;return r.call(this,e,t);async function r(e,t){await s.call(this,e.$schema);let i=this._addSchema(e,t);return i.validate||o.call(this,i)}async function s(e){e&&!this.getSchema(e)&&await r.call(this,{$ref:e},!0)}async function o(e){try{return this._compileSchemaEnv(e)}catch(t){if(!(t instanceof a.default))throw t;return l.call(this,t),await n.call(this,t.missingSchema),o.call(this,e)}}function l({missingSchema:e,missingRef:t}){if(this.refs[e])throw Error(`AnySchema ${e} is loaded but ${t} cannot be resolved`)}async function n(e){let i=await d.call(this,e);this.refs[e]||await s.call(this,i.$schema),this.refs[e]||this.addSchema(i,e,t)}async function d(e){let t=this._loading[e];if(t)return t;try{return await (this._loading[e]=i(e))}finally{delete this._loading[e]}}}addSchema(e,t,i,r=this.opts.validateSchema){let s;if(Array.isArray(e)){for(let t of e)this.addSchema(t,void 0,i,r);return this}if("object"==typeof e){let{schemaId:t}=this.opts;if(void 0!==(s=e[t])&&"string"!=typeof s)throw Error(`schema ${t} must be string`)}return t=(0,d.normalizeId)(t||s),this._checkUnique(t),this.schemas[t]=this._addSchema(e,i,t,r,!0),this}addMetaSchema(e,t,i=this.opts.validateSchema){return this.addSchema(e,t,!0,i),this}validateSchema(e,t){let i;if("boolean"==typeof e)return!0;if(void 0!==(i=e.$schema)&&"string"!=typeof i)throw Error("$schema must be a string");if(!(i=i||this.opts.defaultMeta||this.defaultMeta()))return this.logger.warn("meta-schema not available"),this.errors=null,!0;let r=this.validate(i,e);if(!r&&t){let e="schema is invalid: "+this.errorsText();if("log"===this.opts.validateSchema)this.logger.error(e);else throw Error(e)}return r}getSchema(e){let t;for(;"string"==typeof(t=b.call(this,e));)e=t;if(void 0===t){let{schemaId:i}=this.opts,r=new l.SchemaEnv({schema:{},schemaId:i});if(!(t=l.resolveSchema.call(this,r,e)))return;this.refs[e]=t}return t.validate||this._compileSchemaEnv(t)}removeSchema(e){if(e instanceof RegExp)return this._removeAllSchemas(this.schemas,e),this._removeAllSchemas(this.refs,e),this;switch(typeof e){case"undefined":return this._removeAllSchemas(this.schemas),this._removeAllSchemas(this.refs),this._cache.clear(),this;case"string":{let t=b.call(this,e);return"object"==typeof t&&this._cache.delete(t.schema),delete this.schemas[e],delete this.refs[e],this}case"object":{this._cache.delete(e);let t=e[this.opts.schemaId];return t&&(t=(0,d.normalizeId)(t),delete this.schemas[t],delete this.refs[t]),this}default:throw Error("ajv.removeSchema: invalid parameter")}}addVocabulary(e){for(let t of e)this.addKeyword(t);return this}addKeyword(e,t){let i;if("string"==typeof e)i=e,"object"==typeof t&&(this.logger.warn("these parameters are deprecated, see docs for addKeyword"),t.keyword=i);else if("object"==typeof e&&void 0===t){if(Array.isArray(i=(t=e).keyword)&&!i.length)throw Error("addKeywords: keyword must be string or non-empty array")}else throw Error("invalid addKeywords parameters");if(x.call(this,i,t),!t)return(0,h.eachItem)(i,e=>O.call(this,e)),this;K.call(this,t);let r={...t,type:(0,c.getJSONTypes)(t.type),schemaType:(0,c.getJSONTypes)(t.schemaType)};return(0,h.eachItem)(i,0===r.type.length?e=>O.call(this,e,r):e=>r.type.forEach(t=>O.call(this,e,r,t))),this}getKeyword(e){let t=this.RULES.all[e];return"object"==typeof t?t.definition:!!t}removeKeyword(e){let{RULES:t}=this;for(let i of(delete t.keywords[e],delete t.all[e],t.rules)){let t=i.rules.findIndex(t=>t.keyword===e);t>=0&&i.rules.splice(t,1)}return this}addFormat(e,t){return"string"==typeof t&&(t=new RegExp(t)),this.formats[e]=t,this}errorsText(e=this.errors,{separator:t=", ",dataVar:i="data"}={}){return e&&0!==e.length?e.map(e=>`${i}${e.instancePath} ${e.message}`).reduce((e,i)=>e+t+i):"No errors"}$dataMetaSchema(e,t){let i=this.RULES.all;for(let r of(e=JSON.parse(JSON.stringify(e)),t)){let t=r.split("/").slice(1),s=e;for(let e of t)s=s[e];for(let e in i){let t=i[e];if("object"!=typeof t)continue;let{$data:r}=t.definition,a=s[e];r&&a&&(s[e]=I(a))}}return e}_removeAllSchemas(e,t){for(let i in e){let r=e[i];(!t||t.test(i))&&("string"==typeof r?delete e[i]:r&&!r.meta&&(this._cache.delete(r.schema),delete e[i]))}}_addSchema(e,t,i,r=this.opts.validateSchema,s=this.opts.addUsedSchema){let a;let{schemaId:o}=this.opts;if("object"==typeof e)a=e[o];else{if(this.opts.jtd)throw Error("schema must be object");if("boolean"!=typeof e)throw Error("schema must be object or boolean")}let n=this._cache.get(e);if(void 0!==n)return n;i=(0,d.normalizeId)(a||i);let c=d.getSchemaRefs.call(this,e,i);return n=new l.SchemaEnv({schema:e,schemaId:o,meta:t,baseId:i,localRefs:c}),this._cache.set(n.schema,n),s&&!i.startsWith("#")&&(i&&this._checkUnique(i),this.refs[i]=n),r&&this.validateSchema(e,!0),n}_checkUnique(e){if(this.schemas[e]||this.refs[e])throw Error(`schema with key or id "${e}" already exists`)}_compileSchemaEnv(e){if(e.meta?this._compileMetaSchema(e):l.compileSchema.call(this,e),!e.validate)throw Error("ajv implementation error");return e.validate}_compileMetaSchema(e){let t=this.opts;this.opts=this._metaOpts;try{l.compileSchema.call(this,e)}finally{this.opts=t}}}function S(e,t,i,r="error"){for(let s in e)s in t&&this.logger[r](`${i}: option ${s}. ${e[s]}`)}function b(e){return e=(0,d.normalizeId)(e),this.schemas[e]||this.refs[e]}function E(){let e=this.opts.schemas;if(e){if(Array.isArray(e))this.addSchema(e);else for(let t in e)this.addSchema(e[t],t)}}function _(){for(let e in this.opts.formats){let t=this.opts.formats[e];t&&this.addFormat(e,t)}}function j(e){if(Array.isArray(e)){this.addVocabulary(e);return}for(let t in this.logger.warn("keywords option as map is deprecated, pass array"),e){let i=e[t];i.keyword||(i.keyword=t),this.addKeyword(i)}}function $(){let e={...this.opts};for(let t of p)delete e[t];return e}t.default=w,w.ValidationError=s.default,w.MissingRefError=a.default;let k={log(){},warn(){},error(){}},R=/^[a-z_$][a-z0-9_$:-]*$/i;function x(e,t){let{RULES:i}=this;if((0,h.eachItem)(e,e=>{if(i.keywords[e])throw Error(`Keyword ${e} is already defined`);if(!R.test(e))throw Error(`Keyword ${e} has invalid name`)}),t&&t.$data&&!("code"in t||"validate"in t))throw Error('$data keyword must have "code" or "validate" function')}function O(e,t,i){var r;let s=null==t?void 0:t.post;if(i&&s)throw Error('keyword with "post" flag cannot have "type"');let{RULES:a}=this,o=s?a.post:a.rules.find(({type:e})=>e===i);if(o||(o={type:i,rules:[]},a.rules.push(o)),a.keywords[e]=!0,!t)return;let l={keyword:e,definition:{...t,type:(0,c.getJSONTypes)(t.type),schemaType:(0,c.getJSONTypes)(t.schemaType)}};t.before?T.call(this,o,l,t.before):o.rules.push(l),a.all[e]=l,null===(r=t.implements)||void 0===r||r.forEach(e=>this.addKeyword(e))}function T(e,t,i){let r=e.rules.findIndex(e=>e.keyword===i);r>=0?e.rules.splice(r,0,t):(e.rules.push(t),this.logger.warn(`rule ${i} is not defined`))}function K(e){let{metaSchema:t}=e;void 0!==t&&(e.$data&&this.opts.$data&&(t=I(t)),e.validateSchema=this.compile(t,!0))}let A={$ref:"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#"};function I(e){return{anyOf:[e,A]}}}
//# sourceMappingURL=/dynamic/node_modules/ajv/dist/957709c75fd9959d2df948773b32997d117b0725.map
