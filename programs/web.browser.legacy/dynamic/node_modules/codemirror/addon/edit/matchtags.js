function module(t,e,a){var o;o=function(t){"use strict";function e(t){t.state.tagHit&&t.state.tagHit.clear(),t.state.tagOther&&t.state.tagOther.clear(),t.state.tagHit=t.state.tagOther=null}function a(a){a.state.failedTagMatch=!1,a.operation(function(){if(e(a),!a.somethingSelected()){var o=a.getCursor(),i=a.getViewport();i.from=Math.min(i.from,o.line),i.to=Math.max(o.line+1,i.to);var n=t.findMatchingTag(a,o,i);if(n){if(a.state.matchBothTags){var r="open"==n.at?n.open:n.close;r&&(a.state.tagHit=a.markText(r.from,r.to,{className:"CodeMirror-matchingtag"}))}var c="close"==n.at?n.open:n.close;c?a.state.tagOther=a.markText(c.from,c.to,{className:"CodeMirror-matchingtag"}):a.state.failedTagMatch=!0}}})}function o(t){t.state.failedTagMatch&&a(t)}t.defineOption("matchTags",!1,function(i,n,r){r&&r!=t.Init&&(i.off("cursorActivity",a),i.off("viewportChange",o),e(i)),n&&(i.state.matchBothTags="object"==typeof n&&n.bothTags,i.on("cursorActivity",a),i.on("viewportChange",o),a(i))}),t.commands.toMatchingTag=function(e){var a=t.findMatchingTag(e,e.getCursor());if(a){var o="close"==a.at?a.open:a.close;o&&e.extendSelection(o.to,o.from)}}},"object"==typeof e&&"object"==typeof a?o(t("../../lib/codemirror"),t("../fold/xml-fold")):"function"==typeof define&&define.amd?define(["../../lib/codemirror","../fold/xml-fold"],o):o(CodeMirror)}
//# sourceMappingURL=/dynamic/node_modules/codemirror/addon/edit/b97d76d58d0382899badc85dd7231799b5a6f4df.map
