function module(e,r,t){"use strict";var o,n=e("buffer"),f=n.Buffer,i={};for(o in n)n.hasOwnProperty(o)&&"SlowBuffer"!==o&&"Buffer"!==o&&(i[o]=n[o]);var a=i.Buffer={};for(o in f)f.hasOwnProperty(o)&&"allocUnsafe"!==o&&"allocUnsafeSlow"!==o&&(a[o]=f[o]);if(i.Buffer.prototype=f.prototype,a.from&&a.from!==Uint8Array.from||(a.from=function(e,r,t){if("number"==typeof e)throw TypeError('The "value" argument must not be of type number. Received type '+typeof e);if(e&&void 0===e.length)throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);return f(e,r,t)}),a.alloc||(a.alloc=function(e,r,t){if("number"!=typeof e)throw TypeError('The "size" argument must be of type number. Received type '+typeof e);if(e<0||e>=2*1073741824)throw RangeError('The value "'+e+'" is invalid for option "size"');var o=f(e);return r&&0!==r.length?"string"==typeof t?o.fill(r,t):o.fill(r):o.fill(0),o}),!i.kStringMaxLength)try{i.kStringMaxLength=process.binding("buffer").kStringMaxLength}catch(e){}!i.constants&&(i.constants={MAX_LENGTH:i.kMaxLength},i.kStringMaxLength&&(i.constants.MAX_STRING_LENGTH=i.kStringMaxLength)),t.exports=i}
//# sourceMappingURL=/dynamic/node_modules/safer-buffer/a00f6e99dea6573ccc5a846402564b78199b4c83.map
