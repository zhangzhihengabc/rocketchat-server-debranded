function module(e,t,r){class s{constructor(e,t){if(t=l(t),e instanceof s){if(!!t.loose===e.loose&&!!t.includePrerelease===e.includePrerelease)return e;return new s(e.raw,t)}if(e instanceof a)return this.raw=e.value,this.set=[[e]],this.format(),this;if(this.options=t,this.loose=!!t.loose,this.includePrerelease=!!t.includePrerelease,this.raw=e.trim().split(/\s+/).join(" "),this.set=this.raw.split("||").map(e=>this.parseRange(e.trim())).filter(e=>e.length),!this.set.length)throw TypeError(`Invalid SemVer Range: ${this.raw}`);if(this.set.length>1){let e=this.set[0];if(this.set=this.set.filter(e=>!R(e[0])),0===this.set.length)this.set=[e];else if(this.set.length>1){for(let e of this.set)if(1===e.length&&E(e[0])){this.set=[e];break}}}this.format()}format(){return this.range=this.set.map(e=>e.join(" ").trim()).join("||").trim(),this.range}toString(){return this.range}parseRange(e){let t=(this.options.includePrerelease&&f)|(this.options.loose&&g),r=t+":"+e,s=n.get(r);if(s)return s;let i=this.options.loose,l=i?p[h.HYPHENRANGELOOSE]:p[h.HYPHENRANGE];$("hyphen replace",e=e.replace(l,C(this.options.includePrerelease))),$("comparator trim",e=e.replace(p[h.COMPARATORTRIM],c)),$("tilde trim",e=e.replace(p[h.TILDETRIM],u)),$("caret trim",e=e.replace(p[h.CARETTRIM],m));let o=e.split(" ").map(e=>T(e,this.options)).join(" ").split(/\s+/).map(e=>y(e,this.options));i&&(o=o.filter(e=>($("loose invalid filter",e,this.options),!!e.match(p[h.COMPARATORLOOSE])))),$("range list",o);let E=new Map,d=o.map(e=>new a(e,this.options));for(let e of d){if(R(e))return[e];E.set(e.value,e)}E.size>1&&E.has("")&&E.delete("");let v=[...E.values()];return n.set(r,v),v}intersects(e,t){if(!(e instanceof s))throw TypeError("a Range is required");return this.set.some(r=>d(r,t)&&e.set.some(e=>d(e,t)&&r.every(r=>e.every(e=>r.intersects(e,t)))))}test(e){if(!e)return!1;if("string"==typeof e)try{e=new o(e,this.options)}catch(e){return!1}for(let t=0;t<this.set.length;t++)if(G(this.set[t],e,this.options))return!0;return!1}}r.exports=s;let i=e("lru-cache"),n=new i({max:1e3}),l=e("../internal/parse-options"),a=e("./comparator"),$=e("../internal/debug"),o=e("./semver"),{safeRe:p,t:h,comparatorTrimReplace:c,tildeTrimReplace:u,caretTrimReplace:m}=e("../internal/re"),{FLAG_INCLUDE_PRERELEASE:f,FLAG_LOOSE:g}=e("../internal/constants"),R=e=>"<0.0.0-0"===e.value,E=e=>""===e.value,d=(e,t)=>{let r=!0,s=e.slice(),i=s.pop();for(;r&&s.length;)r=s.every(e=>i.intersects(e,t)),i=s.pop();return r},T=(e,t)=>($("comp",e,t),e=w(e,t),$("caret",e),e=P(e,t),$("tildes",e),e=j(e,t),$("xrange",e),e=S(e,t),$("stars",e),e),v=e=>!e||"x"===e.toLowerCase()||"*"===e,P=(e,t)=>e.trim().split(/\s+/).map(e=>O(e,t)).join(" "),O=(e,t)=>{let r=t.loose?p[h.TILDELOOSE]:p[h.TILDE];return e.replace(r,(t,r,s,i,n)=>{let l;return $("tilde",e,t,r,s,i,n),v(r)?l="":v(s)?l=`>=${r}.0.0 <${+r+1}.0.0-0`:v(i)?l=`>=${r}.${s}.0 <${r}.${+s+1}.0-0`:n?($("replaceTilde pr",n),l=`>=${r}.${s}.${i}-${n} <${r}.${+s+1}.0-0`):l=`>=${r}.${s}.${i} <${r}.${+s+1}.0-0`,$("tilde return",l),l})},w=(e,t)=>e.trim().split(/\s+/).map(e=>A(e,t)).join(" "),A=(e,t)=>{$("caret",e,t);let r=t.loose?p[h.CARETLOOSE]:p[h.CARET],s=t.includePrerelease?"-0":"";return e.replace(r,(t,r,i,n,l)=>{let a;return $("caret",e,t,r,i,n,l),v(r)?a="":v(i)?a=`>=${r}.0.0${s} <${+r+1}.0.0-0`:v(n)?a="0"===r?`>=${r}.${i}.0${s} <${r}.${+i+1}.0-0`:`>=${r}.${i}.0${s} <${+r+1}.0.0-0`:l?($("replaceCaret pr",l),a="0"===r?"0"===i?`>=${r}.${i}.${n}-${l} <${r}.${i}.${+n+1}-0`:`>=${r}.${i}.${n}-${l} <${r}.${+i+1}.0-0`:`>=${r}.${i}.${n}-${l} <${+r+1}.0.0-0`):($("no pr"),a="0"===r?"0"===i?`>=${r}.${i}.${n}${s} <${r}.${i}.${+n+1}-0`:`>=${r}.${i}.${n}${s} <${r}.${+i+1}.0-0`:`>=${r}.${i}.${n} <${+r+1}.0.0-0`),$("caret return",a),a})},j=(e,t)=>($("replaceXRanges",e,t),e.split(/\s+/).map(e=>L(e,t)).join(" ")),L=(e,t)=>{e=e.trim();let r=t.loose?p[h.XRANGELOOSE]:p[h.XRANGE];return e.replace(r,(r,s,i,n,l,a)=>{$("xRange",e,r,s,i,n,l,a);let o=v(i),p=o||v(n),h=p||v(l);return"="===s&&h&&(s=""),a=t.includePrerelease?"-0":"",o?r=">"===s||"<"===s?"<0.0.0-0":"*":s&&h?(p&&(n=0),l=0,">"===s?(s=">=",p?(i=+i+1,n=0):n=+n+1,l=0):"<="===s&&(s="<",p?i=+i+1:n=+n+1),"<"===s&&(a="-0"),r=`${s+i}.${n}.${l}${a}`):p?r=`>=${i}.0.0${a} <${+i+1}.0.0-0`:h&&(r=`>=${i}.${n}.0${a} <${i}.${+n+1}.0-0`),$("xRange return",r),r})},S=(e,t)=>($("replaceStars",e,t),e.trim().replace(p[h.STAR],"")),y=(e,t)=>($("replaceGTE0",e,t),e.trim().replace(p[t.includePrerelease?h.GTE0PRE:h.GTE0],"")),C=e=>(t,r,s,i,n,l,a,$,o,p,h,c,u)=>`${r=v(s)?"":v(i)?`>=${s}.0.0${e?"-0":""}`:v(n)?`>=${s}.${i}.0${e?"-0":""}`:l?`>=${r}`:`>=${r}${e?"-0":""}`} ${$=v(o)?"":v(p)?`<${+o+1}.0.0-0`:v(h)?`<${o}.${+p+1}.0-0`:c?`<=${o}.${p}.${h}-${c}`:e?`<${o}.${p}.${+h+1}-0`:`<=${$}`}`.trim(),G=(e,t,r)=>{for(let r=0;r<e.length;r++)if(!e[r].test(t))return!1;if(t.prerelease.length&&!r.includePrerelease){for(let r=0;r<e.length;r++)if($(e[r].semver),e[r].semver!==a.ANY&&e[r].semver.prerelease.length>0){let s=e[r].semver;if(s.major===t.major&&s.minor===t.minor&&s.patch===t.patch)return!0}return!1}return!0}}
//# sourceMappingURL=/dynamic/node_modules/semver/classes/910a217573a5b0db9ac449ac507456b879c005c9.map
