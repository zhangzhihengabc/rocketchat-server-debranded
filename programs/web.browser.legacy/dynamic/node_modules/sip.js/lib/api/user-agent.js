function module(t,e,o){var s,i,n,r,a,g,l,p,c,h,d,u,f,m,w,v,y,b,S,I,R,C;o.export({UserAgent:function(){return E}}),o.link("../core",{DigestAuthentication:function(t){s=t},Grammar:function(t){i=t},IncomingRequestMessage:function(t){n=t},IncomingResponseMessage:function(t){r=t},Levels:function(t){a=t},LoggerFactory:function(t){g=t},Parser:function(t){l=t},URI:function(t){p=t},UserAgentCore:function(t){c=t}},0),o.link("../core/messages/utils",{createRandomToken:function(t){h=t},utf8Length:function(t){d=t}},1),o.link("../platform/web/session-description-handler",{defaultSessionDescriptionHandlerFactory:function(t){u=t}},2),o.link("../platform/web/transport",{Transport:function(t){f=t}},3),o.link("../version",{LIBRARY_VERSION:function(t){m=t}},4),o.link("./emitter",{EmitterImpl:function(t){w=t}},5),o.link("./invitation",{Invitation:function(t){v=t}},6),o.link("./inviter",{Inviter:function(t){y=t}},7),o.link("./message",{Message:function(t){b=t}},8),o.link("./notification",{Notification:function(t){S=t}},9),o.link("./user-agent-options",{SIPExtension:function(t){I=t},UserAgentRegisteredOptionTags:function(t){R=t}},10),o.link("./user-agent-state",{UserAgentState:function(t){C=t}},11);class E{constructor(t={}){switch(this._publishers={},this._registerers={},this._sessions={},this._subscriptions={},this._state=C.Stopped,this.unloadListener=()=>{this.stop()},this._stateEventEmitter=new w,this.delegate=t.delegate,this.options=Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},E.defaultOptions()),{sipjsId:h(5)}),{uri:new p("sip","anonymous."+h(6),"anonymous.invalid")}),{viaHost:h(12)+".invalid"}),E.stripUndefinedProperties(t)),this.options.hackIpInContact&&("boolean"==typeof this.options.hackIpInContact&&this.options.hackIpInContact?this.options.viaHost="192.0.2."+Math.floor(254*Math.random()+1):this.options.hackIpInContact&&(this.options.viaHost=this.options.hackIpInContact)),this.loggerFactory=new g,this.logger=this.loggerFactory.getLogger("sip.UserAgent"),this.loggerFactory.builtinEnabled=this.options.logBuiltinEnabled,this.loggerFactory.connector=this.options.logConnector,this.options.logLevel){case"error":this.loggerFactory.level=a.error;break;case"warn":this.loggerFactory.level=a.warn;break;case"log":this.loggerFactory.level=a.log;break;case"debug":this.loggerFactory.level=a.debug}if(this.options.logConfiguration&&(this.logger.log("Configuration:"),Object.keys(this.options).forEach(t=>{let e=this.options[t];switch(t){case"uri":case"sessionDescriptionHandlerFactory":this.logger.log("\xb7 "+t+": "+e);break;case"authorizationPassword":this.logger.log("\xb7 "+t+": NOT SHOWN");break;case"transportConstructor":this.logger.log("\xb7 "+t+": "+e.name);break;default:this.logger.log("\xb7 "+t+": "+JSON.stringify(e))}})),this.options.transportOptions){let e=this.options.transportOptions,o=e.maxReconnectionAttempts,s=e.reconnectionTimeout;void 0!==o&&this.logger.warn('The transport option "maxReconnectionAttempts" as has apparently been specified and has been deprecated. It will no longer be available starting with SIP.js release 0.16.0. Please update accordingly.'),void 0!==s&&this.logger.warn('The transport option "reconnectionTimeout" as has apparently been specified and has been deprecated. It will no longer be available starting with SIP.js release 0.16.0. Please update accordingly.'),void 0===t.reconnectionDelay&&void 0!==s&&(this.options.reconnectionDelay=s),void 0===t.reconnectionAttempts&&void 0!==o&&(this.options.reconnectionAttempts=o)}void 0!==t.reconnectionDelay&&this.logger.warn('The user agent option "reconnectionDelay" as has apparently been specified and has been deprecated. It will no longer be available starting with SIP.js release 0.16.0. Please update accordingly.'),void 0!==t.reconnectionAttempts&&this.logger.warn('The user agent option "reconnectionAttempts" as has apparently been specified and has been deprecated. It will no longer be available starting with SIP.js release 0.16.0. Please update accordingly.'),this._transport=new this.options.transportConstructor(this.getLogger("sip.Transport"),this.options.transportOptions),this.initTransportCallbacks(),this._contact=this.initContact(),this._userAgentCore=this.initCore(),this.options.autoStart&&this.start()}static makeURI(t){return i.URIParse(t)}static defaultOptions(){return{allowLegacyNotifications:!1,authorizationHa1:"",authorizationPassword:"",authorizationUsername:"",autoStart:!1,autoStop:!0,delegate:{},contactName:"",contactParams:{transport:"ws"},displayName:"",forceRport:!1,hackAllowUnregisteredOptionTags:!1,hackIpInContact:!1,hackViaTcp:!1,logBuiltinEnabled:!0,logConfiguration:!0,logConnector:()=>{},logLevel:"log",noAnswerTimeout:60,preloadedRouteSet:[],reconnectionAttempts:0,reconnectionDelay:4,sendInitialProvisionalResponse:!0,sessionDescriptionHandlerFactory:u(),sessionDescriptionHandlerFactoryOptions:{},sipExtension100rel:I.Unsupported,sipExtensionReplaces:I.Unsupported,sipExtensionExtraSupported:[],sipjsId:"",transportConstructor:f,transportOptions:{},uri:new p("sip","anonymous","anonymous.invalid"),userAgentString:"SIP.js/"+m,viaHost:""}}static stripUndefinedProperties(t){return Object.keys(t).reduce((e,o)=>(void 0!==t[o]&&(e[o]=t[o]),e),{})}get configuration(){return this.options}get contact(){return this._contact}get state(){return this._state}get stateChange(){return this._stateEventEmitter}get transport(){return this._transport}get userAgentCore(){return this._userAgentCore}getLogger(t,e){return this.loggerFactory.getLogger(t,e)}getLoggerFactory(){return this.loggerFactory}isConnected(){return this.transport.isConnected()}reconnect(){return this.state===C.Stopped?Promise.reject(Error("User agent stopped.")):Promise.resolve().then(()=>this.transport.connect())}start(){if(this.state===C.Started)return this.logger.warn("User agent already started"),Promise.resolve();if(this.logger.log(`Starting ${this.configuration.uri}`),this.transitionState(C.Started),this.options.autoStop){let t="undefined"!=typeof chrome&&!!chrome.app&&!!chrome.app.runtime;"undefined"==typeof window||"function"!=typeof window.addEventListener||t||window.addEventListener("unload",this.unloadListener)}return this.transport.connect()}async stop(){if(this.state===C.Stopped)return this.logger.warn("User agent already stopped"),Promise.resolve();if(this.logger.log(`Stopping ${this.configuration.uri}`),this.transitionState(C.Stopped),this.options.autoStop){let t="undefined"!=typeof chrome&&!!chrome.app&&!!chrome.app.runtime;"undefined"!=typeof window&&window.removeEventListener&&!t&&window.removeEventListener("unload",this.unloadListener)}let t=Object.assign({},this._publishers),e=Object.assign({},this._registerers),o=Object.assign({},this._sessions),s=Object.assign({},this._subscriptions),i=this.transport,n=this.userAgentCore;for(let t in this.logger.log("Dispose of registerers"),e)e[t]&&await e[t].dispose().catch(e=>{throw this.logger.error(e.message),delete this._registerers[t],e});for(let t in this.logger.log("Dispose of sessions"),o)o[t]&&await o[t].dispose().catch(e=>{throw this.logger.error(e.message),delete this._sessions[t],e});for(let t in this.logger.log("Dispose of subscriptions"),s)s[t]&&await s[t].dispose().catch(e=>{throw this.logger.error(e.message),delete this._subscriptions[t],e});for(let e in this.logger.log("Dispose of publishers"),t)t[e]&&await t[e].dispose().catch(t=>{throw this.logger.error(t.message),delete this._publishers[e],t});this.logger.log("Dispose of transport"),await i.dispose().catch(t=>{throw this.logger.error(t.message),t}),this.logger.log("Dispose of core"),n.dispose()}_makeInviter(t,e){return new y(this,t,e)}attemptReconnection(t=1){let e=this.options.reconnectionAttempts,o=this.options.reconnectionDelay;if(t>e){this.logger.log("Maximum reconnection attempts reached");return}this.logger.log(`Reconnection attempt ${t} of ${e} - trying`),setTimeout(()=>{this.reconnect().then(()=>{this.logger.log(`Reconnection attempt ${t} of ${e} - succeeded`)}).catch(o=>{this.logger.error(o.message),this.logger.log(`Reconnection attempt ${t} of ${e} - failed`),this.attemptReconnection(++t)})},1===t?0:1e3*o)}initContact(){let t=""!==this.options.contactName?this.options.contactName:h(8),e=this.options.contactParams,o={pubGruu:void 0,tempGruu:void 0,uri:new p("sip",t,this.options.viaHost,void 0,e),toString:(t={})=>{let o=t.anonymous||!1,s=t.outbound||!1,i="<";return o?i+=this.contact.tempGruu||`sip:anonymous@anonymous.invalid;transport=${e.transport?e.transport:"ws"}`:i+=this.contact.pubGruu||this.contact.uri,s&&(i+=";ob"),i+=">"}};return o}initCore(){let t=[];t.push("outbound"),this.options.sipExtension100rel===I.Supported&&t.push("100rel"),this.options.sipExtensionReplaces===I.Supported&&t.push("replaces"),this.options.sipExtensionExtraSupported&&t.push(...this.options.sipExtensionExtraSupported),this.options.hackAllowUnregisteredOptionTags||(t=t.filter(t=>R[t])),t=Array.from(new Set(t));let e=t.slice();(this.contact.pubGruu||this.contact.tempGruu)&&e.push("gruu");let o={aor:this.options.uri,contact:this.contact,displayName:this.options.displayName,loggerFactory:this.loggerFactory,hackViaTcp:this.options.hackViaTcp,routeSet:this.options.preloadedRouteSet,supportedOptionTags:t,supportedOptionTagsResponse:e,sipjsId:this.options.sipjsId,userAgentHeaderFieldValue:this.options.userAgentString,viaForceRport:this.options.forceRport,viaHost:this.options.viaHost,authenticationFactory:()=>{let t=this.options.authorizationUsername?this.options.authorizationUsername:this.options.uri.user,e=this.options.authorizationPassword?this.options.authorizationPassword:void 0,o=this.options.authorizationHa1?this.options.authorizationHa1:void 0;return new s(this.getLoggerFactory(),o,t,e)},transportAccessor:()=>this.transport};return new c(o,{onInvite:t=>{var e;let o=new v(this,t);if(t.delegate={onCancel:t=>{o._onCancel(t)},onTransportError:t=>{this.logger.error("A transport error has occurred while handling an incoming INVITE request.")}},t.trying(),this.options.sipExtensionReplaces!==I.Unsupported){let e=t.message,s=e.parseHeader("replaces");if(s){let t=s.call_id;if("string"!=typeof t)throw Error("Type of call id is not string");let e=s.replaces_to_tag;if("string"!=typeof e)throw Error("Type of to tag is not string");let i=s.replaces_from_tag;if("string"!=typeof i)throw Error("type of from tag is not string");let n=this.userAgentCore.dialogs.get(t+e+i);if(!n){o.reject({statusCode:481});return}if(!n.early&&!0===s.early_only){o.reject({statusCode:486});return}let r=this._sessions[t+i]||this._sessions[t+e]||void 0;if(!r)throw Error("Session does not exist.");o._replacee=r}}if(null===(e=this.delegate)||void 0===e?void 0:e.onInvite){if(o.autoSendAnInitialProvisionalResponse){o.progress().then(()=>{var t;if((null===(t=this.delegate)||void 0===t?void 0:t.onInvite)===void 0)throw Error("onInvite undefined.");this.delegate.onInvite(o)});return}this.delegate.onInvite(o);return}o.reject({statusCode:486})},onMessage:t=>{if(this.delegate&&this.delegate.onMessage){let e=new b(t);this.delegate.onMessage(e)}else t.accept()},onNotify:t=>{if(this.delegate&&this.delegate.onNotify){let e=new S(t);this.delegate.onNotify(e)}else this.options.allowLegacyNotifications?t.accept():t.reject({statusCode:481})},onRefer:t=>{this.logger.warn("Received an out of dialog REFER request"),this.delegate&&this.delegate.onReferRequest?this.delegate.onReferRequest(t):t.reject({statusCode:405})},onRegister:t=>{this.logger.warn("Received an out of dialog REGISTER request"),this.delegate&&this.delegate.onRegisterRequest?this.delegate.onRegisterRequest(t):t.reject({statusCode:405})},onSubscribe:t=>{this.logger.warn("Received an out of dialog SUBSCRIBE request"),this.delegate&&this.delegate.onSubscribeRequest?this.delegate.onSubscribeRequest(t):t.reject({statusCode:405})}})}initTransportCallbacks(){this.transport.onConnect=()=>this.onTransportConnect(),this.transport.onDisconnect=t=>this.onTransportDisconnect(t),this.transport.onMessage=t=>this.onTransportMessage(t)}onTransportConnect(){this.state!==C.Stopped&&this.delegate&&this.delegate.onConnect&&this.delegate.onConnect()}onTransportDisconnect(t){this.state!==C.Stopped&&(this.delegate&&this.delegate.onDisconnect&&this.delegate.onDisconnect(t),t&&this.options.reconnectionAttempts>0&&this.attemptReconnection())}onTransportMessage(t){let e=l.parseMessage(t,this.getLogger("sip.Parser"));if(!e){this.logger.warn("Failed to parse incoming message. Dropping.");return}if(this.state===C.Stopped&&e instanceof n){this.logger.warn(`Received ${e.method} request while stopped. Dropping.`);return}let o=()=>{for(let t of["from","to","call_id","cseq","via"])if(!e.hasHeader(t))return this.logger.warn(`Missing mandatory header field : ${t}.`),!1;return!0};if(e instanceof n){if(!o()){this.logger.warn("Request missing mandatory header field. Dropping.");return}if(!e.toTag&&e.callId.substr(0,5)===this.options.sipjsId){this.userAgentCore.replyStateless(e,{statusCode:482});return}let t=d(e.body),s=e.getHeader("content-length");if(s&&t<Number(s)){this.userAgentCore.replyStateless(e,{statusCode:400});return}}if(e instanceof r){if(!o()){this.logger.warn("Response missing mandatory header field. Dropping.");return}if(e.getHeaders("via").length>1){this.logger.warn("More than one Via header field present in the response. Dropping.");return}if(e.via.host!==this.options.viaHost||void 0!==e.via.port){this.logger.warn("Via sent-by in the response does not match UA Via host value. Dropping.");return}let t=d(e.body),s=e.getHeader("content-length");if(s&&t<Number(s)){this.logger.warn("Message body length is lower than the value in Content-Length header field. Dropping.");return}}if(e instanceof n){this.userAgentCore.receiveIncomingRequestFromTransport(e);return}if(e instanceof r){this.userAgentCore.receiveIncomingResponseFromTransport(e);return}throw Error("Invalid message type.")}transitionState(t,e){let o=()=>{throw Error(`Invalid state transition from ${this._state} to ${t}`)};switch(this._state){case C.Started:t!==C.Stopped&&o();break;case C.Stopped:t!==C.Started&&o();break;default:throw Error("Unknown state.")}this.logger.log(`Transitioned from ${this._state} to ${t}`),this._state=t,this._stateEventEmitter.emit(this._state)}}}
//# sourceMappingURL=/dynamic/node_modules/sip.js/lib/api/f42375226d07c91c752a7e5717595a9154763ab9.map
