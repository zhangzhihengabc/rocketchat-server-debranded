function module(e,t,r){var o,n;r.export({LoggerFactory:function(){return i}}),r.link("./levels",{Levels:function(e){o=e}},0),r.link("./logger",{Logger:function(e){n=e}},1);class i{constructor(){this.builtinEnabled=!0,this._level=o.log,this.loggers={},this.logger=this.getLogger("sip:loggerfactory")}get level(){return this._level}set level(e){e>=0&&e<=3?this._level=e:e>3?this._level=3:o.hasOwnProperty(e)?this._level=e:this.logger.error("invalid 'level' parameter value: "+JSON.stringify(e))}get connector(){return this._connector}set connector(e){e?"function"==typeof e?this._connector=e:this.logger.error("invalid 'connector' parameter value: "+JSON.stringify(e)):this._connector=void 0}getLogger(e,t){if(t&&3===this.level)return new n(this,e,t);if(this.loggers[e])return this.loggers[e];{let t=new n(this,e);return this.loggers[e]=t,t}}genericLog(e,t,r,n){this.level>=e&&this.builtinEnabled&&this.print(e,t,r,n),this.connector&&this.connector(o[e],t,r,n)}print(e,t,r,n){if("string"==typeof n){let e=[new Date,t];r&&e.push(r),n=e.concat(n).join(" | ")}switch(e){case o.error:console.error(n);break;case o.warn:console.warn(n);break;case o.log:console.log(n);break;case o.debug:console.debug(n)}}}}
//# sourceMappingURL=/dynamic/node_modules/sip.js/lib/core/log/6a7d4892ade2e65fc7ca6e29faac0b07040625a5.map
