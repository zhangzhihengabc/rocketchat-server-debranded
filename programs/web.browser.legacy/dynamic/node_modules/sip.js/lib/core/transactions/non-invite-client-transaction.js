function module(t,e,i){var s,r,n;i.export({NonInviteClientTransaction:function(){return o}}),i.link("../timers",{Timers:function(t){s=t}},0),i.link("./client-transaction",{ClientTransaction:function(t){r=t}},1),i.link("./transaction-state",{TransactionState:function(t){n=t}},2);class o extends r{constructor(t,e,i){super(t,e,i,n.Trying,"sip.transaction.nict"),this.F=setTimeout(()=>this.timerF(),s.TIMER_F),this.send(t.toString()).catch(t=>{this.logTransportError(t,"Failed to send initial outgoing request.")})}dispose(){this.F&&(clearTimeout(this.F),this.F=void 0),this.K&&(clearTimeout(this.K),this.K=void 0),super.dispose()}get kind(){return"nict"}receiveResponse(t){let e=t.statusCode;if(!e||e<100||e>699)throw Error(`Invalid status code ${e}`);switch(this.state){case n.Trying:if(e>=100&&e<=199){this.stateTransition(n.Proceeding),this.user.receiveResponse&&this.user.receiveResponse(t);return}if(e>=200&&e<=699){if(this.stateTransition(n.Completed),408===e){this.onRequestTimeout();return}this.user.receiveResponse&&this.user.receiveResponse(t);return}break;case n.Proceeding:if(e>=100&&e<=199&&this.user.receiveResponse)return this.user.receiveResponse(t);if(e>=200&&e<=699){if(this.stateTransition(n.Completed),408===e){this.onRequestTimeout();return}this.user.receiveResponse&&this.user.receiveResponse(t);return}break;case n.Completed:case n.Terminated:return;default:throw Error(`Invalid state ${this.state}`)}let i=`Non-INVITE client transaction received unexpected ${e} response while in state ${this.state}.`;this.logger.warn(i)}onTransportError(t){this.user.onTransportError&&this.user.onTransportError(t),this.stateTransition(n.Terminated,!0)}typeToString(){return"non-INVITE client transaction"}stateTransition(t,e=!1){let i=()=>{throw Error(`Invalid state transition from ${this.state} to ${t}`)};switch(t){case n.Trying:i();break;case n.Proceeding:this.state!==n.Trying&&i();break;case n.Completed:this.state!==n.Trying&&this.state!==n.Proceeding&&i();break;case n.Terminated:this.state===n.Trying||this.state===n.Proceeding||this.state===n.Completed||e||i();break;default:i()}t===n.Completed&&(this.F&&(clearTimeout(this.F),this.F=void 0),this.K=setTimeout(()=>this.timerK(),s.TIMER_K)),t===n.Terminated&&this.dispose(),this.setState(t)}timerF(){this.logger.debug(`Timer F expired for non-INVITE client transaction ${this.id}.`),(this.state===n.Trying||this.state===n.Proceeding)&&(this.onRequestTimeout(),this.stateTransition(n.Terminated))}timerK(){this.state===n.Completed&&this.stateTransition(n.Terminated)}}}
//# sourceMappingURL=/dynamic/node_modules/sip.js/lib/core/transactions/84881217aa03cf6245dddb652aa77ffff3af7407.map
