function module(e,t,s){var i,r,n;s.export({InviteClientTransaction:function(){return a}}),s.link("../timers",{Timers:function(e){i=e}},0),s.link("./client-transaction",{ClientTransaction:function(e){r=e}},1),s.link("./transaction-state",{TransactionState:function(e){n=e}},2);class a extends r{constructor(e,t,s){super(e,t,s,n.Calling,"sip.transaction.ict"),this.ackRetransmissionCache=new Map,this.B=setTimeout(()=>this.timerB(),i.TIMER_B),this.send(e.toString()).catch(e=>{this.logTransportError(e,"Failed to send initial outgoing request.")})}dispose(){this.B&&(clearTimeout(this.B),this.B=void 0),this.D&&(clearTimeout(this.D),this.D=void 0),this.M&&(clearTimeout(this.M),this.M=void 0),super.dispose()}get kind(){return"ict"}ackResponse(e){let t=e.toTag;if(!t)throw Error("To tag undefined.");e.setViaHeader("z9hG4bK"+Math.floor(1e7*Math.random()),this.transport.protocol),this.ackRetransmissionCache.set(t,e),this.send(e.toString()).catch(e=>{this.logTransportError(e,"Failed to send ACK to 2xx response.")})}receiveResponse(e){let t=e.statusCode;if(!t||t<100||t>699)throw Error(`Invalid status code ${t}`);switch(this.state){case n.Calling:if(t>=100&&t<=199){this.stateTransition(n.Proceeding),this.user.receiveResponse&&this.user.receiveResponse(e);return}if(t>=200&&t<=299){this.ackRetransmissionCache.set(e.toTag,void 0),this.stateTransition(n.Accepted),this.user.receiveResponse&&this.user.receiveResponse(e);return}if(t>=300&&t<=699){this.stateTransition(n.Completed),this.ack(e),this.user.receiveResponse&&this.user.receiveResponse(e);return}break;case n.Proceeding:if(t>=100&&t<=199){this.user.receiveResponse&&this.user.receiveResponse(e);return}if(t>=200&&t<=299){this.ackRetransmissionCache.set(e.toTag,void 0),this.stateTransition(n.Accepted),this.user.receiveResponse&&this.user.receiveResponse(e);return}if(t>=300&&t<=699){this.stateTransition(n.Completed),this.ack(e),this.user.receiveResponse&&this.user.receiveResponse(e);return}break;case n.Accepted:if(t>=200&&t<=299){if(!this.ackRetransmissionCache.has(e.toTag)){this.ackRetransmissionCache.set(e.toTag,void 0),this.user.receiveResponse&&this.user.receiveResponse(e);return}let t=this.ackRetransmissionCache.get(e.toTag);t&&this.send(t.toString()).catch(e=>{this.logTransportError(e,"Failed to send retransmission of ACK to 2xx response.")});return}break;case n.Completed:if(t>=300&&t<=699){this.ack(e);return}break;case n.Terminated:break;default:throw Error(`Invalid state ${this.state}`)}let s=`Received unexpected ${t} response while in state ${this.state}.`;this.logger.warn(s)}onTransportError(e){this.user.onTransportError&&this.user.onTransportError(e),this.stateTransition(n.Terminated,!0)}typeToString(){return"INVITE client transaction"}ack(e){let t=this.request.ruri,s=this.request.callId,i=this.request.cseq,r=this.request.getHeader("from"),n=e.getHeader("to"),a=this.request.getHeader("via"),o=this.request.getHeader("route");if(!r)throw Error("From undefined.");if(!n)throw Error("To undefined.");if(!a)throw Error("Via undefined.");let h=`ACK ${t} SIP/2.0\r
`;o&&(h+=`Route: ${o}\r
`),h+=`Via: ${a}\r
To: ${n}\r
From: ${r}\r
Call-ID: ${s}\r
CSeq: ${i} ACK\r
Max-Forwards: 70\r
Content-Length: 0\r
\r
`,this.send(h).catch(e=>{this.logTransportError(e,"Failed to send ACK to non-2xx response.")})}stateTransition(e,t=!1){let s=()=>{throw Error(`Invalid state transition from ${this.state} to ${e}`)};switch(e){case n.Calling:s();break;case n.Proceeding:this.state!==n.Calling&&s();break;case n.Accepted:case n.Completed:this.state!==n.Calling&&this.state!==n.Proceeding&&s();break;case n.Terminated:this.state===n.Calling||this.state===n.Accepted||this.state===n.Completed||t||s();break;default:s()}this.B&&(clearTimeout(this.B),this.B=void 0),n.Proceeding,e===n.Completed&&(this.D=setTimeout(()=>this.timerD(),i.TIMER_D)),e===n.Accepted&&(this.M=setTimeout(()=>this.timerM(),i.TIMER_M)),e===n.Terminated&&this.dispose(),this.setState(e)}timerA(){}timerB(){this.logger.debug(`Timer B expired for INVITE client transaction ${this.id}.`),this.state===n.Calling&&(this.onRequestTimeout(),this.stateTransition(n.Terminated))}timerD(){this.logger.debug(`Timer D expired for INVITE client transaction ${this.id}.`),this.state===n.Completed&&this.stateTransition(n.Terminated)}timerM(){this.logger.debug(`Timer M expired for INVITE client transaction ${this.id}.`),this.state===n.Accepted&&this.stateTransition(n.Terminated)}}}
//# sourceMappingURL=/dynamic/node_modules/sip.js/lib/core/transactions/c82d1b6a54f6e4961cb5ad78d0d66e6afd97cfce.map
