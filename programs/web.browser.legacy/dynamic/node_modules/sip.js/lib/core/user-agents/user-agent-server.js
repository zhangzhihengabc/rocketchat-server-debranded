function module(t,e,r){var s,n,a,i,o,c;r.export({UserAgentServer:function(){return h}}),r.link("../exceptions",{TransactionStateError:function(t){s=t}},0),r.link("../messages",{constructOutgoingResponse:function(t){n=t}},1),r.link("../messages/utils",{newTag:function(t){a=t}},2),r.link("../transactions",{InviteServerTransaction:function(t){i=t},NonInviteServerTransaction:function(t){o=t},TransactionState:function(t){c=t}},3);class h{constructor(t,e,r,s){this.transactionConstructor=t,this.core=e,this.message=r,this.delegate=s,this.logger=this.loggerFactory.getLogger("sip.user-agent-server"),this.toTag=r.toTag?r.toTag:a(),this.init()}dispose(){this.transaction.dispose()}get loggerFactory(){return this.core.loggerFactory}get transaction(){if(!this._transaction)throw Error("Transaction undefined.");return this._transaction}accept(t={statusCode:200}){if(!this.acceptable)throw new s(`${this.message.method} not acceptable in state ${this.transaction.state}.`);let e=t.statusCode;if(e<200||e>299)throw TypeError(`Invalid statusCode: ${e}`);let r=this.reply(t);return r}progress(t={statusCode:180}){if(!this.progressable)throw new s(`${this.message.method} not progressable in state ${this.transaction.state}.`);let e=t.statusCode;if(e<101||e>199)throw TypeError(`Invalid statusCode: ${e}`);let r=this.reply(t);return r}redirect(t,e={statusCode:302}){if(!this.redirectable)throw new s(`${this.message.method} not redirectable in state ${this.transaction.state}.`);let r=e.statusCode;if(r<300||r>399)throw TypeError(`Invalid statusCode: ${r}`);let n=[];t.forEach(t=>n.push(`Contact: ${t.toString()}`)),e.extraHeaders=(e.extraHeaders||[]).concat(n);let a=this.reply(e);return a}reject(t={statusCode:480}){if(!this.rejectable)throw new s(`${this.message.method} not rejectable in state ${this.transaction.state}.`);let e=t.statusCode;if(e<400||e>699)throw TypeError(`Invalid statusCode: ${e}`);let r=this.reply(t);return r}trying(t){if(!this.tryingable)throw new s(`${this.message.method} not tryingable in state ${this.transaction.state}.`);let e=this.reply({statusCode:100});return e}receiveCancel(t){this.delegate&&this.delegate.onCancel&&this.delegate.onCancel(t)}get acceptable(){if(this.transaction instanceof i)return this.transaction.state===c.Proceeding||this.transaction.state===c.Accepted;if(this.transaction instanceof o)return this.transaction.state===c.Trying||this.transaction.state===c.Proceeding;throw Error("Unknown transaction type.")}get progressable(){if(this.transaction instanceof i)return this.transaction.state===c.Proceeding;if(this.transaction instanceof o)return!1;throw Error("Unknown transaction type.")}get redirectable(){if(this.transaction instanceof i)return this.transaction.state===c.Proceeding;if(this.transaction instanceof o)return this.transaction.state===c.Trying||this.transaction.state===c.Proceeding;throw Error("Unknown transaction type.")}get rejectable(){if(this.transaction instanceof i)return this.transaction.state===c.Proceeding;if(this.transaction instanceof o)return this.transaction.state===c.Trying||this.transaction.state===c.Proceeding;throw Error("Unknown transaction type.")}get tryingable(){if(this.transaction instanceof i)return this.transaction.state===c.Proceeding;if(this.transaction instanceof o)return this.transaction.state===c.Trying;throw Error("Unknown transaction type.")}reply(t){t.toTag||100===t.statusCode||(t.toTag=this.toTag),t.userAgent=t.userAgent||this.core.configuration.userAgentHeaderFieldValue,t.supported=t.supported||this.core.configuration.supportedOptionTagsResponse;let e=n(this.message,t);return this.transaction.receiveResponse(t.statusCode,e.message),e}init(){let t={loggerFactory:this.loggerFactory,onStateChange:t=>{t===c.Terminated&&(this.core.userAgentServers.delete(r),this.dispose())},onTransportError:t=>{this.logger.error(t.message),this.delegate&&this.delegate.onTransportError?this.delegate.onTransportError(t):this.logger.error("User agent server response transport error.")}},e=new this.transactionConstructor(this.message,this.core.transport,t);this._transaction=e;let r=e.id;this.core.userAgentServers.set(e.id,this)}}}
//# sourceMappingURL=/dynamic/node_modules/sip.js/lib/core/user-agents/6e004a6e83e643758b214d5d54ab76d64a980139.map
