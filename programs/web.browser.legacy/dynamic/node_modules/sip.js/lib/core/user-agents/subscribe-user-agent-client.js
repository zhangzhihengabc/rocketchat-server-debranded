function module(t,e,i){var s,r,o,a,n;i.export({SubscribeUserAgentClient:function(){return u}}),i.link("../dialogs/subscription-dialog",{SubscriptionDialog:function(t){s=t}},0),i.link("../subscription",{SubscriptionState:function(t){r=t}},1),i.link("../timers",{Timers:function(t){o=t}},2),i.link("../transactions",{NonInviteClientTransaction:function(t){a=t}},3),i.link("./user-agent-client",{UserAgentClient:function(t){n=t}},4);class u extends n{constructor(t,e,i){let s=e.getHeader("Event");if(!s)throw Error("Event undefined");let o=e.getHeader("Expires");if(!o)throw Error("Expires undefined");super(a,t,e,i),this.delegate=i,this.subscriberId=e.callId+e.fromTag+s,this.subscriptionExpiresRequested=this.subscriptionExpires=Number(o),this.subscriptionEvent=s,this.subscriptionState=r.NotifyWait,this.waitNotifyStart()}dispose(){super.dispose()}onNotify(t){let e=t.message.parseHeader("Event").event;if(!e||e!==this.subscriptionEvent){this.logger.warn("Failed to parse event."),t.reject({statusCode:489});return}let i=t.message.parseHeader("Subscription-State");if(!i||!i.state){this.logger.warn("Failed to parse subscription state."),t.reject({statusCode:489});return}let o=i.state;switch(o){case"pending":case"active":case"terminated":break;default:this.logger.warn(`Invalid subscription state ${o}`),t.reject({statusCode:489});return}if("terminated"!==o){let e=t.message.parseHeader("contact");if(!e){this.logger.warn("Failed to parse contact."),t.reject({statusCode:489});return}}if(this.dialog)throw Error("Dialog already created. This implementation only supports install of single subscriptions.");switch(this.waitNotifyStop(),this.subscriptionExpires=i.expires?Math.min(this.subscriptionExpires,Math.max(i.expires,0)):this.subscriptionExpires,o){case"pending":this.subscriptionState=r.Pending;break;case"active":this.subscriptionState=r.Active;break;case"terminated":this.subscriptionState=r.Terminated;break;default:throw Error(`Unrecognized state ${o}.`)}if(this.subscriptionState!==r.Terminated){let e=s.initialDialogStateForSubscription(this.message,t.message);this.dialog=new s(this.subscriptionEvent,this.subscriptionExpires,this.subscriptionState,this.core,e)}if(this.delegate&&this.delegate.onNotify){let e=this.dialog;this.delegate.onNotify({request:t,subscription:e})}else t.accept()}waitNotifyStart(){this.N||(this.core.subscribers.set(this.subscriberId,this),this.N=setTimeout(()=>this.timerN(),o.TIMER_N))}waitNotifyStop(){this.N&&(this.core.subscribers.delete(this.subscriberId),clearTimeout(this.N),this.N=void 0)}receiveResponse(t){if(this.authenticationGuard(t)){if(t.statusCode&&t.statusCode>=200&&t.statusCode<300){let e=t.getHeader("Expires");if(e){let t=Number(e);t>this.subscriptionExpiresRequested&&this.logger.warn("Expires header in a 200-class response to SUBSCRIBE with a higher value than the one in the request"),t<this.subscriptionExpires&&(this.subscriptionExpires=t)}else this.logger.warn("Expires header missing in a 200-class response to SUBSCRIBE");this.dialog&&this.dialog.subscriptionExpires>this.subscriptionExpires&&(this.dialog.subscriptionExpires=this.subscriptionExpires)}t.statusCode&&t.statusCode>=300&&t.statusCode<700&&this.waitNotifyStop(),super.receiveResponse(t)}}timerN(){this.logger.warn("Timer N expired for SUBSCRIBE user agent client. Timed out waiting for NOTIFY."),this.waitNotifyStop(),this.delegate&&this.delegate.onNotifyTimeout&&this.delegate.onNotifyTimeout()}}}
//# sourceMappingURL=/dynamic/node_modules/sip.js/lib/core/user-agents/05d199d32bda03707b58a83c9002227b695d9907.map
