function module(e,t){var n=["Shift","Meta","Alt","Control"],i="object"==typeof navigator&&/Mac|iPod|iPhone|iPad/.test(navigator.platform)?"Meta":"Control";function o(e,t){return"function"==typeof e.getModifierState&&e.getModifierState(t)}function r(e){return e.trim().split(" ").map(function(e){var t=e.split(/\b\+/),n=t.pop();return[t=t.map(function(e){return"$mod"===e?i:e}),n]})}function a(e,t){void 0===t&&(t={});var i,a=null!=(i=t.timeout)?i:1e3,u=Object.keys(e).map(function(t){return[r(t),e[t]]}),c=new Map,f=null;return function(e){e instanceof KeyboardEvent&&(u.forEach(function(t){var i,r=t[0],a=t[1],u=c.get(r)||r;(i=u[0])[1].toUpperCase()!==e.key.toUpperCase()&&i[1]!==e.code||i[0].find(function(t){return!o(e,t)})||n.find(function(t){return!i[0].includes(t)&&i[1]!==t&&o(e,t)})?o(e,e.key)||c.delete(r):u.length>1?c.set(r,u.slice(1)):(c.delete(r),a(e))}),f&&clearTimeout(f),f=setTimeout(c.clear.bind(c),a))}}t.createKeybindingsHandler=a,t.default=function(e,t,n){void 0===n&&(n={});var i,o=null!=(i=n.event)?i:"keydown",r=a(t,n);return e.addEventListener(o,r),function(){e.removeEventListener(o,r)}},t.parseKeybinding=r}
//# sourceMappingURL=/dynamic/node_modules/tinykeys/dist/230ce8b2c487a413a39d7ba5bcbc0387934b3bf1.map
