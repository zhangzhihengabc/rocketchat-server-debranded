)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/providers/EmojiPickerProvider.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useDebouncedState, useLocalStorage } from '@rocket.chat/fuselage-hooks';\nimport type { ReactNode, ReactElement, ContextType } from 'react';\nimport React, { useState, useCallback, useMemo, useEffect } from 'react';\n\nimport type { EmojiByCategory } from '../../app/emoji/client';\nimport { emoji, getFrequentEmoji, updateRecent, createEmojiList, createPickerEmojis, CUSTOM_CATEGORY } from '../../app/emoji/client';\nimport { EmojiPickerContext } from '../contexts/EmojiPickerContext';\nimport EmojiPicker from '../views/composer/EmojiPicker/EmojiPicker';\n\nconst DEFAULT_ITEMS_LIMIT = 90;\n\nconst EmojiPickerProvider = ({ children }: { children: ReactNode }): ReactElement => {\n\tconst [emojiPicker, setEmojiPicker] = useState<ReactElement | null>(null);\n\tconst [emojiToPreview, setEmojiToPreview] = useDebouncedState<{ emoji: string; name: string } | null>(null, 100);\n\tconst [recentEmojis, setRecentEmojis] = useLocalStorage<string[]>('emoji.recent', []);\n\tconst [actualTone, setActualTone] = useLocalStorage('emoji.tone', 0);\n\tconst [currentCategory, setCurrentCategory] = useState('recent');\n\tconst [customItemsLimit, setCustomItemsLimit] = useState(DEFAULT_ITEMS_LIMIT);\n\n\tconst [frequentEmojis, setFrequentEmojis] = useLocalStorage<[string, number][]>('emoji.frequent', []);\n\n\tconst [quickReactions, setQuickReactions] = useState<{ emoji: string; image: string }[]>(() =>\n\t\tgetFrequentEmoji(frequentEmojis.map(([emoji]) => emoji)),\n\t);\n\n\tconst addFrequentEmojis = useCallback(\n\t\t(emoji: string) => {\n\t\t\tconst empty: [string, number][] = frequentEmojis.some(([emojiName]) => emojiName === emoji) ? [] : [[emoji, 0]];\n\n\t\t\tconst sortedFrequent = [...empty, ...frequentEmojis]\n\t\t\t\t.map(([emojiName, count]) => {\n\t\t\t\t\treturn (emojiName === emoji ? [emojiName, Math.min(count + 5, 100)] : [emojiName, Math.max(count - 1, 0)]) as [string, number];\n\t\t\t\t})\n\t\t\t\t.sort(([, frequentA], [, frequentB]) => frequentB - frequentA);\n\n\t\t\tsetFrequentEmojis(sortedFrequent);\n\t\t\tsetQuickReactions(getFrequentEmoji(sortedFrequent.map(([emoji]) => emoji)));\n\t\t},\n\t\t[frequentEmojis, setFrequentEmojis],\n\t);\n\n\tconst [getEmojiListsByCategory, setEmojiListsByCategoryGetter] = useState<() => EmojiByCategory[]>(() => () => []);\n\n\t// TODO: improve this update\n\tconst updateEmojiListByCategory = useCallback(\n\t\t(categoryKey: string, limit: number = DEFAULT_ITEMS_LIMIT) => {\n\t\t\tsetEmojiListsByCategoryGetter(\n\t\t\t\t(getEmojiListsByCategory) => () =>\n\t\t\t\t\tgetEmojiListsByCategory().map((category) =>\n\t\t\t\t\t\tcategoryKey === category.key\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t...category,\n\t\t\t\t\t\t\t\t\temojis: {\n\t\t\t\t\t\t\t\t\t\tlist: createEmojiList(category.key, null, recentEmojis, setRecentEmojis),\n\t\t\t\t\t\t\t\t\t\tlimit: category.key === CUSTOM_CATEGORY ? limit | customItemsLimit : null,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t: category,\n\t\t\t\t\t),\n\t\t\t);\n\t\t},\n\t\t[customItemsLimit, recentEmojis, setRecentEmojis],\n\t);\n\n\tuseEffect(() => {\n\t\tif (recentEmojis?.length > 0) {\n\t\t\tupdateRecent(recentEmojis);\n\t\t}\n\n\t\tsetEmojiListsByCategoryGetter(() => () => createPickerEmojis(customItemsLimit, actualTone, recentEmojis, setRecentEmojis));\n\t}, [actualTone, recentEmojis, customItemsLimit, currentCategory, setRecentEmojis, frequentEmojis]);\n\n\tconst addRecentEmoji = useCallback(\n\t\t(_emoji: string) => {\n\t\t\taddFrequentEmojis(_emoji);\n\n\t\t\tconst recent = recentEmojis || [];\n\t\t\tconst pos = recent.indexOf(_emoji as never);\n\n\t\t\tif (pos !== -1) {\n\t\t\t\trecent.splice(pos, 1);\n\t\t\t}\n\n\t\t\trecent.unshift(_emoji);\n\n\t\t\t// limit recent emojis to 27 (3 rows of 9)\n\t\t\trecent.splice(27);\n\n\t\t\tsetRecentEmojis(recent);\n\t\t\temoji.packages.base.emojisByCategory.recent = recent;\n\t\t\tupdateEmojiListByCategory('recent');\n\t\t},\n\t\t[recentEmojis, setRecentEmojis, updateEmojiListByCategory, addFrequentEmojis],\n\t);\n\n\tconst open = useCallback((ref: Element, callback: (emoji: string) => void) => {\n\t\treturn setEmojiPicker(<EmojiPicker reference={ref} onClose={() => setEmojiPicker(null)} onPickEmoji={(emoji) => callback(emoji)} />);\n\t}, []);\n\n\tconst handlePreview = useCallback((emoji: string, name: string) => setEmojiToPreview({ emoji, name }), [setEmojiToPreview]);\n\n\tconst handleRemovePreview = useCallback(() => setEmojiToPreview(null), [setEmojiToPreview]);\n\n\tconst contextValue = useMemo(\n\t\t(): ContextType<typeof EmojiPickerContext> => ({\n\t\t\tisOpen: emojiPicker !== null,\n\t\t\tclose: () => setEmojiPicker(null),\n\t\t\topen,\n\t\t\temojiToPreview,\n\t\t\thandlePreview,\n\t\t\thandleRemovePreview,\n\t\t\taddRecentEmoji,\n\t\t\tgetEmojiListsByCategory,\n\t\t\trecentEmojis,\n\t\t\tsetRecentEmojis,\n\t\t\tactualTone,\n\t\t\tcurrentCategory,\n\t\t\tsetCurrentCategory,\n\t\t\tcustomItemsLimit,\n\t\t\tsetCustomItemsLimit,\n\t\t\tsetActualTone,\n\t\t\tquickReactions,\n\t\t}),\n\t\t[\n\t\t\temojiPicker,\n\t\t\topen,\n\t\t\temojiToPreview,\n\t\t\taddRecentEmoji,\n\t\t\tgetEmojiListsByCategory,\n\t\t\trecentEmojis,\n\t\t\tsetRecentEmojis,\n\t\t\tactualTone,\n\t\t\tcurrentCategory,\n\t\t\tsetCurrentCategory,\n\t\t\tcustomItemsLimit,\n\t\t\tsetActualTone,\n\t\t\tquickReactions,\n\t\t\thandlePreview,\n\t\t\thandleRemovePreview,\n\t\t],\n\t);\n\n\treturn (\n\t\t<EmojiPickerContext.Provider value={contextValue}>\n\t\t\t{children}\n\t\t\t{emojiPicker}\n\t\t</EmojiPickerContext.Provider>\n\t);\n};\n\nexport default EmojiPickerProvider;\n",null],"names":["_objectSpread","_toConsumableArray","_slicedToArray","useDebouncedState","useLocalStorage","React","useState","useCallback","useMemo","useEffect","emoji","getFrequentEmoji","updateRecent","createEmojiList","createPickerEmojis","CUSTOM_CATEGORY","EmojiPickerContext","EmojiPicker","module","default","v","link","exportDefault","_ref","children","_useState2","emojiPicker","setEmojiPicker","_useDebouncedState2","emojiToPreview","setEmojiToPreview","_useLocalStorage2","recentEmojis","setRecentEmojis","_useLocalStorage4","actualTone","setActualTone","_useState4","currentCategory","setCurrentCategory","_useState6","customItemsLimit","setCustomItemsLimit","_useLocalStorage6","frequentEmojis","setFrequentEmojis","_useState7","map","_ref2","_ref3","_useState8","quickReactions","setQuickReactions","addFrequentEmojis","sortedFrequent","concat","some","_ref4","emojiName","_ref5","_ref6","_ref7","count","Math","min","max","sort","_ref8","_ref9","frequentA","_ref10","frequentB","_ref11","_ref12","_ref13","_useState10","getEmojiListsByCategory","setEmojiListsByCategoryGetter","updateEmojiListByCategory","categoryKey","limit","category","key","emojis","list","length","addRecentEmoji","_emoji","recent","pos","indexOf","splice","unshift","packages","base","emojisByCategory","open","ref","callback","createElement","reference","onClose","onPickEmoji","handlePreview","name","handleRemovePreview","contextValue","isOpen","close","Provider","value"],"mappings":"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"}