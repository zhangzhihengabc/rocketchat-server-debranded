)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/providers/CallProvider/CallProvider.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IVoipRoom, VoipEventDataSignature, ICallerInfo, ICallDetails, ILivechatVisitor, Serialized } from '@rocket.chat/core-typings';\nimport {\n\tVoipClientEvents,\n\tisVoipEventAgentCalled,\n\tisVoipEventAgentConnected,\n\tisVoipEventCallerJoined,\n\tisVoipEventQueueMemberAdded,\n\tisVoipEventQueueMemberRemoved,\n\tisVoipEventCallAbandoned,\n\tUserState,\n} from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { Random } from '@rocket.chat/random';\nimport type { Device, IExperimentalHTMLAudioElement } from '@rocket.chat/ui-contexts';\nimport {\n\tuseRouter,\n\tuseUser,\n\tuseSetting,\n\tuseEndpoint,\n\tuseStream,\n\tuseSetOutputMediaDevice,\n\tuseSetInputMediaDevice,\n\tuseSetModal,\n\tuseTranslation,\n} from '@rocket.chat/ui-contexts';\nimport type { FC } from 'react';\nimport React, { useMemo, useRef, useCallback, useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport type { OutgoingByeRequest } from 'sip.js/lib/core';\n\nimport { isOutboundClient, useVoipClient } from '../../../ee/client/hooks/useVoipClient';\nimport { parseOutboundPhoneNumber } from '../../../ee/client/lib/voip/parseOutboundPhoneNumber';\nimport { WrapUpCallModal } from '../../../ee/client/voip/components/modals/WrapUpCallModal';\nimport type { CallContextValue } from '../../contexts/CallContext';\nimport { CallContext, useIsVoipEnterprise } from '../../contexts/CallContext';\nimport { useDialModal } from '../../hooks/useDialModal';\nimport { roomCoordinator } from '../../lib/rooms/roomCoordinator';\nimport type { QueueAggregator } from '../../lib/voip/QueueAggregator';\nimport { useVoipSounds } from './hooks/useVoipSounds';\n\ntype NetworkState = 'online' | 'offline';\n\nexport const CallProvider: FC = ({ children }) => {\n\tconst [clientState, setClientState] = useState<'registered' | 'unregistered'>('unregistered');\n\n\tconst voipEnabled = useSetting('VoIP_Enabled');\n\tconst subscribeToNotifyUser = useStream('notify-user');\n\tconst dispatchEvent = useEndpoint('POST', '/v1/voip/events');\n\tconst visitorEndpoint = useEndpoint('POST', '/v1/livechat/visitor');\n\tconst voipEndpoint = useEndpoint('GET', '/v1/voip/room');\n\tconst voipCloseRoomEndpoint = useEndpoint('POST', '/v1/voip/room.close');\n\tconst getContactBy = useEndpoint('GET', '/v1/omnichannel/contact.search');\n\tconst setModal = useSetModal();\n\tconst t = useTranslation();\n\n\tconst result = useVoipClient();\n\tconst user = useUser();\n\tconst router = useRouter();\n\tconst setOutputMediaDevice = useSetOutputMediaDevice();\n\tconst setInputMediaDevice = useSetInputMediaDevice();\n\n\tconst hasVoIPEnterpriseLicense = useIsVoipEnterprise();\n\n\tconst remoteAudioMediaRef = useRef<IExperimentalHTMLAudioElement>(null); // TODO: Create a dedicated file for the AUDIO and make the controls accessible\n\n\tconst [queueCounter, setQueueCounter] = useState(0);\n\tconst [queueName, setQueueName] = useState('');\n\tconst [roomInfo, setRoomInfo] = useState<{ v: { token?: string }; rid: string }>({ v: {}, rid: '' });\n\n\tconst { openDialModal } = useDialModal();\n\n\tconst voipSounds = useVoipSounds();\n\n\tconst closeRoom = useCallback(\n\t\tasync (data = {}): Promise<void> => {\n\t\t\troomInfo &&\n\t\t\t\t(await voipCloseRoomEndpoint({\n\t\t\t\t\trid: roomInfo.rid,\n\t\t\t\t\ttoken: roomInfo.v.token || '',\n\t\t\t\t\toptions: { comment: data?.comment, tags: data?.tags },\n\t\t\t\t}));\n\t\t\trouter.navigate('/home');\n\n\t\t\tconst queueAggregator = result.voipClient?.getAggregator();\n\t\t\tif (queueAggregator) {\n\t\t\t\tqueueAggregator.callEnded();\n\t\t\t}\n\t\t},\n\t\t[router, result?.voipClient, roomInfo, voipCloseRoomEndpoint],\n\t);\n\n\tconst openWrapUpModal = useCallback((): void => {\n\t\tsetModal(() => <WrapUpCallModal closeRoom={closeRoom} />);\n\t}, [closeRoom, setModal]);\n\n\tconst changeAudioOutputDevice = useMutableCallback((selectedAudioDevice: Device): void => {\n\t\tremoteAudioMediaRef?.current &&\n\t\t\tsetOutputMediaDevice({ outputDevice: selectedAudioDevice, HTMLAudioElement: remoteAudioMediaRef.current });\n\t});\n\n\tconst changeAudioInputDevice = useMutableCallback((selectedAudioDevice: Device): void => {\n\t\tif (!result.voipClient) {\n\t\t\treturn;\n\t\t}\n\t\tconst constraints = { audio: { deviceId: { exact: selectedAudioDevice.id } } };\n\n\t\t// TODO: Migrate the classes that manage MediaStream to a more react based approach (using contexts/providers perhaps)\n\t\t// For now the MediaStream management is very coupled with the VoIP client,\n\t\t// decoupling it will make it usable by other areas of the project that needs to handle MediaStreams and avoid code duplication\n\t\tresult.voipClient.changeAudioInputDevice(constraints);\n\n\t\tsetInputMediaDevice(selectedAudioDevice);\n\t});\n\n\tconst [queueAggregator, setQueueAggregator] = useState<QueueAggregator>();\n\n\tconst [networkStatus, setNetworkStatus] = useState<NetworkState>('online');\n\n\tuseEffect(() => {\n\t\tconst { voipClient } = result || {};\n\n\t\tif (!voipClient) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetQueueAggregator(voipClient.getAggregator());\n\n\t\treturn (): void => {\n\t\t\tif (clientState === 'registered') {\n\t\t\t\treturn voipClient.unregister();\n\t\t\t}\n\t\t};\n\t}, [result, clientState]);\n\n\tconst openRoom = useCallback((rid: IVoipRoom['_id']): void => {\n\t\troomCoordinator.openRouteLink('v', { rid });\n\t}, []);\n\n\tconst findOrCreateVisitor = useCallback(\n\t\tasync (caller: ICallerInfo): Promise<Serialized<ILivechatVisitor>> => {\n\t\t\tconst phone = parseOutboundPhoneNumber(caller.callerId);\n\n\t\t\tconst { contact } = await getContactBy({ phone });\n\n\t\t\tif (contact) {\n\t\t\t\treturn contact;\n\t\t\t}\n\n\t\t\tconst { visitor } = await visitorEndpoint({\n\t\t\t\tvisitor: {\n\t\t\t\t\ttoken: Random.id(),\n\t\t\t\t\tphone,\n\t\t\t\t\tname: caller.callerName || phone,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn visitor;\n\t\t},\n\t\t[getContactBy, visitorEndpoint],\n\t);\n\n\tconst createRoom = useCallback(\n\t\tasync (caller: ICallerInfo, direction: IVoipRoom['direction'] = 'inbound'): Promise<IVoipRoom['_id']> => {\n\t\t\tif (!user) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst visitor = await findOrCreateVisitor(caller);\n\t\t\t\tconst voipRoom = await voipEndpoint({ token: visitor.token, agentId: user._id, direction });\n\t\t\t\topenRoom(voipRoom.room._id);\n\t\t\t\tvoipRoom.room && setRoomInfo({ v: { token: voipRoom.room.v.token }, rid: voipRoom.room._id });\n\t\t\t\tconst queueAggregator = result.voipClient?.getAggregator();\n\t\t\t\tif (queueAggregator) {\n\t\t\t\t\tqueueAggregator.callStarted();\n\t\t\t\t}\n\t\t\t\treturn voipRoom.room._id;\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(`Error while creating a visitor ${error}`);\n\t\t\t\treturn '';\n\t\t\t}\n\t\t},\n\t\t[openRoom, result.voipClient, user, voipEndpoint, findOrCreateVisitor],\n\t);\n\n\tuseEffect(() => {\n\t\tif (!voipEnabled || !user || !queueAggregator) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst handleEventReceived = async (event: VoipEventDataSignature): Promise<void> => {\n\t\t\tif (isVoipEventAgentCalled(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.callRinging({ queuename: data.queue, callerid: data.callerId });\n\t\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (isVoipEventAgentConnected(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.callPickedup({ queuename: data.queue, queuedcalls: data.queuedCalls, waittimeinqueue: data.waitTimeInQueue });\n\t\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (isVoipEventCallerJoined(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.queueJoined({ queuename: data.queue, callerid: data.callerId, queuedcalls: data.queuedCalls });\n\t\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (isVoipEventQueueMemberAdded(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.memberAdded({ queuename: data.queue, queuedcalls: data.queuedCalls });\n\t\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (isVoipEventQueueMemberRemoved(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.memberRemoved({ queuename: data.queue, queuedcalls: data.queuedCalls });\n\t\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (isVoipEventCallAbandoned(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.queueAbandoned({ queuename: data.queue, queuedcallafterabandon: data.queuedCallAfterAbandon });\n\t\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconsole.warn('Unknown event received');\n\t\t};\n\n\t\treturn subscribeToNotifyUser(`${user._id}/voip.events`, handleEventReceived);\n\t}, [subscribeToNotifyUser, user, queueAggregator, voipEnabled]);\n\n\t// This was causing event duplication before, so we'll leave this here for now\n\tuseEffect(() => {\n\t\tif (!voipEnabled || !user || !queueAggregator) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn subscribeToNotifyUser(`${user._id}/call.hangup`, (event): void => {\n\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\n\t\t\tif (hasVoIPEnterpriseLicense) {\n\t\t\t\topenWrapUpModal();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcloseRoom();\n\n\t\t\tdispatchEvent({ event: VoipClientEvents['VOIP-CALL-ENDED'], rid: event.roomId });\n\t\t});\n\t}, [openWrapUpModal, queueAggregator, subscribeToNotifyUser, user, voipEnabled, dispatchEvent, hasVoIPEnterpriseLicense, closeRoom]);\n\n\tuseEffect(() => {\n\t\tif (!result.voipClient) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst offRegistered = result.voipClient.on('registered', (): void => setClientState('registered'));\n\t\tconst offUnregistered = result.voipClient.on('unregistered', (): void => setClientState('unregistered'));\n\n\t\treturn (): void => {\n\t\t\toffRegistered();\n\t\t\toffUnregistered();\n\t\t};\n\t}, [result.voipClient]);\n\n\tuseEffect(() => {\n\t\tif (!result.voipClient) {\n\t\t\treturn;\n\t\t}\n\n\t\t/*\n\t\t * This code may need a revisit when we handle callinqueue differently.\n\t\t * Check clickup tasks for more details\n\t\t * https://app.clickup.com/t/22hy1k4\n\t\t * When customer called a queue (Either using skype or using internal number), call would get established\n\t\t * customer would hear agent's voice but agent would not hear anything from customer.\n\t\t * This issue was observed on unstable. It was found to be inconsistent to reproduce.\n\t\t * On some developer env, it would happen randomly. On Safari it did not happen if\n\t\t * user refreshes before taking every call.\n\t\t *\n\t\t * The reason behind this was as soon as agent accepts a call, queueCounter would change.\n\t\t * This change will trigger re-rendering of media and creation of audio element.\n\t\t * This audio element gets used by voipClient to render the remote audio.\n\t\t * Because the re-render happened, it would hold a stale reference.\n\t\t *\n\t\t * If the dom is inspected, audio element just before body is usually created by this class.\n\t\t * this audio element.srcObject contains null value. In working case, it should display\n\t\t * valid stream object.\n\t\t *\n\t\t * Reason for inconsistencies :\n\t\t * This element is utilized in VoIPUser::setupRemoteMedia\n\t\t * This function is called when webRTC receives a remote track event. i.e when the webrtc's peer connection\n\t\t * starts receiving media. This event call back depends on several factors. How does asterisk setup streams.\n\t\t * How does it creates a bridge which patches up the agent and customer (Media is flowing thru asterisk).\n\t\t * When it works in de-environment, it was observed that the audio element in dom and the audio element hold\n\t\t * by VoIPUser is different. Nonetheless, this stale audio element holds valid media stream, which is being played.\n\t\t * Hence sometimes the audio is heard.\n\t\t *\n\t\t * Ideally call component once gets stable, should not get rerendered. Queue, Room creation are the parameters\n\t\t * which should be independent and should not control the call component.\n\t\t *\n\t\t * Solution :\n\t\t * Either make the audio elemenent rendered independent of rest of the DOM.\n\t\t * or implement useEffect. This useEffect will reset the rendering elements with the latest audio tag.\n\t\t *\n\t\t * Note : If this code gets refactor, revisit the line below to check if this call is needed.\n\t\t *\n\t\t */\n\t\tremoteAudioMediaRef.current && result.voipClient.switchMediaRenderer({ remoteMediaElement: remoteAudioMediaRef.current });\n\t}, [result.voipClient]);\n\n\tuseEffect(() => {\n\t\tif (!result.voipClient) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!user) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst onCallEstablished = async (callDetails: ICallDetails): Promise<undefined> => {\n\t\t\tif (!callDetails.callInfo) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvoipSounds.stopAll();\n\t\t\tif (callDetails.userState !== UserState.UAC) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Agent has sent Invite. So it must create a room.\n\t\t\tconst { callInfo } = callDetails;\n\t\t\t// While making the call, there is no remote media element available.\n\t\t\t// When the call is ringing we have that element created. But we still\n\t\t\t// do not want it to be attached.\n\t\t\t// When call gets established, then switch the media renderer.\n\t\t\tremoteAudioMediaRef.current && result.voipClient?.switchMediaRenderer({ remoteMediaElement: remoteAudioMediaRef.current });\n\t\t\tconst roomId = await createRoom(callInfo, 'outbound');\n\t\t\tdispatchEvent({ event: VoipClientEvents['VOIP-CALL-STARTED'], rid: roomId });\n\t\t};\n\n\t\tconst onNetworkConnected = (): void => {\n\t\t\tif (networkStatus === 'offline') {\n\t\t\t\tsetNetworkStatus('online');\n\t\t\t}\n\t\t};\n\n\t\tconst onNetworkDisconnected = (): void => {\n\t\t\t// Transitioning from online -> offline\n\t\t\t// If there is ongoing call, terminate it or if we are processing an incoming/outgoing call\n\t\t\t// reject it.\n\t\t\tif (networkStatus === 'online') {\n\t\t\t\tsetNetworkStatus('offline');\n\t\t\t\tswitch (result.voipClient?.callerInfo.state) {\n\t\t\t\t\tcase 'IN_CALL':\n\t\t\t\t\tcase 'ON_HOLD':\n\t\t\t\t\t\tresult.voipClient?.endCall();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'OFFER_RECEIVED':\n\t\t\t\t\tcase 'ANSWER_SENT':\n\t\t\t\t\t\tresult.voipClient?.rejectCall();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst onRinging = (): void => {\n\t\t\tvoipSounds.play('outbound-call-ringing');\n\t\t};\n\n\t\tconst onIncomingCallRinging = (): void => {\n\t\t\tvoipSounds.play('telephone');\n\t\t};\n\n\t\tconst onCallTerminated = (): void => {\n\t\t\tvoipSounds.play('call-ended', false);\n\t\t\tvoipSounds.stopAll();\n\t\t};\n\n\t\tconst onCallFailed = (reason: 'Not Found' | 'Address Incomplete' | 'Request Terminated' | string): void => {\n\t\t\tswitch (reason) {\n\t\t\t\tcase 'Not Found':\n\t\t\t\t\t// This happens when the call matches dialplan and goes to the world, but the trunk doesnt find the number.\n\t\t\t\t\topenDialModal({ errorMessage: t('Dialed_number_doesnt_exist') });\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Address Incomplete':\n\t\t\t\t\t// This happens when the dialed number doesnt match a valid asterisk dialplan pattern or the number is invalid.\n\t\t\t\t\topenDialModal({ errorMessage: t('Dialed_number_is_incomplete') });\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Request Terminated':\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\topenDialModal({ errorMessage: t('Something_went_wrong_try_again_later') });\n\t\t\t}\n\t\t};\n\n\t\tresult.voipClient.onNetworkEvent('connected', onNetworkConnected);\n\t\tresult.voipClient.onNetworkEvent('disconnected', onNetworkDisconnected);\n\t\tresult.voipClient.onNetworkEvent('connectionerror', onNetworkDisconnected);\n\t\tresult.voipClient.onNetworkEvent('localnetworkonline', onNetworkConnected);\n\t\tresult.voipClient.onNetworkEvent('localnetworkoffline', onNetworkDisconnected);\n\t\tresult.voipClient.on('callestablished', onCallEstablished);\n\t\tresult.voipClient.on('ringing', onRinging); // not called for incoming call\n\t\tresult.voipClient.on('incomingcall', onIncomingCallRinging);\n\t\tresult.voipClient.on('callterminated', onCallTerminated);\n\n\t\tif (isOutboundClient(result.voipClient)) {\n\t\t\tresult.voipClient.on('callfailed', onCallFailed);\n\t\t}\n\n\t\treturn (): void => {\n\t\t\tresult.voipClient?.offNetworkEvent('connected', onNetworkConnected);\n\t\t\tresult.voipClient?.offNetworkEvent('disconnected', onNetworkDisconnected);\n\t\t\tresult.voipClient?.offNetworkEvent('connectionerror', onNetworkDisconnected);\n\t\t\tresult.voipClient?.offNetworkEvent('localnetworkonline', onNetworkConnected);\n\t\t\tresult.voipClient?.offNetworkEvent('localnetworkoffline', onNetworkDisconnected);\n\t\t\tresult.voipClient?.off('incomingcall', onIncomingCallRinging);\n\t\t\tresult.voipClient?.off('ringing', onRinging);\n\t\t\tresult.voipClient?.off('callestablished', onCallEstablished);\n\t\t\tresult.voipClient?.off('callterminated', onCallTerminated);\n\n\t\t\tif (isOutboundClient(result.voipClient)) {\n\t\t\t\tresult.voipClient?.off('callfailed', onCallFailed);\n\t\t\t}\n\t\t};\n\t}, [createRoom, dispatchEvent, networkStatus, openDialModal, result.voipClient, voipSounds, t, user]);\n\n\tconst contextValue: CallContextValue = useMemo(() => {\n\t\tif (!voipEnabled) {\n\t\t\treturn {\n\t\t\t\tenabled: false,\n\t\t\t\tready: false,\n\t\t\t\toutBoundCallsAllowed: undefined, // set to true only if enterprise license is present.\n\t\t\t\toutBoundCallsEnabled: undefined, // set to true even if enterprise license is not present.\n\t\t\t\toutBoundCallsEnabledForUser: undefined, // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n\t\t\t};\n\t\t}\n\n\t\tif (!user?.extension) {\n\t\t\treturn {\n\t\t\t\tenabled: false,\n\t\t\t\tready: false,\n\t\t\t\toutBoundCallsAllowed: undefined, // set to true only if enterprise license is present.\n\t\t\t\toutBoundCallsEnabled: undefined, // set to true even if enterprise license is not present.\n\t\t\t\toutBoundCallsEnabledForUser: undefined, // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n\t\t\t};\n\t\t}\n\n\t\tif (result.error) {\n\t\t\treturn {\n\t\t\t\tenabled: true,\n\t\t\t\tready: false,\n\t\t\t\terror: result.error,\n\t\t\t\toutBoundCallsAllowed: undefined, // set to true only if enterprise license is present.\n\t\t\t\toutBoundCallsEnabled: undefined, // set to true even if enterprise license is not present.\n\t\t\t\toutBoundCallsEnabledForUser: undefined, // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n\t\t\t};\n\t\t}\n\n\t\tif (!result.voipClient) {\n\t\t\treturn {\n\t\t\t\tenabled: true,\n\t\t\t\tready: false,\n\t\t\t\toutBoundCallsAllowed: undefined, // set to true only if enterprise license is present.\n\t\t\t\toutBoundCallsEnabled: undefined, // set to true even if enterprise license is not present.\n\t\t\t\toutBoundCallsEnabledForUser: undefined, // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n\t\t\t};\n\t\t}\n\n\t\tconst { registrationInfo, voipClient } = result;\n\n\t\treturn {\n\t\t\toutBoundCallsAllowed: hasVoIPEnterpriseLicense, // set to true only if enterprise license is present.\n\t\t\toutBoundCallsEnabled: hasVoIPEnterpriseLicense, // set to true even if enterprise license is not present.\n\t\t\toutBoundCallsEnabledForUser:\n\t\t\t\thasVoIPEnterpriseLicense && clientState === 'registered' && !['IN_CALL', 'ON_HOLD'].includes(voipClient.callerInfo.state), // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n\n\t\t\tenabled: true,\n\t\t\tready: true,\n\t\t\topenedRoomInfo: roomInfo,\n\t\t\tvoipClient,\n\t\t\tregistrationInfo,\n\t\t\tqueueCounter,\n\t\t\tqueueName,\n\t\t\tactions: {\n\t\t\t\tmute: (): Promise<void> => voipClient.muteCall(true), // voipClient.mute(),\n\t\t\t\tunmute: (): Promise<void> => voipClient.muteCall(false), // voipClient.unmute()\n\t\t\t\tpause: (): Promise<void> => voipClient.holdCall(true), // voipClient.pause()\n\t\t\t\tresume: (): Promise<void> => voipClient.holdCall(false), // voipClient.resume()\n\t\t\t\tend: (): Promise<OutgoingByeRequest | void> => voipClient.endCall(),\n\t\t\t\tpickUp: async (): Promise<void | null> =>\n\t\t\t\t\tremoteAudioMediaRef.current && voipClient.acceptCall({ remoteMediaElement: remoteAudioMediaRef.current }),\n\t\t\t\treject: (): Promise<void> => voipClient.rejectCall(),\n\t\t\t},\n\t\t\topenRoom,\n\t\t\tcreateRoom,\n\t\t\tcloseRoom,\n\t\t\tnetworkStatus,\n\t\t\topenWrapUpModal,\n\t\t\tchangeAudioOutputDevice,\n\t\t\tchangeAudioInputDevice,\n\t\t\tregister: (): void => voipClient.register(),\n\t\t\tunregister: (): void => voipClient.unregister(),\n\t\t};\n\t}, [\n\t\tvoipEnabled,\n\t\tuser?.extension,\n\t\tresult,\n\t\thasVoIPEnterpriseLicense,\n\t\tclientState,\n\t\troomInfo,\n\t\tqueueCounter,\n\t\tqueueName,\n\t\topenRoom,\n\t\tcreateRoom,\n\t\tcloseRoom,\n\t\topenWrapUpModal,\n\t\tchangeAudioOutputDevice,\n\t\tchangeAudioInputDevice,\n\t\tnetworkStatus,\n\t]);\n\n\treturn (\n\t\t<CallContext.Provider value={contextValue}>\n\t\t\t{children}\n\t\t\t{contextValue.enabled && createPortal(<audio ref={remoteAudioMediaRef} />, document.body)}\n\t\t</CallContext.Provider>\n\t);\n};\n",null],"names":["module","link","default","v","_regeneratorRuntime","_slicedToArray","export","CallProvider","VoipClientEvents","isVoipEventAgentCalled","isVoipEventAgentConnected","isVoipEventCallerJoined","isVoipEventQueueMemberAdded","isVoipEventQueueMemberRemoved","isVoipEventCallAbandoned","UserState","useMutableCallback","Random","useRouter","useUser","useSetting","useEndpoint","useStream","useSetOutputMediaDevice","useSetInputMediaDevice","useSetModal","useTranslation","React","useMemo","useRef","useCallback","useEffect","useState","createPortal","isOutboundClient","useVoipClient","parseOutboundPhoneNumber","WrapUpCallModal","CallContext","useIsVoipEnterprise","useDialModal","roomCoordinator","useVoipSounds","_ref","children","_useState2","clientState","setClientState","voipEnabled","subscribeToNotifyUser","dispatchEvent","visitorEndpoint","voipEndpoint","voipCloseRoomEndpoint","getContactBy","setModal","t","result","user","router","setOutputMediaDevice","setInputMediaDevice","hasVoIPEnterpriseLicense","remoteAudioMediaRef","_useState4","queueCounter","setQueueCounter","_useState6","queueName","setQueueName","_useState8","rid","roomInfo","setRoomInfo","openDialModal","_useDialModal","voipSounds","closeRoom","_result$voipClient","data","queueAggregator","_args","arguments","async","_context","prev","next","length","undefined","t0","awrap","token","options","comment","tags","navigate","voipClient","getAggregator","callEnded","stop","Promise","openWrapUpModal","createElement","changeAudioOutputDevice","selectedAudioDevice","current","outputDevice","HTMLAudioElement","changeAudioInputDevice","constraints","audio","deviceId","exact","id","_useState10","setQueueAggregator","_useState12","networkStatus","setNetworkStatus","_ref2","unregister","openRoom","openRouteLink","findOrCreateVisitor","caller","phone","contact","visitor","_context2","callerId","_await$getContactBy","sent","abrupt","name","callerName","_await$visitorEndpoin","createRoom","direction","_result$voipClient2","voipRoom","_queueAggregator","_args3","_context3","agentId","_id","room","callStarted","console","error","event","_data","_data2","_data3","_data4","_data5","_context4","callRinging","queuename","queue","callerid","getCurrentQueueName","callPickedup","queuedcalls","queuedCalls","waittimeinqueue","waitTimeInQueue","getCallWaitingCount","queueJoined","memberAdded","memberRemoved","queueAbandoned","queuedcallafterabandon","queuedCallAfterAbandon","warn","roomId","offRegistered","on","offUnregistered","switchMediaRenderer","remoteMediaElement","onCallEstablished","callDetails","_result$voipClient3","callInfo","_context5","stopAll","userState","UAC","onNetworkConnected","onNetworkDisconnected","_result$voipClient5","_result$voipClient6","_result$voipClient4","callerInfo","state","endCall","rejectCall","onRinging","play","onIncomingCallRinging","onCallTerminated","onCallFailed","reason","errorMessage","onNetworkEvent","_result$voipClient7","_result$voipClient8","_result$voipClient9","_result$voipClient10","_result$voipClient11","_result$voipClient12","_result$voipClient13","_result$voipClient14","_result$voipClient15","_result$voipClient16","offNetworkEvent","off","contextValue","extension","enabled","ready","outBoundCallsAllowed","outBoundCallsEnabled","outBoundCallsEnabledForUser","registrationInfo","includes","openedRoomInfo","actions","mute","muteCall","unmute","pause","holdCall","resume","end","pickUp","_context6","acceptCall","reject","register","Provider","value","ref","document","body"],"mappings":"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"}