)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/providers/CallProvider/lib/parseStringToIceServers.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IceServer } from '../definitions/IceServer';\n\nexport const parseStringToIceServer = (server: string): IceServer => {\n\tconst credentials = server.trim().split('@');\n\tconst urls = credentials.pop() as string;\n\tconst [username, credential] = credentials.length === 1 ? credentials[0].split(':') : [];\n\n\treturn {\n\t\turls,\n\t\t...(username &&\n\t\t\tcredential && {\n\t\t\t\tusername: decodeURIComponent(username),\n\t\t\t\tcredential: decodeURIComponent(credential),\n\t\t\t}),\n\t};\n};\n\nexport const parseStringToIceServers = (string: string): IceServer[] => {\n\tconst lines = string.trim() ? string.split(',') : [];\n\treturn lines.map((line) => parseStringToIceServer(line));\n};\n",null],"names":["module","default","_objectSpread","_slicedToArray","export","parseStringToIceServer","parseStringToIceServers","server","credentials","trim","split","urls","pop","_ref2","length","username","credential","decodeURIComponent","string","lines","map","line"],"mappings":"uBAEaA,EAAAA,IAAAA,CAAAA,uCAAuD,CAAAC,QAAAA,SAAAA,CAAAA,EAAAC,EAAAA,CAAA,CAAA,EAAA,GAAAF,EAAAA,IAAAA,CAAAA,uCAAAA,CAAAC,QAAAA,SAAAA,CAAAA,EAAAE,EAAAA,CAAA,CAAA,EAAA,GAApEH,EAAOI,MAAM,CAAA,CAAAC,uBAAyB,WAA8B,OAAAA,CAAA,EAAAC,wBAAAA,WAAA,OAAAA,CAAA,CAAA,GAA7D,IAAPJ,EAAoEC,EAAvDE,EAAyB,SAACE,CAAc,EACpD,IAAMC,EAAcD,EAAOE,IAAI,GAAGC,KAAK,CAAC,KAClCC,EAAOH,EAAYI,GAAG,GAC4DC,EAAAV,EAAzDK,AAAuB,IAAvBA,EAAYM,MAAM,CAASN,CAAW,CAAC,EAAE,CAACE,KAAK,CAAC,KAAO,EAAE,CAAA,GAAjFK,EAAQF,CAAA,CAAA,EAAA,CAAEG,EAAUH,CAAA,CAAA,EAAA,CAE3B,OAAAX,EAAA,CACCS,KAAAA,CAAI,EACAI,GACHC,GAAc,CACbD,SAAUE,mBAAmBF,GAC7BC,WAAYC,mBAAmBD,IAGnC,EAEaV,EAA0B,SAACY,CAAc,EAErD,MAAOC,AADOD,CAAAA,EAAOT,IAAI,GAAKS,EAAOR,KAAK,CAAC,KAAO,EAAE,AAAF,EACrCU,GAAG,CAAC,SAACC,CAAI,EAAA,OAAKhB,EAAuBgB,EAAK,EACxD"}