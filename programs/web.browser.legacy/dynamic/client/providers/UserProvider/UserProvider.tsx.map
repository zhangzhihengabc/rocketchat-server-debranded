)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/providers/UserProvider/UserProvider.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRoom, ISubscription, IUser } from '@rocket.chat/core-typings';\nimport { useLocalStorage } from '@rocket.chat/fuselage-hooks';\nimport type { LoginService, SubscriptionWithRoom } from '@rocket.chat/ui-contexts';\nimport { UserContext, useEndpoint, useSetting } from '@rocket.chat/ui-contexts';\nimport { Meteor } from 'meteor/meteor';\nimport type { ContextType, ReactElement, ReactNode } from 'react';\nimport React, { useEffect, useMemo } from 'react';\n\nimport { Subscriptions, ChatRoom } from '../../../app/models/client';\nimport { getUserPreference } from '../../../app/utils/client';\nimport { sdk } from '../../../app/utils/client/lib/SDKClient';\nimport { afterLogoutCleanUpCallback } from '../../../lib/callbacks/afterLogoutCleanUpCallback';\nimport { useReactiveValue } from '../../hooks/useReactiveValue';\nimport { createReactiveSubscriptionFactory } from '../../lib/createReactiveSubscriptionFactory';\nimport { useCreateFontStyleElement } from '../../views/account/accessibility/hooks/useCreateFontStyleElement';\nimport { useEmailVerificationWarning } from './hooks/useEmailVerificationWarning';\nimport { useLDAPAndCrowdCollisionWarning } from './hooks/useLDAPAndCrowdCollisionWarning';\n\nconst getUserId = (): string | null => Meteor.userId();\n\nconst getUser = (): IUser | null => Meteor.user() as IUser | null;\n\nconst capitalize = (str: string): string => str.charAt(0).toUpperCase() + str.slice(1);\n\nconst config: Record<string, Partial<LoginService>> = {\n\t'apple': { title: 'Apple', icon: 'apple' },\n\t'facebook': { title: 'Facebook', icon: 'facebook' },\n\t'twitter': { title: 'Twitter', icon: 'twitter' },\n\t'google': { title: 'Google', icon: 'google' },\n\t'github': { title: 'Github', icon: 'github' },\n\t'github_enterprise': { title: 'Github Enterprise', icon: 'github' },\n\t'gitlab': { title: 'Gitlab', icon: 'gitlab' },\n\t'dolphin': { title: 'Dolphin', icon: 'dophin' },\n\t'drupal': { title: 'Drupal', icon: 'drupal' },\n\t'nextcloud': { title: 'Nextcloud', icon: 'nextcloud' },\n\t'tokenpass': { title: 'Tokenpass', icon: 'tokenpass' },\n\t'meteor-developer': { title: 'Meteor', icon: 'meteor' },\n\t'wordpress': { title: 'WordPress', icon: 'wordpress' },\n\t'linkedin': { title: 'Linkedin', icon: 'linkedin' },\n};\n\nconst logout = (): Promise<void> =>\n\tnew Promise((resolve, reject) => {\n\t\tconst user = getUser();\n\n\t\tif (!user) {\n\t\t\treturn resolve();\n\t\t}\n\n\t\tMeteor.logout(async () => {\n\t\t\tawait afterLogoutCleanUpCallback.run(user);\n\t\t\tsdk.call('logoutCleanUp', user).then(resolve, reject);\n\t\t});\n\t});\n\nexport type LoginMethods = keyof typeof Meteor;\n\ntype UserProviderProps = {\n\tchildren: ReactNode;\n};\n\nconst UserProvider = ({ children }: UserProviderProps): ReactElement => {\n\tconst isLdapEnabled = useSetting<boolean>('LDAP_Enable');\n\tconst isCrowdEnabled = useSetting<boolean>('CROWD_Enable');\n\n\tconst userId = useReactiveValue(getUserId);\n\tconst user = useReactiveValue(getUser);\n\tconst [userLanguage, setUserLanguage] = useLocalStorage('userLanguage', '');\n\tconst [preferedLanguage, setPreferedLanguage] = useLocalStorage('preferedLanguage', '');\n\n\tconst setUserPreferences = useEndpoint('POST', '/v1/users.setPreferences');\n\n\tconst createFontStyleElement = useCreateFontStyleElement();\n\tcreateFontStyleElement(user?.settings?.preferences?.fontSize);\n\n\tconst loginMethod: LoginMethods = (isLdapEnabled && 'loginWithLDAP') || (isCrowdEnabled && 'loginWithCrowd') || 'loginWithPassword';\n\n\tuseLDAPAndCrowdCollisionWarning();\n\tuseEmailVerificationWarning(user ?? undefined);\n\n\tconst contextValue = useMemo(\n\t\t(): ContextType<typeof UserContext> => ({\n\t\t\tuserId,\n\t\t\tuser,\n\t\t\tqueryPreference: createReactiveSubscriptionFactory(\n\t\t\t\t<T,>(key: string, defaultValue?: T) => getUserPreference(userId, key, defaultValue) as T,\n\t\t\t),\n\t\t\tquerySubscription: createReactiveSubscriptionFactory<ISubscription | undefined>((query, fields, sort) =>\n\t\t\t\tSubscriptions.findOne(query, { fields, sort }),\n\t\t\t),\n\t\t\tqueryRoom: createReactiveSubscriptionFactory<IRoom | undefined>((query, fields) => ChatRoom.findOne(query, { fields })),\n\t\t\tquerySubscriptions: createReactiveSubscriptionFactory<SubscriptionWithRoom[]>((query, options) => {\n\t\t\t\tif (userId) {\n\t\t\t\t\treturn Subscriptions.find(query, options).fetch();\n\t\t\t\t}\n\n\t\t\t\treturn ChatRoom.find(query, options).fetch();\n\t\t\t}),\n\t\t\tloginWithToken: (token: string): Promise<void> =>\n\t\t\t\tnew Promise((resolve, reject) =>\n\t\t\t\t\tMeteor.loginWithToken(token, (err) => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\tloginWithPassword: (user: string | { username: string } | { email: string } | { id: string }, password: string): Promise<void> =>\n\t\t\t\tnew Promise((resolve, reject) => {\n\t\t\t\t\tMeteor[loginMethod](user, password, (error: Error | Meteor.Error | Meteor.TypedError | undefined) => {\n\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t});\n\t\t\t\t}),\n\t\t\tlogout,\n\t\t\tloginWithService: <T extends LoginService>({ service, clientConfig = {} }: T): (() => Promise<true>) => {\n\t\t\t\tconst loginMethods = {\n\t\t\t\t\t'meteor-developer': 'MeteorDeveloperAccount',\n\t\t\t\t};\n\n\t\t\t\tconst loginWithService = `loginWith${(loginMethods as any)[service] || capitalize(String(service || ''))}`;\n\n\t\t\t\tconst method: (config: unknown, cb: (error: any) => void) => Promise<true> = (Meteor as any)[loginWithService] as any;\n\n\t\t\t\tif (!method) {\n\t\t\t\t\treturn () => Promise.reject(new Error('Login method not found'));\n\t\t\t\t}\n\n\t\t\t\treturn () =>\n\t\t\t\t\tnew Promise((resolve, reject) => {\n\t\t\t\t\t\tmethod(clientConfig, (error: any): void => {\n\t\t\t\t\t\t\tif (!error) {\n\t\t\t\t\t\t\t\tresolve(true);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t},\n\t\t\tqueryAllServices: createReactiveSubscriptionFactory(() =>\n\t\t\t\tServiceConfiguration.configurations\n\t\t\t\t\t.find(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tshowButton: { $ne: false },\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\t\tservice: 1,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t)\n\t\t\t\t\t.fetch()\n\t\t\t\t\t.map(\n\t\t\t\t\t\t({ appId: _, ...service }) =>\n\t\t\t\t\t\t\t({\n\t\t\t\t\t\t\t\ttitle: capitalize(String((service as any).service || '')),\n\t\t\t\t\t\t\t\t...service,\n\t\t\t\t\t\t\t\t...(config[(service as any).service] ?? {}),\n\t\t\t\t\t\t\t} as any),\n\t\t\t\t\t),\n\t\t\t),\n\t\t}),\n\t\t[userId, user, loginMethod],\n\t);\n\n\tuseEffect(() => {\n\t\tif (!!userId && preferedLanguage !== userLanguage) {\n\t\t\tsetUserPreferences({ data: { language: preferedLanguage } });\n\t\t\tsetUserLanguage(preferedLanguage);\n\t\t}\n\n\t\tif (user?.language !== undefined && user.language !== userLanguage) {\n\t\t\tsetUserLanguage(user.language);\n\t\t\tsetPreferedLanguage(user.language);\n\t\t}\n\t}, [preferedLanguage, setPreferedLanguage, setUserLanguage, user?.language, userLanguage, userId, setUserPreferences]);\n\n\treturn <UserContext.Provider children={children} value={contextValue} />;\n};\n\nexport default UserProvider;\n",null],"names":["_objectSpread","_objectWithoutProperties","_slicedToArray","_regeneratorRuntime","useLocalStorage","UserContext","useEndpoint","useSetting","Meteor","React","useEffect","useMemo","Subscriptions","ChatRoom","getUserPreference","sdk","afterLogoutCleanUpCallback","useReactiveValue","createReactiveSubscriptionFactory","useCreateFontStyleElement","useEmailVerificationWarning","useLDAPAndCrowdCollisionWarning","module","link","default","v","getUserId","userId","getUser","user","capitalize","str","charAt","toUpperCase","slice","config","title","icon","logout","Promise","resolve","reject","async","_context","prev","next","awrap","run","call","then","stop","exportDefault","_ref","_user$settings","_user$settings$prefer","children","isLdapEnabled","isCrowdEnabled","_useLocalStorage2","userLanguage","setUserLanguage","_useLocalStorage4","preferedLanguage","setPreferedLanguage","setUserPreferences","createFontStyleElement","settings","preferences","fontSize","loginMethod","undefined","contextValue","queryPreference","key","defaultValue","querySubscription","query","fields","sort","findOne","queryRoom","querySubscriptions","options","find","fetch","loginWithToken","token","err","loginWithPassword","password","error","loginWithService","_ref2","service","_ref2$clientConfig","clientConfig","method","loginMethods","String","Error","queryAllServices","ServiceConfiguration","configurations","showButton","$ne","map","_ref3","appId","_config$service$servi","_excluded","data","language","createElement","Provider","value"],"mappings":"2BACAA,EAA8DC,EAAAC,EAAAC,EAA9DC,EAA8DC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,cAArDC,EAAeC,IAAE,CAAA,uCAAoC,CAAAC,QAAAA,SAAAA,CAAAA,EAAAxB,EAAAA,CAAA,CAAA,EAAA,GAAAsB,EAAAA,IAAAA,CAAAA,iDAAAA,CAAAE,QAAAA,SAAAA,CAAAA,EAAAvB,EAAAA,CAAA,CAAA,EAAA,GAAAqB,EAAAA,IAAAA,CAAAA,uCAAAA,CAAAE,QAAAA,SAAAA,CAAAA,EAAAtB,EAAAA,CAAA,CAAA,EAAA,GAAAoB,EAAAA,IAAAA,CAAAA,6BAAAA,CAAAE,QAAAA,SAAAA,CAAAA,EAAArB,EAAAA,CAAA,CAAA,EAAA,GAArDmB,EAAiBC,IAAA,CAAM,8BAA8B,CAAAnB,gBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAkB,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAjB,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,WAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAe,EAAAA,IAAAA,CAAAA,gBAAAA,CAAAd,OAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAc,EAAAA,IAAAA,CAAAA,QAAAA,CAAA,QAAA,SAAAG,CAAA,EAAAhB,EAAAA,CAAA,EAAAC,UAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,QAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAW,EAAAA,IAAAA,CAAAA,6BAAAA,CAAAV,cAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,SAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAS,EAAAA,IAAAA,CAAAA,4BAAAA,CAAAR,kBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAQ,EAAAA,IAAAA,CAAAA,0CAAAA,CAAAP,IAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAO,EAAAA,IAAAA,CAAAA,oDAAAA,CAAAN,2BAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAM,EAAAA,IAAAA,CAAAA,+BAAAA,CAAAL,iBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,8CAAAA,CAAAJ,kCAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,oEAAAA,CAAAH,0BAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,IAAAG,EAAAA,IAAAA,CAAAA,sCAAAA,CAAAF,4BAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,IAAAE,EAAAA,IAAAA,CAAAA,0CAAAA,CAAAD,gCAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,IAiB9D,IAAMK,EAAY,WAAA,OAAqBlB,EAAOmB,MAAM,EAAE,EAEhDC,EAAU,WAAA,OAAoBpB,EAAOqB,IAAI,EAAkB,EAE3DC,EAAa,SAACC,CAAW,EAAA,OAAaA,EAAIC,MAAM,CAAC,GAAGC,WAAW,GAAKF,EAAIG,KAAK,CAAC,EAAE,EAEhFC,EAAgD,CACrD,MAAS,CAAEC,MAAO,QAASC,KAAM,OAAO,EACxC,SAAY,CAAED,MAAO,WAAYC,KAAM,UAAU,EACjD,QAAW,CAAED,MAAO,UAAWC,KAAM,SAAS,EAC9C,OAAU,CAAED,MAAO,SAAUC,KAAM,QAAQ,EAC3C,OAAU,CAAED,MAAO,SAAUC,KAAM,QAAQ,EAC3C,kBAAqB,CAAED,MAAO,oBAAqBC,KAAM,QAAQ,EACjE,OAAU,CAAED,MAAO,SAAUC,KAAM,QAAQ,EAC3C,QAAW,CAAED,MAAO,UAAWC,KAAM,QAAQ,EAC7C,OAAU,CAAED,MAAO,SAAUC,KAAM,QAAQ,EAC3C,UAAa,CAAED,MAAO,YAAaC,KAAM,WAAW,EACpD,UAAa,CAAED,MAAO,YAAaC,KAAM,WAAW,EACpD,mBAAoB,CAAED,MAAO,SAAUC,KAAM,QAAQ,EACrD,UAAa,CAAED,MAAO,YAAaC,KAAM,WAAW,EACpD,SAAY,CAAED,MAAO,WAAYC,KAAM,UAAU,GAG5CC,EAAS,WAAA,OACd,IAAIC,QAAQ,SAACC,CAAO,CAAEC,CAAM,EAC3B,IAAMZ,EAAOD,IAEb,GAAI,CAACC,EACJ,OAAOW,IAGRhC,EAAO8B,MAAM,CAAC,WAAA,OAAAnC,EAAAuC,KAAA,CAAA,SAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAC,IAAA,CAAAD,EAAAE,IAAA,EAAA,KAAA,EAAA,OAAAF,EAAAE,IAAA,CAAA,EAAA1C,EAAA2C,KAAA,CACP9B,EAA2B+B,GAAG,CAAClB,GAAK,MAAA,EAC1Cd,EAAIiC,IAAI,CAAC,gBAAiBnB,GAAMoB,IAAI,CAACT,EAASC,EAAQ,MAAA,EAAA,IAAA,MAAA,OAAAE,EAAAO,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,KAAAX,QAAA,EAExD,EAAE,EApDHjB,EAAO6B,aAAE,CA4DY,SAAAC,CAAA,EAAkD,IAAAC,EAAAC,EAA/CC,EAAQH,EAARG,QAAQ,CACzBC,EAAgBjD,EAAoB,eACpCkD,EAAiBlD,EAAoB,gBAErCoB,EAASV,EAAiBS,GAC1BG,EAAOZ,EAAiBW,GAC6C8B,EAAAxD,EAAnCE,EAAgB,eAAgB,IAAG,GAApEuD,EAAYD,CAAA,CAAA,EAAA,CAAEE,EAAeF,CAAA,CAAA,EAAA,CACmDG,EAAA3D,EAAvCE,EAAgB,mBAAoB,IAAG,GAAhF0D,EAAgBD,CAAA,CAAA,EAAA,CAAEE,EAAmBF,CAAA,CAAA,EAAA,CAEtCG,EAAqB1D,EAAY,OAAQ,4BAG/C2D,AAD+B9C,IACRU,MAAAA,EAAI,KAAA,EAAA,AAAU,OAAVwB,CAAAA,EAAJxB,EAAMqC,QAAQ,AAARA,GAAQb,AAAA,KAAA,IAAAA,EAAA,KAAA,EAAA,AAAa,OAAbC,CAAAA,EAAdD,EAAgBc,WAAW,AAAXA,GAAWb,AAAA,KAAA,IAAAA,EAAA,KAAA,EAA3BA,EAA6Bc,QAAQ,EAE5D,IAAMC,EAA6Bb,GAAiB,iBAAqBC,GAAkB,kBAAqB,oBAEhHpC,IACAD,EAA4BS,MAAAA,EAAAA,EAAQyC,KAAAA,GAEpC,IAAMC,EAAe5D,EACpB,WAAA,MAAwC,CACvCgB,OAAAA,EACAE,KAAAA,EACA2C,gBAAiBtD,EAChB,SAAKuD,CAAW,CAAEC,CAAgB,EAAA,OAAK5D,EAAkBa,EAAQ8C,EAAKC,EAAkB,GAEzFC,kBAAmBzD,EAA6D,SAAC0D,CAAK,CAAEC,CAAM,CAAEC,CAAI,EAAA,OACnGlE,EAAcmE,OAAO,CAACH,EAAO,CAAEC,OAAAA,EAAQC,KAAAA,CAAI,EAAG,GAE/CE,UAAW9D,EAAqD,SAAC0D,CAAK,CAAEC,CAAM,EAAA,OAAKhE,EAASkE,OAAO,CAACH,EAAO,CAAEC,OAAAA,CAAM,EAAG,GACtHI,mBAAoB/D,EAA0D,SAAC0D,CAAK,CAAEM,CAAO,SAC5F,AAAIvD,EACIf,EAAcuE,IAAI,CAACP,EAAOM,GAASE,KAAK,GAGzCvE,EAASsE,IAAI,CAACP,EAAOM,GAASE,KAAK,EAC3C,GACAC,eAAgB,SAACC,CAAa,EAAA,OAC7B,IAAI/C,QAAQ,SAACC,CAAO,CAAEC,CAAM,EAAA,OAC3BjC,EAAO6E,cAAc,CAACC,EAAO,SAACC,CAAG,EAChC,GAAIA,EACH,OAAO9C,EAAO8C,GAEf/C,EAAQ8B,KAAAA,EACT,EAAE,EACF,EACFkB,kBAAmB,SAAC3D,CAAwE,CAAE4D,CAAgB,EAAA,OAC7G,IAAIlD,QAAQ,SAACC,CAAO,CAAEC,CAAM,EAC3BjC,CAAM,CAAC6D,EAAY,CAACxC,EAAM4D,EAAU,SAACC,CAA2D,EAC/F,GAAIA,EAAO,CACVjD,EAAOiD,GACP,OAGDlD,GACD,EACD,EAAE,EACHF,OAAAA,EACAqD,iBAAkB,SAAAC,CAAA,EAAqF,IAA1DC,EAAOD,EAAPC,OAAO,CAAAC,EAAAF,EAAEG,YAAY,CAAZA,EAAYD,AAAA,KAAA,IAAAA,EAAG,CAAA,EAAEA,EAOhEE,EAAwExF,CAAc,CAFtE,YAAgByF,CAAAA,AAJjB,CAAA,CACpB,mBAAoB,0BAGqC,CAACJ,EAAQ,EAAI/D,EAAWoE,OAAOL,GAAW,IAAG,EAEc,QAErH,AAAKG,EAIE,WAAA,OACN,IAAIzD,QAAQ,SAACC,CAAO,CAAEC,CAAM,EAC3BuD,EAAOD,EAAc,SAACL,CAAU,EAC/B,GAAI,CAACA,EAAO,CACXlD,EAAQ,CAAA,GACR,OAEDC,EAAOiD,EACR,EACD,EAAE,EAZK,WAAA,OAAMnD,QAAQE,MAAM,CAAC,AAAI0D,MAAM,0BAA0B,CAalE,EACAC,iBAAkBlF,EAAkC,WAAA,OACnDmF,qBAAqBC,cAAc,CACjCnB,IAAI,CACJ,CACCoB,WAAY,CAAEC,IAAK,CAAA,CAAK,GAEzB,CACC1B,KAAM,CACLe,QAAS,KAIXT,KAAK,GACLqB,GAAG,CACH,SAAAC,CAAA,EAAWA,EAARC,KAAK,CAAR,IAAAC,EAAgBf,EAAO5F,EAAAyG,EAAAG,GAAA,OAAA7G,EAAAA,EAAA,CAErBoC,MAAON,EAAWoE,OAAQL,EAAgBA,OAAO,EAAI,IAAI,EACtDA,GAAO,AAC0B,OAD1Be,CAAAA,EACNzE,CAAM,CAAE0D,EAAgBA,OAAO,CAAC,AAAD,GAACe,AAAA,KAAA,IAAAA,EAAAA,EAAI,CAAA,EAAE,EAE5C,GAEH,EACD,CAACjF,EAAQE,EAAMwC,EAAY,EAe5B,OAZA3D,EAAU,WACHiB,GAAUmC,IAAqBH,IACpCK,EAAmB,CAAE8C,KAAM,CAAEC,SAAUjD,CAAgB,CAAE,GACzDF,EAAgBE,IAGbjC,CAAAA,MAAAA,EAAI,KAAA,EAAJA,EAAMkF,QAAQ,AAARA,IAAazC,KAAAA,GAAazC,EAAKkF,QAAQ,GAAKpD,IACrDC,EAAgB/B,EAAKkF,QAAQ,EAC7BhD,EAAoBlC,EAAKkF,QAAQ,EAEnC,EAAG,CAACjD,EAAkBC,EAAqBH,EAAiB/B,MAAAA,EAAI,KAAA,EAAJA,EAAMkF,QAAQ,CAAEpD,EAAchC,EAAQqC,EAAmB,EAE9GvD,EAAAuG,aAAA,CAAC3G,EAAY4G,QAAQ,CAAA,CAAC1D,SAAUA,EAAU2D,MAAO3C,CAAa,EACtE"}