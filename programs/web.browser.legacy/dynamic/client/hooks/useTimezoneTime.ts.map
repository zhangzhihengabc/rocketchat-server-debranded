)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/hooks/useTimezoneTime.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import moment from 'moment';\nimport { useState, useEffect } from 'react';\n\nimport { useFormatTime } from './useFormatTime';\n\nexport const useTimezoneTime = (offset: number, interval = 1000): string => {\n\tconst [time, setTime] = useState<moment.Moment>(() => moment().utcOffset(offset));\n\n\tconst format = useFormatTime();\n\n\tuseEffect(() => {\n\t\tif (offset === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst update = (): void => {\n\t\t\tsetTime(moment().utcOffset(offset));\n\t\t};\n\n\t\tconst timer = setInterval(update, interval);\n\t\tupdate();\n\n\t\treturn (): void => {\n\t\t\tclearInterval(timer);\n\t\t};\n\t}, [offset, interval]);\n\n\treturn format(time);\n};\n",null],"names":["module","default","_slicedToArray","export","useTimezoneTime","v","moment","useState","useEffect","useFormatTime","offset","interval","arguments","length","undefined","_useState2","utcOffset","time","setTime","format","update","timer","setInterval","clearInterval"],"mappings":"uBAAmBA,EAAAA,IAAS,CAAA,uCAAA,CAAAC,QAAAA,SAAAA,CAAAA,EAAAC,EAAAA,CAAA,CAAA,EAAA,GAA5BF,EAAOG,MAAM,CAAA,CAAAC,gBAAe,WAAA,OAAAA,CAAA,CAAA,GAAAJ,EAAAA,IAAAA,CAAAA,SAAAA,CAAA,QAAA,SAAAK,CAAA,EAAAC,EAAAA,CAAA,CAAA,EAAA,GAAAN,EAAAA,IAAAA,CAAAA,QAAAA,CAAAO,SAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,UAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAR,EAAAA,IAAAA,CAAAA,kBAAAA,CAAAS,cAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAKrB,IALPP,EAA4BI,EAAAC,EAAAC,EAAAC,EAKfL,EAAkB,SAACM,CAAc,EAA6B,IAA3BC,EAAQC,UAAAC,MAAA,CAAA,GAAAD,AAAAE,KAAAA,IAAAF,SAAA,CAAA,EAAA,CAAAA,SAAA,CAAA,EAAA,CAAG,IACuBG,EAAAb,EAAzDK,EAAwB,WAAA,OAAMD,IAASU,SAAS,CAACN,EAAO,GAAC,GAA1EO,EAAIF,CAAA,CAAA,EAAA,CAAEG,EAAOH,CAAA,CAAA,EAAA,CAEdI,EAASV,IAmBf,OAjBAD,EAAU,WACT,GAAIE,AAAWI,KAAAA,IAAXJ,GAIJ,IAAMU,EAAS,WACdF,EAAQZ,IAASU,SAAS,CAACN,GAC5B,EAEMW,EAAQC,YAAYF,EAAQT,GAGlC,OAFAS,IAEO,WACNG,cAAcF,EACf,EACD,EAAG,CAACX,EAAQC,EAAS,EAEdQ,EAAOF,EACf"}