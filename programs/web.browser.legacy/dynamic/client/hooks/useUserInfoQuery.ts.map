)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/hooks/useUserInfoQuery.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { UsersInfoParamsGet } from '@rocket.chat/rest-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\n// a hook using tanstack useQuery and useEndpoint that fetches user information from the `users.info` endpoint\n\nexport const useUserInfoQuery = (params: UsersInfoParamsGet) => {\n\tconst getUserInfo = useEndpoint('GET', '/v1/users.info');\n\tconst result = useQuery(['users.info', params], () => getUserInfo({ ...params }), {\n\t\tkeepPreviousData: true,\n\t});\n\n\treturn result;\n};\n",null],"names":["module","link","default","_objectSpread","export","useUserInfoQuery","useEndpoint","useQuery","params","getUserInfo","keepPreviousData"],"mappings":"uBACSA,EAAaC,IAAM,CAAA,uCAA2B,CAAAC,QAAAA,SAAAA,CAAAA,EAAAC,EAAAA,CAAA,CAAA,EAAA,GAAvDH,EAAOI,MAAE,CAAA,CAAAC,iBAAmB,WAAA,OAAAA,CAA2B,CAAA,GAAAL,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAM,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAN,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAO,SAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAIhD,IAJPJ,EAAuDG,EAAAC,EAI1CF,EAAmB,SAACG,CAA0B,EAC1D,IAAMC,EAAcH,EAAY,MAAO,kBAKvC,OAJeC,EAAS,CAAC,aAAcC,EAAO,CAAE,WAAA,OAAMC,EAAWN,EAAA,CAAA,EAAMK,GAAS,EAAE,CACjFE,iBAAkB,CAAA,GAIpB"}