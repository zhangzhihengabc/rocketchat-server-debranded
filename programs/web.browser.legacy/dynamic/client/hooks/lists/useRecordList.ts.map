)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/hooks/lists/useRecordList.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport type { AsyncStatePhase } from '../../lib/asyncState';\nimport type { RecordList } from '../../lib/lists/RecordList';\n\ntype RecordListValue<T> = {\n\tphase: AsyncStatePhase;\n\titems: T[];\n\titemCount: number;\n\terror: Error | undefined;\n};\n\nexport const useRecordList = <T extends { _id: string; _updatedAt?: Date }>(recordList: RecordList<T>): RecordListValue<T> => {\n\tconst [state, setState] = useState<RecordListValue<T>>(() => ({\n\t\tphase: recordList.phase,\n\t\titems: recordList.items,\n\t\titemCount: recordList.itemCount,\n\t\terror: undefined,\n\t}));\n\n\tuseEffect(() => {\n\t\tconst disconnectMutatingEvent = recordList.on('mutating', () => {\n\t\t\tsetState(() => ({\n\t\t\t\tphase: recordList.phase,\n\t\t\t\titems: recordList.items,\n\t\t\t\titemCount: recordList.itemCount,\n\t\t\t\terror: undefined,\n\t\t\t}));\n\t\t});\n\n\t\tconst disconnectMutatedEvent = recordList.on('mutated', () => {\n\t\t\tsetState((prevState) => ({\n\t\t\t\tphase: recordList.phase,\n\t\t\t\titems: recordList.items,\n\t\t\t\titemCount: recordList.itemCount,\n\t\t\t\terror: prevState.error,\n\t\t\t}));\n\t\t});\n\n\t\tconst disconnectClearedEvent = recordList.on('cleared', () => {\n\t\t\tsetState(() => ({\n\t\t\t\tphase: recordList.phase,\n\t\t\t\titems: recordList.items,\n\t\t\t\titemCount: recordList.itemCount,\n\t\t\t\terror: undefined,\n\t\t\t}));\n\t\t});\n\n\t\tconst disconnectErroredEvent = recordList.on('errored', (error) => {\n\t\t\tsetState((state) => ({ ...state, error }));\n\t\t});\n\n\t\treturn (): void => {\n\t\t\tdisconnectMutatingEvent();\n\t\t\tdisconnectMutatedEvent();\n\t\t\tdisconnectClearedEvent();\n\t\t\tdisconnectErroredEvent();\n\t\t};\n\t}, [recordList]);\n\n\treturn state;\n};\n",null],"names":["module","link","default","_objectSpread","_slicedToArray","export","useRecordList","useEffect","useState","recordList","_useState2","phase","items","itemCount","error","undefined","state","setState","disconnectMutatingEvent","on","disconnectMutatedEvent","prevState","disconnectClearedEvent","disconnectErroredEvent"],"mappings":"uBAAkBA,EAAEC,IAAQ,CAAE,uCAAc,CAAAC,QAAAA,SAAAA,CAAAA,EAAAC,EAAAA,CAAA,CAAA,EAAA,GAAAH,EAAAA,IAAAA,CAAAA,uCAAAA,CAAAE,QAAAA,SAAAA,CAAAA,EAAAE,EAAAA,CAAA,CAAA,EAAA,GAA5CJ,EAAOK,MAAE,CAAA,CAAAC,cAAmB,WAAQ,OAAQA,CAAA,CAAA,GAAAN,EAAAA,IAAAA,CAAAA,QAAAA,CAAAO,UAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,SAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAYrC,IAZPL,EAA4CC,EAAAG,EAAAC,EAY/BF,EAAgB,SAA+CG,CAAyB,EACpG,IAKGC,EAAAN,EALuBI,EAA6B,WAAA,MAAO,CAC7DG,MAAOF,EAAWE,KAAK,CACvBC,MAAOH,EAAWG,KAAK,CACvBC,UAAWJ,EAAWI,SAAS,CAC/BC,MAAOC,KAAAA,EACP,GAAE,GALIC,EAAKN,CAAA,CAAA,EAAA,CAAEO,EAAQP,CAAA,CAAA,EAAA,CA+CtB,OAxCAH,EAAU,WACT,IAAMW,EAA0BT,EAAWU,EAAE,CAAC,WAAY,WACzDF,EAAS,WAAA,MAAO,CACfN,MAAOF,EAAWE,KAAK,CACvBC,MAAOH,EAAWG,KAAK,CACvBC,UAAWJ,EAAWI,SAAS,CAC/BC,MAAOC,KAAAA,EACP,EACF,GAEMK,EAAyBX,EAAWU,EAAE,CAAC,UAAW,WACvDF,EAAS,SAACI,CAAS,EAAA,MAAM,CACxBV,MAAOF,EAAWE,KAAK,CACvBC,MAAOH,EAAWG,KAAK,CACvBC,UAAWJ,EAAWI,SAAS,CAC/BC,MAAOO,EAAUP,KAAAA,CACjB,EACF,GAEMQ,EAAyBb,EAAWU,EAAE,CAAC,UAAW,WACvDF,EAAS,WAAA,MAAO,CACfN,MAAOF,EAAWE,KAAK,CACvBC,MAAOH,EAAWG,KAAK,CACvBC,UAAWJ,EAAWI,SAAS,CAC/BC,MAAOC,KAAAA,EACP,EACF,GAEMQ,EAAyBd,EAAWU,EAAE,CAAC,UAAW,SAACL,CAAK,EAC7DG,EAAS,SAACD,CAAK,EAAA,OAAAb,EAAAA,EAAA,CAAA,EAAWa,GAAK,CAAA,EAAA,CAAEF,MAAAA,CAAK,EAAA,EACvC,GAEA,OAAO,WACNI,IACAE,IACAE,IACAC,GACD,CACD,EAAG,CAACd,EAAW,EAERO,CACR"}