)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/hooks/useForm.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { capitalize } from '@rocket.chat/string-helpers';\nimport type { ChangeEvent } from 'react';\nimport { useCallback, useReducer, useMemo } from 'react';\n\ntype Field = {\n\tname: string;\n\tcurrentValue: unknown;\n\tinitialValue: unknown;\n\tchanged: boolean;\n};\n\ntype FormState<Values extends Record<string, unknown>> = {\n\tfields: Field[];\n\tvalues: Values;\n\thasUnsavedChanges: boolean;\n};\n\ntype FormAction<Values extends Record<string, unknown>> = {\n\t(prevState: FormState<Values>): FormState<Values>;\n};\n\nconst reduceForm = <Values extends Record<string, unknown>>(state: FormState<Values>, action: FormAction<Values>): FormState<Values> =>\n\taction(state);\n\nconst initForm = <Values extends Record<string, unknown>>(initialValues: Values): FormState<Values> => {\n\tconst fields = [];\n\n\tfor (const [fieldName, initialValue] of Object.entries(initialValues)) {\n\t\tfields.push({\n\t\t\tname: fieldName,\n\t\t\tcurrentValue: initialValue,\n\t\t\tinitialValue,\n\t\t\tchanged: false,\n\t\t});\n\t}\n\n\treturn {\n\t\tfields,\n\t\tvalues: { ...initialValues },\n\t\thasUnsavedChanges: false,\n\t};\n};\n\nconst valueChanged =\n\t<Values extends Record<string, unknown>>(fieldName: string, newValue: unknown): FormAction<Values> =>\n\t(state: FormState<Values>): FormState<Values> => {\n\t\tlet { fields } = state;\n\t\tconst field = fields.find(({ name }) => name === fieldName);\n\n\t\tif (!field || field.currentValue === newValue) {\n\t\t\treturn state;\n\t\t}\n\n\t\tconst newField = {\n\t\t\t...field,\n\t\t\tcurrentValue: newValue,\n\t\t\tchanged: JSON.stringify(newValue) !== JSON.stringify(field.initialValue),\n\t\t};\n\n\t\tfields = state.fields.map((field) => {\n\t\t\tif (field.name === fieldName) {\n\t\t\t\treturn newField;\n\t\t\t}\n\n\t\t\treturn field;\n\t\t});\n\n\t\treturn {\n\t\t\t...state,\n\t\t\tfields,\n\t\t\tvalues: {\n\t\t\t\t...state.values,\n\t\t\t\t[newField.name]: newField.currentValue,\n\t\t\t},\n\t\t\thasUnsavedChanges: newField.changed || fields.some((field) => field.changed),\n\t\t};\n\t};\n\nconst formCommitted =\n\t<Values extends Record<string, unknown>>(): FormAction<Values> =>\n\t(state: FormState<Values>): FormState<Values> => ({\n\t\t...state,\n\t\tfields: state.fields.map((field) => ({\n\t\t\t...field,\n\t\t\tinitialValue: field.currentValue,\n\t\t\tchanged: false,\n\t\t})),\n\t\thasUnsavedChanges: false,\n\t});\n\nconst formReset =\n\t<Values extends Record<string, unknown>>(): FormAction<Values> =>\n\t(state: FormState<Values>): FormState<Values> => ({\n\t\t...state,\n\t\tfields: state.fields.map((field) => ({\n\t\t\t...field,\n\t\t\tcurrentValue: field.initialValue,\n\t\t\tchanged: false,\n\t\t})),\n\t\tvalues: state.fields.reduce(\n\t\t\t(values, field) => ({\n\t\t\t\t...values,\n\t\t\t\t[field.name]: field.initialValue,\n\t\t\t}),\n\t\t\t{} as Values,\n\t\t),\n\t\thasUnsavedChanges: false,\n\t});\n\nconst isChangeEvent = (x: any): x is ChangeEvent =>\n\t(typeof x === 'object' || typeof x === 'function') && typeof x?.currentTarget !== 'undefined';\n\nconst getValue = (eventOrValue: ChangeEvent | unknown): unknown => {\n\tif (!isChangeEvent(eventOrValue)) {\n\t\treturn eventOrValue;\n\t}\n\n\tconst target = eventOrValue.currentTarget;\n\n\tif (target instanceof HTMLTextAreaElement) {\n\t\treturn target.value;\n\t}\n\n\tif (target instanceof HTMLSelectElement) {\n\t\treturn target.value;\n\t}\n\n\tif (!(target instanceof HTMLInputElement)) {\n\t\treturn undefined;\n\t}\n\n\tif (target.type === 'checkbox' || target.type === 'radio') {\n\t\treturn target.checked;\n\t}\n\n\treturn target.value;\n};\n\n/**\n * @deprecated prefer react-hook-form's `useForm`\n */\nexport const useForm = <\n\tReducer extends (\n\t\tstate: FormState<Record<string, unknown>>,\n\t\taction: FormAction<Record<string, unknown>>,\n\t) => FormState<Record<string, unknown>>,\n>(\n\tinitialValues: Parameters<Reducer>[0]['values'],\n\tonChange: (...args: unknown[]) => void = (): void => undefined,\n): {\n\tvalues: Parameters<Reducer>[0]['values'];\n\thandlers: Record<string, (eventOrValue: ChangeEvent | unknown) => void>;\n\thasUnsavedChanges: boolean;\n\tcommit: () => void;\n\treset: () => void;\n} => {\n\tconst [state, dispatch] = useReducer(reduceForm, initialValues, initForm);\n\n\tconst commit = useCallback(() => {\n\t\tdispatch(formCommitted());\n\t}, []);\n\n\tconst reset = useCallback(() => {\n\t\tdispatch(formReset());\n\t}, []);\n\n\tconst handlers = useMemo<Record<string, (eventOrValue: ChangeEvent | unknown) => void>>(\n\t\t() =>\n\t\t\tstate.fields.reduce(\n\t\t\t\t(handlers, { name, initialValue }) => ({\n\t\t\t\t\t...handlers,\n\t\t\t\t\t[`handle${capitalize(name)}`]: (eventOrValue: ChangeEvent | unknown): void => {\n\t\t\t\t\t\tconst newValue = getValue(eventOrValue);\n\t\t\t\t\t\tdispatch(valueChanged(name, newValue));\n\t\t\t\t\t\tonChange({\n\t\t\t\t\t\t\tinitialValue,\n\t\t\t\t\t\t\tvalue: newValue,\n\t\t\t\t\t\t\tkey: name,\n\t\t\t\t\t\t\tvalues: state.values,\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t\t{},\n\t\t\t),\n\t\t[onChange, state.fields, state.values],\n\t);\n\n\treturn {\n\t\thandlers,\n\t\tvalues: state.values,\n\t\thasUnsavedChanges: state.hasUnsavedChanges,\n\t\tcommit,\n\t\treset,\n\t};\n};\n",null],"names":["module","link","default","_typeof","_objectSpread","_slicedToArray","export","useForm","capitalize","useCallback","useReducer","useMemo","reduceForm","state","action","initForm","initialValues","fields","_i","_Object$entries","Object","entries","length","_ref2","fieldName","initialValue","push","name","currentValue","changed","values","hasUnsavedChanges","getValue","eventOrValue","x","currentTarget","target","HTMLTextAreaElement","HTMLSelectElement","value","HTMLInputElement","type","checked","onChange","_useReducer2","dispatch","commit","map","field","reset","reduce","_objectSpread3","handlers","_ref4","_objectSpread4","newValue","_objectSpread2","find","_ref3","newField","JSON","stringify","some","key"],"mappings":"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"}