)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/hooks/useRoomInfoEndpoint.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport type { OperationResult } from '@rocket.chat/rest-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport type { UseQueryResult } from '@tanstack/react-query';\nimport { useQuery } from '@tanstack/react-query';\nimport { minutesToMilliseconds } from 'date-fns';\nimport type { Meteor } from 'meteor/meteor';\n\nexport const useRoomInfoEndpoint = (rid: IRoom['_id']): UseQueryResult<OperationResult<'GET', '/v1/rooms.info'>> => {\n\tconst getRoomInfo = useEndpoint('GET', '/v1/rooms.info');\n\treturn useQuery(['rooms/info', rid], () => getRoomInfo({ roomId: rid }), {\n\t\tcacheTime: minutesToMilliseconds(15),\n\t\tstaleTime: minutesToMilliseconds(5),\n\t\tretry: (count, error: Meteor.Error) => {\n\t\t\tif (count > 2 || error.error === 'not-allowed') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t});\n};\n",null],"names":["module","export","useRoomInfoEndpoint","useEndpoint","useQuery","minutesToMilliseconds","rid","getRoomInfo","roomId","cacheTime","staleTime","retry","count","error"],"mappings":"uBAEAA,EAAOC,MAAE,CAAA,CAAAC,oBAAmB,WAAA,OAAAA,CAA2B,CAAA,GAAAF,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAG,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAH,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAI,SAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAJ,EAAAA,IAAAA,CAAAA,WAAAA,CAAAK,sBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAMhD,IANgDF,EAAAC,EAAAC,EAM1CH,EAAsB,SAACI,CAAiB,EACpD,IAAMC,EAAcJ,EAAY,MAAO,kBACvC,OAAOC,EAAS,CAAC,aAAcE,EAAI,CAAE,WAAA,OAAMC,EAAY,CAAEC,OAAQF,CAAG,EAAG,EAAE,CACxEG,UAAWJ,EAAsB,IACjCK,UAAWL,EAAsB,GACjCM,MAAO,SAACC,CAAK,CAAEC,CAAmB,QAC7BD,CAAAA,CAAAA,EAAQ,CAAA,GAAKC,AAAgB,gBAAhBA,EAAMA,KAAK,AAI7B,GAEF"}