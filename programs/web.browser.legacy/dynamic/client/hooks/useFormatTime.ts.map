)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/hooks/useFormatTime.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useUserPreference, useSetting } from '@rocket.chat/ui-contexts';\nimport moment from 'moment';\nimport { useCallback } from 'react';\n\nconst dayFormat = ['h:mm A', 'H:mm'] as const;\n\nexport const useFormatTime = (): ((input: moment.MomentInput) => string) => {\n\tconst clockMode = useUserPreference<1 | 2>('clockMode');\n\tconst format = useSetting('Message_TimeFormat') as string;\n\tconst sameDay = clockMode !== undefined ? dayFormat[clockMode - 1] : format;\n\n\treturn useCallback(\n\t\t(time) => {\n\t\t\tswitch (clockMode) {\n\t\t\t\tcase 1:\n\t\t\t\tcase 2:\n\t\t\t\t\treturn moment(time).format(sameDay);\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn moment(time).format(format);\n\t\t\t}\n\t\t},\n\t\t[clockMode, format, sameDay],\n\t);\n};\n",null],"names":["module","export","useFormatTime","useUserPreference","useSetting","v","moment","useCallback","dayFormat","clockMode","format","sameDay","undefined","time"],"mappings":"uBAAAA,EAAOC,MAAE,CAAA,CAAAC,cAAmB,WAAY,OAAMA,CAAA,CAAA,GAA2BF,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAG,kBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,WAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAJ,EAAAA,IAAAA,CAAAA,SAAAA,CAAA,QAAA,SAAAK,CAAA,EAAAC,EAAAA,CAAA,CAAA,EAAA,GAAAN,EAAAA,IAAAA,CAAAA,QAAAA,CAAAO,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAIzE,IAJ8CJ,EAA2BC,EAAAE,EAAAC,EAInEC,EAAY,CAAC,SAAU,OAAgB,CAEhCN,EAAgB,WAC5B,IAAMO,EAAYN,EAAyB,aACrCO,EAASN,EAAW,sBACpBO,EAAUF,AAAcG,KAAAA,IAAdH,EAA0BD,CAAS,CAACC,EAAY,EAAE,CAAGC,EAErE,OAAOH,EACN,SAACM,CAAI,EACJ,OAAQJ,GACP,KAAK,EACL,KAAK,EACJ,OAAOH,EAAOO,GAAMH,MAAM,CAACC,EAE5B,SACC,OAAOL,EAAOO,GAAMH,MAAM,CAACA,EAAQ,CAEtC,EACA,CAACD,EAAWC,EAAQC,EAAQ,CAE9B"}