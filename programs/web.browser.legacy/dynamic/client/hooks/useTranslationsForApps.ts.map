)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/hooks/useTranslationsForApps.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { normalizeLanguage } from '@rocket.chat/tools';\nimport { useEndpoint, useSingleStream, useUserId } from '@rocket.chat/ui-contexts';\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\nimport { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { withDebouncing } from '../../lib/utils/highOrderFunctions';\n\nexport const useTranslationsForApps = () => {\n\tconst getAppsLanguages = useEndpoint('GET', '/apps/languages');\n\n\tconst { isSuccess, data } = useQuery({\n\t\tqueryKey: ['apps', 'translations'] as const,\n\t\tqueryFn: () => getAppsLanguages(),\n\t\tstaleTime: Infinity,\n\t});\n\n\tconst { i18n } = useTranslation();\n\n\tuseEffect(() => {\n\t\tif (!isSuccess) {\n\t\t\treturn;\n\t\t}\n\n\t\tdata.apps.forEach(({ id: appId, languages }) => {\n\t\t\tObject.entries(languages).forEach(([language, translations]) => {\n\t\t\t\tconst normalizedLanguage = normalizeLanguage(language);\n\t\t\t\tconst namespace = `app-${appId}`;\n\t\t\t\ti18n.addResourceBundle(normalizedLanguage, namespace, translations);\n\t\t\t});\n\t\t});\n\t}, [i18n, data, isSuccess]);\n\n\tconst queryClient = useQueryClient();\n\tconst subscribeToApps = useSingleStream('apps');\n\tconst uid = useUserId();\n\n\tuseEffect(() => {\n\t\tif (!uid) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst invalidate = withDebouncing({ wait: 100 })(() => {\n\t\t\tqueryClient.invalidateQueries(['apps', 'translations']);\n\t\t});\n\n\t\tconst unsubscribe = subscribeToApps('apps', ([key]) => {\n\t\t\tif (key === 'app/added') {\n\t\t\t\tinvalidate();\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tunsubscribe();\n\t\t\tinvalidate.cancel();\n\t\t};\n\t}, [uid, subscribeToApps, queryClient]);\n};\n",null],"names":["module","link","default","_slicedToArray","export","useTranslationsForApps","normalizeLanguage","useEndpoint","useSingleStream","useUserId","useQuery","useQueryClient","useEffect","useTranslation","withDebouncing","getAppsLanguages","_useQuery","queryKey","queryFn","staleTime","Infinity","isSuccess","data","i18n","_useTranslation","apps","forEach","_ref","appId","id","Object","entries","languages","_ref2","_ref3","language","translations","normalizedLanguage","addResourceBundle","queryClient","subscribeToApps","uid","invalidate","wait","invalidateQueries","unsubscribe","_ref4","_ref5","cancel"],"mappings":"uBAASA,EAAiBC,IAAE,CAAA,uCAA2B,CAAAC,QAAAA,SAAAA,CAAAA,EAAAC,EAAAA,CAAA,CAAA,EAAA,GAAvDH,EAAOI,MAAE,CAAA,CAAAC,uBAAyB,WAAA,OAAqBA,CAAA,CAAA,GAAAL,EAAAA,IAAAA,CAAAA,qBAAAA,CAAAM,kBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAN,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAO,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,gBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,UAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAT,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAU,SAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAX,EAAAA,IAAAA,CAAAA,QAAAA,CAAAY,UAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAZ,EAAAA,IAAAA,CAAAA,gBAAAA,CAAAa,eAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAb,EAAAA,IAAAA,CAAAA,qCAAAA,CAAAc,eAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAQhD,IARPX,EAAuDG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAQ1CT,EAAyB,WACrC,IAAMU,EAAmBR,EAAY,MAAO,mBAE5CS,EAA4BN,EAAS,CACpCO,SAAU,CAAC,OAAQ,eAAwB,CAC3CC,QAAS,WAAA,OAAMH,GAAkB,EACjCI,UAAWC,MAHJC,EAASL,EAATK,SAAS,CAAEC,EAAIN,EAAJM,IAAI,CAMfC,EAAIC,AAAKX,IAATU,IAAI,CAEZX,EAAU,WACJS,GAILC,EAAKG,IAAI,CAACC,OAAO,CAAC,SAAAC,CAAA,EAA6B,IAAtBC,EAAKD,EAATE,EAAE,CACtBC,OAAOC,OAAO,CAD0BJ,EAATK,SAAS,EACdN,OAAO,CAAC,SAAAO,CAAA,EAA6B,IAAAC,EAAA/B,EAAA8B,EAAA,GAA3BE,EAAQD,CAAA,CAAA,EAAA,CAAEE,EAAYF,CAAA,CAAA,EAAA,CACnDG,EAAqB/B,EAAkB6B,GAE7CZ,EAAKe,iBAAiB,CAACD,EADR,OAAUT,EAC6BQ,EACvD,EACD,EACD,EAAG,CAACb,EAAMD,EAAMD,EAAU,EAE1B,IAAMkB,EAAc5B,IACd6B,EAAkBhC,EAAgB,QAClCiC,EAAMhC,IAEZG,EAAU,WACT,GAAK6B,GAIL,IAAMC,EAAa5B,EAAe,CAAE6B,KAAM,GAAG,GAAI,WAChDJ,EAAYK,iBAAiB,CAAC,CAAC,OAAQ,eAAe,CACvD,GAEMC,EAAcL,EAAgB,OAAQ,SAAAM,CAAA,EAC/B,cADoCC,AAAK5C,EAAA2C,EAAA,EAAL,CAAA,EAAA,EAE/CJ,GAEF,GAEA,OAAO,WACNG,IACAH,EAAWM,MAAM,EAClB,EACD,EAAG,CAACP,EAAKD,EAAiBD,EAAY,CACvC"}