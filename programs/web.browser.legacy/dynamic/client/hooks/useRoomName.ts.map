)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/hooks/useRoomName.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport { isDirectMessageRoom } from '@rocket.chat/core-typings';\nimport { useUserSubscription } from '@rocket.chat/ui-contexts';\n\nimport { useUserDisplayName } from './useUserDisplayName';\n\n/**\n *\n * Hook to get the name of the room\n *\n * @param room - Room object\n * @returns Room name\n * @public\n *\n */\nexport const useRoomName = (room: IRoom) => {\n\tconst subscription = useUserSubscription(room._id);\n\tconst username = useUserDisplayName({ name: subscription?.fname, username: subscription?.name });\n\n\tif (isDirectMessageRoom(room)) {\n\t\treturn username;\n\t}\n\n\treturn room.fname || room.name;\n};\n",null],"names":["module","export","useRoomName","isDirectMessageRoom","useUserSubscription","useUserDisplayName","room","subscription","_id","username","name","fname"],"mappings":"uBACAA,EAAOC,MAAE,CAAA,CAAAC,YAAAA,WAA2B,OAAAA,CAAA,CAAA,GAA4BF,EAAAA,IAAAA,CAAAA,4BAAAA,CAAAG,oBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAH,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAI,oBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAJ,EAAAA,IAAAA,CAAAA,uBAAAA,CAAAK,mBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAczD,IAdyDF,EAAAC,EAAAC,EAcnDH,EAAc,SAACI,CAAW,EACtC,IAAMC,EAAeH,EAAoBE,EAAKE,GAAG,EAC3CC,EAAWJ,EAAmB,CAAEK,KAAMH,MAAAA,EAAY,KAAA,EAAZA,EAAcI,KAAK,CAAEF,SAAUF,MAAAA,EAAY,KAAA,EAAZA,EAAcG,IAAAA,AAAI,UAE7F,AAAIP,EAAoBG,GAChBG,EAGDH,EAAKK,KAAK,EAAIL,EAAKI,IAAI,AAC/B"}