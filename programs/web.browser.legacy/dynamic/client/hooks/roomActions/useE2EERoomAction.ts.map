)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/hooks/roomActions/useE2EERoomAction.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { isRoomFederated } from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useSetting, usePermission, useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useCallback, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { e2e } from '../../../app/e2e/client/rocketchat.e2e';\nimport { dispatchToastMessage } from '../../lib/toast';\nimport { useRoom, useRoomSubscription } from '../../views/room/contexts/RoomContext';\nimport type { RoomToolboxActionConfig } from '../../views/room/contexts/RoomToolboxContext';\nimport { useReactiveValue } from '../useReactiveValue';\n\nexport const useE2EERoomAction = () => {\n\tconst enabled = useSetting('E2E_Enable', false);\n\tconst room = useRoom();\n\tconst subscription = useRoomSubscription();\n\tconst readyToEncrypt = useReactiveValue(useCallback(() => e2e.isReady(), [])) || room.encrypted;\n\tconst permittedToToggleEncryption = usePermission('toggle-room-e2e-encryption', room._id);\n\tconst permittedToEditRoom = usePermission('edit-room', room._id);\n\tconst permitted = (room.t === 'd' || (permittedToEditRoom && permittedToToggleEncryption)) && readyToEncrypt;\n\tconst federated = isRoomFederated(room);\n\tconst { t } = useTranslation();\n\n\tconst toggleE2E = useEndpoint('POST', '/v1/rooms.saveRoomSettings');\n\n\tconst action = useMutableCallback(async () => {\n\t\tconst { success } = await toggleE2E({ rid: room._id, encrypted: !room.encrypted });\n\t\tif (!success) {\n\t\t\treturn;\n\t\t}\n\n\t\tdispatchToastMessage({\n\t\t\ttype: 'success',\n\t\t\tmessage: room.encrypted\n\t\t\t\t? t('E2E_Encryption_disabled_for_room', { roomName: room.name })\n\t\t\t\t: t('E2E_Encryption_enabled_for_room', { roomName: room.name }),\n\t\t});\n\n\t\tif (subscription?.autoTranslate) {\n\t\t\tdispatchToastMessage({ type: 'success', message: t('AutoTranslate_Disabled_for_room', { roomName: room.name }) });\n\t\t}\n\t});\n\n\tconst enabledOnRoom = !!room.encrypted;\n\n\treturn useMemo((): RoomToolboxActionConfig | undefined => {\n\t\tif (!enabled || !permitted) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn {\n\t\t\tid: 'e2e',\n\t\t\tgroups: ['direct', 'direct_multiple', 'group', 'team'],\n\t\t\ttitle: enabledOnRoom ? 'E2E_disable' : 'E2E_enable',\n\t\t\ticon: 'key',\n\t\t\torder: 13,\n\t\t\taction,\n\t\t\ttype: 'organization',\n\t\t\t...(federated && {\n\t\t\t\ttooltip: t('core.E2E_unavailable_for_federation'),\n\t\t\t\tdisabled: true,\n\t\t\t}),\n\t\t};\n\t}, [enabled, permitted, federated, t, enabledOnRoom, action]);\n};\n",null],"names":["module","link","default","_objectSpread","_regeneratorRuntime","export","useE2EERoomAction","isRoomFederated","useMutableCallback","useSetting","usePermission","useEndpoint","useCallback","useMemo","useTranslation","e2e","dispatchToastMessage","useRoom","useRoomSubscription","useReactiveValue","enabled","room","subscription","readyToEncrypt","isReady","encrypted","permittedToToggleEncryption","_id","permittedToEditRoom","permitted","t","federated","_useTranslation","toggleE2E","action","async","_context","prev","next","awrap","rid","_await$toggleE2E","sent","success","abrupt","type","message","roomName","name","autoTranslate","stop","Promise","enabledOnRoom","id","groups","title","icon","order","tooltip","disabled"],"mappings":"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"}