)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/hooks/useUpdateAvatar.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { AvatarObject, AvatarServiceObject, AvatarReset, AvatarUrlObj, IUser } from '@rocket.chat/core-typings';\nimport { useToastMessageDispatch, useMethod, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useCallback } from 'react';\n\nimport { useEndpointAction } from './useEndpointAction';\nimport { useEndpointUpload } from './useEndpointUpload';\n\nconst isAvatarReset = (avatarObj: AvatarObject): avatarObj is AvatarReset => avatarObj === 'reset';\nconst isServiceObject = (avatarObj: AvatarObject): avatarObj is AvatarServiceObject =>\n\t!isAvatarReset(avatarObj) && typeof avatarObj === 'object' && 'service' in avatarObj;\nconst isAvatarUrl = (avatarObj: AvatarObject): avatarObj is AvatarUrlObj =>\n\t!isAvatarReset(avatarObj) && typeof avatarObj === 'object' && 'service' && 'avatarUrl' in avatarObj;\n\nexport const useUpdateAvatar = (\n\tavatarObj: AvatarObject,\n\tuserId: IUser['_id'],\n): (() => Promise<{ success: boolean } | null | undefined>) => {\n\tconst t = useTranslation();\n\tconst avatarUrl = isAvatarUrl(avatarObj) ? avatarObj.avatarUrl : '';\n\n\tconst successMessage = t('Avatar_changed_successfully');\n\tconst setAvatarFromService = useMethod('setAvatarFromService');\n\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst saveAvatarAction = useEndpointUpload('/v1/users.setAvatar', successMessage);\n\tconst saveAvatarUrlAction = useEndpointAction('POST', '/v1/users.setAvatar', { successMessage });\n\tconst resetAvatarAction = useEndpointAction('POST', '/v1/users.resetAvatar', { successMessage });\n\n\tconst updateAvatar = useCallback(async () => {\n\t\tif (isAvatarReset(avatarObj)) {\n\t\t\treturn resetAvatarAction({\n\t\t\t\tuserId,\n\t\t\t});\n\t\t}\n\t\tif (isAvatarUrl(avatarObj)) {\n\t\t\treturn saveAvatarUrlAction({\n\t\t\t\tuserId,\n\t\t\t\t...(avatarUrl && { avatarUrl }),\n\t\t\t});\n\t\t}\n\t\tif (isServiceObject(avatarObj)) {\n\t\t\tconst { blob, contentType, service } = avatarObj;\n\t\t\ttry {\n\t\t\t\tawait setAvatarFromService(blob, contentType, service);\n\t\t\t\tdispatchToastMessage({ type: 'success', message: successMessage });\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif (avatarObj instanceof FormData) {\n\t\t\tavatarObj.set('userId', userId);\n\t\t\treturn saveAvatarAction(avatarObj);\n\t\t}\n\t}, [\n\t\tavatarObj,\n\t\tavatarUrl,\n\t\tdispatchToastMessage,\n\t\tresetAvatarAction,\n\t\tsaveAvatarAction,\n\t\tsaveAvatarUrlAction,\n\t\tsetAvatarFromService,\n\t\tsuccessMessage,\n\t\tuserId,\n\t]);\n\n\treturn updateAvatar;\n};\n",null],"names":["module","default","v","_regeneratorRuntime","_objectSpread","_typeof","export","useUpdateAvatar","useToastMessageDispatch","useMethod","useTranslation","useCallback","useEndpointAction","useEndpointUpload","isAvatarReset","avatarObj","isAvatarUrl","userId","t","avatarUrl","successMessage","setAvatarFromService","dispatchToastMessage","saveAvatarAction","saveAvatarUrlAction","resetAvatarAction","blob","contentType","service","async","_context","prev","next","abrupt","awrap","type","message","t0","FormData","set","stop","Promise"],"mappings":"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"}