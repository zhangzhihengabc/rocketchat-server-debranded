)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/hooks/useUserData.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useContext, useMemo } from 'react';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\n\nimport { UserPresenceContext } from '../contexts/UserPresenceContext';\nimport type { UserPresence } from '../lib/presence';\n\n/**\n * Hook to fetch and subscribe users data\n *\n * @param uid - User Id\n * @returns Users data: status, statusText, username, name\n * @public\n */\nexport const useUserData = (uid: string): UserPresence | undefined => {\n\tconst userPresence = useContext(UserPresenceContext);\n\n\tconst { subscribe, get } = useMemo(\n\t\t() => userPresence?.queryUserData(uid) ?? { subscribe: () => () => undefined, get: () => undefined },\n\t\t[userPresence, uid],\n\t);\n\n\treturn useSyncExternalStore(subscribe, get);\n};\n",null],"names":["module","export","useUserData","useContext","useMemo","useSyncExternalStore","UserPresenceContext","uid","userPresence","_useMemo","_userPresence$queryUs","queryUserData","subscribe","get"],"mappings":"uBAAAA,EAAOC,MAAE,CAAA,CAAAC,YAAY,WAAe,OAAQA,CAAA,CAAA,GAAAF,EAAAA,IAAAA,CAAAA,QAAAA,CAAAG,WAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,QAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAJ,EAAAA,IAAAA,CAAAA,+BAAAA,CAAAK,qBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAL,EAAAA,IAAAA,CAAAA,kCAAAA,CAAAM,oBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAarC,IAbqCH,EAAAC,EAAAC,EAAAC,EAa/BJ,EAAc,SAACK,CAAW,EACtC,IAAMC,EAAeL,EAAWG,GAEhCG,EAA2BL,EAC1B,WAAA,IAAAM,EAAA,OAAA,AAAsC,OAAtCA,CAAAA,EAAMF,MAAAA,EAAY,KAAA,EAAZA,EAAcG,aAAa,CAACJ,EAAG,GAACG,AAAA,KAAA,IAAAA,EAAAA,EAAI,CAAEE,UAAW,WAAA,OAAM,WAAe,CAAA,EAAEC,IAAK,WAAe,CAAA,CAAE,EACpG,CAACL,EAAcD,EAAI,EAGpB,OAAOF,EALUI,EAATG,SAAS,CAAKH,EAAHI,GAAG,CAMvB"}