)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/hooks/useWorkspaceInfo.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IStats, IWorkspaceInfo, Serialized } from '@rocket.chat/core-typings';\nimport type { IInstance } from '@rocket.chat/rest-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useMutation, useQueries, useQueryClient } from '@tanstack/react-query';\n\nexport const useWorkspaceInfo = ({ refreshStatistics }: { refreshStatistics?: boolean } = {}) => {\n\tconst getStatistics = useEndpoint('GET', '/v1/statistics');\n\tconst getInstances = useEndpoint('GET', '/v1/instances.get');\n\tconst getServerInfo = useEndpoint('GET', '/info');\n\n\treturn useQueries({\n\t\tqueries: [\n\t\t\t{\n\t\t\t\tqueryKey: ['info', 'serverInfo'],\n\t\t\t\tqueryFn: async () => {\n\t\t\t\t\tconst data = await getServerInfo();\n\n\t\t\t\t\tif (!('minimumClientVersions' in data)) {\n\t\t\t\t\t\tthrow new Error('Invalid server info');\n\t\t\t\t\t}\n\t\t\t\t\tif (!('info' in data)) {\n\t\t\t\t\t\tthrow new Error('Invalid server info');\n\t\t\t\t\t}\n\t\t\t\t\tif (!('version' in data)) {\n\t\t\t\t\t\tthrow new Error('Invalid server info');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn data as IWorkspaceInfo;\n\t\t\t\t},\n\t\t\t\tstaleTime: Infinity,\n\t\t\t\tkeepPreviousData: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tqueryKey: ['info', 'instances'],\n\t\t\t\tqueryFn: () => getInstances(),\n\t\t\t\tstaleTime: Infinity,\n\t\t\t\tkeepPreviousData: true,\n\t\t\t\tselect({ instances }: Serialized<{ instances: IInstance[] }>) {\n\t\t\t\t\treturn instances.map((instance) => ({\n\t\t\t\t\t\t...instance,\n\t\t\t\t\t\t...(instance.instanceRecord && {\n\t\t\t\t\t\t\tinstanceRecord: {\n\t\t\t\t\t\t\t\t...instance.instanceRecord,\n\t\t\t\t\t\t\t\t_createdAt: new Date(instance.instanceRecord._createdAt),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}),\n\t\t\t\t\t})) as IInstance[];\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tqueryKey: ['info', 'statistics'],\n\t\t\t\tqueryFn: () => getStatistics({ refresh: refreshStatistics ? 'true' : 'false' }),\n\t\t\t\tstaleTime: Infinity,\n\t\t\t\tkeepPreviousData: true,\n\t\t\t\tselect: (data: Serialized<IStats>) => ({\n\t\t\t\t\t...data,\n\t\t\t\t\tlastMessageSentAt: data.lastMessageSentAt ? new Date(data.lastMessageSentAt) : undefined,\n\t\t\t\t}),\n\t\t\t},\n\t\t],\n\t});\n};\n\nexport const useRefreshStatistics = () => {\n\tconst queryClient = useQueryClient();\n\treturn useMutation({\n\t\tmutationFn: () => queryClient.invalidateQueries(['info', 'statistics']),\n\t});\n};\n",null],"names":["module","link","default","_objectSpread","_regeneratorRuntime","export","useWorkspaceInfo","useRefreshStatistics","useEndpoint","useMutation","useQueries","useQueryClient","_ref","arguments","length","undefined","refreshStatistics","getStatistics","getInstances","getServerInfo","queries","queryKey","queryFn","data","async","_context","prev","next","awrap","sent","Error","abrupt","stop","Promise","staleTime","Infinity","keepPreviousData","select","_ref2","instances","map","instance","instanceRecord","_createdAt","Date","refresh","lastMessageSentAt","queryClient","mutationFn","invalidateQueries"],"mappings":"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"}