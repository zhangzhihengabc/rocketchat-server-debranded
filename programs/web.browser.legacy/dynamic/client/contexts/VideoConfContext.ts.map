)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/contexts/VideoConfContext.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport { createContext, useContext } from 'react';\nimport type { Subscription } from 'use-subscription';\nimport { useSubscription } from 'use-subscription';\n\nimport type { DirectCallData, ProviderCapabilities, CallPreferences, VideoConfManager } from '../lib/VideoConfManager';\n\nexport type VideoConfPopupPayload = {\n\tid: string;\n\trid: IRoom['_id'];\n\tisReceiving?: boolean;\n};\n\ntype VideoConfContextValue = {\n\tmanager: typeof VideoConfManager;\n\tdispatchOutgoing: (options: Omit<VideoConfPopupPayload, 'id'>) => void;\n\tdismissOutgoing: () => void;\n\tstartCall: (rid: IRoom['_id'], title?: string) => void;\n\tacceptCall: (callId: string) => void;\n\tjoinCall: (callId: string) => void;\n\tdismissCall: (callId: string) => void;\n\trejectIncomingCall: (callId: string) => void;\n\tabortCall: () => void;\n\tsetPreferences: (prefs: { mic?: boolean; cam?: boolean }) => void;\n\tqueryIncomingCalls: Subscription<DirectCallData[]>;\n\tqueryRinging: Subscription<boolean>;\n\tqueryCalling: Subscription<boolean>;\n\tqueryCapabilities: Subscription<ProviderCapabilities>;\n\tqueryPreferences: Subscription<CallPreferences>;\n};\n\nexport const VideoConfContext = createContext<VideoConfContextValue | undefined>(undefined);\nconst useVideoConfContext = (): VideoConfContextValue => {\n\tconst context = useContext(VideoConfContext);\n\tif (!context) {\n\t\tthrow new Error('Must be running in VideoConf Context');\n\t}\n\n\treturn context;\n};\n\nexport const useVideoConfDispatchOutgoing = (): VideoConfContextValue['dispatchOutgoing'] => useVideoConfContext().dispatchOutgoing;\nexport const useVideoConfDismissOutgoing = (): VideoConfContextValue['dismissOutgoing'] => useVideoConfContext().dismissOutgoing;\nexport const useVideoConfStartCall = (): VideoConfContextValue['startCall'] => useVideoConfContext().startCall;\nexport const useVideoConfAcceptCall = (): VideoConfContextValue['acceptCall'] => useVideoConfContext().acceptCall;\nexport const useVideoConfJoinCall = (): VideoConfContextValue['joinCall'] => useVideoConfContext().joinCall;\nexport const useVideoConfDismissCall = (): VideoConfContextValue['dismissCall'] => useVideoConfContext().dismissCall;\nexport const useVideoConfAbortCall = (): VideoConfContextValue['abortCall'] => useVideoConfContext().abortCall;\nexport const useVideoConfRejectIncomingCall = (): VideoConfContextValue['rejectIncomingCall'] => useVideoConfContext().rejectIncomingCall;\nexport const useVideoConfIncomingCalls = (): DirectCallData[] => {\n\tconst { queryIncomingCalls } = useVideoConfContext();\n\treturn useSubscription(queryIncomingCalls);\n};\nexport const useVideoConfSetPreferences = (): VideoConfContextValue['setPreferences'] => useVideoConfContext().setPreferences;\nexport const useVideoConfIsRinging = (): boolean => {\n\tconst { queryRinging } = useVideoConfContext();\n\treturn useSubscription(queryRinging);\n};\nexport const useVideoConfIsCalling = (): boolean => {\n\tconst { queryCalling } = useVideoConfContext();\n\treturn useSubscription(queryCalling);\n};\nexport const useVideoConfCapabilities = (): ProviderCapabilities => {\n\tconst { queryCapabilities } = useVideoConfContext();\n\treturn useSubscription(queryCapabilities);\n};\nexport const useVideoConfPreferences = (): CallPreferences => {\n\tconst { queryPreferences } = useVideoConfContext();\n\treturn useSubscription(queryPreferences);\n};\n\nexport const useVideoConfManager = (): typeof VideoConfManager | undefined => useContext(VideoConfContext)?.manager;\n",null],"names":["module","export","VideoConfContext","useVideoConfDispatchOutgoing","useVideoConfDismissOutgoing","useVideoConfStartCall","useVideoConfAcceptCall","useVideoConfJoinCall","useVideoConfDismissCall","useVideoConfAbortCall","useVideoConfRejectIncomingCall","useVideoConfIncomingCalls","useVideoConfSetPreferences","useVideoConfIsRinging","useVideoConfIsCalling","useVideoConfCapabilities","useVideoConfPreferences","useVideoConfManager","createContext","useContext","useSubscription","undefined","useVideoConfContext","context","Error","dispatchOutgoing","dismissOutgoing","startCall","acceptCall","joinCall","dismissCall","abortCall","rejectIncomingCall","_useVideoConfContext","queryIncomingCalls","setPreferences","_useVideoConfContext2","queryRinging","_useVideoConfContext3","queryCalling","_useVideoConfContext4","queryCapabilities","_useVideoConfContext5","queryPreferences","_useContext","manager"],"mappings":"uBACAA,EAAOC,MAAE,CAAA,CAAAC,iBAAe,WAAkB,OAAQA,CAAA,EAAAC,6BAAAA,WAAA,OAAAA,CAAA,EAAAC,4BAAAA,WAAA,OAAAA,CAAA,EAAAC,sBAAAA,WAAA,OAAAA,CAAA,EAAAC,uBAAAA,WAAA,OAAAA,CAAA,EAAAC,qBAAAA,WAAA,OAAAA,CAAA,EAAAC,wBAAAA,WAAA,OAAAA,CAAA,EAAAC,sBAAAA,WAAA,OAAAA,CAAA,EAAAC,+BAAAA,WAAA,OAAAA,CAAA,EAAAC,0BAAAA,WAAA,OAAAA,CAAA,EAAAC,2BAAAA,WAAA,OAAAA,CAAA,EAAAC,sBAAAA,WAAA,OAAAA,CAAA,EAAAC,sBAAAA,WAAA,OAAAA,CAAA,EAAAC,yBAAAA,WAAA,OAAAA,CAAA,EAAAC,wBAAAA,WAAA,OAAAA,CAAA,EAAAC,oBAAAA,WAAA,OAAAA,CAAA,CAAA,GAAAjB,EAAAA,IAAAA,CAAAA,QAAAA,CAAAkB,cAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,WAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAnB,EAAAA,IAAAA,CAAAA,mBAAAA,CAAAoB,gBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GA8B3C,IA9B2CF,EAAAC,EAAAC,EA8BrClB,EAAmBgB,EAAiDG,KAAAA,GAC3EC,EAAsB,WAC3B,IAAMC,EAAUJ,EAAWjB,GAC3B,GAAI,CAACqB,EACJ,MAAM,AAAIC,MAAM,wCAGjB,OAAOD,CACR,EAEapB,EAA+B,WAAA,OAAiDmB,IAAsBG,gBAAgB,EACtHrB,EAA8B,WAAA,OAAgDkB,IAAsBI,eAAe,EACnHrB,EAAwB,WAAA,OAA0CiB,IAAsBK,SAAS,EACjGrB,EAAyB,WAAA,OAA2CgB,IAAsBM,UAAU,EACpGrB,EAAuB,WAAA,OAAyCe,IAAsBO,QAAQ,EAC9FrB,EAA0B,WAAA,OAA4Cc,IAAsBQ,WAAW,EACvGrB,EAAwB,WAAA,OAA0Ca,IAAsBS,SAAS,EACjGrB,EAAiC,WAAA,OAAmDY,IAAsBU,kBAAkB,EAC5HrB,EAA4B,WAExC,OAAOS,EADmBa,AAAKX,IAAvBY,kBAAkB,CAE3B,EACatB,EAA6B,WAAA,OAA+CU,IAAsBa,cAAc,EAChHtB,EAAwB,WAEpC,OAAOO,EADagB,AAAKd,IAAjBe,YAAY,CAErB,EACavB,EAAwB,WAEpC,OAAOM,EADakB,AAAKhB,IAAjBiB,YAAY,CAErB,EACaxB,EAA2B,WAEvC,OAAOK,EADkBoB,AAAKlB,IAAtBmB,iBAAiB,CAE1B,EACazB,EAA0B,WAEtC,OAAOI,EADiBsB,AAAKpB,IAArBqB,gBAAgB,CAEzB,EAEa1B,EAAsB,WAAA,IAAA2B,EAAA,OAAA,AAAuE,OAAvEA,CAAAA,EAA2CzB,EAAWjB,EAAgB,GAAC0C,AAAA,KAAA,IAAAA,EAAA,KAAA,EAA5BA,EAA8BC,OAAO"}