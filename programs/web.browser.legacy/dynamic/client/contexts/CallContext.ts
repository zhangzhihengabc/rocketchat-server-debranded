function module(e,n,r){r.link("@babel/runtime/helpers/slicedToArray",{default:function(e){u=e}},0),r.export({CallContext:function(){return f},useIsVoipEnterprise:function(){return d},useIsCallEnabled:function(){return c},useIsCallReady:function(){return C},useIsCallError:function(){return y},useCallActions:function(){return v},useCallerInfo:function(){return E},useCallCreateRoom:function(){return b},useCallOpenRoom:function(){return h},useCallClient:function(){return p},useQueueName:function(){return I},useQueueCounter:function(){return w},useOpenedRoomInfo:function(){return m},useChangeAudioOutputDevice:function(){return R},useChangeAudioInputDevice:function(){return g},useCallRegisterClient:function(){return A},useCallUnregisterClient:function(){return O},useVoipOutboundStates:function(){return N},useVoipNetworkStatus:function(){return k}}),r.link("react",{createContext:function(e){t=e},useContext:function(e){o=e},useMemo:function(e){a=e}},0),r.link("use-sync-external-store/shim",{useSyncExternalStore:function(e){l=e}},1),r.link("../../ee/client/hooks/useHasLicenseModule",{useHasLicenseModule:function(e){i=e}},2);var u,t,o,a,l,i,s=function(e){return e.ready},f=t({enabled:!1,ready:!1,outBoundCallsAllowed:void 0,outBoundCallsEnabled:void 0,outBoundCallsEnabledForUser:void 0}),d=function(){return!0===i("voip-enterprise")},c=function(){return o(f).enabled},C=function(){return!!o(f).ready},y=function(){return void 0!==o(f).error},v=function(){var e=o(f);if(!s(e))throw Error("useCallActions only if Calls are enabled and ready");return e.actions},E=function(){var e=o(f);if(!s(e))throw Error("useCallerInfo only if Calls are enabled and ready");var n=e.voipClient,r=u(a(function(){var e=n.callerInfo;return[function(r){return n.on("stateChanged",function(){e=n.callerInfo,r()})},function(){return e}]},[n]),2);return l(r[0],r[1])},b=function(){var e=o(f);if(!s(e))throw Error("useCallCreateRoom only if Calls are enabled and ready");return e.createRoom},h=function(){var e=o(f);if(!s(e))throw Error("useCallOpenRoom only if Calls are enabled and ready");return e.openRoom},p=function(){var e=o(f);if(!s(e))throw Error("useCallClient only if Calls are enabled and ready");return e.voipClient},I=function(){var e=o(f);if(!s(e))throw Error("useQueueName only if Calls are enabled and ready");return e.queueName},w=function(){var e=o(f);if(!s(e))throw Error("useQueueCounter only if Calls are enabled and ready");return e.queueCounter},m=function(){var e=o(f);if(!s(e))throw Error("useOpenedRoomInfo only if Calls are enabled and ready");return e.openedRoomInfo},R=function(){var e=o(f);if(!s(e))throw Error("useChangeAudioOutputDevice only if Calls are enabled and ready");return e.changeAudioOutputDevice},g=function(){var e=o(f);if(!s(e))throw Error("useChangeAudioInputDevice only if Calls are enabled and ready");return e.changeAudioInputDevice},A=function(){var e=o(f);if(!s(e))throw Error("useCallRegisterClient only if Calls are enabled and ready");return e.register},O=function(){var e=o(f);if(!s(e))throw Error("useCallUnregisterClient only if Calls are enabled and ready");return e.unregister},N=function(){var e=d(),n=E();return{outBoundCallsAllowed:e,outBoundCallsEnabled:e,outBoundCallsEnabledForUser:e&&!["IN_CALL","ON_HOLD","UNREGISTERED","INITIAL"].includes(n.state)}},k=function(){var e=o(f);if(!s(e))throw Error("useVoipNetworkStatus only if Calls are enabled and ready");return e.networkStatus}}
//# sourceMappingURL=/dynamic/client/contexts/b42df8e526f485833a83875ebe9dff84a9dc7010.map
