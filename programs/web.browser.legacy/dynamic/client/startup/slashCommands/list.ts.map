)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/startup/slashCommands/list.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { slashCommands } from '../../../app/utils/client';\nimport { sdk } from '../../../app/utils/client/lib/SDKClient';\n\nlet oldUserId: IUser['_id'] | null = null;\n\nTracker.autorun(async () => {\n\tconst newUserId = Meteor.userId();\n\tif (oldUserId === null && newUserId) {\n\t\tsdk.rest.get('/v1/commands.list').then((result) => {\n\t\t\tresult.commands.forEach((command) => {\n\t\t\t\tslashCommands.add(command);\n\t\t\t});\n\t\t});\n\t}\n\n\toldUserId = Meteor.userId();\n});\n",null],"names":["module","default","_regeneratorRuntime","link","Meteor","Tracker","slashCommands","sdk","oldUserId","autorun","newUserId","async","_context","prev","next","userId","rest","get","then","result","commands","forEach","command","add","stop","Promise"],"mappings":"uBACuBA,EAAAA,IAAAA,CAAAA,6BAAgB,CAAAC,QAAAA,SAAAA,CAAAA,EAAAC,EAAAA,CAAA,CAAA,EAAA,GAA9BF,EAAQG,IAAA,CAAM,gBAAgB,CAAAC,OAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAJ,EAAAA,IAAAA,CAAAA,iBAAAA,CAAAK,QAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAL,EAAAA,IAAAA,CAAAA,4BAAAA,CAAAM,cAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAN,EAAAA,IAAAA,CAAAA,0CAAAA,CAAAO,IAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAMvC,IANAL,EAAAE,EAAuCC,EAAAC,EAAAC,EAMnCC,EAAiC,KAErCH,EAAQI,OAAO,CAAC,WAAA,IAAAC,EAAA,OAAAR,EAAAS,KAAA,CAAA,SAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAC,IAAA,CAAAD,EAAAE,IAAA,EAAA,KAAA,EACTJ,EAAYN,EAAOW,MAAM,GACb,OAAdP,GAAsBE,GACzBH,EAAIS,IAAI,CAACC,GAAG,CAAC,qBAAqBC,IAAI,CAAC,SAACC,CAAM,EAC7CA,EAAOC,QAAQ,CAACC,OAAO,CAAC,SAACC,CAAO,EAC/BhB,EAAciB,GAAG,CAACD,EACnB,EACD,GAGDd,EAAYJ,EAAOW,MAAM,EAAG,MAAA,EAAA,IAAA,MAAA,OAAAH,EAAAY,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,KAAAC,QAAA"}