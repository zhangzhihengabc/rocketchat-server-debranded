)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/startup/e2e.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { AtLeast, IMessage, ISubscription } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { e2e } from '../../app/e2e/client/rocketchat.e2e';\nimport { Subscriptions, ChatRoom } from '../../app/models/client';\nimport { Notifications } from '../../app/notifications/client';\nimport { settings } from '../../app/settings/client';\nimport { onClientBeforeSendMessage } from '../lib/onClientBeforeSendMessage';\nimport { onClientMessageReceived } from '../lib/onClientMessageReceived';\nimport { isLayoutEmbedded } from '../lib/utils/isLayoutEmbedded';\nimport { waitUntilFind } from '../lib/utils/waitUntilFind';\nimport { router } from '../providers/RouterProvider';\n\nMeteor.startup(() => {\n\tTracker.autorun(() => {\n\t\tif (!Meteor.userId()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!window.crypto) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst enabled = settings.get('E2E_Enable');\n\t\t// we don't care about the reactivity of this boolean\n\t\tconst adminEmbedded = isLayoutEmbedded() && router.getLocationPathname().startsWith('/admin');\n\n\t\tif (enabled && !adminEmbedded) {\n\t\t\te2e.startClient();\n\t\t\te2e.enabled.set(true);\n\t\t} else {\n\t\t\te2e.enabled.set(false);\n\t\t\te2e.closeAlert();\n\t\t}\n\t});\n\n\tlet observable: Meteor.LiveQueryHandle | null = null;\n\tlet offClientMessageReceived: undefined | (() => void);\n\tlet offClientBeforeSendMessage: undefined | (() => void);\n\tTracker.autorun(() => {\n\t\tif (!e2e.isReady()) {\n\t\t\toffClientMessageReceived?.();\n\t\t\tNotifications.unUser('e2ekeyRequest');\n\t\t\tobservable?.stop();\n\t\t\toffClientBeforeSendMessage?.();\n\t\t\treturn;\n\t\t}\n\n\t\tNotifications.onUser('e2ekeyRequest', async (roomId, keyId): Promise<void> => {\n\t\t\tconst e2eRoom = await e2e.getInstanceByRoomId(roomId);\n\t\t\tif (!e2eRoom) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\te2eRoom.provideKeyToUser(keyId);\n\t\t});\n\n\t\tobservable = Subscriptions.find().observe({\n\t\t\tchanged: async (sub: ISubscription) => {\n\t\t\t\tsetTimeout(async () => {\n\t\t\t\t\tif (!sub.encrypted && !sub.E2EKey) {\n\t\t\t\t\t\te2e.removeInstanceByRoomId(sub.rid);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst e2eRoom = await e2e.getInstanceByRoomId(sub.rid);\n\t\t\t\t\tif (!e2eRoom) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (sub.E2ESuggestedKey) {\n\t\t\t\t\t\tif (await e2eRoom.importGroupKey(sub.E2ESuggestedKey)) {\n\t\t\t\t\t\t\te2e.acceptSuggestedKey(sub.rid);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.warn('Invalid E2ESuggestedKey, rejecting', sub.E2ESuggestedKey);\n\t\t\t\t\t\t\te2e.rejectSuggestedKey(sub.rid);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tsub.encrypted ? e2eRoom.resume() : e2eRoom.pause();\n\n\t\t\t\t\t// Cover private groups and direct messages\n\t\t\t\t\tif (!e2eRoom.isSupportedRoomType(sub.t)) {\n\t\t\t\t\t\te2eRoom.disable();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (sub.E2EKey && e2eRoom.isWaitingKeys()) {\n\t\t\t\t\t\te2eRoom.keyReceived();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!e2eRoom.isReady()) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\te2eRoom.decryptSubscription();\n\t\t\t\t}, 0);\n\t\t\t},\n\t\t\tadded: async (sub: ISubscription) => {\n\t\t\t\tsetTimeout(async () => {\n\t\t\t\t\tif (!sub.encrypted && !sub.E2EKey) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\treturn e2e.getInstanceByRoomId(sub.rid);\n\t\t\t\t}, 0);\n\t\t\t},\n\t\t\tremoved: (sub: ISubscription) => {\n\t\t\t\te2e.removeInstanceByRoomId(sub.rid);\n\t\t\t},\n\t\t});\n\n\t\toffClientMessageReceived = onClientMessageReceived.use(async (msg: IMessage) => {\n\t\t\tconst e2eRoom = await e2e.getInstanceByRoomId(msg.rid);\n\t\t\tif (!e2eRoom?.shouldConvertReceivedMessages()) {\n\t\t\t\treturn msg;\n\t\t\t}\n\t\t\treturn e2e.decryptMessage(msg);\n\t\t});\n\n\t\t// Encrypt messages before sending\n\t\toffClientBeforeSendMessage = onClientBeforeSendMessage.use(async (message: AtLeast<IMessage, '_id' | 'rid' | 'msg'>) => {\n\t\t\tconst e2eRoom = await e2e.getInstanceByRoomId(message.rid);\n\n\t\t\tif (!e2eRoom) {\n\t\t\t\treturn message;\n\t\t\t}\n\n\t\t\tconst subscription = await waitUntilFind(() => ChatRoom.findOne({ _id: message.rid }));\n\n\t\t\tsubscription.encrypted ? e2eRoom.resume() : e2eRoom.pause();\n\n\t\t\tconst shouldConvertSentMessages = await e2eRoom.shouldConvertSentMessages(message);\n\n\t\t\tif (!shouldConvertSentMessages) {\n\t\t\t\treturn message;\n\t\t\t}\n\n\t\t\t// Should encrypt this message.\n\t\t\tconst msg = await e2eRoom.encrypt(message);\n\n\t\t\tmessage.msg = msg;\n\t\t\tmessage.t = 'e2e';\n\t\t\tmessage.e2e = 'pending';\n\t\t\treturn message;\n\t\t});\n\t});\n});\n",null],"names":["_regeneratorRuntime","Meteor","Tracker","e2e","Subscriptions","ChatRoom","Notifications","settings","onClientBeforeSendMessage","onClientMessageReceived","isLayoutEmbedded","waitUntilFind","router","module","default","link","startup","autorun","userId","window","crypto","enabled","get","adminEmbedded","getLocationPathname","startsWith","startClient","set","closeAlert","offClientMessageReceived","offClientBeforeSendMessage","observable","isReady","_offClientMessageRece","_observable","_offClientBeforeSendM","unUser","stop","onUser","roomId","keyId","e2eRoom","async","_context","prev","next","awrap","getInstanceByRoomId","sent","abrupt","provideKeyToUser","Promise","find","observe","changed","sub","_context3","setTimeout","_callee2","_callee2$","_context2","encrypted","E2EKey","removeInstanceByRoomId","rid","E2ESuggestedKey","importGroupKey","acceptSuggestedKey","console","warn","rejectSuggestedKey","resume","pause","isSupportedRoomType","t","disable","isWaitingKeys","keyReceived","decryptSubscription","added","_context5","_callee4","_callee4$","_context4","removed","use","msg","_context6","shouldConvertReceivedMessages","decryptMessage","message","_context7","findOne","_id","subscription","shouldConvertSentMessages","encrypt"],"mappings":"2BACAA,EAAAC,EAAuCC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAhBC,EAAAA,IAAAA,CAAAA,6BAAgB,CAAAC,QAAAA,SAAAA,CAAAA,EAAAd,EAAAA,CAAA,CAAA,EAAA,GAA9Ba,EAAQE,IAAA,CAAM,gBAAgB,CAAAd,OAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAY,EAAAA,IAAAA,CAAAA,iBAAAA,CAAAX,QAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAW,EAAAA,IAAAA,CAAAA,sCAAAA,CAAAV,IAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAU,EAAAA,IAAAA,CAAAA,0BAAAA,CAAAT,cAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,SAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAQ,EAAAA,IAAAA,CAAAA,iCAAAA,CAAAP,cAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAO,EAAAA,IAAAA,CAAAA,4BAAAA,CAAAN,SAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAM,EAAAA,IAAAA,CAAAA,mCAAAA,CAAAL,0BAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,iCAAAA,CAAAJ,wBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,gCAAAA,CAAAH,iBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,6BAAAA,CAAAF,cAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,8BAAAA,CAAAD,OAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,IAavCX,EAAOe,OAAO,CAAC,WACdd,EAAQe,OAAO,CAAC,WACf,GAAKhB,EAAOiB,MAAM,IAIbC,OAAOC,MAAM,EAIlB,IAAMC,EAAUd,EAASe,GAAG,CAAC,cAEvBC,EAAgBb,KAAsBE,EAAOY,mBAAmB,GAAGC,UAAU,CAAC,SAEhFJ,CAAAA,GAAW,CAACE,GACfpB,EAAIuB,WAAW,GACfvB,EAAIkB,OAAO,CAACM,GAAG,CAAC,CAAA,KAEhBxB,EAAIkB,OAAO,CAACM,GAAG,CAAC,CAAA,GAChBxB,EAAIyB,UAAU,IAEhB,GAEA,IACIC,EACAC,EAFAC,EAA4C,KAGhD7B,EAAQe,OAAO,CAAC,WACf,GAAI,CAACd,EAAI6B,OAAO,GAAI,CAAA,IAAAC,EAAAC,EAAAC,CACnB,AAAwB,QAAxBF,CAAAA,EAAAJ,CAAA,GAAwBI,AAAA,KAAA,IAAAA,GAAxBA,IACA3B,EAAc8B,MAAM,CAAC,iBACrB,AAAU,OAAVF,CAAAA,EAAAH,CAAA,GAAUG,AAAA,KAAA,IAAAA,GAAVA,EAAYG,IAAI,GAChB,AAA0B,OAA1BF,CAAAA,EAAAL,CAAA,GAA0BK,AAAA,KAAA,IAAAA,GAA1BA,IACA,OAGD7B,EAAcgC,MAAM,CAAC,gBAAiB,SAAOC,CAAM,CAAEC,CAAK,EAAA,IAAAC,EAAA,OAAAzC,EAAA0C,KAAA,CAAA,SAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAC,IAAA,CAAAD,EAAAE,IAAA,EAAA,KAAA,EAAA,OAAAF,EAAAE,IAAA,CAAA,EAAA7C,EAAA8C,KAAA,CACnC3C,EAAI4C,mBAAmB,CAACR,GAAO,MAAA,EAAxC,GAAPE,EAAOE,EAAAK,IAAA,CACD,CAAAL,EAAAE,IAAA,CAAA,EAAA,KAAA,CAAA,OAAAF,EAAAM,MAAA,CAAA,SAAA,MAAA,EAIZR,EAAQS,gBAAgB,CAACV,EAAO,MAAA,EAAA,IAAA,MAAA,OAAAG,EAAAN,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,KAAAc,QAAA,GAGjCpB,EAAa3B,EAAcgD,IAAI,GAAGC,OAAO,CAAC,CACzCC,QAAS,SAAOC,CAAkB,EAAA,OAAAvD,EAAA0C,KAAA,CAAA,SAAAc,CAAA,EAAA,OAAA,OAAAA,EAAAZ,IAAA,CAAAY,EAAAX,IAAA,EAAA,KAAA,EACjCY,WAAW,SAAAC,IAAA,IAAAjB,EAAA,OAAAzC,EAAA0C,KAAA,CAAA,SAAAiB,EAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAhB,IAAA,CAAAgB,EAAAf,IAAA,EAAA,KAAA,EAAA,GAAA,CACN,CAAA,CAACU,EAAIM,SAAS,EAAI,CAACN,EAAIO,MAAM,AAANA,EAAM,CAAAF,EAAAf,IAAA,CAAA,EAAA,KAAA,CACI,OAApC1C,EAAI4D,sBAAsB,CAACR,EAAIS,GAAG,EAAEJ,EAAAX,MAAA,CAAA,SAAA,MAAA,EAAA,OAAAW,EAAAf,IAAA,CAAA,EAAA7C,EAAA8C,KAAA,CAIf3C,EAAI4C,mBAAmB,CAACQ,EAAIS,GAAG,EAAC,MAAA,EAAzC,GAAPvB,EAAOmB,EAAAZ,IAAA,CACD,CAAAY,EAAAf,IAAA,CAAA,EAAA,KAAA,CAAA,OAAAe,EAAAX,MAAA,CAAA,SAAA,MAAA,EAAA,GAAA,CAIRM,EAAIU,eAAe,CAAA,CAAAL,EAAAf,IAAA,CAAA,GAAA,KAAA,CAAA,OAAAe,EAAAf,IAAA,CAAA,GAAA7C,EAAA8C,KAAA,CACZL,EAAQyB,cAAc,CAACX,EAAIU,eAAe,EAAC,MAAA,GAAA,GAAA,CAAAL,EAAAZ,IAAA,CAAA,CAAAY,EAAAf,IAAA,CAAA,GAAA,KAAA,CACpD1C,EAAIgE,kBAAkB,CAACZ,EAAIS,GAAG,EAAEJ,EAAAf,IAAA,CAAA,GAAA,KAAA,MAAA,GAEhCuB,QAAQC,IAAI,CAAC,qCAAsCd,EAAIU,eAAe,EACtE9D,EAAImE,kBAAkB,CAACf,EAAIS,GAAG,CAAE,MAAA,GAMlC,GAFAT,EAAIM,SAAS,CAAGpB,EAAQ8B,MAAM,GAAK9B,EAAQ+B,KAAK,GAG3C/B,EAAQgC,mBAAmB,CAAClB,EAAImB,CAAC,EAAC,CAAAd,EAAAf,IAAA,CAAA,GAAA,KAAA,CACpB,OAAlBJ,EAAQkC,OAAO,GAAGf,EAAAX,MAAA,CAAA,SAAA,MAAA,GAAA,GAAA,CAIfM,CAAAA,EAAIO,MAAM,EAAIrB,EAAQmC,aAAa,EAAA,EAAE,CAAAhB,EAAAf,IAAA,CAAA,GAAA,KAAA,CAClB,OAAtBJ,EAAQoC,WAAW,GAAGjB,EAAAX,MAAA,CAAA,SAAA,MAAA,GAAA,GAIlBR,EAAQT,OAAO,GAAE,CAAA4B,EAAAf,IAAA,CAAA,GAAA,KAAA,CAAA,OAAAe,EAAAX,MAAA,CAAA,SAAA,MAAA,GAItBR,EAAQqC,mBAAmB,EAAG,MAAA,GAAA,IAAA,MAAA,OAAAlB,EAAAvB,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,KAAAc,QAAA,EAC5B,EAAG,MAAA,EAAA,IAAA,MAAA,OAAAK,EAAAnB,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,KAAAc,QAAA,EAEP4B,MAAO,SAAOxB,CAAkB,EAAA,OAAAvD,EAAA0C,KAAA,CAAA,SAAAsC,CAAA,EAAA,OAAA,OAAAA,EAAApC,IAAA,CAAAoC,EAAAnC,IAAA,EAAA,KAAA,EAC/BY,WAAW,SAAAwB,IAAA,OAAAjF,EAAA0C,KAAA,CAAA,SAAAwC,EAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAvC,IAAA,CAAAuC,EAAAtC,IAAA,EAAA,KAAA,EAAA,GAAA,CACN,CAAA,CAACU,EAAIM,SAAS,EAAI,CAACN,EAAIO,MAAM,AAANA,EAAM,CAAAqB,EAAAtC,IAAA,CAAA,EAAA,KAAA,CAAA,OAAAsC,EAAAlC,MAAA,CAAA,SAAA,MAAA,EAAA,OAAAkC,EAAAlC,MAAA,CAAA,SAG1B9C,EAAI4C,mBAAmB,CAACQ,EAAIS,GAAG,EAAC,MAAA,EAAA,IAAA,MAAA,OAAAmB,EAAA9C,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,KAAAc,QAAA,EACrC,EAAG,MAAA,EAAA,IAAA,MAAA,OAAA6B,EAAA3C,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,KAAAc,QAAA,EAEPiC,QAAS,SAAC7B,CAAkB,EAC3BpD,EAAI4D,sBAAsB,CAACR,EAAIS,GAAG,CACnC,IAGDnC,EAA2BpB,EAAwB4E,GAAG,CAAC,SAAOC,CAAa,EAAA,IAAA7C,EAAA,OAAAzC,EAAA0C,KAAA,CAAA,SAAA6C,CAAA,EAAA,OAAA,OAAAA,EAAA3C,IAAA,CAAA2C,EAAA1C,IAAA,EAAA,KAAA,EAAA,OAAA0C,EAAA1C,IAAA,CAAA,EAAA7C,EAAA8C,KAAA,CACpD3C,EAAI4C,mBAAmB,CAACuC,EAAItB,GAAG,EAAC,MAAA,EAAzC,GACRvB,MADCA,CAAAA,EAAO8C,EAAAvC,IAAA,GACRP,EAAS+C,6BAA6B,GAAE,CAAAD,EAAA1C,IAAA,CAAA,EAAA,KAAA,CAAA,OAAA0C,EAAAtC,MAAA,CAAA,SACrCqC,EAAG,MAAA,EAAA,OAAAC,EAAAtC,MAAA,CAAA,SAEJ9C,EAAIsF,cAAc,CAACH,GAAI,MAAA,EAAA,IAAA,MAAA,OAAAC,EAAAlD,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,KAAAc,QAAA,GAI/BrB,EAA6BtB,EAA0B6E,GAAG,CAAC,SAAOK,CAAiD,EAAA,IAAAjD,EAAA6C,EAAA,OAAAtF,EAAA0C,KAAA,CAAA,SAAAiD,CAAA,EAAA,OAAA,OAAAA,EAAA/C,IAAA,CAAA+C,EAAA9C,IAAA,EAAA,KAAA,EAAA,OAAA8C,EAAA9C,IAAA,CAAA,EAAA7C,EAAA8C,KAAA,CAC5F3C,EAAI4C,mBAAmB,CAAC2C,EAAQ1B,GAAG,EAAC,MAAA,EAA7C,GAAPvB,EAAOkD,EAAA3C,IAAA,CAED,CAAA2C,EAAA9C,IAAA,CAAA,EAAA,KAAA,CAAA,OAAA8C,EAAA1C,MAAA,CAAA,SACJyC,EAAO,MAAA,EAAA,OAAAC,EAAA9C,IAAA,CAAA,EAAA7C,EAAA8C,KAAA,CAGYnC,EAAc,WAAA,OAAMN,EAASuF,OAAO,CAAC,CAAEC,IAAKH,EAAQ1B,GAAAA,AAAG,EAAG,GAAC,MAAA,EAE1B,OAA5D8B,AAFkBH,EAAA3C,IAAA,CAELa,SAAS,CAAGpB,EAAQ8B,MAAM,GAAK9B,EAAQ+B,KAAK,GAAGmB,EAAA9C,IAAA,CAAA,GAAA7C,EAAA8C,KAAA,CAEpBL,EAAQsD,yBAAyB,CAACL,GAAQ,MAAA,GAAnD,GAAAC,EAAA3C,IAAA,CAED,CAAA2C,EAAA9C,IAAA,CAAA,GAAA,KAAA,CAAA,OAAA8C,EAAA1C,MAAA,CAAA,SACtByC,EAAO,MAAA,GAAA,OAAAC,EAAA9C,IAAA,CAAA,GAAA7C,EAAA8C,KAAA,CAIGL,EAAQuD,OAAO,CAACN,GAAQ,MAAA,GAIlB,OAJlBJ,EAAGK,EAAA3C,IAAA,CAET0C,EAAQJ,GAAG,CAAGA,EACdI,EAAQhB,CAAC,CAAG,MACZgB,EAAQvF,GAAG,CAAG,UAAUwF,EAAA1C,MAAA,CAAA,SACjByC,EAAO,MAAA,GAAA,IAAA,MAAA,OAAAC,EAAAtD,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,KAAAc,QAAA,EAEhB,EACD"}