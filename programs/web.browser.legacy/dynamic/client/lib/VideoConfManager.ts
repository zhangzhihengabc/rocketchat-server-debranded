function module(e,i,t){var n,l,r,o,c,a,s,d,u,h,g,m,f,C,p,v=["timeout","acceptTimeout"];t.link("@babel/runtime/regenerator",{default:function(e){n=e}},0),t.link("@babel/runtime/helpers/typeof",{default:function(e){l=e}},1),t.link("@babel/runtime/helpers/createForOfIteratorHelperLoose",{default:function(e){r=e}},2),t.link("@babel/runtime/helpers/slicedToArray",{default:function(e){o=e}},3),t.link("@babel/runtime/helpers/objectSpread2",{default:function(e){c=e}},4),t.link("@babel/runtime/helpers/objectWithoutProperties",{default:function(e){a=e}},5),t.link("@babel/runtime/helpers/toConsumableArray",{default:function(e){s=e}},6),t.link("@babel/runtime/helpers/createClass",{default:function(e){d=e}},7),t.link("@babel/runtime/helpers/inheritsLoose",{default:function(e){u=e}},8),t.export({VideoConfManager:function(){return b}}),t.link("@rocket.chat/emitter",{Emitter:function(e){h=e}},0),t.link("meteor/meteor",{Meteor:function(e){g=e}},1),t.link("meteor/tracker",{Tracker:function(e){m=e}},2),t.link("../../app/notifications/client",{Notifications:function(e){f=e}},3),t.link("../../app/utils/client/lib/SDKClient",{sdk:function(e){C=e}},4),t.link("./utils/getConfig",{getConfig:function(e){p=e}},5);var I=!!(p("debug")||p("debug-VideoConf")),b=new(function(e){function i(){var i;return(i=e.call(this)||this).userId=void 0,i.currentCallHandler=void 0,i.currentCallData=void 0,i.startingNewCall=!1,i.hooks=[],i.incomingDirectCalls=void 0,i.dismissedCalls=void 0,i._preferences=void 0,i._capabilities=void 0,i.incomingDirectCalls=new Map,i.dismissedCalls=new Set,i._preferences={mic:!0,cam:!1},i._capabilities={},i}u(i,e);var t=i.prototype;return t.isBusy=function(){return!!this.startingNewCall||this.isCalling()},t.isRinging=function(){var e=this;return s(this.incomingDirectCalls.values()).some(function(i){var t=i.callId;return!e.isCallDismissed(t)})},t.isCalling=function(){return!!this.currentCallHandler||!!this.currentCallData&&!this.currentCallData.joined},t.getIncomingDirectCalls=function(){var e=this;return s(this.incomingDirectCalls.values()).filter(function(e){return!e.acceptTimeout}).map(function(i){i.timeout,i.acceptTimeout;var t=a(i,v);return c(c({},t),{},{dismissed:e.isCallDismissed(t.callId)})})},t.startCall=function(e,i){var t,l=this;return n.async(function(r){for(;;)switch(r.prev=r.next){case 0:if(!(!this.userId||this.isBusy())){r.next=2;break}throw Error("Video manager is busy.");case 2:return I&&console.log("[VideoConf] Starting new call on room "+e),this.startingNewCall=!0,this.emit("calling/changed"),r.next=7,n.awrap(C.rest.post("/v1/video-conference.start",{roomId:e,title:i,allowRinging:!0}).catch(function(i){var t,n;return I&&console.error("[VideoConf] Failed to start new call on room "+e),l.startingNewCall=!1,l.emit("calling/changed"),l.emit("start/error",{error:(null==i?void 0:null===(t=i.xhr)||void 0===t?void 0:null===(n=t.responseJSON)||void 0===n?void 0:n.error)||"unknown-error"}),Promise.reject(i)}));case 7:t=r.sent.data,this.startingNewCall=!1,this.emit("calling/changed"),"direct"!==t.type&&this.emit("calling/ended"),r.t0=t.type,r.next="direct"===r.t0?15:"videoconference"===r.t0?16:"livechat"===r.t0?17:18;break;case 15:return r.abrupt("return",this.callUser({uid:t.calleeId,rid:e,callId:t.callId}));case 16:case 17:return r.abrupt("return",this.joinCall(t.callId));case 18:case"end":return r.stop()}},null,this,null,Promise)},t.acceptIncomingCall=function(e){var i=this,t=this.incomingDirectCalls.get(e);if(!t)throw Error("Unable to find accepted call information.");if(t.acceptTimeout){I&&console.log("[VideoConf] We're already trying to accept call "+e+".");return}I&&console.log("[VideoConf] Accepting incoming call "+e+"."),t.timeout&&(clearTimeout(t.timeout),this.setIncomingCallAttribute(e,"timeout",void 0)),this.dismissIncomingCall(e),this.setIncomingCallAttribute(e,"acceptTimeout",setTimeout(function(){var n=i.incomingDirectCalls.get(e);null!=n&&n.acceptTimeout&&(I&&console.log("[VideoConf] Attempt to accept call has timed out."),i.removeIncomingCall(e),i.emit("direct/failed",{callId:e,uid:t.uid,rid:t.rid}))},5e3)),this.emit("incoming/changed"),I&&console.log("[VideoConf] Notifying user "+t.uid+" that we accept their call."),this.userId&&this.notifyUser(t.uid,"accepted",{callId:e,uid:this.userId,rid:t.rid})},t.rejectIncomingCall=function(e){this.dismissIncomingCall(e);var i=this.incomingDirectCalls.get(e);i&&(this.userId&&this.notifyUser(i.uid,"rejected",{callId:e,uid:this.userId,rid:i.rid}),this.loseIncomingCall(e))},t.dismissedIncomingCalls=function(){var e=this;s(this.incomingDirectCalls.keys()).some(function(i){return e.dismissedIncomingCallHelper(i)})&&(this.emit("ringing/changed"),this.emit("incoming/changed"))},t.loadCapabilities=function(){var e;return n.async(function(i){for(;;)switch(i.prev=i.next){case 0:return i.next=2,n.awrap(C.rest.get("/v1/video-conference.capabilities").catch(function(e){return I&&console.error("[VideoConf] Failed to load video conference capabilities"),Promise.reject(e)}));case 2:e=i.sent.capabilities,this._capabilities=e||{},this.emit("capabilities/changed");case 6:case"end":return i.stop()}},null,this,null,Promise)},t.setIncomingCallAttribute=function(e,i,t){var n=this.incomingDirectCalls.get(e);if(!n){I&&console.error('[VideoConf] Cannot change attribute "'+i+'" of unknown call "'+e+'".');return}var l=c({},n);void 0===t?delete l[i]:l[i]=t,I&&console.log('[VideoConf] Updating attribute "'+i+'" of call "'+e+'".'),this.incomingDirectCalls.set(e,l)},t.dismissedIncomingCallHelper=function(e){var i=this;return!this.isCallDismissed(e)&&(I&&console.log("[VideoConf] Dismissing call "+e),this.dismissedCalls.add(e),setTimeout(function(){return i.dismissedCalls.delete(e)},2e5),this.incomingDirectCalls.has(e))},t.dismissIncomingCall=function(e){return!!this.dismissedIncomingCallHelper(e)&&(this.emit("ringing/changed"),this.emit("incoming/changed"),!0)},t.updateUser=function(){var e=g.userId();if(this.userId===e){I&&console.log("[VideoConf] Logged user has not changed, so we're not changing the hooks.");return}I&&console.log("[VideoConf] Logged user has changed."),this.userId&&this.disconnect(),e&&this.connectUser(e)},t.changePreference=function(e,i){this._preferences[e]=i,this.emit("preference/changed",{key:e,value:i})},t.setPreferences=function(e){for(var i in meteorBabelHelpers.sanitizeForInObject(e))e.hasOwnProperty(i)&&this.changePreference(i,e[i])},t.joinCall=function(e){var i,t,l,r,o,a=this;return n.async(function(s){for(;;)switch(s.prev=s.next){case 0:return I&&console.log("[VideoConf] Joining call "+e+"."),this.incomingDirectCalls.has(e)&&(null!=(i=this.incomingDirectCalls.get(e))&&i.acceptTimeout&&(I&&console.log("[VideoConf] Clearing acceptance timeout"),clearTimeout(i.acceptTimeout)),this.removeIncomingCall(e)),t={callId:e,state:c(c({},void 0!==this._preferences.mic?{mic:this._preferences.mic}:{}),void 0!==this._preferences.cam?{cam:this._preferences.cam}:{})},s.next=5,n.awrap(C.rest.post("/v1/video-conference.join",t).catch(function(i){var t,n;return I&&console.error("[VideoConf] Failed to join call "+e),a.emit("join/error",{error:(null==i?void 0:null===(t=i.xhr)||void 0===t?void 0:null===(n=t.responseJSON)||void 0===n?void 0:n.error)||"unknown-error"}),Promise.reject(i)}));case 5:if(r=(l=s.sent).url,o=l.providerName,r){s.next=10;break}throw Error("Failed to get video conference URL.");case 10:I&&console.log("[VideoConf] Opening "+r+"."),this.emit("call/join",{url:r,callId:e,providerName:o});case 12:case"end":return s.stop()}},null,this,null,Promise)},t.abortCall=function(){this.currentCallData&&this.giveUp(this.currentCallData)},t.rejectIncomingCallsFromUser=function(e){for(var i,t=r(this.incomingDirectCalls);!(i=t()).done;){var n=o(i.value,2)[1],l=n.callId;e===n.uid&&(I&&console.log("[VideoConf] Rejecting old incoming call from user "+e),this.rejectIncomingCall(l))}},t.callUser=function(e){var i,t,l,r,o=this;return n.async(function(n){for(;;)switch(n.prev=n.next){case 0:if(i=e.uid,t=e.rid,l=e.callId,!(this.currentCallHandler||this.currentCallData)){n.next=3;break}throw Error("Video Conference State Error.");case 3:r=1,this.currentCallData={callId:l,rid:t,uid:i},this.currentCallHandler=setInterval(function(){if(!o.currentCallHandler){I&&console.warn("[VideoConf] Ringing interval was not properly cleared.");return}if(++r>10){o.giveUp({uid:i,rid:t,callId:l});return}I&&console.log("[VideoConf] Ringing user "+i+", attempt number "+r+"."),o.userId&&o.notifyUser(i,"call",{uid:o.userId,rid:t,callId:l})},3e3),this.emit("calling/changed"),I&&console.log("[VideoConf] Ringing user "+i+" for the first time."),this.userId&&this.notifyUser(i,"call",{uid:this.userId,rid:t,callId:l});case 9:case"end":return n.stop()}},null,this,null,Promise)},t.giveUp=function(e){var i,t,l,r,o;return n.async(function(n){for(;;)switch(n.prev=n.next){case 0:if(t=e.uid,l=e.rid,r=e.callId,o=null===(i=this.currentCallData)||void 0===i?void 0:i.joined,I&&console.log("[VideoConf] Stop ringing user "+t+"."),this.currentCallHandler&&(clearInterval(this.currentCallHandler),this.currentCallHandler=void 0,this.currentCallData=void 0,this.emit("calling/changed")),I&&console.log("[VideoConf] Notifying user "+t+" that we are no longer calling."),this.userId&&this.notifyUser(t,"canceled",{uid:this.userId,rid:l,callId:r}),this.emit("direct/cancel",{uid:t,rid:l,callId:r}),this.emit("direct/stopped",{uid:t,rid:l,callId:r}),!o){n.next=10;break}return n.abrupt("return");case 10:C.rest.post("/v1/video-conference.cancel",{callId:r});case 11:case"end":return n.stop()}},null,this,null,Promise)},t.disconnect=function(){I&&console.log("[VideoConf] disconnecting user "+this.userId);for(var e,i=r(this.hooks);!(e=i()).done;)(0,e.value)();this.hooks=[],this.currentCallHandler&&(clearInterval(this.currentCallHandler),this.currentCallHandler=void 0),this.incomingDirectCalls.forEach(function(e){e.timeout&&clearTimeout(e.timeout),e.acceptTimeout&&clearTimeout(e.acceptTimeout)}),this.incomingDirectCalls.clear(),this.dismissedCalls.clear(),this.currentCallData=void 0,this._preferences={},this.emit("incoming/changed"),this.emit("ringing/changed"),this.emit("calling/changed")},t.onVideoConfNotification=function(e){var i,t;return n.async(function(n){for(;;)switch(n.prev=n.next){case 0:if(i=e.action,t=e.params,!(!i||"string"!=typeof i)){n.next=4;break}return I&&console.error("[VideoConf] Invalid action received."),n.abrupt("return");case 4:if(!(!t||"object"!==l(t)||!t.callId||!t.uid||!t.rid)){n.next=7;break}return I&&console.error("[VideoConf] Invalid params received."),n.abrupt("return");case 7:n.t0=i,n.next="call"===n.t0?10:"canceled"===n.t0?11:"accepted"===n.t0?12:"rejected"===n.t0?13:"confirmed"===n.t0?14:"join"===n.t0?15:"end"===n.t0?16:17;break;case 10:return n.abrupt("return",this.onDirectCall(t));case 11:return n.abrupt("return",this.onDirectCallCanceled(t));case 12:return n.abrupt("return",this.onDirectCallAccepted(t));case 13:return n.abrupt("return",this.onDirectCallRejected(t));case 14:return n.abrupt("return",this.onDirectCallConfirmed(t));case 15:return n.abrupt("return",this.onDirectCallJoined(t));case 16:return n.abrupt("return",this.onDirectCallEnded(t));case 17:case"end":return n.stop()}},null,this,null,Promise)},t.notifyUser=function(e,i,t){return n.async(function(n){for(;;)switch(n.prev=n.next){case 0:return n.abrupt("return",f.notifyUser(e,"video-conference",{action:i,params:t}));case 1:case"end":return n.stop()}},null,null,null,Promise)},t.connectUser=function(e){var i,t,l,r=this;return n.async(function(o){for(;;)switch(o.prev=o.next){case 0:return I&&console.log("[VideoConf] connecting user "+e),this.userId=e,t=(i=f.onUser("video-conference",function(e){return r.onVideoConfNotification(e)})).stop,l=i.ready,o.next=5,n.awrap(l());case 5:this.hooks.push(t);case 6:case"end":return o.stop()}},null,this,null,Promise)},t.abortIncomingCall=function(e){var i;null!==(i=this.incomingDirectCalls.get(e))&&void 0!==i&&i.acceptTimeout||(I&&console.log("[VideoConf] Canceling call "+e+" due to ringing timeout."),this.loseIncomingCall(e))},t.loseIncomingCall=function(e){var i=this.incomingDirectCalls.get(e);if(!i){I&&console.warn("[VideoConf] Unable to cancel "+e+" because we have no information about it.");return}this.removeIncomingCall(e),I&&console.log("[VideoConf] Call "+e+" from "+i.uid+" was lost."),this.emit("direct/lost",{callId:e,uid:i.uid,rid:i.rid})},t.removeIncomingCall=function(e){if(I&&console.log('[VideoConf] Removing call with id "'+e+'" from Incoming Calls list.'),this.incomingDirectCalls.has(e)){var i=this.isRinging(),t=this.incomingDirectCalls.get(e);null!=t&&t.timeout&&clearTimeout(t.timeout),this.incomingDirectCalls.delete(e),this.emit("incoming/changed"),i!==this.isRinging()&&this.emit("ringing/changed")}},t.createAbortTimeout=function(e){var i=this;return setTimeout(function(){return i.abortIncomingCall(e)},1e4)},t.startNewIncomingCall=function(e){var i=e.callId,t=e.uid,n=e.rid;if(this.isCallDismissed(i)){I&&console.log("[VideoConf] Ignoring dismissed call.");return}this.rejectIncomingCallsFromUser(t),I&&console.log("[VideoConf] Storing this new call information."),this.incomingDirectCalls.set(i,{callId:i,uid:t,rid:n,timeout:this.createAbortTimeout(i)}),this.emit("incoming/changed"),this.emit("ringing/changed"),this.emit("direct/ringing",{callId:i,uid:t,rid:n})},t.refreshExistingIncomingCall=function(e){var i=e.callId,t=e.uid,n=e.rid,l=this.incomingDirectCalls.get(i);if(!l)throw Error("Video Conference Manager State Error");I&&console.log("[VideoConf] Resetting call timeout."),l.timeout&&clearTimeout(l.timeout),l.timeout=this.createAbortTimeout(i),this.isCallDismissed(i)||this.emit("direct/ringing",{callId:i,uid:t,rid:n})},t.onDirectCall=function(e){var i,t=e.callId,n=e.uid,l=e.rid;null!==(i=this.incomingDirectCalls.get(t))&&void 0!==i&&i.acceptTimeout||(I&&console.log("[VideoConf] User "+n+" is ringing with call "+t+"."),this.incomingDirectCalls.has(t)?this.refreshExistingIncomingCall({callId:t,uid:n,rid:l}):this.startNewIncomingCall({callId:t,uid:n,rid:l}))},t.onDirectCallCanceled=function(e){var i=e.callId;I&&console.log("[VideoConf] Call "+i+" was canceled by the remote user.");var t=this.incomingDirectCalls.get(i);null!=t&&t.acceptTimeout&&(clearTimeout(t.acceptTimeout),this.setIncomingCallAttribute(i,"acceptTimeout",void 0)),this.loseIncomingCall(i)},t.onDirectCallAccepted=function(e){var i,t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!e.callId||e.callId!==(null===(i=this.currentCallData)||void 0===i?void 0:i.callId)){I&&console.log("[VideoConf] User "+e.uid+" has accepted a call "+e.callId+" from us, but we're not calling.");return}I&&console.log("[VideoConf] User "+e.uid+" has accepted our call "+e.callId+"."),this.currentCallHandler&&(clearInterval(this.currentCallHandler),this.currentCallHandler=void 0);var n=this.currentCallData;this.emit("direct/accepted",e),this.emit("direct/stopped",e),this.currentCallData=void 0,this.emit("calling/changed"),n.joined||this.joinCall(e.callId),!t&&(I&&console.log("[VideoConf] Notifying user "+n.uid+" that they can join the call now."),this.userId&&this.notifyUser(n.uid,"confirmed",{callId:n.callId,uid:this.userId,rid:n.rid}))},t.onDirectCallConfirmed=function(e){var i;if(!e.callId||!(null!==(i=this.incomingDirectCalls.get(e.callId))&&void 0!==i&&i.acceptTimeout)){I&&console.log("[VideoConf] User "+e.uid+" confirmed we can join "+e.callId+" but we aren't trying to join it.");return}this.joinCall(e.callId)},t.onDirectCallJoined=function(e){if(!e.callId){I&&console.log("[VideoConf] Invalid 'video-conference.join' event received: "+e.callId+", "+e.uid+".");return}if(e.uid===this.userId){var i;if((null===(i=this.currentCallData)||void 0===i?void 0:i.callId)===e.callId){I&&console.log("[VideoConf] We joined our own call ("+this.userId+") from somewhere else. Flagging the call appropriatelly."),this.currentCallData.joined=!0,this.emit("calling/changed");return}this.incomingDirectCalls.has(e.callId)&&(I&&console.log("[VideoConf] We joined the call "+e.callId+" from somewhere else. Dismissing it."),this.dismissIncomingCall(e.callId),this.loseIncomingCall(e.callId));return}I&&console.log("[VideoConf] User "+e.uid+" has joined a call we started "+e.callId+"."),this.onDirectCallAccepted(e,!0)},t.onDirectCallEnded=function(e){if(!e.callId){I&&console.log("[VideoConf] Invalid 'video-conference.end' event received: "+e.callId+", "+e.uid+".");return}var i,t=this.incomingDirectCalls.get(e.callId);if(t){I&&console.log("[VideoConf] Incoming call ended by the server: "+e.callId+"."),t.acceptTimeout&&(clearTimeout(t.acceptTimeout),this.setIncomingCallAttribute(e.callId,"acceptTimeout",void 0)),this.loseIncomingCall(e.callId);return}if((null===(i=this.currentCallData)||void 0===i?void 0:i.callId)!==e.callId){I&&console.log("[VideoConf] Server sent a call ended event for a call we're not aware of: "+e.callId+".");return}I&&console.log("[VideoConf] Outgoing call ended by the server: "+e.callId+"."),this.currentCallData=void 0,this.currentCallHandler&&(clearInterval(this.currentCallHandler),this.currentCallHandler=void 0,this.emit("calling/changed"),this.emit("direct/stopped",e))},t.onDirectCallRejected=function(e){if(!e.callId||e.callId!==(null===(i=this.currentCallData)||void 0===i?void 0:i.callId)){I&&console.log("[VideoConf] User "+e.uid+" has rejected a call "+e.callId+" from us, but we're not calling.");return}I&&console.log("[VideoConf] User "+e.uid+" has rejected our call "+e.callId+"."),this.currentCallHandler&&(clearInterval(this.currentCallHandler),this.currentCallHandler=void 0);var i,t=this.currentCallData.joined;this.emit("direct/cancel",e),this.currentCallData=void 0,this.emit("direct/stopped",e),this.emit("calling/changed"),t||C.rest.post("/v1/video-conference.cancel",{callId:e.callId})},t.isCallDismissed=function(e){return this.dismissedCalls.has(e)},d(i,[{key:"preferences",get:function(){return this._preferences}},{key:"capabilities",get:function(){return this._capabilities}}]),i}(h));g.startup(function(){return m.autorun(function(){return b.updateUser()})})}
//# sourceMappingURL=/dynamic/client/lib/7fae72fff2fe4ba057bd811f603b1b48926de9c4.map
