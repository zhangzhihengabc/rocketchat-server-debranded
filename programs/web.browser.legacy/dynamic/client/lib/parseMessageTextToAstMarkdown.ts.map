)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/lib/parseMessageTextToAstMarkdown.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IMessage, ITranslatedMessage, MessageAttachment, MessageQuoteAttachment } from '@rocket.chat/core-typings';\nimport {\n\tisFileAttachment,\n\tisE2EEMessage,\n\tisOTRMessage,\n\tisOTRAckMessage,\n\tisQuoteAttachment,\n\tisTranslatedAttachment,\n\tisTranslatedMessage,\n} from '@rocket.chat/core-typings';\nimport type { Options, Root } from '@rocket.chat/message-parser';\nimport { parse } from '@rocket.chat/message-parser';\n\nimport type { AutoTranslateOptions } from '../views/room/MessageList/hooks/useAutoTranslate';\nimport { isParsedMessage } from '../views/room/MessageList/lib/isParsedMessage';\n\ntype WithRequiredProperty<Type, Key extends keyof Type> = Omit<Type, Key> & {\n\t[Property in Key]-?: Type[Property];\n};\n\nexport type MessageWithMdEnforced<TMessage extends IMessage & Partial<ITranslatedMessage> = IMessage & Partial<ITranslatedMessage>> =\n\tWithRequiredProperty<TMessage, 'md'>;\n/**\n * Removes null values for known properties values.\n * Adds a property `md` to the message with the parsed message if is not provided.\n * if has `attachments` property, but attachment is missing `md` property, it will be added.\n * if translation is enabled and message contains `translations` property, it will be replaced by the parsed message.\n * @param message The message to be parsed.\n * @param parseOptions The options to be used in the parser.\n * @param autoTranslateOptions The auto translate options to be used in the parser.\n * @returns message normalized.\n */\nexport const parseMessageTextToAstMarkdown = <\n\tTMessage extends IMessage & Partial<ITranslatedMessage> = IMessage & Partial<ITranslatedMessage>,\n>(\n\tmessage: TMessage,\n\tparseOptions: Options,\n\tautoTranslateOptions: AutoTranslateOptions,\n): MessageWithMdEnforced => {\n\tconst msg = removePossibleNullMessageValues(message);\n\tconst { showAutoTranslate, autoTranslateLanguage } = autoTranslateOptions;\n\tconst translations = autoTranslateLanguage && isTranslatedMessage(msg) && msg.translations;\n\tconst translated = showAutoTranslate(message);\n\n\tconst text = (translated && translations && translations[autoTranslateLanguage]) || msg.msg;\n\n\treturn {\n\t\t...msg,\n\t\tmd:\n\t\t\tisE2EEMessage(message) || isOTRMessage(message) || isOTRAckMessage(message) || translated\n\t\t\t\t? textToMessageToken(text, parseOptions)\n\t\t\t\t: msg.md ?? textToMessageToken(text, parseOptions),\n\t\t...(msg.attachments && {\n\t\t\tattachments: parseMessageAttachments(msg.attachments, parseOptions, { autoTranslateLanguage, translated }),\n\t\t}),\n\t};\n};\n\nexport const parseMessageQuoteAttachment = <T extends MessageQuoteAttachment>(\n\tquote: T,\n\tparseOptions: Options,\n\tautoTranslateOptions: { autoTranslateLanguage?: string; translated: boolean },\n): T => {\n\tconst { translated, autoTranslateLanguage } = autoTranslateOptions;\n\tif (quote.attachments && quote.attachments?.length > 0) {\n\t\tquote.attachments = quote.attachments.map((attachment) => parseMessageQuoteAttachment(attachment, parseOptions, autoTranslateOptions));\n\t}\n\n\tconst text = (isTranslatedAttachment(quote) && autoTranslateLanguage && quote?.translations?.[autoTranslateLanguage]) || quote.text || '';\n\n\treturn {\n\t\t...quote,\n\t\tmd: translated ? textToMessageToken(text, parseOptions) : quote.md ?? textToMessageToken(text, parseOptions),\n\t};\n};\n\nexport const parseMessageAttachments = <T extends MessageAttachment>(\n\tattachments: T[],\n\tparseOptions: Options,\n\tautoTranslateOptions: { autoTranslateLanguage?: string; translated: boolean },\n): T[] =>\n\tattachments.map((attachment) => {\n\t\tconst { translated, autoTranslateLanguage } = autoTranslateOptions;\n\t\tif (!attachment.text && !attachment.description) {\n\t\t\treturn attachment;\n\t\t}\n\n\t\tif (isQuoteAttachment(attachment) && attachment.attachments) {\n\t\t\tattachment.attachments = attachment.attachments.map((quoteAttachment) =>\n\t\t\t\tparseMessageQuoteAttachment(quoteAttachment, parseOptions, autoTranslateOptions),\n\t\t\t);\n\t\t}\n\n\t\tconst text =\n\t\t\t(isTranslatedAttachment(attachment) && autoTranslateLanguage && attachment?.translations?.[autoTranslateLanguage]) ||\n\t\t\tattachment.text ||\n\t\t\tattachment.description ||\n\t\t\t'';\n\n\t\tif (isFileAttachment(attachment) && attachment.description) {\n\t\t\tattachment.descriptionMd = translated\n\t\t\t\t? textToMessageToken(text, parseOptions)\n\t\t\t\t: attachment.descriptionMd ?? textToMessageToken(text, parseOptions);\n\t\t}\n\n\t\treturn {\n\t\t\t...attachment,\n\t\t\tmd: translated ? textToMessageToken(text, parseOptions) : attachment.md ?? textToMessageToken(text, parseOptions),\n\t\t};\n\t});\n\nconst isNotNullOrUndefined = (value: unknown): boolean => value !== null && value !== undefined;\n\n// In a previous version of the app, some values were being set to null.\n// This is a workaround to remove those null values.\n// A migration script should be created to remove this code.\nexport const removePossibleNullMessageValues = <TMessage extends IMessage = IMessage>({\n\teditedBy,\n\teditedAt,\n\temoji,\n\tavatar,\n\talias,\n\tcustomFields,\n\tgroupable,\n\tattachments,\n\treactions,\n\t...message\n}: any): TMessage => ({\n\t...message,\n\t...(isNotNullOrUndefined(editedBy) && { editedBy }),\n\t...(isNotNullOrUndefined(editedAt) && { editedAt }),\n\t...(isNotNullOrUndefined(emoji) && { emoji }),\n\t...(isNotNullOrUndefined(avatar) && { avatar }),\n\t...(isNotNullOrUndefined(alias) && { alias }),\n\t...(isNotNullOrUndefined(customFields) && { customFields }),\n\t...(isNotNullOrUndefined(groupable) && { groupable }),\n\t...(isNotNullOrUndefined(attachments) && { attachments }),\n\t...(isNotNullOrUndefined(reactions) && { reactions }),\n});\n\nconst textToMessageToken = (textOrRoot: string | Root, parseOptions: Options): Root => {\n\tif (!textOrRoot) {\n\t\treturn [];\n\t}\n\n\tif (isParsedMessage(textOrRoot)) {\n\t\treturn textOrRoot;\n\t}\n\tconst parsedMessage = parse(textOrRoot, parseOptions);\n\n\tconst parsedMessageCleaned = parsedMessage[0].type !== 'LINE_BREAK' ? parsedMessage : (parsedMessage.slice(1) as Root);\n\n\treturn parsedMessageCleaned;\n};\n",null],"names":["_objectWithoutProperties","_objectSpread","isFileAttachment","isE2EEMessage","isOTRMessage","isOTRAckMessage","isQuoteAttachment","isTranslatedAttachment","isTranslatedMessage","parse","isParsedMessage","module","default","v","export","parseMessageTextToAstMarkdown","parseMessageQuoteAttachment","parseMessageAttachments","removePossibleNullMessageValues","message","parseOptions","autoTranslateOptions","_msg$md","msg","showAutoTranslate","autoTranslateLanguage","translations","translated","text","md","textToMessageToken","attachments","quote","_quote$attachments","_quote$translations","_quote$md","length","map","attachment","_attachment$translati","_attachment$md","_attachment$descripti","description","quoteAttachment","descriptionMd","isNotNullOrUndefined","value","_ref","editedBy","editedAt","emoji","avatar","alias","customFields","groupable","reactions","_excluded","textOrRoot","parsedMessage","type","slice"],"mappings":"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"}