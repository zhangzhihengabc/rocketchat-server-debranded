)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/lib/rooms/roomTypes/conversation.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { getUserPreference } from '../../../../app/utils/client';\nimport { getConversationRoomType } from '../../../../lib/rooms/roomTypes/conversation';\nimport { roomCoordinator } from '../roomCoordinator';\n\nexport const ConversationRoomType = getConversationRoomType(roomCoordinator);\n\nroomCoordinator.add(\n\t{\n\t\t...ConversationRoomType,\n\t\tlabel: 'Conversations',\n\t},\n\t{\n\t\tcondition(): boolean {\n\t\t\t// returns true only if sidebarGroupByType is not set\n\t\t\treturn !getUserPreference(Meteor.userId(), 'sidebarGroupByType');\n\t\t},\n\t},\n);\n",null],"names":["module","link","default","_objectSpread","export","ConversationRoomType","Meteor","getUserPreference","getConversationRoomType","roomCoordinator","add","label","condition","userId"],"mappings":"uBAAiBA,EAAMC,IAAA,CAAA,uCAAgB,CAAAC,QAAAA,SAAAA,CAAAA,EAAAC,EAAAA,CAAA,CAAA,EAAA,GAAvCH,EAAOI,MAAE,CAAA,CAAMC,qBAAQ,WAAgB,OAAAA,CAAA,CAAA,GAAAL,EAAAA,IAAAA,CAAAA,gBAAAA,CAAAM,OAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAN,EAAAA,IAAAA,CAAAA,+BAAAA,CAAAO,kBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAP,EAAAA,IAAAA,CAAAA,+CAAAA,CAAAQ,wBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAR,EAAAA,IAAAA,CAAAA,qBAAAA,CAAAS,gBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAMhC,IANPN,EAAuCG,EAAAC,EAAAC,EAAAC,EAM1BJ,EAAuBG,EAAwBC,GAE5DA,EAAgBC,GAAG,CAAAP,EAAAA,EAAA,CAAA,EAEdE,GAAoB,CAAA,EAAA,CACvBM,MAAO,eAAe,GAEvB,CACCC,UAAS,WAER,MAAO,CAACL,EAAkBD,EAAOO,MAAM,GAAI,qBAC5C"}