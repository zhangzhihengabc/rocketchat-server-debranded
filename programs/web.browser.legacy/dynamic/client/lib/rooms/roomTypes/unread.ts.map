)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/lib/rooms/roomTypes/unread.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { getUserPreference } from '../../../../app/utils/client';\nimport { getUnreadRoomType } from '../../../../lib/rooms/roomTypes/unread';\nimport { roomCoordinator } from '../roomCoordinator';\n\nexport const UnreadRoomType = getUnreadRoomType(roomCoordinator);\n\nroomCoordinator.add(\n\t{\n\t\t...UnreadRoomType,\n\t\tlabel: 'Unread',\n\t},\n\t{\n\t\tcondition(): boolean {\n\t\t\treturn getUserPreference(Meteor.userId(), 'sidebarShowUnread') as boolean;\n\t\t},\n\t},\n);\n",null],"names":["module","link","default","_objectSpread","export","UnreadRoomType","Meteor","getUserPreference","getUnreadRoomType","roomCoordinator","add","label","condition","userId"],"mappings":"uBAAiBA,EAAMC,IAAA,CAAA,uCAAgB,CAAAC,QAAAA,SAAAA,CAAAA,EAAAC,EAAAA,CAAA,CAAA,EAAA,GAAvCH,EAAOI,MAAE,CAAA,CAAMC,eAAQ,WAAgB,OAAAA,CAAA,CAAA,GAAAL,EAAAA,IAAAA,CAAAA,gBAAAA,CAAAM,OAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAN,EAAAA,IAAAA,CAAAA,+BAAAA,CAAAO,kBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAP,EAAAA,IAAAA,CAAAA,yCAAAA,CAAAQ,kBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAR,EAAAA,IAAAA,CAAAA,qBAAAA,CAAAS,gBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAMhC,IANPN,EAAuCG,EAAAC,EAAAC,EAAAC,EAM1BJ,EAAiBG,EAAkBC,GAEhDA,EAAgBC,GAAG,CAAAP,EAAAA,EAAA,CAAA,EAEdE,GAAc,CAAA,EAAA,CACjBM,MAAO,QAAQ,GAEhB,CACCC,UAAS,WACR,OAAOL,EAAkBD,EAAOO,MAAM,GAAI,oBAC3C"}