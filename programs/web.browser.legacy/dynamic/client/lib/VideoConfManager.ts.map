)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/lib/VideoConfManager.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { Emitter } from '@rocket.chat/emitter';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { Notifications } from '../../app/notifications/client';\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\nimport { getConfig } from './utils/getConfig';\n\nconst debug = !!(getConfig('debug') || getConfig('debug-VideoConf'));\n\n// The interval between attempts to call the remote user\nconst CALL_INTERVAL = 3000;\n// How many attempts to call we're gonna make\nconst CALL_ATTEMPT_LIMIT = 10;\n// The amount of time we'll assume an incoming call is still valid without any updates from the remote user\nconst CALL_TIMEOUT = 10000;\n// How long are we gonna wait for a link after accepting an incoming call\nconst ACCEPT_TIMEOUT = 5000;\n\ntype DirectCallParams = {\n\tuid: IUser['_id'];\n\trid: IRoom['_id'];\n\tcallId: string;\n};\n\nexport type DirectCallData = DirectCallParams & {\n\tdismissed: boolean;\n};\n\ntype IncomingDirectCall = DirectCallParams & {\n\ttimeout: ReturnType<typeof setTimeout> | undefined;\n\tacceptTimeout?: ReturnType<typeof setTimeout> | undefined;\n};\n\nexport type CallPreferences = {\n\tmic?: boolean;\n\tcam?: boolean;\n};\n\nexport type ProviderCapabilities = {\n\tmic?: boolean;\n\tcam?: boolean;\n\ttitle?: boolean;\n};\n\ntype CurrentCallParams = {\n\tcallId: string;\n\turl: string;\n\tproviderName?: string;\n};\n\ntype VideoConfEvents = {\n\t// We gave up on calling a remote user or they rejected our call\n\t'direct/cancel': DirectCallParams;\n\n\t// A remote user is calling us\n\t'direct/ringing': DirectCallParams;\n\n\t// An incoming call was lost, either by timeout or because the remote user canceled\n\t'direct/lost': DirectCallParams;\n\n\t// We tried to accept an incoming call but the process failed\n\t'direct/failed': DirectCallParams;\n\n\t// A remote user accepted our call\n\t'direct/accepted': DirectCallParams;\n\n\t// We stopped calling a remote user\n\t'direct/stopped': DirectCallParams;\n\n\t'preference/changed': { key: keyof CallPreferences; value: boolean };\n\n\t// The list of incoming calls has changed in some way\n\t'incoming/changed': void;\n\n\t// The list of ringing incoming calls may have changed\n\t'ringing/changed': void;\n\n\t// The value of `isCalling` may have changed\n\t'calling/changed': void;\n\n\t'calling/ended': void;\n\n\t// When join call\n\t'call/join': CurrentCallParams;\n\n\t'join/error': { error: string };\n\n\t'start/error': { error: string };\n\n\t'capabilities/changed': void;\n};\n\nexport const VideoConfManager = new (class VideoConfManager extends Emitter<VideoConfEvents> {\n\tprivate userId: string | undefined;\n\n\tprivate currentCallHandler: ReturnType<typeof setTimeout> | undefined;\n\n\tprivate currentCallData: (DirectCallParams & { joined?: boolean }) | undefined;\n\n\tprivate startingNewCall = false;\n\n\tprivate hooks: (() => void)[] = [];\n\n\tprivate incomingDirectCalls: Map<string, IncomingDirectCall>;\n\n\tprivate dismissedCalls: Set<string>;\n\n\tprivate _preferences: CallPreferences;\n\n\tprivate _capabilities: ProviderCapabilities;\n\n\tpublic get preferences(): CallPreferences {\n\t\treturn this._preferences;\n\t}\n\n\tpublic get capabilities(): ProviderCapabilities {\n\t\treturn this._capabilities;\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.incomingDirectCalls = new Map<string, IncomingDirectCall>();\n\t\tthis.dismissedCalls = new Set<string>();\n\t\tthis._preferences = { mic: true, cam: false };\n\t\tthis._capabilities = {};\n\t}\n\n\tpublic isBusy(): boolean {\n\t\tif (this.startingNewCall) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.isCalling();\n\t}\n\n\tpublic isRinging(): boolean {\n\t\treturn [...this.incomingDirectCalls.values()].some(({ callId }) => !this.isCallDismissed(callId));\n\t}\n\n\tpublic isCalling(): boolean {\n\t\tif (this.currentCallHandler || (this.currentCallData && !this.currentCallData.joined)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic getIncomingDirectCalls(): DirectCallData[] {\n\t\treturn (\n\t\t\t[...this.incomingDirectCalls.values()]\n\t\t\t\t// Filter out any calls that we're in the process of accepting, so they're already hidden from the UI\n\t\t\t\t.filter((call) => !call.acceptTimeout)\n\t\t\t\t.map(({ timeout: _, acceptTimeout: _t, ...call }) => ({ ...call, dismissed: this.isCallDismissed(call.callId) }))\n\t\t);\n\t}\n\n\tpublic async startCall(roomId: IRoom['_id'], title?: string): Promise<void> {\n\t\tif (!this.userId || this.isBusy()) {\n\t\t\tthrow new Error('Video manager is busy.');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Starting new call on room ${roomId}`);\n\t\tthis.startingNewCall = true;\n\t\tthis.emit('calling/changed');\n\n\t\tconst { data } = await sdk.rest.post('/v1/video-conference.start', { roomId, title, allowRinging: true }).catch((e: any) => {\n\t\t\tdebug && console.error(`[VideoConf] Failed to start new call on room ${roomId}`);\n\t\t\tthis.startingNewCall = false;\n\t\t\tthis.emit('calling/changed');\n\t\t\tthis.emit('start/error', { error: e?.xhr?.responseJSON?.error || 'unknown-error' });\n\n\t\t\treturn Promise.reject(e);\n\t\t});\n\n\t\tthis.startingNewCall = false;\n\t\tthis.emit('calling/changed');\n\n\t\tif (data.type !== 'direct') {\n\t\t\tthis.emit('calling/ended');\n\t\t}\n\n\t\tswitch (data.type) {\n\t\t\tcase 'direct':\n\t\t\t\treturn this.callUser({ uid: data.calleeId, rid: roomId, callId: data.callId });\n\t\t\tcase 'videoconference':\n\t\t\t\treturn this.joinCall(data.callId);\n\t\t\tcase 'livechat':\n\t\t\t\treturn this.joinCall(data.callId);\n\t\t}\n\t}\n\n\tpublic acceptIncomingCall(callId: string): void {\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (!callData) {\n\t\t\tthrow new Error('Unable to find accepted call information.');\n\t\t}\n\t\tif (callData.acceptTimeout) {\n\t\t\tdebug && console.log(`[VideoConf] We're already trying to accept call ${callId}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Accepting incoming call ${callId}.`);\n\n\t\tif (callData.timeout) {\n\t\t\tclearTimeout(callData.timeout);\n\t\t\tthis.setIncomingCallAttribute(callId, 'timeout', undefined);\n\t\t}\n\n\t\t// Mute this call Id so any lingering notifications don't trigger it again\n\t\tthis.dismissIncomingCall(callId);\n\n\t\tthis.setIncomingCallAttribute(\n\t\t\tcallId,\n\t\t\t'acceptTimeout',\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst updatedCallData = this.incomingDirectCalls.get(callId);\n\t\t\t\tif (!updatedCallData?.acceptTimeout) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdebug && console.log(`[VideoConf] Attempt to accept call has timed out.`);\n\t\t\t\tthis.removeIncomingCall(callId);\n\n\t\t\t\tthis.emit('direct/failed', { callId, uid: callData.uid, rid: callData.rid });\n\t\t\t}, ACCEPT_TIMEOUT),\n\t\t);\n\t\tthis.emit('incoming/changed');\n\n\t\tdebug && console.log(`[VideoConf] Notifying user ${callData.uid} that we accept their call.`);\n\t\tthis.userId && this.notifyUser(callData.uid, 'accepted', { callId, uid: this.userId, rid: callData.rid });\n\t}\n\n\tpublic rejectIncomingCall(callId: string): void {\n\t\tthis.dismissIncomingCall(callId);\n\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (!callData) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.userId && this.notifyUser(callData.uid, 'rejected', { callId, uid: this.userId, rid: callData.rid });\n\t\tthis.loseIncomingCall(callId);\n\t}\n\n\tpublic dismissedIncomingCalls(): void {\n\t\t// Mute all calls that are currently ringing\n\t\tif ([...this.incomingDirectCalls.keys()].some((callId) => this.dismissedIncomingCallHelper(callId))) {\n\t\t\tthis.emit('ringing/changed');\n\t\t\tthis.emit('incoming/changed');\n\t\t}\n\t}\n\n\tpublic async loadCapabilities(): Promise<void> {\n\t\tconst { capabilities } = await sdk.rest.get('/v1/video-conference.capabilities').catch((e: any) => {\n\t\t\tdebug && console.error(`[VideoConf] Failed to load video conference capabilities`);\n\n\t\t\treturn Promise.reject(e);\n\t\t});\n\n\t\tthis._capabilities = capabilities || {};\n\t\tthis.emit('capabilities/changed');\n\t}\n\n\tprivate setIncomingCallAttribute<T extends keyof IncomingDirectCall>(\n\t\tcallId: string,\n\t\tattributeName: T,\n\t\tvalue: IncomingDirectCall[T] | undefined,\n\t): void {\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (!callData) {\n\t\t\tdebug && console.error(`[VideoConf] Cannot change attribute \"${attributeName}\" of unknown call \"${callId}\".`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst newData: IncomingDirectCall = {\n\t\t\t...callData,\n\t\t};\n\n\t\tif (value === undefined) {\n\t\t\tdelete newData[attributeName];\n\t\t} else {\n\t\t\tnewData[attributeName] = value;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Updating attribute \"${attributeName}\" of call \"${callId}\".`);\n\t\tthis.incomingDirectCalls.set(callId, newData);\n\t}\n\n\tprivate dismissedIncomingCallHelper(callId: string): boolean {\n\t\t// Muting will stop a callId from ringing, but it doesn't affect any part of the existing workflow\n\t\tif (this.isCallDismissed(callId)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Dismissing call ${callId}`);\n\t\tthis.dismissedCalls.add(callId);\n\t\t// We don't need to hold on to the dismissed callIds forever because the server won't let anyone call us with it for very long\n\t\tsetTimeout(() => this.dismissedCalls.delete(callId), CALL_TIMEOUT * 20);\n\t\t// Only change the state if this call is actually in our list\n\t\treturn this.incomingDirectCalls.has(callId);\n\t}\n\n\tpublic dismissIncomingCall(callId: string): boolean {\n\t\tif (this.dismissedIncomingCallHelper(callId)) {\n\t\t\tthis.emit('ringing/changed');\n\t\t\tthis.emit('incoming/changed');\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic updateUser(): void {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (this.userId === userId) {\n\t\t\tdebug && console.log(`[VideoConf] Logged user has not changed, so we're not changing the hooks.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Logged user has changed.`);\n\n\t\tif (this.userId) {\n\t\t\tthis.disconnect();\n\t\t}\n\n\t\tif (userId) {\n\t\t\tthis.connectUser(userId);\n\t\t}\n\t}\n\n\tpublic changePreference(key: keyof CallPreferences, value: boolean): void {\n\t\tthis._preferences[key] = value;\n\t\tthis.emit('preference/changed', { key, value });\n\t}\n\n\tpublic setPreferences(prefs: Partial<CallPreferences>): void {\n\t\tfor (const key in prefs) {\n\t\t\tif (prefs.hasOwnProperty(key)) {\n\t\t\t\tconst prefKey = key as keyof CallPreferences;\n\t\t\t\tthis.changePreference(prefKey, prefs[prefKey] as boolean);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async joinCall(callId: string): Promise<void> {\n\t\tdebug && console.log(`[VideoConf] Joining call ${callId}.`);\n\n\t\tif (this.incomingDirectCalls.has(callId)) {\n\t\t\tconst data = this.incomingDirectCalls.get(callId);\n\t\t\tif (data?.acceptTimeout) {\n\t\t\t\tdebug && console.log('[VideoConf] Clearing acceptance timeout');\n\t\t\t\tclearTimeout(data.acceptTimeout);\n\t\t\t}\n\t\t\tthis.removeIncomingCall(callId);\n\t\t}\n\n\t\tconst params = {\n\t\t\tcallId,\n\t\t\tstate: {\n\t\t\t\t...(this._preferences.mic !== undefined ? { mic: this._preferences.mic } : {}),\n\t\t\t\t...(this._preferences.cam !== undefined ? { cam: this._preferences.cam } : {}),\n\t\t\t},\n\t\t};\n\n\t\tconst { url, providerName } = await sdk.rest.post('/v1/video-conference.join', params).catch((e) => {\n\t\t\tdebug && console.error(`[VideoConf] Failed to join call ${callId}`);\n\t\t\tthis.emit('join/error', { error: e?.xhr?.responseJSON?.error || 'unknown-error' });\n\n\t\t\treturn Promise.reject(e);\n\t\t});\n\n\t\tif (!url) {\n\t\t\tthrow new Error('Failed to get video conference URL.');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Opening ${url}.`);\n\t\tthis.emit('call/join', { url, callId, providerName });\n\t}\n\n\tpublic abortCall(): void {\n\t\tif (!this.currentCallData) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.giveUp(this.currentCallData);\n\t}\n\n\tprivate rejectIncomingCallsFromUser(userId: string): void {\n\t\tfor (const [, { callId, uid }] of this.incomingDirectCalls) {\n\t\t\tif (userId === uid) {\n\t\t\t\tdebug && console.log(`[VideoConf] Rejecting old incoming call from user ${userId}`);\n\t\t\t\tthis.rejectIncomingCall(callId);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async callUser({ uid, rid, callId }: DirectCallParams): Promise<void> {\n\t\tif (this.currentCallHandler || this.currentCallData) {\n\t\t\tthrow new Error('Video Conference State Error.');\n\t\t}\n\n\t\tlet attempt = 1;\n\t\tthis.currentCallData = { callId, rid, uid };\n\t\tthis.currentCallHandler = setInterval(() => {\n\t\t\tif (!this.currentCallHandler) {\n\t\t\t\tdebug && console.warn(`[VideoConf] Ringing interval was not properly cleared.`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tattempt++;\n\n\t\t\tif (attempt > CALL_ATTEMPT_LIMIT) {\n\t\t\t\tthis.giveUp({ uid, rid, callId });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdebug && console.log(`[VideoConf] Ringing user ${uid}, attempt number ${attempt}.`);\n\t\t\tthis.userId && this.notifyUser(uid, 'call', { uid: this.userId, rid, callId });\n\t\t}, CALL_INTERVAL);\n\t\tthis.emit('calling/changed');\n\n\t\tdebug && console.log(`[VideoConf] Ringing user ${uid} for the first time.`);\n\t\tthis.userId && this.notifyUser(uid, 'call', { uid: this.userId, rid, callId });\n\t}\n\n\tprivate async giveUp({ uid, rid, callId }: DirectCallParams): Promise<void> {\n\t\tconst joined = this.currentCallData?.joined;\n\n\t\tdebug && console.log(`[VideoConf] Stop ringing user ${uid}.`);\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t\tthis.currentCallData = undefined;\n\t\t\tthis.emit('calling/changed');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Notifying user ${uid} that we are no longer calling.`);\n\t\tthis.userId && this.notifyUser(uid, 'canceled', { uid: this.userId, rid, callId });\n\n\t\tthis.emit('direct/cancel', { uid, rid, callId });\n\t\tthis.emit('direct/stopped', { uid, rid, callId });\n\n\t\tif (joined) {\n\t\t\treturn;\n\t\t}\n\n\t\tsdk.rest.post('/v1/video-conference.cancel', { callId });\n\t}\n\n\tprivate disconnect(): void {\n\t\tdebug && console.log(`[VideoConf] disconnecting user ${this.userId}`);\n\t\tfor (const hook of this.hooks) {\n\t\t\thook();\n\t\t}\n\t\tthis.hooks = [];\n\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t}\n\n\t\tthis.incomingDirectCalls.forEach((call) => {\n\t\t\tif (call.timeout) {\n\t\t\t\tclearTimeout(call.timeout);\n\t\t\t}\n\t\t\tif (call.acceptTimeout) {\n\t\t\t\tclearTimeout(call.acceptTimeout);\n\t\t\t}\n\t\t});\n\t\tthis.incomingDirectCalls.clear();\n\t\tthis.dismissedCalls.clear();\n\t\tthis.currentCallData = undefined;\n\t\tthis._preferences = {};\n\t\tthis.emit('incoming/changed');\n\t\tthis.emit('ringing/changed');\n\t\tthis.emit('calling/changed');\n\t}\n\n\tprivate async onVideoConfNotification({ action, params }: { action: string; params: DirectCallParams }): Promise<void> {\n\t\tif (!action || typeof action !== 'string') {\n\t\t\tdebug && console.error('[VideoConf] Invalid action received.');\n\t\t\treturn;\n\t\t}\n\t\tif (!params || typeof params !== 'object' || !params.callId || !params.uid || !params.rid) {\n\t\t\tdebug && console.error('[VideoConf] Invalid params received.');\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (action) {\n\t\t\tcase 'call':\n\t\t\t\treturn this.onDirectCall(params);\n\t\t\tcase 'canceled':\n\t\t\t\treturn this.onDirectCallCanceled(params);\n\t\t\tcase 'accepted':\n\t\t\t\treturn this.onDirectCallAccepted(params);\n\t\t\tcase 'rejected':\n\t\t\t\treturn this.onDirectCallRejected(params);\n\t\t\tcase 'confirmed':\n\t\t\t\treturn this.onDirectCallConfirmed(params);\n\t\t\tcase 'join':\n\t\t\t\treturn this.onDirectCallJoined(params);\n\t\t\tcase 'end':\n\t\t\t\treturn this.onDirectCallEnded(params);\n\t\t}\n\t}\n\n\tprivate async notifyUser(uid: IUser['_id'], action: string, params: DirectCallParams): Promise<void> {\n\t\treturn Notifications.notifyUser(uid, 'video-conference', { action, params });\n\t}\n\n\tprivate async connectUser(userId: string): Promise<void> {\n\t\tdebug && console.log(`[VideoConf] connecting user ${userId}`);\n\t\tthis.userId = userId;\n\n\t\tconst { stop, ready } = Notifications.onUser('video-conference', (data) => this.onVideoConfNotification(data));\n\n\t\tawait ready();\n\n\t\tthis.hooks.push(stop);\n\t}\n\n\tprivate abortIncomingCall(callId: string): void {\n\t\t// If we just accepted this call, then ignore the timeout\n\t\tif (this.incomingDirectCalls.get(callId)?.acceptTimeout) {\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Canceling call ${callId} due to ringing timeout.`);\n\t\tthis.loseIncomingCall(callId);\n\t}\n\n\tprivate loseIncomingCall(callId: string): void {\n\t\tconst lostCall = this.incomingDirectCalls.get(callId);\n\t\tif (!lostCall) {\n\t\t\tdebug && console.warn(`[VideoConf] Unable to cancel ${callId} because we have no information about it.`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.removeIncomingCall(callId);\n\n\t\tdebug && console.log(`[VideoConf] Call ${callId} from ${lostCall.uid} was lost.`);\n\t\tthis.emit('direct/lost', { callId, uid: lostCall.uid, rid: lostCall.rid });\n\t}\n\n\tprivate removeIncomingCall(callId: string): void {\n\t\tdebug && console.log(`[VideoConf] Removing call with id \"${callId}\" from Incoming Calls list.`);\n\t\tif (!this.incomingDirectCalls.has(callId)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isRinging = this.isRinging();\n\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (callData?.timeout) {\n\t\t\tclearTimeout(callData.timeout);\n\t\t}\n\n\t\tthis.incomingDirectCalls.delete(callId);\n\t\tthis.emit('incoming/changed');\n\n\t\tif (isRinging !== this.isRinging()) {\n\t\t\tthis.emit('ringing/changed');\n\t\t}\n\t}\n\n\tprivate createAbortTimeout(callId: string): ReturnType<typeof setTimeout> {\n\t\treturn setTimeout(() => this.abortIncomingCall(callId), CALL_TIMEOUT);\n\t}\n\n\tprivate startNewIncomingCall({ callId, uid, rid }: DirectCallParams): void {\n\t\tif (this.isCallDismissed(callId)) {\n\t\t\tdebug && console.log(`[VideoConf] Ignoring dismissed call.`);\n\t\t\treturn;\n\t\t}\n\n\t\t// Reject any currently ringing call from the user before registering the new one.\n\t\tthis.rejectIncomingCallsFromUser(uid);\n\n\t\tdebug && console.log(`[VideoConf] Storing this new call information.`);\n\t\tthis.incomingDirectCalls.set(callId, {\n\t\t\tcallId,\n\t\t\tuid,\n\t\t\trid,\n\t\t\ttimeout: this.createAbortTimeout(callId),\n\t\t});\n\n\t\tthis.emit('incoming/changed');\n\t\tthis.emit('ringing/changed');\n\t\tthis.emit('direct/ringing', { callId, uid, rid });\n\t}\n\n\tprivate refreshExistingIncomingCall({ callId, uid, rid }: DirectCallParams): void {\n\t\tconst existingData = this.incomingDirectCalls.get(callId);\n\t\tif (!existingData) {\n\t\t\tthrow new Error('Video Conference Manager State Error');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Resetting call timeout.`);\n\t\tif (existingData.timeout) {\n\t\t\tclearTimeout(existingData.timeout);\n\t\t}\n\t\texistingData.timeout = this.createAbortTimeout(callId);\n\n\t\tif (!this.isCallDismissed(callId)) {\n\t\t\tthis.emit('direct/ringing', { callId, uid, rid });\n\t\t}\n\t}\n\n\tprivate onDirectCall({ callId, uid, rid }: DirectCallParams): void {\n\t\t// If we already accepted this call, then don't ring again\n\t\tif (this.incomingDirectCalls.get(callId)?.acceptTimeout) {\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${uid} is ringing with call ${callId}.`);\n\t\tif (this.incomingDirectCalls.has(callId)) {\n\t\t\tthis.refreshExistingIncomingCall({ callId, uid, rid });\n\t\t} else {\n\t\t\tthis.startNewIncomingCall({ callId, uid, rid });\n\t\t}\n\t}\n\n\tprivate onDirectCallCanceled({ callId }: DirectCallParams): void {\n\t\tdebug && console.log(`[VideoConf] Call ${callId} was canceled by the remote user.`);\n\n\t\t// We had just accepted this call, but the remote user hang up before they got the notification, so cancel our acceptance\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (callData?.acceptTimeout) {\n\t\t\tclearTimeout(callData.acceptTimeout);\n\t\t\tthis.setIncomingCallAttribute(callId, 'acceptTimeout', undefined);\n\t\t}\n\n\t\tthis.loseIncomingCall(callId);\n\t}\n\n\tprivate onDirectCallAccepted(params: DirectCallParams, skipConfirmation = false): void {\n\t\tif (!params.callId || params.callId !== this.currentCallData?.callId) {\n\t\t\tdebug && console.log(`[VideoConf] User ${params.uid} has accepted a call ${params.callId} from us, but we're not calling.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${params.uid} has accepted our call ${params.callId}.`);\n\n\t\t// Stop ringing\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t}\n\n\t\tconst callData = this.currentCallData;\n\n\t\tthis.emit('direct/accepted', params);\n\t\tthis.emit('direct/stopped', params);\n\t\tthis.currentCallData = undefined;\n\t\tthis.emit('calling/changed');\n\n\t\tif (!callData.joined) {\n\t\t\tthis.joinCall(params.callId);\n\t\t}\n\n\t\tif (skipConfirmation) {\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Notifying user ${callData.uid} that they can join the call now.`);\n\t\tthis.userId && this.notifyUser(callData.uid, 'confirmed', { callId: callData.callId, uid: this.userId, rid: callData.rid });\n\t}\n\n\tprivate onDirectCallConfirmed(params: DirectCallParams): void {\n\t\tif (!params.callId || !this.incomingDirectCalls.get(params.callId)?.acceptTimeout) {\n\t\t\tdebug && console.log(`[VideoConf] User ${params.uid} confirmed we can join ${params.callId} but we aren't trying to join it.`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.joinCall(params.callId);\n\t}\n\n\tprivate onDirectCallJoined(params: DirectCallParams): void {\n\t\tif (!params.callId) {\n\t\t\tdebug && console.log(`[VideoConf] Invalid 'video-conference.join' event received: ${params.callId}, ${params.uid}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tif (params.uid === this.userId) {\n\t\t\tif (this.currentCallData?.callId === params.callId) {\n\t\t\t\tdebug && console.log(`[VideoConf] We joined our own call (${this.userId}) from somewhere else. Flagging the call appropriatelly.`);\n\t\t\t\tthis.currentCallData.joined = true;\n\t\t\t\tthis.emit('calling/changed');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.incomingDirectCalls.has(params.callId)) {\n\t\t\t\tdebug && console.log(`[VideoConf] We joined the call ${params.callId} from somewhere else. Dismissing it.`);\n\t\t\t\tthis.dismissIncomingCall(params.callId);\n\t\t\t\tthis.loseIncomingCall(params.callId);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${params.uid} has joined a call we started ${params.callId}.`);\n\t\tthis.onDirectCallAccepted(params, true);\n\t}\n\n\tprivate onDirectCallEnded(params: DirectCallParams): void {\n\t\tif (!params.callId) {\n\t\t\tdebug && console.log(`[VideoConf] Invalid 'video-conference.end' event received: ${params.callId}, ${params.uid}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst callData = this.incomingDirectCalls.get(params.callId);\n\t\tif (callData) {\n\t\t\tdebug && console.log(`[VideoConf] Incoming call ended by the server: ${params.callId}.`);\n\t\t\tif (callData.acceptTimeout) {\n\t\t\t\tclearTimeout(callData.acceptTimeout);\n\t\t\t\tthis.setIncomingCallAttribute(params.callId, 'acceptTimeout', undefined);\n\t\t\t}\n\n\t\t\tthis.loseIncomingCall(params.callId);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.currentCallData?.callId !== params.callId) {\n\t\t\tdebug && console.log(`[VideoConf] Server sent a call ended event for a call we're not aware of: ${params.callId}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Outgoing call ended by the server: ${params.callId}.`);\n\n\t\t// Stop ringing\n\t\tthis.currentCallData = undefined;\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t\tthis.emit('calling/changed');\n\t\t\tthis.emit('direct/stopped', params);\n\t\t}\n\t}\n\n\tprivate onDirectCallRejected(params: DirectCallParams): void {\n\t\tif (!params.callId || params.callId !== this.currentCallData?.callId) {\n\t\t\tdebug && console.log(`[VideoConf] User ${params.uid} has rejected a call ${params.callId} from us, but we're not calling.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${params.uid} has rejected our call ${params.callId}.`);\n\n\t\t// Stop ringing\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t}\n\n\t\tconst { joined } = this.currentCallData;\n\n\t\tthis.emit('direct/cancel', params);\n\t\tthis.currentCallData = undefined;\n\t\tthis.emit('direct/stopped', params);\n\t\tthis.emit('calling/changed');\n\n\t\tif (!joined) {\n\t\t\tsdk.rest.post('/v1/video-conference.cancel', { callId: params.callId });\n\t\t}\n\t}\n\n\tprivate isCallDismissed(callId: string): boolean {\n\t\treturn this.dismissedCalls.has(callId);\n\t}\n})();\n\nMeteor.startup(() => Tracker.autorun(() => VideoConfManager.updateUser()));\n",null],"names":["_regeneratorRuntime","_typeof","_createForOfIteratorHelperLoose","_slicedToArray","_objectSpread","_objectWithoutProperties","_toConsumableArray","_createClass","_inheritsLoose","Emitter","Meteor","Tracker","Notifications","sdk","getConfig","module","default","export","VideoConfManager","debug","_Emitter","_this","call","userId","currentCallHandler","currentCallData","startingNewCall","hooks","incomingDirectCalls","dismissedCalls","_preferences","_capabilities","Map","Set","mic","cam","_proto","prototype","isBusy","isCalling","isRinging","_this2","values","some","_ref","callId","isCallDismissed","joined","getIncomingDirectCalls","_this3","filter","acceptTimeout","map","_ref2","timeout","_excluded","dismissed","startCall","roomId","title","data","_this4","async","_context","prev","next","Error","console","log","emit","awrap","rest","post","allowRinging","catch","e","_e$xhr","_e$xhr$responseJSON","error","xhr","responseJSON","Promise","reject","_await$sdk$rest$post$","sent","type","t0","abrupt","callUser","uid","calleeId","rid","joinCall","stop","acceptIncomingCall","_this5","callData","get","clearTimeout","setIncomingCallAttribute","undefined","dismissIncomingCall","setTimeout","updatedCallData","removeIncomingCall","notifyUser","rejectIncomingCall","loseIncomingCall","dismissedIncomingCalls","_this6","keys","dismissedIncomingCallHelper","loadCapabilities","capabilities","_context2","_await$sdk$rest$get$c","attributeName","value","newData","set","_this7","add","delete","CALL_TIMEOUT","has","updateUser","disconnect","connectUser","changePreference","key","setPreferences","prefs","meteorBabelHelpers","sanitizeForInObject","hasOwnProperty","params","_await$sdk$rest$post$2","url","providerName","_this8","_context3","state","_e$xhr2","_e$xhr2$responseJSON","abortCall","giveUp","rejectIncomingCallsFromUser","_step","_iterator","done","_ref4$","_ref4","_ref5","attempt","_this9","_context4","setInterval","warn","_ref6","_this$currentCallData","_context5","clearInterval","_step2","_iterator2","hook","forEach","clear","onVideoConfNotification","_ref7","action","_context6","onDirectCall","onDirectCallCanceled","onDirectCallAccepted","onDirectCallRejected","onDirectCallConfirmed","onDirectCallJoined","onDirectCallEnded","_context7","_Notifications$onUser","ready","_this10","_context8","onUser","push","abortIncomingCall","_this$incomingDirectC","lostCall","createAbortTimeout","_this11","startNewIncomingCall","_ref8","refreshExistingIncomingCall","_ref9","existingData","_ref10","_this$incomingDirectC2","_ref11","_this$currentCallData2","skipConfirmation","arguments","length","_this$incomingDirectC3","_this$currentCallData3","_this$currentCallData4","_this$currentCallData5","startup","autorun"],"mappings":"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"}