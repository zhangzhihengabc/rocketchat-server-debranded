)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/lib/minimongo/sort.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { compareBSONValues } from './bson';\nimport { isEmptyArray } from './comparisons';\nimport { createLookupFunction } from './lookups';\nimport type { Sort } from './types';\n\nconst createSortSpecParts = <T>(\n\tspec: Sort,\n): {\n\tlookup: (doc: T) => unknown[];\n\tascending: boolean;\n}[] => {\n\tif (Array.isArray(spec)) {\n\t\treturn spec.map((value) => {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn {\n\t\t\t\t\tlookup: createLookupFunction<T>(value),\n\t\t\t\t\tascending: true,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tlookup: createLookupFunction<T>(value[0]),\n\t\t\t\tascending: value[1] !== 'desc',\n\t\t\t};\n\t\t});\n\t}\n\n\treturn Object.entries(spec).map(([key, value]) => ({\n\t\tlookup: createLookupFunction<T>(key),\n\t\tascending: value >= 0,\n\t}));\n};\n\nconst reduceValue = (branchValues: unknown[], ascending: boolean): unknown =>\n\t([] as unknown[])\n\t\t.concat(\n\t\t\t...branchValues.map<unknown[]>((branchValue) => {\n\t\t\t\tif (!Array.isArray(branchValue)) {\n\t\t\t\t\treturn [branchValue];\n\t\t\t\t}\n\n\t\t\t\tif (isEmptyArray(branchValue)) {\n\t\t\t\t\treturn [undefined];\n\t\t\t\t}\n\n\t\t\t\treturn branchValue;\n\t\t\t}),\n\t\t)\n\t\t.reduce((reduced, value) => {\n\t\t\tconst cmp = compareBSONValues(reduced, value);\n\t\t\tif ((ascending && cmp > 0) || (!ascending && cmp < 0)) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\treturn reduced;\n\t\t});\n\nexport const compileSort = (spec: Sort): ((a: unknown, b: unknown) => number) => {\n\tconst sortSpecParts = createSortSpecParts(spec);\n\n\tif (sortSpecParts.length === 0) {\n\t\treturn (): number => 0;\n\t}\n\n\treturn (a: unknown, b: unknown): number => {\n\t\tfor (let i = 0; i < sortSpecParts.length; ++i) {\n\t\t\tconst specPart = sortSpecParts[i];\n\t\t\tconst aValue = reduceValue(specPart.lookup(a), specPart.ascending);\n\t\t\tconst bValue = reduceValue(specPart.lookup(b), specPart.ascending);\n\t\t\tconst compare = compareBSONValues(aValue, bValue);\n\n\t\t\tif (compare !== 0) {\n\t\t\t\treturn specPart.ascending ? compare : -compare;\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t};\n};\n",null],"names":["module","link","default","_toConsumableArray","_slicedToArray","export","compileSort","compareBSONValues","isEmptyArray","createLookupFunction","reduceValue","branchValues","ascending","_ref3","concat","apply","map","branchValue","Array","isArray","undefined","reduce","reduced","value","cmp","spec","sortSpecParts","lookup","Object","entries","_ref","_ref2","key","length","a","b","i","specPart","aValue","bValue","compare"],"mappings":"uBAASA,EAAmBC,IAAM,CAAA,2CAAS,CAAAC,QAAAA,SAAAA,CAAAA,EAAAC,EAAAA,CAAA,CAAA,EAAA,GAAAH,EAAAA,IAAAA,CAAAA,uCAAAA,CAAAE,QAAAA,SAAAA,CAAAA,EAAAE,EAAAA,CAAA,CAAA,EAAA,GAA3CJ,EAAOK,MAAE,CAAA,CAAAC,YAAiB,WAAQ,OAASA,CAAA,CAAA,GAAAN,EAAAA,IAAAA,CAAAA,SAAAA,CAAAO,kBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAP,EAAAA,IAAAA,CAAAA,gBAAAA,CAAAQ,aAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAR,EAAAA,IAAAA,CAAAA,YAAAA,CAAAS,qBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAiC3C,IAjCAN,EAA2CC,EAAAG,EAAAC,EAAAC,EAiCrCC,EAAc,SAACC,CAAuB,CAAEC,CAAkB,EAAA,IAAAC,EAAA,MAC9D,AAAAA,CAAAA,EAAA,EAAgB,AAAhB,EACCC,MAAM,CAAAC,KAAA,CAAAF,EAAAV,EACHQ,EAAaK,GAAG,CAAY,SAACC,CAAW,SAC1C,AAAKC,MAAMC,OAAO,CAACF,GAIfT,EAAaS,GACT,CAACG,KAAAA,EAAU,CAGZH,EAPC,CAACA,EAAY,AAQtB,KAEAI,MAAM,CAAC,SAACC,CAAO,CAAEC,CAAK,EACtB,IAAMC,EAAMjB,EAAkBe,EAASC,UACvC,AAAKX,GAAaY,EAAM,GAAO,CAACZ,GAAaY,EAAM,EAC3CD,EAGDD,CACR,EAAE,EAEShB,EAAc,SAACmB,CAAU,EACrC,IAAMC,EA/CN,AAAIR,MAAMC,OAAO,CA+CyBM,GA9ClCA,AA8CkCA,EA9C7BT,GAAG,CAAC,SAACO,CAAK,QACrB,AAAI,AAAiB,UAAjB,OAAOA,EACH,CACNI,OAAQlB,EAAwBc,GAChCX,UAAW,CAAA,GAIN,CACNe,OAAQlB,EAAwBc,CAAK,CAAC,EAAE,EACxCX,UAAWW,AAAa,SAAbA,CAAK,CAAC,EAAE,CAErB,GAGMK,OAAOC,OAAO,CA+BqBJ,GA/BdT,GAAG,CAAC,SAAAc,CAAA,EAAA,IAAAC,EAAA3B,EAAA0B,EAAA,GAAEE,EAAGD,CAAA,CAAA,EAAA,CAAER,EAAKQ,CAAA,CAAA,EAAA,CAAA,MAAO,CAClDJ,OAAQlB,EAAwBuB,GAChCpB,UAAWW,GAAS,EACpB,UA8BD,AAAIG,AAAyB,IAAzBA,EAAcO,MAAM,CAChB,WAAA,OAAc,CAAC,EAGhB,SAACC,CAAU,CAAEC,CAAU,EAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAIV,EAAcO,MAAM,CAAE,EAAEG,EAAG,CAC9C,IAAMC,EAAWX,CAAa,CAACU,EAAE,CAC3BE,EAAS5B,EAAY2B,EAASV,MAAM,CAACO,GAAIG,EAASzB,SAAS,EAC3D2B,EAAS7B,EAAY2B,EAASV,MAAM,CAACQ,GAAIE,EAASzB,SAAS,EAC3D4B,EAAUjC,EAAkB+B,EAAQC,GAE1C,GAAIC,AAAY,IAAZA,EACH,OAAOH,EAASzB,SAAS,CAAG4B,EAAU,CAACA,EAIzC,OAAO,CACR,CACD"}