)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/lib/lists/RecordList.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Emitter } from '@rocket.chat/emitter';\n\nimport { AsyncStatePhase } from '../asyncState';\n\nexport type RecordListBatchChanges<T> = {\n\titems?: T[];\n\titemCount?: number;\n};\n\nexport class RecordList<T extends { _id: string; _updatedAt?: Date }> extends Emitter {\n\t#hasChanges = false;\n\n\t#index = new Map<T['_id'], T>();\n\n\t#phase: AsyncStatePhase.LOADING | AsyncStatePhase.UPDATING | AsyncStatePhase.RESOLVED = AsyncStatePhase.LOADING;\n\n\t#items: T[] | undefined = undefined;\n\n\t#itemCount: number | undefined = undefined;\n\n\tprotected filter(_item: T): boolean {\n\t\treturn true;\n\t}\n\n\tprotected compare(a: T, b: T): number {\n\t\tconst aUpdatedAt = typeof a._updatedAt === 'string' ? new Date(a._updatedAt) : a._updatedAt;\n\t\tconst bUpdatedAt = typeof b._updatedAt === 'string' ? new Date(b._updatedAt) : b._updatedAt;\n\t\treturn (bUpdatedAt?.getTime() ?? -1) - (aUpdatedAt?.getTime() ?? -1);\n\t}\n\n\tpublic get phase(): AsyncStatePhase {\n\t\treturn this.#phase;\n\t}\n\n\tpublic get items(): T[] {\n\t\tif (!this.#items) {\n\t\t\tthis.#items = Array.from(this.#index.values()).sort(this.compare);\n\t\t}\n\n\t\treturn this.#items;\n\t}\n\n\tpublic get itemCount(): number {\n\t\treturn this.#itemCount ?? this.#index.size;\n\t}\n\n\tprivate insert(item: T): void {\n\t\tthis.#index.set(item._id, item);\n\t\tthis.emit(`${item._id}/inserted`, item);\n\t\tif (typeof this.#itemCount === 'number') {\n\t\t\tthis.#itemCount++;\n\t\t}\n\t\tthis.#hasChanges = true;\n\t}\n\n\tprivate update(item: T): void {\n\t\tthis.#index.set(item._id, item);\n\t\tthis.emit(`${item._id}/updated`, item);\n\t\tthis.#hasChanges = true;\n\t}\n\n\tprivate delete(_id: T['_id']): void {\n\t\tthis.#index.delete(_id);\n\t\tthis.emit(`${_id}/deleted`);\n\t\tif (typeof this.#itemCount === 'number') {\n\t\t\tthis.#itemCount--;\n\t\t}\n\t\tthis.#hasChanges = true;\n\t}\n\n\tprivate push(item: T): void {\n\t\tconst exists = this.#index.has(item._id);\n\t\tconst valid = this.filter(item);\n\n\t\tif (exists && !valid) {\n\t\t\tthis.delete(item._id);\n\t\t\treturn;\n\t\t}\n\n\t\tif (exists && valid) {\n\t\t\tthis.update(item);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!exists && valid) {\n\t\t\tthis.insert(item);\n\t\t}\n\t}\n\n\t#pedingMutation: Promise<void> = Promise.resolve();\n\n\tprotected async mutate(mutation: () => void | Promise<void>): Promise<void> {\n\t\ttry {\n\t\t\tif (this.#phase === AsyncStatePhase.RESOLVED) {\n\t\t\t\tthis.#phase = AsyncStatePhase.UPDATING;\n\t\t\t\tthis.emit('mutating');\n\t\t\t}\n\n\t\t\tthis.#pedingMutation = this.#pedingMutation.then(mutation);\n\t\t\tawait this.#pedingMutation;\n\t\t} catch (error) {\n\t\t\tthis.emit('errored', error);\n\t\t} finally {\n\t\t\tconst hasChanged = this.#hasChanges;\n\t\t\tthis.#phase = AsyncStatePhase.RESOLVED;\n\t\t\tif (hasChanged) {\n\t\t\t\tthis.#items = undefined;\n\t\t\t\tthis.#hasChanges = false;\n\t\t\t}\n\t\t\tthis.emit('mutated', hasChanged);\n\t\t}\n\t}\n\n\tpublic batchHandle(getInfo: () => Promise<RecordListBatchChanges<T>>): Promise<void> {\n\t\treturn this.mutate(async () => {\n\t\t\tconst info = await getInfo();\n\n\t\t\tif (info.items) {\n\t\t\t\tfor (const item of info.items) {\n\t\t\t\t\tthis.push(item);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (info.itemCount) {\n\t\t\t\tthis.#itemCount = info.itemCount;\n\t\t\t\tthis.#hasChanges = true;\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic prune(matchCriteria: (item: T) => boolean): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tfor (const item of this.#index.values()) {\n\t\t\t\tif (matchCriteria(item)) {\n\t\t\t\t\tthis.delete(item._id);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic handle(item: T): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tthis.push(item);\n\t\t});\n\t}\n\n\tpublic remove(_id: T['_id']): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tif (!this.#index.has(_id)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.delete(_id);\n\t\t});\n\t}\n\n\tpublic clear(): Promise<void> {\n\t\treturn this.mutate(() => {\n\t\t\tif (this.#index.size === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.#index.clear();\n\t\t\tthis.#items = undefined;\n\t\t\tthis.#itemCount = undefined;\n\t\t\tthis.#hasChanges = true;\n\t\t\tthis.emit('cleared');\n\t\t});\n\t}\n}\n",null],"names":["module","default","_regeneratorRuntime","_createForOfIteratorHelperLoose","_createClass","_assertThisInitialized","_inheritsLoose","_classPrivateFieldLooseBase","_classPrivateFieldLooseKey","export","RecordList","Emitter","AsyncStatePhase","_hasChanges","_index","_phase","_items","_itemCount","_pedingMutation","_Emitter","_this","_len","arguments","length","args","Array","_key","Object","defineProperty","call","apply","concat","writable","value","Map","LOADING","undefined","Promise","resolve","_proto","prototype","filter","_item","compare","a","b","_bUpdatedAt$getTime","_aUpdatedAt$getTime","aUpdatedAt","_updatedAt","Date","bUpdatedAt","getTime","insert","item","set","_id","emit","update","delete","push","exists","has","valid","mutate","mutation","hasChanged","async","_context","prev","next","RESOLVED","UPDATING","then","awrap","t0","finish","stop","batchHandle","getInfo","_this2","info","_iterator","_step","_context2","sent","items","done","itemCount","prune","matchCriteria","_this3","_step2","_iterator2","values","handle","_this4","remove","_this5","clear","_this6","size","key","get","from","sort","_classPrivateFieldLoo"],"mappings":"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"}