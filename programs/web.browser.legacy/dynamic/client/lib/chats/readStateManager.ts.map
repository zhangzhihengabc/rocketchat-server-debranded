)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/lib/chats/readStateManager.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IMessage, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { Emitter } from '@rocket.chat/emitter';\nimport { Meteor } from 'meteor/meteor';\n\nimport { ChatMessage } from '../../../app/models/client';\nimport { LegacyRoomManager } from '../../../app/ui-utils/client/lib/LegacyRoomManager';\nimport { RoomHistoryManager } from '../../../app/ui-utils/client/lib/RoomHistoryManager';\nimport { sdk } from '../../../app/utils/client/lib/SDKClient';\nimport { withDebouncing } from '../../../lib/utils/highOrderFunctions';\n\nexport class ReadStateManager extends Emitter {\n\tprivate rid: IRoom['_id'];\n\n\tprivate firstUnreadRecordId?: IMessage['_id'];\n\n\tprivate subscription?: ISubscription;\n\n\tpublic constructor(rid: IRoom['_id']) {\n\t\tsuper();\n\t\tthis.rid = rid;\n\t}\n\n\tpublic getRid() {\n\t\treturn this.rid;\n\t}\n\n\t// TODO: Use ref to get unreadMark\n\t// private unreadMark?: HTMLElement;\n\tprivate get unreadMark() {\n\t\treturn document.querySelector<HTMLElement>('.rcx-message-divider--unread');\n\t}\n\n\tpublic onUnreadStateChange = (callback: () => void): (() => void) => {\n\t\treturn this.on('unread-state-change', callback);\n\t};\n\n\tpublic getFirstUnreadRecordId = () => {\n\t\treturn this.firstUnreadRecordId;\n\t};\n\n\tpublic updateSubscription(subscription?: ISubscription) {\n\t\tif (!subscription) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstUpdate = !this.subscription;\n\n\t\tthis.subscription = subscription;\n\t\tLegacyRoomManager.getOpenedRoomByRid(this.rid)?.unreadSince.set(this.subscription.ls);\n\n\t\tconst { unread, alert } = this.subscription;\n\t\tif (!unread && !alert) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstUpdate) {\n\t\t\tthis.updateFirstUnreadRecordId();\n\t\t\treturn;\n\t\t}\n\n\t\tif (document.hasFocus() && this.firstUnreadRecordId) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.updateFirstUnreadRecordId();\n\t}\n\n\tprivate updateFirstUnreadRecordId() {\n\t\tif (!this.subscription?.ls) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstUnreadRecord = ChatMessage.findOne(\n\t\t\t{\n\t\t\t\t'rid': this.subscription.rid,\n\t\t\t\t'ts': {\n\t\t\t\t\t$gt: this.subscription.ls,\n\t\t\t\t},\n\t\t\t\t'u._id': {\n\t\t\t\t\t$ne: Meteor.userId() ?? undefined,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tsort: {\n\t\t\t\t\tts: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tthis.setFirstUnreadRecordId(firstUnreadRecord?._id);\n\n\t\tRoomHistoryManager.once('loaded-messages', () => this.updateFirstUnreadRecordId());\n\t}\n\n\tprivate setFirstUnreadRecordId(firstUnreadRecordId: string | undefined) {\n\t\tthis.firstUnreadRecordId = firstUnreadRecordId;\n\t\tthis.emit('unread-state-change', this.firstUnreadRecordId);\n\t}\n\n\tpublic clearUnreadMark() {\n\t\tthis.setFirstUnreadRecordId(undefined);\n\t}\n\n\tpublic handleWindowEvents = (): (() => void) => {\n\t\tconst handleWindowFocus = () => {\n\t\t\tthis.attemptMarkAsRead();\n\t\t};\n\n\t\tconst handleWindowKeyUp = (event: KeyboardEvent) => {\n\t\t\tif (event.key === 'Escape') {\n\t\t\t\tthis.markAsRead();\n\t\t\t\tthis.updateFirstUnreadRecordId();\n\t\t\t}\n\t\t};\n\n\t\twindow.addEventListener('focus', handleWindowFocus);\n\t\twindow.addEventListener('keyup', handleWindowKeyUp);\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener('focus', handleWindowFocus);\n\t\t\twindow.removeEventListener('keyup', handleWindowKeyUp);\n\t\t};\n\t};\n\n\tprivate isUnreadMarkVisible(): boolean {\n\t\tif (!this.unreadMark) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.unreadMark.offsetTop > (this.unreadMark.offsetParent?.scrollTop || 0);\n\t}\n\n\t// This will only mark as read if the unread mark is visible\n\tpublic attemptMarkAsRead() {\n\t\tconst { alert, unread } = this.subscription || {};\n\t\tif (!alert && unread === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!document.hasFocus()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.unreadMark && !this.isUnreadMarkVisible()) {\n\t\t\treturn;\n\t\t}\n\t\t// if there are unloaded unread messages, don't mark as read\n\t\tif (RoomHistoryManager.getRoom(this.rid).unreadNotLoaded.get() > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.markAsRead();\n\t}\n\n\tpublic debouncedMarkAsRead = withDebouncing({ wait: 1000 })(() => {\n\t\ttry {\n\t\t\treturn this.markAsRead();\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t});\n\n\t// this will always mark as read.\n\tpublic async markAsRead() {\n\t\tif (!this.rid) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn sdk.rest.post('/v1/subscriptions.read', { rid: this.rid }).then(() => {\n\t\t\tRoomHistoryManager.getRoom(this.rid).unreadNotLoaded.set(0);\n\t\t});\n\t}\n}\n",null],"names":["module","default","_regeneratorRuntime","_createClass","_inheritsLoose","export","ReadStateManager","Emitter","Meteor","ChatMessage","LegacyRoomManager","RoomHistoryManager","sdk","withDebouncing","_Emitter","rid","_this","call","firstUnreadRecordId","subscription","onUnreadStateChange","callback","on","getFirstUnreadRecordId","handleWindowEvents","handleWindowFocus","attemptMarkAsRead","handleWindowKeyUp","event","key","markAsRead","updateFirstUnreadRecordId","window","addEventListener","removeEventListener","debouncedMarkAsRead","wait","e","console","error","_proto","prototype","getRid","updateSubscription","_LegacyRoomManager$ge","firstUpdate","getOpenedRoomByRid","unreadSince","set","ls","_this$subscription","unread","alert","document","hasFocus","_this$subscription2","_Meteor$userId","_this2","firstUnreadRecord","findOne","$gt","$ne","userId","undefined","sort","ts","setFirstUnreadRecordId","_id","once","emit","clearUnreadMark","isUnreadMarkVisible","_this$unreadMark$offs","unreadMark","offsetTop","offsetParent","scrollTop","_ref","getRoom","unreadNotLoaded","get","_this3","async","_context","prev","next","abrupt","rest","post","then","stop","Promise","querySelector"],"mappings":"uBACwBA,EAAAA,IAAAA,CAAAA,6BAAuB,CAAAC,QAAAA,SAAAA,CAAAA,EAAAC,EAAAA,CAAA,CAAA,EAAA,GAAAF,EAAAA,IAAAA,CAAAA,qCAAAA,CAAAC,QAAAA,SAAAA,CAAAA,EAAAE,EAAAA,CAAA,CAAA,EAAA,GAAAH,EAAAA,IAAAA,CAAAA,uCAAAA,CAAAC,QAAAA,SAAAA,CAAAA,EAAAG,EAAAA,CAAA,CAAA,EAAA,GAA/CJ,EAAOK,MAAE,CAAA,CAAAC,iBAAe,WAAA,OAAuBA,CAAA,CAAA,GAAAN,EAAAA,IAAAA,CAAAA,uBAAAA,CAAAO,QAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAP,EAAAA,IAAAA,CAAAA,gBAAAA,CAAAQ,OAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAR,EAAAA,IAAAA,CAAAA,6BAAAA,CAAAS,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAT,EAAAA,IAAAA,CAAAA,qDAAAA,CAAAU,kBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAV,EAAAA,IAAAA,CAAAA,sDAAAA,CAAAW,mBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAX,EAAAA,IAAAA,CAAAA,0CAAAA,CAAAY,IAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAZ,EAAAA,IAAAA,CAAAA,wCAAAA,CAAAa,eAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAA,IAA/CX,EAA+CC,EAAAC,EAAAG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EASlCP,EAAiB,SAAAQ,CAAA,EAO7B,SAAAR,EAAmBS,CAAiB,EAAA,IAAAC,EAEpB,MADPA,AAARA,CAAAA,EAAAF,EAAAG,IAAA,CAAA,IAAA,GAAO,IAAA,EAPAF,GAAG,CAAA,KAAA,EAAAC,EAEHE,mBAAmB,CAAA,KAAA,EAAAF,EAEnBG,YAAY,CAAA,KAAA,EAAAH,EAiBbI,mBAAmB,CAAG,SAACC,CAAoB,EACjD,OAAOL,EAAKM,EAAE,CAAC,sBAAuBD,EACvC,EAACL,EAEMO,sBAAsB,CAAG,WAC/B,OAAOP,EAAKE,mBAAmB,AAChC,EAACF,EAiEMQ,kBAAkB,CAAG,WAC3B,IAAMC,EAAoB,WACzBT,EAAKU,iBAAiB,EACvB,EAEMC,EAAoB,SAACC,CAAoB,EAC5B,WAAdA,EAAMC,GAAG,GACZb,EAAKc,UAAU,GACfd,EAAKe,yBAAyB,GAEhC,EAKA,OAHAC,OAAOC,gBAAgB,CAAC,QAASR,GACjCO,OAAOC,gBAAgB,CAAC,QAASN,GAE1B,WACNK,OAAOE,mBAAmB,CAAC,QAAST,GACpCO,OAAOE,mBAAmB,CAAC,QAASP,EACrC,CACD,EAACX,EAgCMmB,mBAAmB,CAAGtB,EAAe,CAAEuB,KAAM,GAAI,GAAI,WAC3D,GAAI,CACH,OAAOpB,EAAKc,UAAU,GACrB,MAAOO,EAAG,CACXC,QAAQC,KAAK,CAACF,GAEhB,GA7ICrB,EAAKD,GAAG,CAAGA,EAAIC,CAChB,CAV6BZ,EAAAE,EAAAQ,GAU5B,IAAA0B,EAAAlC,EAAAmC,SAAA,CAUA,OAVAD,EAEME,MAAM,CAAN,WACN,OAAO,IAAI,CAAC3B,GAAG,AAChB,EAGAyB,EAaOG,kBAAkB,CAAlB,SAAmBxB,CAA4B,EACrD,GAAKA,GAIL,IALqDyB,EAK/CC,EAAc,CAAC,IAAI,CAAC1B,YAAY,AAEtC,CAAA,IAAI,CAACA,YAAY,CAAGA,EACpB,AAA8C,OAA9CyB,CAAAA,EAAAlC,EAAkBoC,kBAAkB,CAAC,IAAI,CAAC/B,GAAG,CAAA,GAAC6B,AAAA,KAAA,IAAAA,GAA9CA,EAAgDG,WAAW,CAACC,GAAG,CAAC,IAAI,CAAC7B,YAAY,CAAC8B,EAAE,EAEpF,IAAAC,EAA0B,IAAI,CAAC/B,YAAY,CAAnCgC,EAAMD,EAANC,MAAM,CAAEC,EAAKF,EAALE,KAAK,CACrB,GAAI,AAACD,GAAWC,GAIhB,GAAIP,EAAa,CAChB,IAAI,CAACd,yBAAyB,GAC9B,OAGGsB,SAASC,QAAQ,IAAM,IAAI,CAACpC,mBAAmB,EAInD,IAAI,CAACa,yBAAyB,IAC/B,EAACS,EAEOT,yBAAyB,CAAzB,WAAyB,IAAAwB,EAAAC,EAAAC,EAAA,IAAA,CAChC,GAAI,AAAkB,OAAlBF,CAAAA,EAAC,IAAI,CAACpC,YAAY,AAAZA,GAAYoC,AAAA,KAAA,IAAAA,GAAjBA,EAAmBN,EAAE,EAI1B,IAAMS,EAAoBjD,EAAYkD,OAAO,CAC5C,CACC,IAAO,IAAI,CAACxC,YAAY,CAACJ,GAAG,CAC5B,GAAM,CACL6C,IAAK,IAAI,CAACzC,YAAY,CAAC8B,EAAAA,EAExB,QAAS,CACRY,IAAG,AAAiB,OAAjBL,CAAAA,EAAEhD,EAAOsD,MAAM,EAAA,GAAEN,AAAA,KAAA,IAAAA,EAAAA,EAAIO,KAAAA,IAG1B,CACCC,KAAM,CACLC,GAAI,KAKP,IAAI,CAACC,sBAAsB,CAACR,MAAAA,EAAiB,KAAA,EAAjBA,EAAmBS,GAAG,EAElDxD,EAAmByD,IAAI,CAAC,kBAAmB,WAAA,OAAMX,EAAK1B,yBAAyB,EAAE,GAClF,EAACS,EAEO0B,sBAAsB,CAAtB,SAAuBhD,CAAuC,EACrE,IAAI,CAACA,mBAAmB,CAAGA,EAC3B,IAAI,CAACmD,IAAI,CAAC,sBAAuB,IAAI,CAACnD,mBAAmB,CAC1D,EAACsB,EAEM8B,eAAe,CAAf,WACN,IAAI,CAACJ,sBAAsB,CAACH,KAAAA,EAC7B,EAACvB,EAuBO+B,mBAAmB,CAAnB,WAAmB,IAAAC,QAC1B,EAAK,IAAI,CAACC,UAAU,EAIb,IAAI,CAACA,UAAU,CAACC,SAAS,CAAI,CAAA,CAAA,AAA4B,OAA5BF,CAAAA,EAAA,IAAI,CAACC,UAAU,CAACE,YAAY,AAAZA,GAAYH,AAAA,KAAA,IAAAA,EAAA,KAAA,EAA5BA,EAA8BI,SAAS,AAATA,GAAa,CAAA,CAChF,EAEApC,EACOd,iBAAiB,CAAjB,WACN,IAAAmD,EAA0B,IAAI,CAAC1D,YAAY,EAAI,CAAA,EAAvCiC,EAAKyB,EAALzB,KAAK,CAAED,EAAM0B,EAAN1B,MAAM,CACrB,KAAI,CAACC,GAASD,AAAW,IAAXA,GAIV,CAACE,SAASC,QAAQ,IAIlB,IAAI,CAACmB,UAAU,EAAI,CAAC,IAAI,CAACF,mBAAmB,IAI5C5D,EAAmBmE,OAAO,CAAC,IAAI,CAAC/D,GAAG,EAAEgE,eAAe,CAACC,GAAG,GAAK,GAIjE,OAAO,IAAI,CAAClD,UAAU,EACvB,EAUAU,EACaV,UAAU,CAAhB,WAAA,IAAAmD,EAAA,IAAA,CAAA,OAAA/E,EAAAgF,KAAA,CAAA,SAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAC,IAAA,CAAAD,EAAAE,IAAA,EAAA,KAAA,EAAA,GACD,IAAI,CAACtE,GAAG,CAAA,CAAAoE,EAAAE,IAAA,CAAA,EAAA,KAAA,CAAA,OAAAF,EAAAG,MAAA,CAAA,SAAA,MAAA,EAAA,OAAAH,EAAAG,MAAA,CAAA,SAIN1E,EAAI2E,IAAI,CAACC,IAAI,CAAC,yBAA0B,CAAEzE,IAAK,IAAI,CAACA,GAAAA,AAAG,GAAI0E,IAAI,CAAC,WACtE9E,EAAmBmE,OAAO,CAACG,EAAKlE,GAAG,EAAEgE,eAAe,CAAC/B,GAAG,CAAC,EAC1D,GAAE,MAAA,EAAA,IAAA,MAAA,OAAAmC,EAAAO,IAAA,EAAA,CAAA,EAAA,KAAA,IAAA,CAAA,KAAAC,QAAA,EACFxF,EAAAG,EAAA,CAAA,CAAAuB,IAAA,aAAAmD,IA/ID,WACC,OAAO3B,SAASuC,aAAa,CAAc,+BAC5C,CAAC,EAAA,EAAAtF,CAAA,EApBoCC"}