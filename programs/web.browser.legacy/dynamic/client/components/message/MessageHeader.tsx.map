)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/components/message/MessageHeader.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport {\n\tMessageHeader as FuselageMessageHeader,\n\tMessageName,\n\tMessageTimestamp,\n\tMessageUsername,\n\tMessageStatusPrivateIndicator,\n\tMessageNameContainer,\n} from '@rocket.chat/fuselage';\nimport { useTranslation } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React, { memo } from 'react';\n\nimport { getUserDisplayName } from '../../../lib/getUserDisplayName';\nimport { useFormatDateAndTime } from '../../hooks/useFormatDateAndTime';\nimport { useFormatTime } from '../../hooks/useFormatTime';\nimport { useUserData } from '../../hooks/useUserData';\nimport type { UserPresence } from '../../lib/presence';\nimport { useChat } from '../../views/room/contexts/ChatContext';\nimport StatusIndicators from './StatusIndicators';\nimport MessageRoles from './header/MessageRoles';\nimport { useMessageRoles } from './header/hooks/useMessageRoles';\nimport { useMessageListShowUsername, useMessageListShowRealName, useMessageListShowRoles } from './list/MessageListContext';\n\ntype MessageHeaderProps = {\n\tmessage: IMessage;\n};\n\nconst MessageHeader = ({ message }: MessageHeaderProps): ReactElement => {\n\tconst t = useTranslation();\n\n\tconst formatTime = useFormatTime();\n\tconst formatDateAndTime = useFormatDateAndTime();\n\n\tconst showRealName = useMessageListShowRealName();\n\tconst user: UserPresence = { ...message.u, roles: [], ...useUserData(message.u._id) };\n\tconst usernameAndRealNameAreSame = !user.name || user.username === user.name;\n\tconst showUsername = useMessageListShowUsername() && showRealName && !usernameAndRealNameAreSame;\n\n\tconst showRoles = useMessageListShowRoles();\n\tconst roles = useMessageRoles(message.u._id, message.rid, showRoles);\n\tconst shouldShowRolesList = roles.length > 0;\n\n\tconst chat = useChat();\n\n\treturn (\n\t\t<FuselageMessageHeader>\n\t\t\t<MessageNameContainer>\n\t\t\t\t<MessageName\n\t\t\t\t\t{...(!showUsername && { 'data-qa-type': 'username' })}\n\t\t\t\t\ttitle={!showUsername && !usernameAndRealNameAreSame ? `@${user.username}` : undefined}\n\t\t\t\t\tdata-username={user.username}\n\t\t\t\t\t{...(user.username !== undefined &&\n\t\t\t\t\t\tchat?.userCard && {\n\t\t\t\t\t\t\tonClick: chat?.userCard.open(message.u.username),\n\t\t\t\t\t\t\tstyle: { cursor: 'pointer' },\n\t\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\t{message.alias || getUserDisplayName(user.name, user.username, showRealName)}\n\t\t\t\t</MessageName>\n\t\t\t\t{showUsername && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t<MessageUsername\n\t\t\t\t\t\t\tdata-username={user.username}\n\t\t\t\t\t\t\tdata-qa-type='username'\n\t\t\t\t\t\t\t{...(user.username !== undefined &&\n\t\t\t\t\t\t\t\tchat?.userCard && {\n\t\t\t\t\t\t\t\t\tonClick: chat?.userCard.open(message.u.username),\n\t\t\t\t\t\t\t\t\tstyle: { cursor: 'pointer' },\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t@{user.username}\n\t\t\t\t\t\t</MessageUsername>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</MessageNameContainer>\n\n\t\t\t{shouldShowRolesList && <MessageRoles roles={roles} isBot={message.bot} />}\n\t\t\t<MessageTimestamp title={formatDateAndTime(message.ts)}>{formatTime(message.ts)}</MessageTimestamp>\n\t\t\t{message.private && <MessageStatusPrivateIndicator>{t('Only_you_can_see_this_message')}</MessageStatusPrivateIndicator>}\n\t\t\t<StatusIndicators message={message} />\n\t\t</FuselageMessageHeader>\n\t);\n};\n\nexport default memo(MessageHeader);\n",null],"names":["_extends","_objectSpread","FuselageMessageHeader","MessageName","MessageUsername","MessageStatusPrivateIndicator","MessageNameContainer","useTranslation","React","memo","getUserDisplayName","useFormatDateAndTime","useFormatTime","useUserData","useChat","StatusIndicators","MessageRoles","useMessageRoles","useMessageListShowUsername","useMessageListShowRealName","useMessageListShowRoles","module","default","v","link","MessageHeader","MessageTimestamp","exportDefault","_ref","message","t","formatTime","formatDateAndTime","showRealName","user","u","roles","_id","usernameAndRealNameAreSame","name","username","showUsername","showRoles","rid","shouldShowRolesList","length","chat","createElement","title","undefined","userCard","onClick","open","style","cursor","alias","Fragment","isBot","bot","ts","private"],"mappings":"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"}