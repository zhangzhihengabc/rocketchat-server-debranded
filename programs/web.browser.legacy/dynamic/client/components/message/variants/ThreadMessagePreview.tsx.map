)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/components/message/variants/ThreadMessagePreview.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IThreadMessage } from '@rocket.chat/core-typings';\nimport {\n\tSkeleton,\n\tThreadMessage,\n\tThreadMessageRow,\n\tThreadMessageLeftContainer,\n\tThreadMessageIconThread,\n\tThreadMessageContainer,\n\tThreadMessageOrigin,\n\tThreadMessageBody,\n\tThreadMessageUnfollow,\n\tCheckBox,\n\tMessageStatusIndicatorItem,\n} from '@rocket.chat/fuselage';\nimport { useTranslation } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React, { memo } from 'react';\n\nimport { MessageTypes } from '../../../../app/ui-utils/client';\nimport {\n\tuseIsSelecting,\n\tuseToggleSelect,\n\tuseIsSelectedMessage,\n\tuseCountSelected,\n} from '../../../views/room/MessageList/contexts/SelectedMessagesContext';\nimport { useMessageBody } from '../../../views/room/MessageList/hooks/useMessageBody';\nimport { useParentMessage } from '../../../views/room/MessageList/hooks/useParentMessage';\nimport { isParsedMessage } from '../../../views/room/MessageList/lib/isParsedMessage';\nimport { useGoToThread } from '../../../views/room/hooks/useGoToThread';\nimport MessageAvatar from '../header/MessageAvatar';\nimport { useShowTranslated } from '../list/MessageListContext';\nimport ThreadMessagePreviewBody from './threadPreview/ThreadMessagePreviewBody';\n\ntype ThreadMessagePreviewProps = {\n\tmessage: IThreadMessage;\n\tshowUserAvatar: boolean;\n\tsequential: boolean;\n};\n\nconst ThreadMessagePreview = ({ message, showUserAvatar, sequential, ...props }: ThreadMessagePreviewProps): ReactElement => {\n\tconst parentMessage = useParentMessage(message.tmid);\n\n\tconst translated = useShowTranslated(message);\n\tconst t = useTranslation();\n\n\tconst isSelecting = useIsSelecting();\n\tconst toggleSelected = useToggleSelect(message._id);\n\tconst isSelected = useIsSelectedMessage(message._id);\n\tuseCountSelected();\n\n\tconst messageType = parentMessage.isSuccess ? MessageTypes.getType(parentMessage.data) : null;\n\tconst messageBody = useMessageBody(parentMessage.data, message.rid);\n\n\tconst previewMessage = isParsedMessage(messageBody) ? { md: messageBody } : { msg: messageBody };\n\n\tconst goToThread = useGoToThread();\n\n\treturn (\n\t\t<ThreadMessage\n\t\t\t{...props}\n\t\t\tonClick={isSelecting ? toggleSelected : undefined}\n\t\t\tisSelected={isSelected}\n\t\t\tdata-qa-selected={isSelected}\n\t\t\trole='link'\n\t\t>\n\t\t\t{!sequential && (\n\t\t\t\t<ThreadMessageRow\n\t\t\t\t\trole='link'\n\t\t\t\t\tonClick={\n\t\t\t\t\t\t!isSelecting && parentMessage.isSuccess\n\t\t\t\t\t\t\t? () => goToThread({ rid: message.rid, tmid: message.tmid, msg: parentMessage.data?._id })\n\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<ThreadMessageLeftContainer>\n\t\t\t\t\t\t<ThreadMessageIconThread />\n\t\t\t\t\t</ThreadMessageLeftContainer>\n\t\t\t\t\t<ThreadMessageContainer>\n\t\t\t\t\t\t<ThreadMessageOrigin system={!!messageType}>\n\t\t\t\t\t\t\t{parentMessage.isSuccess && !messageType && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{(parentMessage.data as { ignored?: boolean })?.ignored ? (\n\t\t\t\t\t\t\t\t\t\tt('Message_Ignored')\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<ThreadMessagePreviewBody message={{ ...parentMessage.data, ...previewMessage }} />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t{translated && (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t\t<MessageStatusIndicatorItem name='language' color='info' title={t('Translated')} />\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{messageType && t(messageType.message, messageType.data ? messageType.data(message) : {})}\n\t\t\t\t\t\t\t{parentMessage.isLoading && <Skeleton />}\n\t\t\t\t\t\t</ThreadMessageOrigin>\n\t\t\t\t\t\t<ThreadMessageUnfollow />\n\t\t\t\t\t</ThreadMessageContainer>\n\t\t\t\t</ThreadMessageRow>\n\t\t\t)}\n\t\t\t<ThreadMessageRow onClick={!isSelecting ? () => goToThread({ rid: message.rid, tmid: message.tmid, msg: message._id }) : undefined}>\n\t\t\t\t<ThreadMessageLeftContainer>\n\t\t\t\t\t{!isSelecting && showUserAvatar && <MessageAvatar username={message.u.username} emoji={message.emoji} size='x18' />}\n\t\t\t\t\t{isSelecting && <CheckBox checked={isSelected} onChange={toggleSelected} />}\n\t\t\t\t</ThreadMessageLeftContainer>\n\t\t\t\t<ThreadMessageContainer>\n\t\t\t\t\t<ThreadMessageBody>\n\t\t\t\t\t\t{(message as { ignored?: boolean }).ignored ? (\n\t\t\t\t\t\t\tt('Message_Ignored')\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<ThreadMessagePreviewBody message={message} />\n\t\t\t\t\t\t\t\t{translated && (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t<MessageStatusIndicatorItem name='language' title={t('Translated')} />\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</ThreadMessageBody>\n\t\t\t\t</ThreadMessageContainer>\n\t\t\t</ThreadMessageRow>\n\t\t</ThreadMessage>\n\t);\n};\n\nexport default memo(ThreadMessagePreview);\n",null],"names":["_extends","_objectSpread","_objectWithoutProperties","Skeleton","ThreadMessage","ThreadMessageRow","ThreadMessageLeftContainer","ThreadMessageIconThread","ThreadMessageContainer","ThreadMessageOrigin","ThreadMessageBody","ThreadMessageUnfollow","CheckBox","MessageStatusIndicatorItem","useTranslation","React","memo","MessageTypes","useIsSelecting","useToggleSelect","useIsSelectedMessage","useCountSelected","useMessageBody","useParentMessage","isParsedMessage","useGoToThread","MessageAvatar","useShowTranslated","ThreadMessagePreviewBody","module","link","default","v","exportDefault","_ref","_parentMessage$data2","message","showUserAvatar","sequential","props","_excluded","parentMessage","tmid","translated","t","isSelecting","toggleSelected","_id","isSelected","messageType","isSuccess","getType","data","messageBody","rid","previewMessage","md","msg","goToThread","createElement","onClick","undefined","role","_parentMessage$data","system","Fragment","ignored","name","color","title","isLoading","username","u","emoji","size","checked","onChange"],"mappings":"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"}