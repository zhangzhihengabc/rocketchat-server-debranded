)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/components/modal/ModalPortal.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { ReactElement, ReactNode } from 'react';\nimport React, { memo, useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { createAnchor } from '../../lib/utils/createAnchor';\nimport { deleteAnchor } from '../../lib/utils/deleteAnchor';\n\ntype ModalPortalProps = {\n\tchildren?: ReactNode;\n};\n\n/**\n * @todo: move to portals folder\n */\nconst ModalPortal = ({ children }: ModalPortalProps): ReactElement => {\n\tconst [modalRoot] = useState(() => createAnchor('modal-root'));\n\tuseEffect(() => (): void => deleteAnchor(modalRoot), [modalRoot]);\n\treturn <>{createPortal(children, modalRoot)}</>;\n};\n\nexport default memo(ModalPortal);\n",null],"names":["_slicedToArray","React","memo","useEffect","useState","createPortal","createAnchor","deleteAnchor","module","link","default","v","exportDefault","_ref","children","modalRoot","_useState2","createElement","Fragment"],"mappings":"uBAcA,IAbAA,EAAAC,EAAOC,EAAOC,EAAQC,EAAmCC,EAAAC,EAAAC,EAAzCC,EAAMC,IAAA,CAAS,uCAA0B,CAAAC,QAAAA,SAAAA,CAAAA,EAAAV,EAAAA,CAAA,CAAA,EAAA,GAAxBQ,EAAQC,IAAE,CAAA,QAAM,CAAA,QAAQ,SAAAE,CAAA,EAAAV,EAAAA,CAAA,EAAAC,KAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,UAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,SAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,YAAAA,CAAAH,aAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,+BAAAA,CAAAF,aAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,+BAAAA,CAAAD,aAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAzDC,EAAOI,aAAa,CAmBLV,EANK,SAAAW,CAAA,EAAiD,IAA9CC,EAAQD,EAARC,QAAQ,CACvBC,EAASC,AAA8ChB,EAA1CI,EAAS,WAAA,OAAME,EAAa,aAAa,GAAC,EAA9C,CAAA,EAAA,CAEhB,OADAH,EAAU,WAAA,OAAM,WAAA,OAAYI,EAAaQ,EAAU,CAAA,EAAE,CAACA,EAAU,EACzDd,EAAAgB,aAAA,CAAAhB,EAAAiB,QAAA,CAAA,KAAGb,EAAaS,EAAUC,GAClC"}