)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/sidebar/header/actions/hooks/useGroupingListItems.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { CheckBox } from '@rocket.chat/fuselage';\nimport { useEndpoint, useUserPreference, useTranslation } from '@rocket.chat/ui-contexts';\nimport React, { useCallback } from 'react';\n\nimport type { GenericMenuItemProps } from '../../../../components/GenericMenu/GenericMenuItem';\n\nexport const useGroupingListItems = (): GenericMenuItemProps[] => {\n\tconst t = useTranslation();\n\n\tconst sidebarGroupByType = useUserPreference<boolean>('sidebarGroupByType');\n\tconst sidebarShowFavorites = useUserPreference<boolean>('sidebarShowFavorites');\n\tconst sidebarShowUnread = useUserPreference<boolean>('sidebarShowUnread');\n\n\tconst saveUserPreferences = useEndpoint('POST', '/v1/users.setPreferences');\n\n\tconst useHandleChange = (key: 'sidebarGroupByType' | 'sidebarShowFavorites' | 'sidebarShowUnread', value: boolean): (() => void) =>\n\t\tuseCallback(() => saveUserPreferences({ data: { [key]: value } }), [key, value]);\n\n\tconst handleChangeGroupByType = useHandleChange('sidebarGroupByType', !sidebarGroupByType);\n\tconst handleChangeShoFavorite = useHandleChange('sidebarShowFavorites', !sidebarShowFavorites);\n\tconst handleChangeShowUnread = useHandleChange('sidebarShowUnread', !sidebarShowUnread);\n\n\treturn [\n\t\t{\n\t\t\tid: 'unread',\n\t\t\tcontent: t('Unread'),\n\t\t\ticon: 'flag',\n\t\t\taddon: <CheckBox onChange={handleChangeShowUnread} checked={sidebarShowUnread} />,\n\t\t},\n\t\t{\n\t\t\tid: 'favorites',\n\t\t\tcontent: t('Favorites'),\n\t\t\ticon: 'star',\n\t\t\taddon: <CheckBox onChange={handleChangeShoFavorite} checked={sidebarShowFavorites} />,\n\t\t},\n\t\t{\n\t\t\tid: 'types',\n\t\t\tcontent: t('Types'),\n\t\t\ticon: 'group-by-type',\n\t\t\taddon: <CheckBox onChange={handleChangeGroupByType} checked={sidebarGroupByType} />,\n\t\t},\n\t];\n};\n",null],"names":["module","export","useGroupingListItems","CheckBox","useEndpoint","useUserPreference","useTranslation","v","React","useCallback","t","sidebarGroupByType","sidebarShowFavorites","sidebarShowUnread","saveUserPreferences","useHandleChange","key","value","_data","data","handleChangeGroupByType","handleChangeShoFavorite","handleChangeShowUnread","id","content","icon","addon","createElement","onChange","checked"],"mappings":"uBAAAA,EAAOC,MAAE,CAAA,CAAAC,qBAAgB,WAAA,OAAwBA,CAAA,CAAA,GAAAF,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAG,SAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAH,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAI,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,kBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAN,EAAAA,IAAAA,CAAAA,QAAAA,CAAA,QAAA,SAAAO,CAAA,EAAAC,EAAAA,CAAA,EAAAC,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAM1C,IAN0CN,EAAAC,EAAAC,EAAAC,EAAAE,EAAAC,EAMpCP,EAAuB,WACnC,IAAMQ,EAAIJ,IAEJK,EAAqBN,EAA2B,sBAChDO,EAAuBP,EAA2B,wBAClDQ,EAAoBR,EAA2B,qBAE/CS,EAAsBV,EAAY,OAAQ,4BAE1CW,EAAkB,SAACC,CAAwE,CAAEC,CAAc,EAAA,OAChHR,EAAY,WAAA,IAAAS,EAAA,OAAMJ,EAAoB,CAAEK,KAAID,CAAAA,CAAAA,EAAA,CAAA,CAAA,CAAA,CAAKF,EAAG,CAAGC,EAAKC,CAAA,CAAE,EAAG,EAAE,CAACF,EAAKC,EAAM,CAAC,EAE3EG,EAA0BL,EAAgB,qBAAsB,CAACJ,GACjEU,EAA0BN,EAAgB,uBAAwB,CAACH,GACnEU,EAAyBP,EAAgB,oBAAqB,CAACF,GAErE,MAAO,CACN,CACCU,GAAI,SACJC,QAASd,EAAE,UACXe,KAAM,OACNC,MAAOlB,EAAAmB,aAAA,CAACxB,EAAQ,CAACyB,SAAUN,EAAwBO,QAAShB,CAAkB,IAE/E,CACCU,GAAI,YACJC,QAASd,EAAE,aACXe,KAAM,OACNC,MAAOlB,EAAAmB,aAAA,CAACxB,EAAQ,CAACyB,SAAUP,EAAyBQ,QAASjB,CAAqB,IAEnF,CACCW,GAAI,QACJC,QAASd,EAAE,SACXe,KAAM,gBACNC,MAAOlB,EAAAmB,aAAA,CAACxB,EAAQ,CAACyB,SAAUR,EAAyBS,QAASlB,CAAmB,IAEjF,AACF"}