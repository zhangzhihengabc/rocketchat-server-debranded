)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/sidebar/header/actions/hooks/useSortModeItems.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { RadioButton } from '@rocket.chat/fuselage';\nimport { useEndpoint, useUserPreference, useTranslation } from '@rocket.chat/ui-contexts';\nimport React, { useCallback } from 'react';\n\nimport type { GenericMenuItemProps } from '../../../../components/GenericMenu/GenericMenuItem';\nimport {\n\tOmnichannelSortingDisclaimer,\n\tuseOmnichannelSortingDisclaimer,\n} from '../../../../components/Omnichannel/OmnichannelSortingDisclaimer';\n\nexport const useSortModeItems = (): GenericMenuItemProps[] => {\n\tconst t = useTranslation();\n\n\tconst saveUserPreferences = useEndpoint('POST', '/v1/users.setPreferences');\n\tconst sidebarSortBy = useUserPreference<'activity' | 'alphabetical'>('sidebarSortby', 'activity');\n\tconst isOmnichannelEnabled = useOmnichannelSortingDisclaimer();\n\n\tconst useHandleChange = (value: 'alphabetical' | 'activity'): (() => void) =>\n\t\tuseCallback(() => saveUserPreferences({ data: { sidebarSortby: value } }), [value]);\n\n\tconst setToAlphabetical = useHandleChange('alphabetical');\n\tconst setToActivity = useHandleChange('activity');\n\n\treturn [\n\t\t{\n\t\t\tid: 'activity',\n\t\t\tcontent: t('Activity'),\n\t\t\ticon: 'clock',\n\t\t\taddon: <RadioButton onChange={setToActivity} checked={sidebarSortBy === 'activity'} />,\n\t\t\tdescription: sidebarSortBy === 'activity' && isOmnichannelEnabled && <OmnichannelSortingDisclaimer />,\n\t\t},\n\t\t{\n\t\t\tid: 'name',\n\t\t\tcontent: t('Name'),\n\t\t\ticon: 'sort-az',\n\t\t\taddon: <RadioButton onChange={setToAlphabetical} checked={sidebarSortBy === 'alphabetical'} />,\n\t\t\tdescription: sidebarSortBy === 'alphabetical' && isOmnichannelEnabled && <OmnichannelSortingDisclaimer />,\n\t\t},\n\t];\n};\n",null],"names":["module","export","useSortModeItems","RadioButton","useEndpoint","useUserPreference","useTranslation","v","React","useCallback","OmnichannelSortingDisclaimer","useOmnichannelSortingDisclaimer","t","saveUserPreferences","sidebarSortBy","isOmnichannelEnabled","useHandleChange","value","data","sidebarSortby","setToAlphabetical","setToActivity","id","content","icon","addon","createElement","onChange","checked","description"],"mappings":"uBAAAA,EAAOC,MAAE,CAAA,CAAAC,iBAAmB,WAAA,OAAAA,CAAwB,CAAA,GAAAF,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAG,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAH,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAI,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,kBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAN,EAAAA,IAAAA,CAAAA,QAAAA,CAAA,QAAA,SAAAO,CAAA,EAAAC,EAAAA,CAAA,EAAAC,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAT,EAAAA,IAAAA,CAAAA,kEAAAA,CAAAU,6BAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,gCAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAU7C,IAV6CR,EAAAC,EAAAC,EAAAC,EAAAE,EAAAC,EAAAC,EAAAC,EAUvCT,EAAmB,WAC/B,IAAMU,EAAIN,IAEJO,EAAsBT,EAAY,OAAQ,4BAC1CU,EAAgBT,EAA+C,gBAAiB,YAChFU,EAAuBJ,IAEvBK,EAAkB,SAACC,CAAkC,EAAA,OAC1DR,EAAY,WAAA,OAAMI,EAAoB,CAAEK,KAAM,CAAEC,cAAeF,CAAK,CAAE,EAAG,EAAE,CAACA,EAAM,CAAC,EAE9EG,EAAoBJ,EAAgB,gBACpCK,EAAgBL,EAAgB,YAEtC,MAAO,CACN,CACCM,GAAI,WACJC,QAASX,EAAE,YACXY,KAAM,QACNC,MAAOjB,EAAAkB,aAAA,CAACvB,EAAW,CAACwB,SAAUN,EAAeO,QAASd,AAAkB,aAAlBA,CAA6B,GACnFe,YAAaf,AAAkB,aAAlBA,GAAgCC,GAAwBP,EAAAkB,aAAA,CAAChB,EAA4B,OAEnG,CACCY,GAAI,OACJC,QAASX,EAAE,QACXY,KAAM,UACNC,MAAOjB,EAAAkB,aAAA,CAACvB,EAAW,CAACwB,SAAUP,EAAmBQ,QAASd,AAAkB,iBAAlBA,CAAiC,GAC3Fe,YAAaf,AAAkB,iBAAlBA,GAAoCC,GAAwBP,EAAAkB,aAAA,CAAChB,EAA4B,OAEvG,AACF"}