)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/sidebar/sections/actions/OmnichannelCallToggleReady.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Sidebar } from '@rocket.chat/fuselage';\nimport { useTranslation } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React, { useCallback } from 'react';\n\nimport { useCallerInfo, useCallRegisterClient, useCallUnregisterClient, useVoipNetworkStatus } from '../../../contexts/CallContext';\n\nexport const OmnichannelCallToggleReady = ({ ...props }): ReactElement => {\n\tconst t = useTranslation();\n\n\tconst caller = useCallerInfo();\n\tconst unregister = useCallUnregisterClient();\n\tconst register = useCallRegisterClient();\n\n\tconst networkStatus = useVoipNetworkStatus();\n\tconst registered = !['ERROR', 'INITIAL', 'UNREGISTERED'].includes(caller.state);\n\tconst inCall = ['IN_CALL'].includes(caller.state);\n\n\tconst onClickVoipButton = useCallback((): void => {\n\t\tif (registered) {\n\t\t\tunregister();\n\t\t\treturn;\n\t\t}\n\t\tregister();\n\t}, [registered, register, unregister]);\n\n\tconst getTitle = (): string => {\n\t\tif (networkStatus === 'offline') {\n\t\t\treturn t('Waiting_for_server_connection');\n\t\t}\n\n\t\tif (inCall) {\n\t\t\treturn t('Cannot_disable_while_on_call');\n\t\t}\n\n\t\tif (registered) {\n\t\t\treturn t('Turn_off_answer_calls');\n\t\t}\n\n\t\treturn t('Turn_on_answer_calls');\n\t};\n\n\tconst getIcon = (): 'phone-issue' | 'phone' | 'phone-disabled' => {\n\t\tif (networkStatus === 'offline') {\n\t\t\treturn 'phone-issue';\n\t\t}\n\t\treturn registered ? 'phone' : 'phone-disabled';\n\t};\n\n\treturn (\n\t\t<Sidebar.TopBar.Action\n\t\t\ticon={getIcon()}\n\t\t\tdisabled={inCall}\n\t\t\taria-checked={registered}\n\t\t\taria-label={t('VoIP_Toggle')}\n\t\t\tdata-tooltip={getTitle()}\n\t\t\t{...props}\n\t\t\tsuccess={registered}\n\t\t\twarning={networkStatus === 'offline'}\n\t\t\tonClick={onClickVoipButton}\n\t\t/>\n\t);\n};\n",null],"names":["module","default","_objectDestructuringEmpty","_extends","export","OmnichannelCallToggleReady","Sidebar","useTranslation","v","React","useCallback","useCallerInfo","useCallRegisterClient","useCallUnregisterClient","useVoipNetworkStatus","_ref","props","t","caller","unregister","register","networkStatus","registered","includes","state","inCall","onClickVoipButton","createElement","TopBar","Action","icon","disabled","success","warning","onClick"],"mappings":"uBAAwBA,EAAAA,IAAAA,CAAAA,kDAAwB,CAAAC,QAAAA,SAAAA,CAAAA,EAAAC,EAAAA,CAAA,CAAA,EAAA,GAAAF,EAAAA,IAAAA,CAAAA,iCAAAA,CAAAC,QAAAA,SAAAA,CAAAA,EAAAE,EAAAA,CAAA,CAAA,EAAA,GAAhDH,EAAOI,MAAE,CAAA,CAAAC,2BAAe,WAAwB,OAAAA,CAAA,CAAA,GAAAL,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAM,QAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAN,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAO,eAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAP,EAAAA,IAAAA,CAAAA,QAAAA,CAAA,QAAA,SAAAQ,CAAA,EAAAC,EAAAA,CAAA,EAAAC,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAV,EAAAA,IAAAA,CAAAA,gCAAAA,CAAAW,cAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,sBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,wBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,qBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAOzC,IAPPZ,EAAgDC,EAAAG,EAAAC,EAAAE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAOnCT,EAA6B,SAAAU,CAAA,EAA+B,IAAzBC,EAAKb,EAAA,CAAA,EAAAD,CAAAA,EAAAa,GAAAA,CAAA,GAC9CE,EAAIV,IAEJW,EAASP,IACTQ,EAAaN,IACbO,EAAWR,IAEXS,EAAgBP,IAChBQ,EAAa,CAAC,CAAC,QAAS,UAAW,eAAe,CAACC,QAAQ,CAACL,EAAOM,KAAK,EACxEC,EAAS,CAAC,UAAU,CAACF,QAAQ,CAACL,EAAOM,KAAK,EAE1CE,EAAoBhB,EAAY,WACrC,GAAIY,EAAY,CACfH,IACA,OAEDC,GACD,EAAG,CAACE,EAAYF,EAAUD,EAAW,EAyBrC,OACCV,EAAAkB,aAAA,CAACrB,EAAQsB,MAAM,CAACC,MAAM,CAAA1B,EAAA,CACrB2B,KARD,AAAIT,AAAkB,YAAlBA,EACI,cAEDC,EAAa,QAAU,iBAM7BS,SAAUN,EACV,eAAcH,EACd,aAAYL,EAAE,eACd,cAAA,CA3BOA,EAAE,AADNI,AAAkB,YAAlBA,EACM,gCAIA,AADNI,EACM,+BAIA,AADNH,EACM,wBAGD,uBAgBiB,EACrBN,EAAK,CACTgB,QAASV,EACTW,QAASZ,AAAkB,YAAlBA,EACTa,QAASR,CAAkB,GAG9B"}