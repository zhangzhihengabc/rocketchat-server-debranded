)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/teams/contextualBar/channels/hooks/useTeamsChannelList.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useCallback, useMemo, useState } from 'react';\n\nimport { useScrollableRecordList } from '../../../../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../../../../lib/lists/RecordList';\nimport { getConfig } from '../../../../../lib/utils/getConfig';\nimport { mapMessageFromApi } from '../../../../../lib/utils/mapMessageFromApi';\n\ntype TeamsChannelListOptions = {\n\tteamId: string;\n\ttype: 'all' | 'autoJoin';\n\ttext: string;\n};\n\nexport const useTeamsChannelList = (\n\toptions: TeamsChannelListOptions,\n): {\n\tteamsChannelList: RecordList<IRoom>;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst apiEndPoint = useEndpoint('GET', '/v1/teams.listRooms');\n\tconst [teamsChannelList, setTeamsChannelList] = useState(() => new RecordList<IRoom>());\n\tconst reload = useCallback(() => setTeamsChannelList(new RecordList<IRoom>()), []);\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { rooms, total } = await apiEndPoint({\n\t\t\t\tteamId: options.teamId,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end,\n\t\t\t\tfilter: options.text,\n\t\t\t\ttype: options.type,\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems: rooms.map(({ _updatedAt, lastMessage, lm, ts, webRtcCallStartTime, ...room }) => ({\n\t\t\t\t\t...(lm && { lm: new Date(lm) }),\n\t\t\t\t\t...(ts && { ts: new Date(ts) }),\n\t\t\t\t\t_updatedAt: new Date(_updatedAt),\n\t\t\t\t\t...(lastMessage && { lastMessage: mapMessageFromApi(lastMessage) }),\n\t\t\t\t\t...(webRtcCallStartTime && { webRtcCallStartTime: new Date(webRtcCallStartTime) }),\n\t\t\t\t\t...room,\n\t\t\t\t})),\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[apiEndPoint, options],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(\n\t\tteamsChannelList,\n\t\tfetchData,\n\t\tuseMemo(() => parseInt(`${getConfig('teamsChannelListSize', 10)}`), []),\n\t);\n\n\treturn {\n\t\treload,\n\t\tteamsChannelList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n",null],"names":["_regeneratorRuntime","_objectSpread","_objectWithoutProperties","_slicedToArray","useEndpoint","useCallback","useMemo","useState","useScrollableRecordList","useComponentDidUpdate","RecordList","getConfig","mapMessageFromApi","module","link","default","export","useTeamsChannelList","options","apiEndPoint","_useState2","teamsChannelList","setTeamsChannelList","reload","_useScrollableRecordL","start","end","_await$apiEndPoint","rooms","total","async","_context","prev","next","awrap","teamId","offset","count","filter","text","type","sent","abrupt","items","map","_ref","_updatedAt","lastMessage","lm","ts","webRtcCallStartTime","room","_excluded","Date","itemCount","stop","Promise","parseInt","loadMoreItems","initialItemCount"],"mappings":"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"}