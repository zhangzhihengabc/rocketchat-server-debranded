)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/body/hooks/useRoomRolesManagement.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { useMethod, useStream } from '@rocket.chat/ui-contexts';\nimport { useEffect } from 'react';\n\nimport { RoomRoles, ChatMessage } from '../../../../../app/models/client';\n\n// const roomRoles = RoomRoles as Mongo.Collection<Pick<ISubscription, 'rid' | 'u' | 'roles'>>;\n\nexport const useRoomRolesManagement = (rid: IRoom['_id']): void => {\n\tconst getRoomRoles = useMethod('getRoomRoles');\n\n\tuseEffect(() => {\n\t\tgetRoomRoles(rid).then((results) => {\n\t\t\tArray.from(results).forEach(({ _id, ...data }) => {\n\t\t\t\tconst {\n\t\t\t\t\trid,\n\t\t\t\t\tu: { _id: uid },\n\t\t\t\t} = data;\n\t\t\t\tRoomRoles.upsert({ rid, 'u._id': uid }, { $set: data });\n\t\t\t});\n\t\t});\n\t}, [getRoomRoles, rid]);\n\n\tuseEffect(() => {\n\t\tconst rolesObserve = RoomRoles.find({ rid }).observe({\n\t\t\tadded: (role) => {\n\t\t\t\tif (!role.u?._id) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tChatMessage.update({ rid, 'u._id': role.u._id }, { $addToSet: { roles: role._id } }, { multi: true });\n\t\t\t},\n\t\t\tchanged: (role) => {\n\t\t\t\tif (!role.u?._id) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tChatMessage.update({ rid, 'u._id': role.u._id }, { $inc: { rerender: 1 } }, { multi: true });\n\t\t\t},\n\t\t\tremoved: (role) => {\n\t\t\t\tif (!role.u?._id) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tChatMessage.update({ rid, 'u._id': role.u._id }, { $pull: { roles: role._id } }, { multi: true });\n\t\t\t},\n\t\t});\n\n\t\treturn (): void => {\n\t\t\trolesObserve.stop();\n\t\t};\n\t}, [getRoomRoles, rid]);\n\n\tconst subscribeToNotifyLoggedIn = useStream('notify-logged');\n\n\tuseEffect(\n\t\t() =>\n\t\t\tsubscribeToNotifyLoggedIn('roles-change', ({ type, ...role }) => {\n\t\t\t\tif (!role.scope) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!role.u?._id) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase 'added':\n\t\t\t\t\t\tRoomRoles.upsert({ 'rid': role.scope, 'u._id': role.u._id }, { $setOnInsert: { u: role.u }, $addToSet: { roles: role._id } });\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'removed':\n\t\t\t\t\t\tRoomRoles.update({ 'rid': role.scope, 'u._id': role.u._id }, { $pull: { roles: role._id } });\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}),\n\t\t[subscribeToNotifyLoggedIn],\n\t);\n\n\tuseEffect(\n\t\t() =>\n\t\t\tsubscribeToNotifyLoggedIn('Users:NameChanged', ({ _id: uid, name }: Partial<IUser>) => {\n\t\t\t\tRoomRoles.update(\n\t\t\t\t\t{\n\t\t\t\t\t\t'u._id': uid,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t$set: {\n\t\t\t\t\t\t\t'u.name': name,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tmulti: true,\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t}),\n\t\t[subscribeToNotifyLoggedIn],\n\t);\n};\n",null],"names":["_objectWithoutProperties","useMethod","useStream","useEffect","RoomRoles","ChatMessage","module","link","default","export","useRoomRolesManagement","rid","getRoomRoles","then","results","Array","from","forEach","_ref","_id","data","_excluded","uid","u","upsert","$set","rolesObserve","find","observe","added","role","_role$u","update","$addToSet","roles","multi","changed","_role$u2","$inc","rerender","removed","_role$u3","$pull","stop","subscribeToNotifyLoggedIn","_ref2","_role$u4","type","_excluded2","scope","$setOnInsert","_ref3","name"],"mappings":"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"}