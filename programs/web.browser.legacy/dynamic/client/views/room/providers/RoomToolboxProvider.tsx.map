)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/providers/RoomToolboxProvider.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { RoomType, IRoom } from '@rocket.chat/core-typings';\nimport { useMutableCallback, useStableArray } from '@rocket.chat/fuselage-hooks';\nimport { useUserId, useSetting, useRouter, useRouteParameter } from '@rocket.chat/ui-contexts';\nimport type { ReactNode } from 'react';\nimport React, { useMemo } from 'react';\n\nimport { useRoom } from '../contexts/RoomContext';\nimport { RoomToolboxContext } from '../contexts/RoomToolboxContext';\nimport type { RoomToolboxContextValue, RoomToolboxActionConfig } from '../contexts/RoomToolboxContext';\nimport { useAppsRoomActions } from './hooks/useAppsRoomActions';\nimport { useCoreRoomActions } from './hooks/useCoreRoomActions';\n\nconst groupsDict = {\n\tl: 'live',\n\tv: 'voip',\n\td: 'direct',\n\tp: 'group',\n\tc: 'channel',\n} as const satisfies Record<RoomType, RoomToolboxActionConfig['groups'][number]>;\n\nconst getGroup = (room: IRoom) => {\n\tif (room.teamMain) {\n\t\treturn 'team';\n\t}\n\n\tif (room.t === 'd' && (room.uids?.length ?? 0) > 2) {\n\t\treturn 'direct_multiple';\n\t}\n\n\treturn groupsDict[room.t];\n};\n\ntype RoomToolboxProviderProps = { children: ReactNode };\n\nconst RoomToolboxProvider = ({ children }: RoomToolboxProviderProps) => {\n\tconst room = useRoom();\n\n\tconst router = useRouter();\n\n\tconst openTab = useMutableCallback((actionId: string, context?: string) => {\n\t\tif (actionId === tab?.id && context === undefined) {\n\t\t\treturn closeTab();\n\t\t}\n\n\t\tconst routeName = router.getRouteName();\n\n\t\tif (!routeName) {\n\t\t\tthrow new Error('Route name is not defined');\n\t\t}\n\n\t\tconst { layout } = router.getSearchParameters();\n\n\t\trouter.navigate({\n\t\t\tname: routeName,\n\t\t\tparams: {\n\t\t\t\t...router.getRouteParameters(),\n\t\t\t\ttab: actionId,\n\t\t\t\tcontext: context ?? '',\n\t\t\t},\n\t\t\tsearch: layout ? { layout } : undefined,\n\t\t});\n\t});\n\n\tconst closeTab = useMutableCallback(() => {\n\t\tconst routeName = router.getRouteName();\n\n\t\tif (!routeName) {\n\t\t\tthrow new Error('Route name is not defined');\n\t\t}\n\n\t\trouter.navigate({\n\t\t\tname: routeName,\n\t\t\tparams: {\n\t\t\t\t...router.getRouteParameters(),\n\t\t\t\ttab: '',\n\t\t\t\tcontext: '',\n\t\t\t},\n\t\t\tsearch: router.getSearchParameters(),\n\t\t});\n\t});\n\n\tconst context = useRouteParameter('context');\n\n\tconst coreRoomActions = useCoreRoomActions();\n\tconst appsRoomActions = useAppsRoomActions();\n\n\tconst allowAnonymousRead = useSetting<boolean>('Accounts_AllowAnonymousRead', false);\n\tconst uid = useUserId();\n\n\tconst actions = useStableArray(\n\t\t[...coreRoomActions, ...appsRoomActions]\n\t\t\t.filter((action) => uid || (allowAnonymousRead && 'anonymous' in action && action.anonymous))\n\t\t\t.filter((action) => !action.groups || action.groups.includes(getGroup(room)))\n\t\t\t.sort((a, b) => (a.order ?? 0) - (b.order ?? 0)),\n\t);\n\n\tconst tabActionId = useRouteParameter('tab');\n\tconst tab = useMemo(() => {\n\t\tif (!tabActionId) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn actions.find((action) => action.id === tabActionId);\n\t}, [actions, tabActionId]);\n\n\tconst contextValue = useMemo(\n\t\t(): RoomToolboxContextValue => ({\n\t\t\tactions,\n\t\t\ttab,\n\t\t\tcontext,\n\t\t\topenTab,\n\t\t\tcloseTab,\n\t\t}),\n\t\t[actions, tab, context, openTab, closeTab],\n\t);\n\n\treturn <RoomToolboxContext.Provider value={contextValue}>{children}</RoomToolboxContext.Provider>;\n};\n\nexport default RoomToolboxProvider;\n",null],"names":["module","link","default","v","_toConsumableArray","_objectSpread","useMutableCallback","useStableArray","useUserId","useSetting","useRouter","useRouteParameter","React","useMemo","useRoom","RoomToolboxContext","useAppsRoomActions","useCoreRoomActions","groupsDict","l","d","p","c","getGroup","room","_room$uids$length","_room$uids","teamMain","t","uids","length","exportDefault","_ref","children","router","openTab","actionId","context","tab","id","undefined","closeTab","routeName","getRouteName","Error","layout","_router$getSearchPara","getSearchParameters","navigate","name","params","getRouteParameters","search","coreRoomActions","appsRoomActions","allowAnonymousRead","uid","actions","concat","filter","action","anonymous","groups","includes","sort","a","b","_a$order","_b$order","order","tabActionId","find","contextValue","createElement","Provider","value"],"mappings":"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"}