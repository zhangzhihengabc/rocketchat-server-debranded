)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/Header/Omnichannel/QuickActions/hooks/useQuickActions.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport {\n\tuseSetModal,\n\tuseToastMessageDispatch,\n\tuseUserId,\n\tuseSetting,\n\tusePermission,\n\tuseRole,\n\tuseEndpoint,\n\tuseMethod,\n\tuseTranslation,\n\tuseRouter,\n} from '@rocket.chat/ui-contexts';\nimport React, { useCallback, useState, useEffect } from 'react';\n\nimport { LivechatInquiry } from '../../../../../../../app/livechat/client/collections/LivechatInquiry';\nimport { LegacyRoomManager } from '../../../../../../../app/ui-utils/client';\nimport PlaceChatOnHoldModal from '../../../../../../../ee/app/livechat-enterprise/client/components/modals/PlaceChatOnHoldModal';\nimport { useHasLicenseModule } from '../../../../../../../ee/client/hooks/useHasLicenseModule';\nimport CloseChatModal from '../../../../../../components/Omnichannel/modals/CloseChatModal';\nimport CloseChatModalData from '../../../../../../components/Omnichannel/modals/CloseChatModalData';\nimport ForwardChatModal from '../../../../../../components/Omnichannel/modals/ForwardChatModal';\nimport ReturnChatQueueModal from '../../../../../../components/Omnichannel/modals/ReturnChatQueueModal';\nimport TranscriptModal from '../../../../../../components/Omnichannel/modals/TranscriptModal';\nimport { useIsRoomOverMacLimit } from '../../../../../../hooks/omnichannel/useIsRoomOverMacLimit';\nimport { useOmnichannelRouteConfig } from '../../../../../../hooks/omnichannel/useOmnichannelRouteConfig';\nimport { quickActionHooks } from '../../../../../../ui';\nimport { useOmnichannelRoom } from '../../../../contexts/RoomContext';\nimport type { QuickActionsActionConfig } from '../../../../lib/quickActions';\nimport { QuickActionsEnum } from '../../../../lib/quickActions';\nimport { usePutChatOnHoldMutation } from './usePutChatOnHoldMutation';\nimport { useReturnChatToQueueMutation } from './useReturnChatToQueueMutation';\n\nexport const useQuickActions = (): {\n\tquickActions: QuickActionsActionConfig[];\n\tactionDefault: (actionId: string) => void;\n} => {\n\tconst room = useOmnichannelRoom();\n\tconst setModal = useSetModal();\n\tconst router = useRouter();\n\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst [onHoldModalActive, setOnHoldModalActive] = useState(false);\n\n\tconst visitorRoomId = room.v._id;\n\tconst rid = room._id;\n\tconst uid = useUserId();\n\tconst roomLastMessage = room.lastMessage;\n\n\tconst getVisitorInfo = useEndpoint('GET', '/v1/livechat/visitors.info');\n\n\tconst getVisitorEmail = useMutableCallback(async () => {\n\t\tif (!visitorRoomId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst {\n\t\t\tvisitor: { visitorEmails },\n\t\t} = await getVisitorInfo({ visitorId: visitorRoomId });\n\n\t\tif (visitorEmails?.length && visitorEmails[0].address) {\n\t\t\treturn visitorEmails[0].address;\n\t\t}\n\t});\n\n\tuseEffect(() => {\n\t\tif (onHoldModalActive && roomLastMessage?.token) {\n\t\t\tsetModal(null);\n\t\t}\n\t}, [roomLastMessage, onHoldModalActive, setModal]);\n\n\tconst closeModal = useCallback(() => setModal(null), [setModal]);\n\n\tconst requestTranscript = useEndpoint('POST', '/v1/livechat/transcript/:rid', { rid });\n\n\tconst handleRequestTranscript = useCallback(\n\t\tasync (email: string, subject: string) => {\n\t\t\ttry {\n\t\t\t\tawait requestTranscript({ email, subject });\n\t\t\t\tcloseModal();\n\t\t\t\tdispatchToastMessage({\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\tmessage: t('Livechat_email_transcript_has_been_requested'),\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t},\n\t\t[closeModal, dispatchToastMessage, requestTranscript, t],\n\t);\n\n\tconst sendTranscriptPDF = useEndpoint('POST', '/v1/omnichannel/:rid/request-transcript', { rid });\n\n\tconst handleSendTranscriptPDF = useCallback(async () => {\n\t\ttry {\n\t\t\tawait sendTranscriptPDF();\n\t\t\tdispatchToastMessage({\n\t\t\t\ttype: 'success',\n\t\t\t\tmessage: t('Livechat_transcript_has_been_requested'),\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t}, [dispatchToastMessage, sendTranscriptPDF, t]);\n\n\tconst sendTranscript = useMethod('livechat:sendTranscript');\n\n\tconst handleSendTranscript = useCallback(\n\t\tasync (email: string, subject: string, token: string) => {\n\t\t\ttry {\n\t\t\t\tawait sendTranscript(token, rid, email, subject);\n\t\t\t\tcloseModal();\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t},\n\t\t[closeModal, dispatchToastMessage, rid, sendTranscript],\n\t);\n\n\tconst discardTranscript = useEndpoint('DELETE', '/v1/livechat/transcript/:rid', { rid });\n\n\tconst handleDiscardTranscript = useCallback(async () => {\n\t\ttry {\n\t\t\tawait discardTranscript();\n\t\t\tdispatchToastMessage({\n\t\t\t\ttype: 'success',\n\t\t\t\tmessage: t('Livechat_transcript_request_has_been_canceled'),\n\t\t\t});\n\t\t\tcloseModal();\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t}, [closeModal, discardTranscript, dispatchToastMessage, t]);\n\n\tconst forwardChat = useEndpoint('POST', '/v1/livechat/room.forward');\n\n\tconst handleForwardChat = useCallback(\n\t\tasync (departmentId?: string, userId?: string, comment?: string) => {\n\t\t\tif (departmentId && userId) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst transferData: {\n\t\t\t\troomId: string;\n\t\t\t\tclientAction: boolean;\n\t\t\t\tcomment?: string;\n\t\t\t\tdepartmentId?: string;\n\t\t\t\tuserId?: string;\n\t\t\t} = {\n\t\t\t\troomId: rid,\n\t\t\t\tcomment,\n\t\t\t\tclientAction: true,\n\t\t\t};\n\n\t\t\tif (departmentId) {\n\t\t\t\ttransferData.departmentId = departmentId;\n\t\t\t}\n\t\t\tif (userId) {\n\t\t\t\ttransferData.userId = userId;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait forwardChat(transferData);\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Transferred') });\n\t\t\t\trouter.navigate('/home');\n\t\t\t\tLegacyRoomManager.close(room.t + rid);\n\t\t\t\tcloseModal();\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t},\n\t\t[closeModal, dispatchToastMessage, forwardChat, room.t, rid, router, t],\n\t);\n\n\tconst closeChat = useEndpoint('POST', '/v1/livechat/room.closeByUser');\n\n\tconst handleClose = useCallback(\n\t\tasync (\n\t\t\tcomment?: string,\n\t\t\ttags?: string[],\n\t\t\tpreferences?: { omnichannelTranscriptPDF: boolean; omnichannelTranscriptEmail: boolean },\n\t\t\trequestData?: { email: string; subject: string },\n\t\t) => {\n\t\t\ttry {\n\t\t\t\tawait closeChat({\n\t\t\t\t\trid,\n\t\t\t\t\t...(comment && { comment }),\n\t\t\t\t\t...(tags && { tags }),\n\t\t\t\t\t...(preferences?.omnichannelTranscriptPDF && { generateTranscriptPdf: true }),\n\t\t\t\t\t...(preferences?.omnichannelTranscriptEmail && requestData\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\ttranscriptEmail: {\n\t\t\t\t\t\t\t\t\tsendToVisitor: preferences?.omnichannelTranscriptEmail,\n\t\t\t\t\t\t\t\t\trequestData,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: { transcriptEmail: { sendToVisitor: false } }),\n\t\t\t\t});\n\t\t\t\tLivechatInquiry.remove({ rid });\n\t\t\t\tcloseModal();\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Chat_closed_successfully') });\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t},\n\t\t[closeChat, closeModal, dispatchToastMessage, rid, t],\n\t);\n\n\tconst returnChatToQueueMutation = useReturnChatToQueueMutation({\n\t\tonSuccess: () => {\n\t\t\tLegacyRoomManager.close(room.t + rid);\n\t\t\trouter.navigate('/home');\n\t\t},\n\t\tonError: (error) => {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t},\n\t\tonSettled: () => {\n\t\t\tcloseModal();\n\t\t},\n\t});\n\n\tconst putChatOnHoldMutation = usePutChatOnHoldMutation({\n\t\tonSuccess: () => {\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Chat_On_Hold_Successfully') });\n\t\t},\n\t\tonError: (error) => {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t},\n\t\tonSettled: () => {\n\t\t\tcloseModal();\n\t\t},\n\t});\n\n\tconst handleAction = useMutableCallback(async (id: string) => {\n\t\tswitch (id) {\n\t\t\tcase QuickActionsEnum.MoveQueue:\n\t\t\t\tsetModal(\n\t\t\t\t\t<ReturnChatQueueModal\n\t\t\t\t\t\tonMoveChat={(): void => returnChatToQueueMutation.mutate(rid)}\n\t\t\t\t\t\tonCancel={(): void => {\n\t\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase QuickActionsEnum.TranscriptPDF:\n\t\t\t\thandleSendTranscriptPDF();\n\t\t\t\tbreak;\n\t\t\tcase QuickActionsEnum.TranscriptEmail:\n\t\t\t\tconst visitorEmail = await getVisitorEmail();\n\n\t\t\t\tif (!visitorEmail) {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: t('Customer_without_registered_email') });\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tsetModal(\n\t\t\t\t\t<TranscriptModal\n\t\t\t\t\t\troom={room}\n\t\t\t\t\t\temail={visitorEmail}\n\t\t\t\t\t\tonRequest={handleRequestTranscript}\n\t\t\t\t\t\tonSend={handleSendTranscript}\n\t\t\t\t\t\tonDiscard={handleDiscardTranscript}\n\t\t\t\t\t\tonCancel={closeModal}\n\t\t\t\t\t/>,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase QuickActionsEnum.ChatForward:\n\t\t\t\tsetModal(<ForwardChatModal room={room} onForward={handleForwardChat} onCancel={closeModal} />);\n\t\t\t\tbreak;\n\t\t\tcase QuickActionsEnum.CloseChat:\n\t\t\t\tconst email = await getVisitorEmail();\n\t\t\t\tsetModal(\n\t\t\t\t\troom.departmentId ? (\n\t\t\t\t\t\t<CloseChatModalData visitorEmail={email} departmentId={room.departmentId} onConfirm={handleClose} onCancel={closeModal} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<CloseChatModal visitorEmail={email} onConfirm={handleClose} onCancel={closeModal} />\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase QuickActionsEnum.OnHoldChat:\n\t\t\t\tsetModal(\n\t\t\t\t\t<PlaceChatOnHoldModal\n\t\t\t\t\t\tonOnHoldChat={(): void => putChatOnHoldMutation.mutate(rid)}\n\t\t\t\t\t\tonCancel={(): void => {\n\t\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\t\tsetOnHoldModalActive(false);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>,\n\t\t\t\t);\n\t\t\t\tsetOnHoldModalActive(true);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\tconst omnichannelRouteConfig = useOmnichannelRouteConfig();\n\n\tconst manualOnHoldAllowed = useSetting('Livechat_allow_manual_on_hold');\n\n\tconst hasManagerRole = useRole('livechat-manager');\n\tconst hasMonitorRole = useRole('livechat-monitor');\n\n\tconst roomOpen = room?.open && (room.u?._id === uid || hasManagerRole || hasMonitorRole) && room?.lastMessage?.t !== 'livechat-close';\n\tconst canMoveQueue = !!omnichannelRouteConfig?.returnQueue && room?.u !== undefined;\n\tconst canForwardGuest = usePermission('transfer-livechat-guest');\n\tconst canSendTranscriptEmail = usePermission('send-omnichannel-chat-transcript');\n\tconst hasLicense = useHasLicenseModule('livechat-enterprise');\n\tconst canSendTranscriptPDF = usePermission('request-pdf-transcript');\n\tconst canCloseRoom = usePermission('close-livechat-room');\n\tconst canCloseOthersRoom = usePermission('close-others-livechat-room');\n\tconst restrictedOnHold = useSetting('Livechat_allow_manual_on_hold_upon_agent_engagement_only');\n\tconst canRoomBePlacedOnHold = !room.onHold && room.u;\n\tconst canAgentPlaceOnHold = !room.lastMessage?.token;\n\tconst canPlaceChatOnHold = Boolean(manualOnHoldAllowed && canRoomBePlacedOnHold && (!restrictedOnHold || canAgentPlaceOnHold));\n\tconst isRoomOverMacLimit = useIsRoomOverMacLimit(room);\n\n\tconst hasPermissionButtons = (id: string): boolean => {\n\t\tswitch (id) {\n\t\t\tcase QuickActionsEnum.MoveQueue:\n\t\t\t\treturn !isRoomOverMacLimit && !!roomOpen && canMoveQueue;\n\t\t\tcase QuickActionsEnum.ChatForward:\n\t\t\t\treturn !isRoomOverMacLimit && !!roomOpen && canForwardGuest;\n\t\t\tcase QuickActionsEnum.Transcript:\n\t\t\t\treturn !isRoomOverMacLimit && (canSendTranscriptEmail || (hasLicense && canSendTranscriptPDF));\n\t\t\tcase QuickActionsEnum.TranscriptEmail:\n\t\t\t\treturn !isRoomOverMacLimit && canSendTranscriptEmail;\n\t\t\tcase QuickActionsEnum.TranscriptPDF:\n\t\t\t\treturn hasLicense && !isRoomOverMacLimit && canSendTranscriptPDF;\n\t\t\tcase QuickActionsEnum.CloseChat:\n\t\t\t\treturn !!roomOpen && (canCloseRoom || canCloseOthersRoom);\n\t\t\tcase QuickActionsEnum.OnHoldChat:\n\t\t\t\treturn !!roomOpen && canPlaceChatOnHold;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn false;\n\t};\n\n\tconst quickActions = quickActionHooks\n\t\t.map((quickActionHook) => quickActionHook())\n\t\t.filter((quickAction): quickAction is QuickActionsActionConfig => !!quickAction)\n\t\t.filter((action) => {\n\t\t\tconst { options, id } = action;\n\t\t\tif (options) {\n\t\t\t\taction.options = options.filter(({ id }) => hasPermissionButtons(id));\n\t\t\t}\n\n\t\t\treturn hasPermissionButtons(id);\n\t\t})\n\t\t.sort((a, b) => (a.order ?? 0) - (b.order ?? 0));\n\n\tconst actionDefault = useMutableCallback((actionId: string) => {\n\t\thandleAction(actionId);\n\t});\n\n\treturn { quickActions, actionDefault };\n};\n",null],"names":["module","link","default","_regeneratorRuntime","_objectSpread","_slicedToArray","export","useQuickActions","useMutableCallback","useSetModal","useToastMessageDispatch","useUserId","useSetting","usePermission","useRole","useEndpoint","useMethod","useTranslation","useRouter","v","React","useCallback","useState","useEffect","LivechatInquiry","LegacyRoomManager","PlaceChatOnHoldModal","useHasLicenseModule","CloseChatModal","CloseChatModalData","ForwardChatModal","ReturnChatQueueModal","TranscriptModal","useIsRoomOverMacLimit","useOmnichannelRouteConfig","quickActionHooks","useOmnichannelRoom","QuickActionsEnum","usePutChatOnHoldMutation","useReturnChatToQueueMutation","_room$u","_room$lastMessage","_room$lastMessage2","room","setModal","router","t","dispatchToastMessage","_useState2","onHoldModalActive","setOnHoldModalActive","visitorRoomId","_id","rid","uid","roomLastMessage","lastMessage","getVisitorInfo","getVisitorEmail","visitorEmails","async","_context","prev","next","abrupt","awrap","visitorId","_await$getVisitorInfo","sent","visitor","length","address","stop","Promise","token","closeModal","requestTranscript","handleRequestTranscript","email","subject","_context2","type","message","t0","sendTranscriptPDF","handleSendTranscriptPDF","_context3","sendTranscript","handleSendTranscript","_context4","discardTranscript","handleDiscardTranscript","_context5","forwardChat","handleForwardChat","departmentId","userId","comment","transferData","_context6","roomId","clientAction","navigate","close","closeChat","handleClose","tags","preferences","requestData","_context7","omnichannelTranscriptPDF","generateTranscriptPdf","omnichannelTranscriptEmail","transcriptEmail","sendToVisitor","remove","returnChatToQueueMutation","onSuccess","onError","error","onSettled","putChatOnHoldMutation","handleAction","id","visitorEmail","_context8","MoveQueue","TranscriptPDF","TranscriptEmail","ChatForward","CloseChat","OnHoldChat","createElement","onMoveChat","mutate","onCancel","onRequest","onSend","onDiscard","onForward","onConfirm","onOnHoldChat","omnichannelRouteConfig","manualOnHoldAllowed","hasManagerRole","hasMonitorRole","roomOpen","open","u","canMoveQueue","returnQueue","undefined","canForwardGuest","canSendTranscriptEmail","hasLicense","canSendTranscriptPDF","canCloseRoom","canCloseOthersRoom","restrictedOnHold","canRoomBePlacedOnHold","onHold","canAgentPlaceOnHold","canPlaceChatOnHold","Boolean","isRoomOverMacLimit","hasPermissionButtons","Transcript","quickActions","map","quickActionHook","filter","quickAction","action","options","_ref","sort","a","b","_a$order","_b$order","order","actionDefault","actionId"],"mappings":"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"}