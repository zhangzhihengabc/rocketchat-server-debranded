)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/Header/icons/Encrypted.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport colors from '@rocket.chat/fuselage-tokens/colors';\nimport { HeaderState } from '@rocket.chat/ui-client';\nimport { useSetting, usePermission, useTranslation, useEndpoint } from '@rocket.chat/ui-contexts';\nimport React, { memo } from 'react';\n\nimport { dispatchToastMessage } from '../../../../lib/toast';\n\nconst Encrypted = ({ room }: { room: IRoom }) => {\n\tconst t = useTranslation();\n\tconst e2eEnabled = useSetting('E2E_Enable');\n\tconst toggleE2E = useEndpoint('POST', '/v1/rooms.saveRoomSettings');\n\tconst canToggleE2E = usePermission('toggle-room-e2e-encryption');\n\tconst encryptedLabel = canToggleE2E ? t('Encrypted_key_title') : t('Encrypted');\n\tconst handleE2EClick = useMutableCallback(async () => {\n\t\tif (!canToggleE2E) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { success } = await toggleE2E({ rid: room._id, encrypted: !room.encrypted });\n\t\tif (!success) {\n\t\t\treturn;\n\t\t}\n\n\t\tdispatchToastMessage({\n\t\t\ttype: 'success',\n\t\t\tmessage: t('E2E_Encryption_disabled_for_room', { roomName: room.name }),\n\t\t});\n\t});\n\treturn e2eEnabled && room?.encrypted ? (\n\t\t<HeaderState title={encryptedLabel} icon='key' onClick={handleE2EClick} color={colors.g500} tiny />\n\t) : null;\n};\n\nexport default memo(Encrypted);\n",null],"names":["_regeneratorRuntime","useMutableCallback","colors","HeaderState","useSetting","usePermission","useTranslation","useEndpoint","React","memo","dispatchToastMessage","module","link","default","v","exportDefault","_ref","room","t","e2eEnabled","toggleE2E","canToggleE2E","encryptedLabel","handleE2EClick","async","_context","prev","next","abrupt","awrap","rid","_id","encrypted","_await$toggleE2E","sent","success","type","message","roomName","name","stop","Promise","createElement","title","icon","onClick","color","g500","tiny"],"mappings":"uBASA,IARAA,EAAAC,EAAiEC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAxDC,EAAoBC,IAAM,CAAA,6BAA8B,CAAAC,QAAAA,SAAAA,CAAAA,EAAAb,EAAAA,CAAA,CAAA,EAAA,GAAxDW,EAAoBC,IAAA,CAAM,8BAA8B,CAAAX,mBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAU,EAAAA,IAAAA,CAAAA,sCAAAA,CAAA,QAAA,SAAAG,CAAA,EAAAZ,EAAAA,CAAA,CAAA,EAAA,GAAAS,EAAAA,IAAAA,CAAAA,yBAAAA,CAAAR,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAQ,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAP,WAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,cAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,QAAAA,CAAA,QAAA,SAAAG,CAAA,EAAAN,EAAAA,CAAA,EAAAC,KAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAD,qBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAjEC,EAAOI,aAAE,CAkCMN,EA1BG,SAAAO,CAAA,EAA8B,IAA3BC,EAAID,EAAJC,IAAI,CAClBC,EAAIZ,IACJa,EAAaf,EAAW,cACxBgB,EAAYb,EAAY,OAAQ,8BAChCc,EAAehB,EAAc,8BAC7BiB,EAAiBD,EAAeH,EAAE,uBAAyBA,EAAE,aAC7DK,EAAiBtB,EAAmB,WAAA,OAAAD,EAAAwB,KAAA,CAAA,SAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAC,IAAA,CAAAD,EAAAE,IAAA,EAAA,KAAA,EAAA,GACpCN,EAAY,CAAAI,EAAAE,IAAA,CAAA,EAAA,KAAA,CAAA,OAAAF,EAAAG,MAAA,CAAA,SAAA,MAAA,EAAA,OAAAH,EAAAE,IAAA,CAAA,EAAA3B,EAAA6B,KAAA,CAIST,EAAU,CAAEU,IAAKb,EAAKc,GAAG,CAAEC,UAAW,CAACf,EAAKe,SAAAA,AAAS,GAAG,MAAA,EAAnE,GAAAC,AAAmER,EAAAS,IAAA,CAA1EC,OAAO,CACH,CAAAV,EAAAE,IAAA,CAAA,EAAA,KAAA,CAAA,OAAAF,EAAAG,MAAA,CAAA,SAAA,MAAA,EAIZlB,EAAqB,CACpB0B,KAAM,UACNC,QAASnB,EAAE,mCAAoC,CAAEoB,SAAUrB,EAAKsB,IAAAA,AAAI,IAClE,MAAA,EAAA,IAAA,MAAA,OAAAd,EAAAe,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,KAAAC,QAAA,GAEJ,OAAOtB,GAAcF,MAAAA,GAAAA,EAAMe,SAAS,CACnCxB,EAAAkC,aAAA,CAACvC,EAAW,CAACwC,MAAOrB,EAAgBsB,KAAK,MAAMC,QAAStB,EAAgBuB,MAAO5C,EAAO6C,IAAK,CAACC,KAAI,CAAA,CAAA,GAC7F,IACL"}