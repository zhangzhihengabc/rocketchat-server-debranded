)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/MessageList/hooks/useJumpToMessage.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport { useRouter } from '@rocket.chat/ui-contexts';\nimport type { RefObject } from 'react';\nimport { useLayoutEffect } from 'react';\n\nimport { useMessageListJumpToMessageParam, useMessageListScroll } from '../../../../components/message/list/MessageListContext';\nimport { setHighlightMessage, clearHighlightMessage } from '../providers/messageHighlightSubscription';\n\n// this is an arbitrary value so that there's a gap between the header and the message;\nconst SCROLL_EXTRA_OFFSET = 60;\n\nexport const useJumpToMessage = (messageId: IMessage['_id'], messageRef: RefObject<HTMLDivElement>): void => {\n\tconst jumpToMessageParam = useMessageListJumpToMessageParam();\n\tconst scroll = useMessageListScroll();\n\tconst router = useRouter();\n\n\tuseLayoutEffect(() => {\n\t\tif (jumpToMessageParam !== messageId || !messageRef.current || !scroll) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tscroll((wrapper) => {\n\t\t\t\tif (!wrapper || !messageRef.current) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst containerRect = wrapper.getBoundingClientRect();\n\t\t\t\tconst messageRect = messageRef.current.getBoundingClientRect();\n\n\t\t\t\tconst offset = messageRect.top - containerRect.top;\n\t\t\t\tconst scrollPosition = wrapper.scrollTop;\n\t\t\t\tconst newScrollPosition = scrollPosition + offset - SCROLL_EXTRA_OFFSET;\n\n\t\t\t\treturn { top: newScrollPosition, behavior: 'smooth' };\n\t\t\t});\n\n\t\t\tconst search = router.getSearchParameters();\n\t\t\tdelete search.msg;\n\t\t\trouter.navigate(\n\t\t\t\t{\n\t\t\t\t\tpathname: router.getLocationPathname(),\n\t\t\t\t\tsearch,\n\t\t\t\t},\n\t\t\t\t{ replace: true },\n\t\t\t);\n\n\t\t\tsetHighlightMessage(messageId);\n\t\t\tsetTimeout(clearHighlightMessage, 2000);\n\t\t}, 500);\n\t}, [messageId, jumpToMessageParam, messageRef, scroll, router]);\n};\n",null],"names":["module","export","useJumpToMessage","useRouter","useLayoutEffect","useMessageListJumpToMessageParam","useMessageListScroll","setHighlightMessage","clearHighlightMessage","messageId","messageRef","jumpToMessageParam","scroll","router","current","setTimeout","wrapper","containerRect","getBoundingClientRect","offset","messageRect","top","scrollPosition","scrollTop","behavior","search","getSearchParameters","msg","navigate","pathname","getLocationPathname","replace"],"mappings":"uBACAA,EAAOC,MAAE,CAAA,CAAAC,iBAAiB,WAAA,OAAAA,CAA2B,CAAA,GAAAF,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAG,UAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAH,EAAAA,IAAAA,CAAAA,QAAAA,CAAAI,gBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAJ,EAAAA,IAAAA,CAAAA,yDAAAA,CAAAK,iCAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,qBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAN,EAAAA,IAAAA,CAAAA,4CAAAA,CAAAO,oBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,sBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAU9C,IAV8CL,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAUxCN,EAAmB,SAACO,CAA0B,CAAEC,CAAqC,EACjG,IAAMC,EAAqBN,IACrBO,EAASN,IACTO,EAASV,IAEfC,EAAgB,WACXO,IAAuBF,GAAcC,EAAWI,OAAO,EAAKF,GAIhEG,WAAW,WACVH,EAAO,SAACI,CAAO,EACd,GAAI,AAACA,GAAYN,EAAWI,OAAO,EAGnC,IAAMG,EAAgBD,EAAQE,qBAAqB,GAG7CC,EAASC,AAFKV,EAAWI,OAAO,CAACI,qBAAqB,GAEjCG,GAAG,CAAGJ,EAAcI,GAAG,CAIlD,MAAO,CAAEA,IAFiBC,AADHN,EAAQO,SAAS,CACGJ,EAtBnB,GAwBSK,SAAU,QAAQ,EACpD,GAEA,IAAMC,EAASZ,EAAOa,mBAAmB,EACzC,QAAOD,EAAOE,GAAG,CACjBd,EAAOe,QAAQ,CACd,CACCC,SAAUhB,EAAOiB,mBAAmB,GACpCL,OAAAA,GAED,CAAEM,QAAS,CAAA,CAAI,GAGhBxB,EAAoBE,GACpBM,WAAWP,EAAuB,IACnC,EAAG,IACJ,EAAG,CAACC,EAAWE,EAAoBD,EAAYE,EAAQC,EAAO,CAC/D"}