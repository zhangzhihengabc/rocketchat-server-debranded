)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/hooks/useIsVisible.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useDebouncedState, useSafely } from '@rocket.chat/fuselage-hooks';\nimport type { RefObject } from 'react';\nimport { useEffect } from 'react';\n\nexport const useIsVisible = (ref: RefObject<HTMLInputElement>): [boolean] => {\n\tconst [menuVisibility, setMenuVisibility] = useSafely(useDebouncedState(!!window.DISABLE_ANIMATION, 100));\n\n\tuseEffect(() => {\n\t\tif (!ref.current) {\n\t\t\treturn;\n\t\t}\n\t\tconst observer = new IntersectionObserver((entries) => {\n\t\t\tentries.forEach((entry) => {\n\t\t\t\tsetMenuVisibility(entry.isIntersecting);\n\t\t\t});\n\t\t});\n\n\t\tobserver.observe(ref.current);\n\n\t\treturn (): void => {\n\t\t\tobserver.disconnect();\n\t\t};\n\t}, [setMenuVisibility, ref]);\n\n\treturn [menuVisibility];\n};\n",null],"names":["module","link","default","v","_slicedToArray","export","useIsVisible","useDebouncedState","useSafely","useEffect","ref","_useSafely2","window","DISABLE_ANIMATION","menuVisibility","setMenuVisibility","current","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","disconnect"],"mappings":"uBAASA,EAAiBC,IAAE,CAAA,uCAAiB,CAAAC,QAA8B,SAAAC,CAAA,EAAAC,EAAAA,CAAA,CAAA,EAAA,GAA3EJ,EAAOK,MAAE,CAAA,CAAAC,aAAmB,WAAW,OAAMA,CAAA,CAAA,GAA8BN,EAAAA,IAAAA,CAAAA,8BAAAA,CAAAO,kBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,UAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAR,EAAAA,IAAAA,CAAAA,QAAAA,CAAAS,UAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAIpE,IAJPL,EAA6CG,EAA8BC,EAAAC,EAI9DH,EAAe,SAACI,CAAgC,EAC5D,IAAyGC,EAAAP,EAA7DI,EAAUD,EAAkB,CAAC,CAACK,OAAOC,iBAAiB,CAAE,MAAK,GAAlGC,EAAcH,CAAA,CAAA,EAAA,CAAEI,EAAiBJ,CAAA,CAAA,EAAA,CAmBxC,OAjBAF,EAAU,WACT,GAAKC,EAAIM,OAAO,EAGhB,IAAMC,EAAW,IAAIC,qBAAqB,SAACC,CAAO,EACjDA,EAAQC,OAAO,CAAC,SAACC,CAAK,EACrBN,EAAkBM,EAAMC,cAAc,CACvC,EACD,GAIA,OAFAL,EAASM,OAAO,CAACb,EAAIM,OAAO,EAErB,WACNC,EAASO,UAAU,EACpB,EACD,EAAG,CAACT,EAAmBL,EAAI,EAEpB,CAACI,EAAe,AACxB"}