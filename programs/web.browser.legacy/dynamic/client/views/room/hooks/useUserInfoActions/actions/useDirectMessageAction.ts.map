)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/hooks/useUserInfoActions/actions/useDirectMessageAction.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRoom, IUser, ISubscription } from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useTranslation, usePermission, useRoute, useUserSubscription, useUserSubscriptionByName } from '@rocket.chat/ui-contexts';\nimport { useMemo } from 'react';\n\nimport type { UserInfoAction, UserInfoActionType } from '../useUserInfoActions';\n\nconst getShouldOpenDirectMessage = (\n\tcurrentSubscription?: ISubscription,\n\tusernameSubscription?: ISubscription,\n\tcanOpenDirectMessage?: boolean,\n\tusername?: IUser['username'],\n): boolean => {\n\tconst canOpenDm = canOpenDirectMessage || usernameSubscription;\n\tconst directMessageIsNotAlreadyOpen = currentSubscription && currentSubscription.name !== username;\n\treturn (canOpenDm && directMessageIsNotAlreadyOpen) ?? false;\n};\n\nexport const useDirectMessageAction = (user: Pick<IUser, '_id' | 'username'>, rid: IRoom['_id']): UserInfoAction | undefined => {\n\tconst t = useTranslation();\n\tconst usernameSubscription = useUserSubscriptionByName(user.username ?? '');\n\tconst currentSubscription = useUserSubscription(rid);\n\tconst canOpenDirectMessage = usePermission('create-d');\n\tconst directRoute = useRoute('direct');\n\n\tconst shouldOpenDirectMessage = getShouldOpenDirectMessage(\n\t\tcurrentSubscription,\n\t\tusernameSubscription,\n\t\tcanOpenDirectMessage,\n\t\tuser.username,\n\t);\n\n\tconst openDirectMessage = useMutableCallback(\n\t\t() =>\n\t\t\tuser.username &&\n\t\t\tdirectRoute.push({\n\t\t\t\trid: user.username,\n\t\t\t}),\n\t);\n\n\tconst openDirectMessageOption = useMemo(\n\t\t() =>\n\t\t\tshouldOpenDirectMessage\n\t\t\t\t? {\n\t\t\t\t\t\tcontent: t('Direct_Message'),\n\t\t\t\t\t\ticon: 'balloon' as const,\n\t\t\t\t\t\tonClick: openDirectMessage,\n\t\t\t\t\t\ttype: 'communication' as UserInfoActionType,\n\t\t\t\t  }\n\t\t\t\t: undefined,\n\t\t[openDirectMessage, shouldOpenDirectMessage, t],\n\t);\n\n\treturn openDirectMessageOption;\n};\n",null],"names":["module","export","useDirectMessageAction","useMutableCallback","useTranslation","usePermission","useRoute","useUserSubscription","useUserSubscriptionByName","useMemo","getShouldOpenDirectMessage","currentSubscription","usernameSubscription","canOpenDirectMessage","username","_ref","directMessageIsNotAlreadyOpen","name","canOpenDm","user","rid","_user$username","t","directRoute","shouldOpenDirectMessage","openDirectMessage","push","content","icon","onClick","type","undefined"],"mappings":"uBACAA,EAAOC,MAAE,CAAA,CAAAC,uBAA0B,WAAA,OAAAA,CAA8B,CAAA,GAAAF,EAAAA,IAAAA,CAAAA,8BAAAA,CAAAG,mBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAH,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAI,eAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,cAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,SAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,oBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,0BAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAR,EAAAA,IAAAA,CAAAA,QAAAA,CAAAS,QAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAMjE,IANiEN,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAM3DC,EAA6B,SAClCC,CAAmC,CACnCC,CAAoC,CACpCC,CAA8B,CAC9BC,CAA4B,EAG5B,IAFYC,EAENC,EAAgCL,GAAuBA,EAAoBM,IAAI,GAAKH,EAC1F,OAAA,AAAkD,OAAlDC,CAAAA,EAAQG,AAFUL,CAAAA,GAAwBD,CAAAA,GAErBI,CAAAA,GAA6BD,AAAA,KAAA,IAAAA,GAAAA,CACnD,EAEab,EAAyB,SAACiB,CAAqC,CAAEC,CAAiB,EAC9F,IAD8HC,EACxHC,EAAIlB,IACJQ,EAAuBJ,EAAyB,AAAc,OAAda,CAAAA,EAACF,EAAKL,QAAQ,AAARA,GAAQO,AAAA,KAAA,IAAAA,EAAAA,EAAI,IAClEV,EAAsBJ,EAAoBa,GAC1CP,EAAuBR,EAAc,YACrCkB,EAAcjB,EAAS,UAEvBkB,EAA0Bd,EAC/BC,EACAC,EACAC,EACAM,EAAKL,QAAQ,EAGRW,EAAoBtB,EACzB,WAAA,OACCgB,EAAKL,QAAQ,EACbS,EAAYG,IAAI,CAAC,CAChBN,IAAKD,EAAKL,QAAAA,EACT,GAgBJ,OAbgCL,EAC/B,WAAA,OACCe,EACG,CACAG,QAASL,EAAE,kBACXM,KAAM,UACNC,QAASJ,EACTK,KAAM,iBAENC,KAAAA,CAAS,EACb,CAACN,EAAmBD,EAAyBF,EAAE,CAIjD"}