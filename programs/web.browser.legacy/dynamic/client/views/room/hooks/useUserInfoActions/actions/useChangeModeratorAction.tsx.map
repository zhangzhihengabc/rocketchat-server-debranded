)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/hooks/useUserInfoActions/actions/useChangeModeratorAction.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { isRoomFederated } from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { escapeHTML } from '@rocket.chat/string-helpers';\nimport { useTranslation, usePermission, useUserRoom, useUserSubscription, useUser, useSetModal } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React, { useCallback, useMemo } from 'react';\n\nimport GenericModal from '../../../../../components/GenericModal';\nimport { useEndpointAction } from '../../../../../hooks/useEndpointAction';\nimport { roomCoordinator } from '../../../../../lib/rooms/roomCoordinator';\nimport { getRoomDirectives } from '../../../lib/getRoomDirectives';\nimport { useUserHasRoomRole } from '../../useUserHasRoomRole';\nimport type { UserInfoAction, UserInfoActionType } from '../useUserInfoActions';\n\nconst getWarningModalForFederatedRooms = (\n\tcloseModalFn: () => void,\n\thandleConfirmFn: () => void,\n\ttitle: string,\n\tconfirmText: string,\n\tbodyText: string,\n): ReactElement => (\n\t<GenericModal\n\t\tvariant='warning'\n\t\tonClose={closeModalFn}\n\t\tonConfirm={handleConfirmFn}\n\t\tonCancel={closeModalFn}\n\t\ttitle={title}\n\t\tconfirmText={confirmText}\n\t>\n\t\t{bodyText}\n\t</GenericModal>\n);\n\n// TODO: Remove endpoint concatenation\nexport const useChangeModeratorAction = (user: Pick<IUser, '_id' | 'username'>, rid: IRoom['_id']): UserInfoAction | undefined => {\n\tconst t = useTranslation();\n\tconst room = useUserRoom(rid);\n\tconst { _id: uid } = user;\n\n\tconst userCanSetModerator = usePermission('set-moderator', rid);\n\tconst isModerator = useUserHasRoomRole(uid, rid, 'moderator');\n\tconst userSubscription = useUserSubscription(rid);\n\tconst { _id: loggedUserId = '' } = useUser() || {};\n\tconst loggedUserIsModerator = useUserHasRoomRole(loggedUserId, rid, 'moderator');\n\tconst loggedUserIsOwner = useUserHasRoomRole(loggedUserId, rid, 'owner');\n\tconst setModal = useSetModal();\n\tconst closeModal = useCallback(() => setModal(null), [setModal]);\n\n\tif (!room) {\n\t\tthrow Error('Room not provided');\n\t}\n\n\tconst endpointPrefix = room.t === 'p' ? '/v1/groups' : '/v1/channels';\n\tconst { roomCanSetModerator } = getRoomDirectives({ room, showingUserId: uid, userSubscription });\n\tconst roomName = room?.t && escapeHTML(roomCoordinator.getRoomName(room.t, room));\n\n\tconst changeModeratorEndpoint = isModerator ? 'removeModerator' : 'addModerator';\n\tconst changeModeratorMessage = isModerator\n\t\t? 'User__username__removed_from__room_name__moderators'\n\t\t: 'User__username__is_now_a_moderator_of__room_name_';\n\n\tconst changeModerator = useEndpointAction('POST', `${endpointPrefix}.${changeModeratorEndpoint}`, {\n\t\tsuccessMessage: t(changeModeratorMessage, { username: user.username, room_name: roomName }),\n\t});\n\n\tconst handleConfirm = useCallback(() => {\n\t\tchangeModerator({ roomId: rid, userId: uid });\n\t\tcloseModal();\n\t}, [changeModerator, rid, uid, closeModal]);\n\n\tconst handleChangeModerator = useCallback(\n\t\t({ userId }) => {\n\t\t\tif (!isRoomFederated(room)) {\n\t\t\t\treturn changeModerator({ roomId: rid, userId: uid });\n\t\t\t}\n\n\t\t\tconst changingOwnRole = userId === loggedUserId;\n\t\t\tif (changingOwnRole && loggedUserIsModerator) {\n\t\t\t\treturn setModal(() =>\n\t\t\t\t\tgetWarningModalForFederatedRooms(\n\t\t\t\t\t\tcloseModal,\n\t\t\t\t\t\thandleConfirm,\n\t\t\t\t\t\tt('Federation_Matrix_losing_privileges'),\n\t\t\t\t\t\tt('Yes_continue'),\n\t\t\t\t\t\tt('Federation_Matrix_losing_privileges_warning'),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (changingOwnRole && loggedUserIsOwner) {\n\t\t\t\treturn setModal(() =>\n\t\t\t\t\tgetWarningModalForFederatedRooms(\n\t\t\t\t\t\tcloseModal,\n\t\t\t\t\t\thandleConfirm,\n\t\t\t\t\t\tt('Federation_Matrix_losing_privileges'),\n\t\t\t\t\t\tt('Yes_continue'),\n\t\t\t\t\t\tt('Federation_Matrix_losing_privileges_warning'),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (!changingOwnRole && loggedUserIsModerator) {\n\t\t\t\treturn setModal(() =>\n\t\t\t\t\tgetWarningModalForFederatedRooms(\n\t\t\t\t\t\tcloseModal,\n\t\t\t\t\t\thandleConfirm,\n\t\t\t\t\t\tt('Warning'),\n\t\t\t\t\t\tt('Yes_continue'),\n\t\t\t\t\t\tt('Federation_Matrix_giving_same_permission_warning'),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tchangeModerator({ roomId: rid, userId: uid });\n\t\t},\n\t\t[setModal, loggedUserId, loggedUserIsModerator, loggedUserIsOwner, t, rid, uid, changeModerator, closeModal, handleConfirm, room],\n\t);\n\n\tconst changeModeratorAction = useMutableCallback(() => handleChangeModerator({ roomId: rid, userId: uid }));\n\tconst changeModeratorOption = useMemo(\n\t\t() =>\n\t\t\t(isRoomFederated(room) && roomCanSetModerator) || (!isRoomFederated(room) && roomCanSetModerator && userCanSetModerator)\n\t\t\t\t? {\n\t\t\t\t\t\tcontent: t(isModerator ? 'Remove_as_moderator' : 'Set_as_moderator'),\n\t\t\t\t\t\ticon: 'shield-blank' as const,\n\t\t\t\t\t\tonClick: changeModeratorAction,\n\t\t\t\t\t\ttype: 'privileges' as UserInfoActionType,\n\t\t\t\t  }\n\t\t\t\t: undefined,\n\t\t[changeModeratorAction, isModerator, roomCanSetModerator, t, userCanSetModerator, room],\n\t);\n\n\treturn changeModeratorOption;\n};\n",null],"names":["module","export","useChangeModeratorAction","isRoomFederated","useMutableCallback","escapeHTML","useTranslation","usePermission","useUserRoom","useUserSubscription","useUser","useSetModal","v","React","useCallback","useMemo","GenericModal","useEndpointAction","roomCoordinator","getRoomDirectives","useUserHasRoomRole","getWarningModalForFederatedRooms","closeModalFn","handleConfirmFn","title","confirmText","bodyText","createElement","variant","onClose","onConfirm","onCancel","user","rid","t","room","uid","_id","userCanSetModerator","isModerator","userSubscription","_ref$_id","_ref","loggedUserId","loggedUserIsModerator","loggedUserIsOwner","setModal","closeModal","Error","endpointPrefix","roomCanSetModerator","_getRoomDirectives","showingUserId","roomName","getRoomName","changeModerator","successMessage","username","room_name","handleConfirm","roomId","userId","handleChangeModerator","_ref2","changingOwnRole","changeModeratorAction","content","icon","onClick","type","undefined"],"mappings":"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"}