)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/contextualBar/MessageSearchTab/hooks/useMessageSearchQuery.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useMethod, useToastMessageDispatch, useTranslation, useUserId } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\n\nimport { useRoom } from '../../../contexts/RoomContext';\n\nexport const useMessageSearchQuery = ({\n\tsearchText,\n\tlimit,\n\tglobalSearch,\n}: {\n\tsearchText: string;\n\tlimit: number;\n\tglobalSearch: boolean;\n}) => {\n\tconst uid = useUserId() ?? undefined;\n\tconst room = useRoom();\n\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst searchMessages = useMethod('rocketchatSearch.search');\n\treturn useQuery(\n\t\t['rooms', room._id, 'message-search', { uid, rid: room._id, searchText, limit, globalSearch }] as const,\n\t\tasync () => {\n\t\t\tconst result = await searchMessages(searchText, { uid, rid: room._id }, { limit, searchAll: globalSearch });\n\t\t\treturn result.message?.docs ?? [];\n\t\t},\n\t\t{\n\t\t\tkeepPreviousData: true,\n\t\t\tonError: () => {\n\t\t\t\tdispatchToastMessage({\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\tmessage: t('Search_message_search_failed'),\n\t\t\t\t});\n\t\t\t},\n\t\t},\n\t);\n};\n",null],"names":["module","default","v","_regeneratorRuntime","export","useMessageSearchQuery","useMethod","useToastMessageDispatch","useTranslation","useUserId","useQuery","useRoom","_ref","_useUserId","searchText","limit","globalSearch","uid","undefined","room","t","dispatchToastMessage","searchMessages","_id","rid","_result$message$docs","_result$message","result","async","_context","prev","next","awrap","searchAll","sent","abrupt","message","docs","stop","Promise","keepPreviousData","onError","type"],"mappings":"uBAAoBA,EAAAA,IAAAA,CAAAA,6BAAyC,CAAAC,QAAW,SAAMC,CAAAA,EAAAC,EAA2BD,CAAA,CAAA,EAAA,GAAzGF,EAAOI,MAAE,CAAA,CAAAC,sBAAW,WAAyB,OAAAA,CAA2B,CAAA,GAAiCL,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAM,UAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,wBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,UAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAT,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAU,SAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAV,EAAAA,IAAAA,CAAAA,gCAAAA,CAAAW,QAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAKlG,IALPR,EAA8EG,EAAAC,EAA2BC,EAAAC,EAAAC,EAAAC,EAK5FN,EAAwB,SAAAO,CAAA,EAQhC,IAAAC,EAPJC,EAAUF,EAAVE,UAAU,CACVC,EAAKH,EAALG,KAAK,CACLC,EAAYJ,EAAZI,YAAY,CAMNC,EAAG,AAAc,OAAdJ,CAAAA,EAAGJ,GAAS,GAAEI,AAAA,KAAA,IAAAA,EAAAA,EAAIK,KAAAA,EACrBC,EAAOR,IAEPS,EAAIZ,IACJa,EAAuBd,IAEvBe,EAAiBhB,EAAU,2BACjC,OAAOI,EACN,CAAC,QAASS,EAAKI,GAAG,CAAE,iBAAkB,CAAEN,IAAAA,EAAKO,IAAKL,EAAKI,GAAG,CAAET,WAAAA,EAAYC,MAAAA,EAAOC,aAAAA,CAAY,EAAY,CACvG,eAAAS,EAAAC,EAAAC,EAAA,OAAAxB,EAAAyB,KAAA,CAAA,SAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAC,IAAA,CAAAD,EAAAE,IAAA,EAAA,KAAA,EAAA,OAAAF,EAAAE,IAAA,CAAA,EAAA5B,EAAA6B,KAAA,CACsBV,EAAeR,EAAY,CAAEG,IAAAA,EAAKO,IAAKL,EAAKI,GAAAA,AAAG,EAAI,CAAER,MAAAA,EAAOkB,UAAWjB,CAAY,GAAG,MAAA,EAA/F,OAANW,EAAME,EAAAK,IAAA,CAAAL,EAAAM,MAAA,CAAA,SAAA,AACe,OADfV,CAAAA,EAAA,AACS,OADTC,CAAAA,EACLC,EAAOS,OAAO,AAAPA,GAAOV,AAAA,KAAA,IAAAA,EAAA,KAAA,EAAdA,EAAgBW,IAAI,AAAJA,GAAIZ,AAAA,KAAA,IAAAA,EAAAA,EAAI,EAAE,CAAA,MAAA,EAAA,IAAA,MAAA,OAAAI,EAAAS,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,KAAAC,QAAA,EAElC,CACCC,iBAAkB,CAAA,EAClBC,QAAS,WACRpB,EAAqB,CACpBqB,KAAM,QACNN,QAAShB,EAAE,iCAEb,GAGH"}