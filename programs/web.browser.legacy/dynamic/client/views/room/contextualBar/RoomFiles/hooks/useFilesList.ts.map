)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/contextualBar/RoomFiles/hooks/useFilesList.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useUserRoom, useUserId, useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { useScrollableRecordList } from '../../../../../hooks/lists/useScrollableRecordList';\nimport { useStreamUpdatesForMessageList } from '../../../../../hooks/lists/useStreamUpdatesForMessageList';\nimport { useComponentDidUpdate } from '../../../../../hooks/useComponentDidUpdate';\nimport type { FilesListOptions } from '../../../../../lib/lists/FilesList';\nimport { FilesList } from '../../../../../lib/lists/FilesList';\nimport type { MessageList } from '../../../../../lib/lists/MessageList';\nimport { getConfig } from '../../../../../lib/utils/getConfig';\n\nexport const useFilesList = (\n\toptions: FilesListOptions,\n): {\n\tfilesList: FilesList;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst [filesList, setFilesList] = useState(() => new FilesList(options));\n\tconst reload = useCallback(() => setFilesList(new FilesList(options)), [options]);\n\tconst room = useUserRoom(options.rid as string);\n\tconst uid = useUserId();\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tuseEffect(() => {\n\t\tif (filesList.options !== options) {\n\t\t\tfilesList.updateFilters(options);\n\t\t}\n\t}, [filesList, options]);\n\n\tconst roomTypes = {\n\t\tc: '/v1/channels.files',\n\t\tl: '/v1/channels.files',\n\t\tv: '/v1/channels.files',\n\t\td: '/v1/im.files',\n\t\tp: '/v1/groups.files',\n\t} as const;\n\n\tconst apiEndPoint = room ? roomTypes[room.t] : '/v1/channels.files';\n\n\tconst getFiles = useEndpoint('GET', apiEndPoint);\n\n\tconst fetchMessages = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { files, total } = await getFiles({\n\t\t\t\troomId: options.rid,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end,\n\t\t\t\tsort: JSON.stringify({ uploadedAt: -1 }),\n\t\t\t\tquery: JSON.stringify({\n\t\t\t\t\tname: { $regex: options.text || '', $options: 'i' },\n\t\t\t\t\t...(options.type !== 'all' && {\n\t\t\t\t\t\ttypeGroup: options.type,\n\t\t\t\t\t}),\n\t\t\t\t}),\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems: files.map((file) => ({\n\t\t\t\t\t...file,\n\t\t\t\t\tuploadedAt: file.uploadedAt ? new Date(file.uploadedAt) : undefined,\n\t\t\t\t\tmodifiedAt: file.modifiedAt ? new Date(file.modifiedAt) : undefined,\n\t\t\t\t})),\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[getFiles, options.rid, options.type, options.text],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(\n\t\tfilesList,\n\t\tfetchMessages,\n\t\tuseMemo(() => parseInt(`${getConfig('discussionListSize', 10)}`), []),\n\t);\n\n\t// TODO: chapter day : frontend create useStreamUpdatesForUploadList\n\tuseStreamUpdatesForMessageList(filesList as unknown as MessageList, uid, options.rid || null);\n\n\treturn {\n\t\treload,\n\t\tfilesList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n",null],"names":["module","link","default","v","_regeneratorRuntime","_objectSpread","_slicedToArray","export","useFilesList","useUserRoom","useUserId","useEndpoint","useCallback","useEffect","useMemo","useState","useScrollableRecordList","useStreamUpdatesForMessageList","useComponentDidUpdate","FilesList","getConfig","options","_useState2","filesList","setFilesList","reload","room","rid","uid","updateFilters","getFiles","roomTypes","c","l","d","p","t","_useScrollableRecordL","start","end","_await$getFiles","files","total","async","_context","prev","next","awrap","roomId","offset","count","sort","JSON","stringify","uploadedAt","query","name","$regex","text","$options","type","typeGroup","sent","abrupt","items","map","file","Date","undefined","modifiedAt","itemCount","stop","Promise","parseInt","loadMoreItems","initialItemCount"],"mappings":"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"}