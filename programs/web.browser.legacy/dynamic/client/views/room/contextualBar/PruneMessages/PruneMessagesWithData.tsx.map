)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/contextualBar/PruneMessages/PruneMessagesWithData.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { isDirectMessageRoom } from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useSetModal, useToastMessageDispatch, useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport moment from 'moment';\nimport type { ReactElement } from 'react';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { useForm, FormProvider } from 'react-hook-form';\n\nimport GenericModal from '../../../../components/GenericModal';\nimport { useRoom } from '../../contexts/RoomContext';\nimport { useRoomToolbox } from '../../contexts/RoomToolboxContext';\nimport PruneMessages from './PruneMessages';\n\nconst getTimeZoneOffset = (): string => {\n\tconst offset = new Date().getTimezoneOffset();\n\tconst absOffset = Math.abs(offset);\n\treturn `${offset < 0 ? '+' : '-'}${`00${Math.floor(absOffset / 60)}`.slice(-2)}:${`00${absOffset % 60}`.slice(-2)}`;\n};\n\nexport const initialValues = {\n\tnewer: {\n\t\tdate: '',\n\t\ttime: '',\n\t},\n\tolder: {\n\t\tdate: '',\n\t\ttime: '',\n\t},\n\tusers: [],\n\tinclusive: false,\n\tpinned: false,\n\tdiscussion: false,\n\tthreads: false,\n\tattached: false,\n};\n\nconst DEFAULT_PRUNE_LIMIT = 2000;\n\nconst PruneMessagesWithData = (): ReactElement => {\n\tconst t = useTranslation();\n\tconst room = useRoom();\n\tconst setModal = useSetModal();\n\tconst { closeTab: close } = useRoomToolbox();\n\tconst closeModal = useCallback(() => setModal(null), [setModal]);\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst pruneMessagesAction = useEndpoint('POST', '/v1/rooms.cleanHistory');\n\n\tconst [counter, setCounter] = useState(0);\n\n\tconst methods = useForm({ defaultValues: initialValues });\n\n\tconst {\n\t\tnewer: { date: newerDate, time: newerTime },\n\t\tolder: { date: olderDate, time: olderTime },\n\t\tusers,\n\t\tinclusive,\n\t\tpinned,\n\t\tdiscussion,\n\t\tthreads,\n\t\tattached,\n\t} = methods.watch();\n\n\tconst fromDate = useMemo(() => {\n\t\treturn new Date(`${newerDate || '0001-01-01'}T${newerTime || '00:00'}:00${getTimeZoneOffset()}`);\n\t}, [newerDate, newerTime]);\n\n\tconst toDate = useMemo(() => {\n\t\treturn new Date(`${olderDate || '9999-12-31'}T${olderTime || '23:59'}:59${getTimeZoneOffset()}`);\n\t}, [olderDate, olderTime]);\n\n\tconst handlePrune = useMutableCallback((): void => {\n\t\tconst handlePruneAction = async () => {\n\t\t\tconst limit = DEFAULT_PRUNE_LIMIT;\n\n\t\t\ttry {\n\t\t\t\tif (counter === limit) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { count } = await pruneMessagesAction({\n\t\t\t\t\troomId: room._id,\n\t\t\t\t\tlatest: toDate.toISOString(),\n\t\t\t\t\toldest: fromDate.toISOString(),\n\t\t\t\t\tinclusive,\n\t\t\t\t\tlimit,\n\t\t\t\t\texcludePinned: pinned,\n\t\t\t\t\tfilesOnly: attached,\n\t\t\t\t\tignoreDiscussion: discussion,\n\t\t\t\t\tignoreThreads: threads,\n\t\t\t\t\tusers,\n\t\t\t\t});\n\n\t\t\t\tsetCounter(count);\n\n\t\t\t\tif (count < 1) {\n\t\t\t\t\tthrow new Error(t('No_messages_found_to_prune'));\n\t\t\t\t}\n\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('__count__message_pruned', { count }) });\n\t\t\t\tmethods.reset();\n\t\t\t} catch (error: unknown) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t} finally {\n\t\t\t\tcloseModal();\n\t\t\t}\n\t\t};\n\n\t\treturn setModal(\n\t\t\t<GenericModal\n\t\t\t\tvariant='danger'\n\t\t\t\tonClose={closeModal}\n\t\t\t\tonCancel={closeModal}\n\t\t\t\tonConfirm={handlePruneAction}\n\t\t\t\tconfirmText={t('Yes_prune_them')}\n\t\t\t>\n\t\t\t\t{t('Prune_Modal')}\n\t\t\t</GenericModal>,\n\t\t);\n\t});\n\n\tconst callOutText = useMemo(() => {\n\t\tconst exceptPinned = pinned ? ` ${t('except_pinned', {})}` : '';\n\t\tconst ifFrom = users.length\n\t\t\t? ` ${t('if_they_are_from', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [users.map((element) => element).join(', ')],\n\t\t\t  })}`\n\t\t\t: '';\n\t\tconst filesOrMessages = t(attached ? 'files' : 'messages', {});\n\n\t\tif (newerDate && olderDate) {\n\t\t\treturn (\n\t\t\t\tt('Prune_Warning_between', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [filesOrMessages, name, moment(fromDate).format('L LT'), moment(toDate).format('L LT')],\n\t\t\t\t}) +\n\t\t\t\texceptPinned +\n\t\t\t\tifFrom\n\t\t\t);\n\t\t}\n\n\t\tif (newerDate) {\n\t\t\treturn (\n\t\t\t\tt('Prune_Warning_after', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [filesOrMessages, name, moment(fromDate).format('L LT')],\n\t\t\t\t}) +\n\t\t\t\texceptPinned +\n\t\t\t\tifFrom\n\t\t\t);\n\t\t}\n\n\t\tif (olderDate) {\n\t\t\treturn (\n\t\t\t\tt('Prune_Warning_before', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [filesOrMessages, name, moment(toDate).format('L LT')],\n\t\t\t\t}) +\n\t\t\t\texceptPinned +\n\t\t\t\tifFrom\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\tt('Prune_Warning_all', {\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tsprintf: [filesOrMessages, room && ((isDirectMessageRoom(room) && room.usernames?.join(' x ')) || room.fname || room.name)],\n\t\t\t}) +\n\t\t\texceptPinned +\n\t\t\tifFrom\n\t\t);\n\t}, [attached, fromDate, newerDate, olderDate, pinned, room, t, toDate, users]);\n\n\tconst validateText = useMemo(() => {\n\t\tif (fromDate > toDate) {\n\t\t\treturn t('Newer_than_may_not_exceed_Older_than', {\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tsprintf: [],\n\t\t\t});\n\t\t}\n\n\t\tif (isNaN(fromDate.getTime()) || isNaN(toDate.getTime())) {\n\t\t\treturn t('error-invalid-date', {\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tsprintf: [],\n\t\t\t});\n\t\t}\n\n\t\treturn undefined;\n\t}, [fromDate, t, toDate]);\n\n\treturn (\n\t\t<FormProvider {...methods}>\n\t\t\t<PruneMessages callOutText={callOutText} validateText={validateText} users={users} onClickClose={close} onClickPrune={handlePrune} />\n\t\t</FormProvider>\n\t);\n};\n\nexport default PruneMessagesWithData;\n",null],"names":["module","link","default","_regeneratorRuntime","_slicedToArray","export","initialValues","isDirectMessageRoom","useMutableCallback","useSetModal","useToastMessageDispatch","useEndpoint","useTranslation","v","moment","React","useCallback","useMemo","useState","useForm","FormProvider","GenericModal","useRoom","useRoomToolbox","PruneMessages","getTimeZoneOffset","offset","Date","getTimezoneOffset","absOffset","Math","abs","floor","slice","newer","date","time","older","users","inclusive","pinned","discussion","threads","attached","exportDefault","t","room","setModal","close","_useRoomToolbox","closeTab","closeModal","dispatchToastMessage","pruneMessagesAction","_useState2","counter","setCounter","methods","defaultValues","_methods$watch","watch","_methods$watch$newer","newerDate","newerTime","_methods$watch$older","olderDate","olderTime","fromDate","toDate","handlePrune","createElement","variant","onClose","onCancel","onConfirm","limit","count","async","_context","prev","next","abrupt","awrap","roomId","_id","latest","toISOString","oldest","excludePinned","filesOnly","ignoreDiscussion","ignoreThreads","_await$pruneMessagesA","sent","Error","type","message","reset","t0","finish","stop","Promise","confirmText","callOutText","_room$usernames","exceptPinned","ifFrom","length","postProcess","sprintf","map","element","join","filesOrMessages","name","format","usernames","fname","validateText","isNaN","getTime","onClickClose","onClickPrune"],"mappings":"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"}