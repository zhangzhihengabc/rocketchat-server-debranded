)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/contextualBar/Threads/components/ThreadMessageList.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IMessage, IThreadMainMessage } from '@rocket.chat/core-typings';\nimport { MessageDivider } from '@rocket.chat/fuselage';\nimport { useMergedRefs } from '@rocket.chat/fuselage-hooks';\nimport { useSetting, useTranslation, useUserPreference } from '@rocket.chat/ui-contexts';\nimport { differenceInSeconds } from 'date-fns';\nimport type { ReactElement } from 'react';\nimport React, { Fragment } from 'react';\n\nimport { MessageTypes } from '../../../../../../app/ui-utils/client';\nimport { isTruthy } from '../../../../../../lib/isTruthy';\nimport ScrollableContentWrapper from '../../../../../components/ScrollableContentWrapper';\nimport SystemMessage from '../../../../../components/message/variants/SystemMessage';\nimport ThreadMessage from '../../../../../components/message/variants/ThreadMessage';\nimport { useFormatDate } from '../../../../../hooks/useFormatDate';\nimport { isMessageNewDay } from '../../../MessageList/lib/isMessageNewDay';\nimport MessageListProvider from '../../../MessageList/providers/MessageListProvider';\nimport LoadingMessagesIndicator from '../../../body/LoadingMessagesIndicator';\nimport { useFirstUnreadMessageId } from '../../../hooks/useFirstUnreadMessageId';\nimport { useScrollMessageList } from '../../../hooks/useScrollMessageList';\nimport { useLegacyThreadMessageJump } from '../hooks/useLegacyThreadMessageJump';\nimport { useLegacyThreadMessageListScrolling } from '../hooks/useLegacyThreadMessageListScrolling';\nimport { useLegacyThreadMessages } from '../hooks/useLegacyThreadMessages';\n\nconst isMessageSequential = (current: IMessage, previous: IMessage | undefined, groupingRange: number): boolean => {\n\tif (!previous) {\n\t\treturn false;\n\t}\n\n\tif (MessageTypes.isSystemMessage(current) || MessageTypes.isSystemMessage(previous)) {\n\t\treturn false;\n\t}\n\n\tif (current.groupable === false) {\n\t\treturn false;\n\t}\n\n\tif (current.u._id !== previous.u._id) {\n\t\treturn false;\n\t}\n\n\tif (current.alias !== previous.alias) {\n\t\treturn false;\n\t}\n\treturn differenceInSeconds(current.ts, previous.ts) < groupingRange && !isMessageNewDay(current, previous);\n};\n\ntype ThreadMessageListProps = {\n\tmainMessage: IThreadMainMessage;\n};\n\nconst ThreadMessageList = ({ mainMessage }: ThreadMessageListProps): ReactElement => {\n\tconst { messages, loading } = useLegacyThreadMessages(mainMessage._id);\n\tconst {\n\t\tlistWrapperRef: listWrapperScrollRef,\n\t\tlistRef: listScrollRef,\n\t\tonScroll: handleScroll,\n\t} = useLegacyThreadMessageListScrolling(mainMessage);\n\tconst { parentRef: listJumpRef } = useLegacyThreadMessageJump({ enabled: !loading });\n\n\tconst listRef = useMergedRefs<HTMLElement | null>(listScrollRef, listJumpRef);\n\tconst hideUsernames = useUserPreference<boolean>('hideUsernames');\n\tconst showUserAvatar = !!useUserPreference<boolean>('displayAvatars');\n\n\tconst formatDate = useFormatDate();\n\tconst t = useTranslation();\n\tconst messageGroupingPeriod = Number(useSetting('Message_GroupingPeriod'));\n\n\tconst scrollMessageList = useScrollMessageList(listWrapperScrollRef);\n\n\tconst firstUnreadMessageId = useFirstUnreadMessageId();\n\n\treturn (\n\t\t<div className={['thread-list js-scroll-thread', hideUsernames && 'hide-usernames'].filter(isTruthy).join(' ')}>\n\t\t\t<ScrollableContentWrapper\n\t\t\t\tref={listWrapperScrollRef}\n\t\t\t\tonScroll={handleScroll}\n\t\t\t\tstyle={{ scrollBehavior: 'smooth', overflowX: 'hidden' }}\n\t\t\t>\n\t\t\t\t<ul className='thread' ref={listRef} style={{ scrollBehavior: 'smooth', overflowX: 'hidden' }}>\n\t\t\t\t\t{loading ? (\n\t\t\t\t\t\t<li className='load-more'>\n\t\t\t\t\t\t\t<LoadingMessagesIndicator />\n\t\t\t\t\t\t</li>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<MessageListProvider scrollMessageList={scrollMessageList}>\n\t\t\t\t\t\t\t{[mainMessage, ...messages].map((message, index, { [index - 1]: previous }) => {\n\t\t\t\t\t\t\t\tconst sequential = isMessageSequential(message, previous, messageGroupingPeriod);\n\t\t\t\t\t\t\t\tconst newDay = isMessageNewDay(message, previous);\n\t\t\t\t\t\t\t\tconst firstUnread = firstUnreadMessageId === message._id;\n\t\t\t\t\t\t\t\tconst showDivider = newDay || firstUnread;\n\n\t\t\t\t\t\t\t\tconst shouldShowAsSequential = sequential && !newDay;\n\n\t\t\t\t\t\t\t\tconst system = MessageTypes.isSystemMessage(message);\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Fragment key={message._id}>\n\t\t\t\t\t\t\t\t\t\t{showDivider && (\n\t\t\t\t\t\t\t\t\t\t\t<MessageDivider unreadLabel={firstUnread ? t('Unread_Messages').toLowerCase() : undefined}>\n\t\t\t\t\t\t\t\t\t\t\t\t{newDay && formatDate(message.ts)}\n\t\t\t\t\t\t\t\t\t\t\t</MessageDivider>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t{system ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<SystemMessage message={message} showUserAvatar={showUserAvatar} />\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t<ThreadMessage\n\t\t\t\t\t\t\t\t\t\t\t\t\tmessage={message}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsequential={shouldShowAsSequential}\n\t\t\t\t\t\t\t\t\t\t\t\t\tunread={firstUnread}\n\t\t\t\t\t\t\t\t\t\t\t\t\tshowUserAvatar={showUserAvatar}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</MessageListProvider>\n\t\t\t\t\t)}\n\t\t\t\t</ul>\n\t\t\t</ScrollableContentWrapper>\n\t\t</div>\n\t);\n};\n\nexport default ThreadMessageList;\n",null],"names":["_toConsumableArray","MessageDivider","useMergedRefs","useSetting","useTranslation","useUserPreference","differenceInSeconds","React","Fragment","MessageTypes","isTruthy","ScrollableContentWrapper","SystemMessage","ThreadMessage","useFormatDate","isMessageNewDay","MessageListProvider","LoadingMessagesIndicator","useFirstUnreadMessageId","useScrollMessageList","useLegacyThreadMessageJump","useLegacyThreadMessageListScrolling","useLegacyThreadMessages","module","link","default","v","exportDefault","_ref","mainMessage","_useLegacyThreadMessa","_id","messages","loading","_useLegacyThreadMessa2","listWrapperScrollRef","listWrapperRef","listScrollRef","listRef","handleScroll","onScroll","_useLegacyThreadMessa3","enabled","parentRef","hideUsernames","showUserAvatar","formatDate","t","messageGroupingPeriod","Number","scrollMessageList","firstUnreadMessageId","createElement","className","filter","join","ref","style","scrollBehavior","overflowX","concat","map","message","index","_ref2","previous","sequential","isSystemMessage","current","groupable","u","alias","ts","newDay","firstUnread","showDivider","shouldShowAsSequential","system","key","unreadLabel","toLowerCase","undefined","unread"],"mappings":"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"}