)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/contextualBar/Threads/hooks/useThreadsList.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useCallback, useMemo } from 'react';\n\nimport { useScrollableMessageList } from '../../../../../hooks/lists/useScrollableMessageList';\nimport { useStreamUpdatesForMessageList } from '../../../../../hooks/lists/useStreamUpdatesForMessageList';\nimport type { ThreadsListOptions } from '../../../../../lib/lists/ThreadsList';\nimport { ThreadsList } from '../../../../../lib/lists/ThreadsList';\nimport { getConfig } from '../../../../../lib/utils/getConfig';\n\nexport const useThreadsList = (\n\toptions: ThreadsListOptions,\n\tuid: IUser['_id'] | null,\n): {\n\tthreadsList: ThreadsList;\n\tinitialItemCount: number;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst threadsList = useMemo(() => new ThreadsList(options), [options]);\n\n\tconst getThreadsList = useEndpoint('GET', '/v1/chat.getThreadsList');\n\n\tconst fetchMessages = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { threads, total } = await getThreadsList({\n\t\t\t\trid: options.rid,\n\t\t\t\ttype: options.type,\n\t\t\t\ttext: options.text,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end,\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems: threads,\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[getThreadsList, options.rid, options.text, options.type],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableMessageList(\n\t\tthreadsList,\n\t\tfetchMessages,\n\t\tuseMemo(() => parseInt(`${getConfig('threadsListSize', 10)}`), []),\n\t);\n\tuseStreamUpdatesForMessageList(threadsList, uid, options.rid);\n\n\treturn {\n\t\tthreadsList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n",null],"names":["module","link","default","_regeneratorRuntime","export","useThreadsList","useEndpoint","useCallback","useMemo","useScrollableMessageList","useStreamUpdatesForMessageList","ThreadsList","getConfig","options","uid","threadsList","getThreadsList","_useScrollableMessage","start","end","_await$getThreadsList","threads","total","async","_context","prev","next","awrap","rid","type","text","offset","count","sent","abrupt","items","itemCount","stop","Promise","parseInt","loadMoreItems","initialItemCount"],"mappings":"uBACsBA,EAAMC,IAAA,CAAA,6BAA2B,CAAAC,QAAAA,SAAAA,CAAAA,EAAAC,EAAAA,CAAA,CAAA,EAAA,GAAvDH,EAAOI,MAAE,CAAA,CAAAC,eAAmB,WAAA,OAAAA,CAA2B,CAAA,GAAAL,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAM,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAN,EAAAA,IAAAA,CAAAA,QAAAA,CAAAO,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,QAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAR,EAAAA,IAAAA,CAAAA,sDAAAA,CAAAS,yBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAT,EAAAA,IAAAA,CAAAA,4DAAAA,CAAAU,+BAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAV,EAAAA,IAAAA,CAAAA,uCAAAA,CAAAW,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAX,EAAAA,IAAAA,CAAAA,qCAAAA,CAAAY,UAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAShD,IATPT,EAAuDG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAS1CP,EAAiB,SAC7BQ,CAA2B,CAC3BC,CAAwB,EAMxB,IAAMC,EAAcP,EAAQ,WAAA,OAAM,IAAIG,EAAYE,EAAQ,EAAE,CAACA,EAAQ,EAE/DG,EAAiBV,EAAY,MAAO,2BAoB1CW,EAA4CR,EAC3CM,EAnBqBR,EACrB,SAAOW,CAAK,CAAEC,CAAG,EAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAnB,EAAAoB,KAAA,CAAA,SAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAC,IAAA,CAAAD,EAAAE,IAAA,EAAA,KAAA,EAAA,OAAAF,EAAAE,IAAA,CAAA,EAAAvB,EAAAwB,KAAA,CACiBX,EAAe,CAC/CY,IAAKf,EAAQe,GAAG,CAChBC,KAAMhB,EAAQgB,IAAI,CAClBC,KAAMjB,EAAQiB,IAAI,CAClBC,OAAQb,EACRc,MAAOb,IACN,MAAA,EANoB,OAAdE,EAAOD,AAMbA,CAAAA,EAAAI,EAAAS,IAAA,EANMZ,OAAO,CAAEC,EAAKF,EAALE,KAAK,CAAAE,EAAAU,MAAA,CAAA,SAQf,CACNC,MAAOd,EACPe,UAAWd,GACX,MAAA,EAAA,IAAA,MAAA,OAAAE,EAAAa,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,KAAAC,QAAA,EAEF,CAACtB,EAAgBH,EAAQe,GAAG,CAAEf,EAAQiB,IAAI,CAAEjB,EAAQgB,IAAI,CAAC,EAMzDrB,EAAQ,WAAA,OAAM+B,SAAQ,GAAI3B,EAAU,kBAAmB,IAAM,EAAE,EAAE,GAH1D4B,EAAavB,EAAbuB,aAAa,CAAEC,EAAgBxB,EAAhBwB,gBAAgB,CAOvC,OAFA/B,EAA+BK,EAAaD,EAAKD,EAAQe,GAAG,EAErD,CACNb,YAAAA,EACAyB,cAAAA,EACAC,iBAAAA,EAEF"}