)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/contextualBar/Threads/hooks/useThreadMainMessageQuery.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IMessage, IThreadMainMessage } from '@rocket.chat/core-typings';\nimport { useStream } from '@rocket.chat/ui-contexts';\nimport type { UseQueryResult } from '@tanstack/react-query';\nimport { useQueryClient, useQuery } from '@tanstack/react-query';\nimport { useCallback, useEffect, useRef } from 'react';\n\nimport { withDebouncing } from '../../../../../../lib/utils/highOrderFunctions';\nimport type { FieldExpression, Query } from '../../../../../lib/minimongo';\nimport { createFilterFromQuery } from '../../../../../lib/minimongo';\nimport { useRoom } from '../../../contexts/RoomContext';\nimport { useGetMessageByID } from './useGetMessageByID';\n\ntype RoomMessagesRidEvent = IMessage;\n\ntype NotifyRoomRidDeleteMessageBulkEvent = {\n\trid: IMessage['rid'];\n\texcludePinned: boolean;\n\tignoreDiscussion: boolean;\n\tts: FieldExpression<Date>;\n\tusers: string[];\n};\n\nconst createDeleteCriteria = (params: NotifyRoomRidDeleteMessageBulkEvent): ((message: IMessage) => boolean) => {\n\tconst query: Query<IMessage> = { ts: params.ts };\n\n\tif (params.excludePinned) {\n\t\tquery.pinned = { $ne: true };\n\t}\n\n\tif (params.ignoreDiscussion) {\n\t\tquery.drid = { $exists: false };\n\t}\n\tif (params.users?.length) {\n\t\tquery['u.username'] = { $in: params.users };\n\t}\n\n\treturn createFilterFromQuery<IMessage>(query);\n};\n\nconst useSubscribeToMessage = () => {\n\tconst subscribeToRoomMessages = useStream('room-messages');\n\tconst subscribeToNotifyRoom = useStream('notify-room');\n\n\treturn useCallback(\n\t\t(message: IMessage, { onMutate, onDelete }: { onMutate?: (message: IMessage) => void; onDelete?: () => void }) => {\n\t\t\tconst unsubscribeFromRoomMessages = subscribeToRoomMessages(message.rid, (event: RoomMessagesRidEvent) => {\n\t\t\t\tif (message._id === event._id) onMutate?.(event);\n\t\t\t});\n\n\t\t\tconst unsubscribeFromDeleteMessage = subscribeToNotifyRoom(`${message.rid}/deleteMessage`, (event) => {\n\t\t\t\tif (message._id === event._id) onDelete?.();\n\t\t\t});\n\n\t\t\tconst unsubscribeFromDeleteMessageBulk = subscribeToNotifyRoom(`${message.rid}/deleteMessageBulk`, (params) => {\n\t\t\t\tconst matchDeleteCriteria = createDeleteCriteria(params);\n\t\t\t\tif (matchDeleteCriteria(message)) onDelete?.();\n\t\t\t});\n\n\t\t\treturn () => {\n\t\t\t\tunsubscribeFromRoomMessages();\n\t\t\t\tunsubscribeFromDeleteMessage();\n\t\t\t\tunsubscribeFromDeleteMessageBulk();\n\t\t\t};\n\t\t},\n\t\t[subscribeToNotifyRoom, subscribeToRoomMessages],\n\t);\n};\n\nexport const useThreadMainMessageQuery = (\n\ttmid: IMessage['_id'],\n\t{ onDelete }: { onDelete?: () => void } = {},\n): UseQueryResult<IThreadMainMessage, Error> => {\n\tconst room = useRoom();\n\n\tconst getMessage = useGetMessageByID();\n\tconst subscribeToMessage = useSubscribeToMessage();\n\n\tconst queryClient = useQueryClient();\n\tconst unsubscribeRef = useRef<(() => void) | undefined>();\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tunsubscribeRef.current?.();\n\t\t\tunsubscribeRef.current = undefined;\n\t\t};\n\t}, [tmid]);\n\n\treturn useQuery(['rooms', room._id, 'threads', tmid, 'main-message'] as const, async ({ queryKey }) => {\n\t\tconst mainMessage = await getMessage(tmid);\n\n\t\tif (!mainMessage) {\n\t\t\tthrow new Error('Invalid main message');\n\t\t}\n\n\t\tconst debouncedInvalidate = withDebouncing({ wait: 10000 })(() => {\n\t\t\tqueryClient.invalidateQueries(queryKey, { exact: true });\n\t\t});\n\n\t\tunsubscribeRef.current =\n\t\t\tunsubscribeRef.current ||\n\t\t\tsubscribeToMessage(mainMessage, {\n\t\t\t\tonMutate: (message) => {\n\t\t\t\t\tqueryClient.setQueryData(queryKey, () => message);\n\t\t\t\t\tdebouncedInvalidate();\n\t\t\t\t},\n\t\t\t\tonDelete: () => {\n\t\t\t\t\tonDelete?.();\n\t\t\t\t\tqueryClient.invalidateQueries(queryKey, { exact: true });\n\t\t\t\t},\n\t\t\t});\n\n\t\treturn mainMessage;\n\t});\n};\n",null],"names":["module","link","default","_regeneratorRuntime","export","useThreadMainMessageQuery","useStream","useQueryClient","useQuery","useCallback","useEffect","useRef","withDebouncing","createFilterFromQuery","useRoom","useGetMessageByID","createDeleteCriteria","params","_params$users","query","ts","excludePinned","pinned","$ne","ignoreDiscussion","drid","$exists","users","length","$in","useSubscribeToMessage","subscribeToRoomMessages","subscribeToNotifyRoom","message","_ref","onMutate","onDelete","unsubscribeFromRoomMessages","rid","event","_id","unsubscribeFromDeleteMessage","unsubscribeFromDeleteMessageBulk","matchDeleteCriteria","tmid","_ref2","arguments","undefined","room","getMessage","subscribeToMessage","queryClient","unsubscribeRef","_unsubscribeRef$curre","current","call","_ref3","queryKey","mainMessage","debouncedInvalidate","async","_context","prev","next","awrap","sent","Error","wait","invalidateQueries","exact","setQueryData","abrupt","stop","Promise"],"mappings":"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"}