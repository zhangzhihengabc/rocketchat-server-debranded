)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/root/PortalsWrapper.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { FC } from 'react';\nimport React from 'react';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\n\nimport { portalsSubscription } from '../../lib/portals/portalsSubscription';\nimport PortalWrapper from './PortalWrapper';\n\nconst PortalsWrapper: FC = () => {\n\tconst portals = useSyncExternalStore(portalsSubscription.subscribe, portalsSubscription.getSnapshot);\n\n\treturn (\n\t\t<>\n\t\t\t{portals.map(({ key, portal }) => (\n\t\t\t\t<PortalWrapper key={key} portal={portal} />\n\t\t\t))}\n\t\t</>\n\t);\n};\n\nexport default PortalsWrapper;\n",null],"names":["React","useSyncExternalStore","portalsSubscription","PortalWrapper","module","link","v","exportDefault","portals","subscribe","getSnapshot","createElement","Fragment","map","_ref","key","portal"],"mappings":"uBAOA,IANAA,EAA0BC,EAAAC,EAAAC,EAAnBC,EAAKC,IAAM,CAAA,QAAQ,CAAA,QAAA,SAAAC,CAAA,EAAAN,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,+BAAAA,CAAAH,qBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,wCAAAA,CAAAF,oBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,kBAAAA,CAAA,QAAA,SAAAE,CAAA,EAAAH,EAAAA,CAAA,CAAA,EAAA,GAA1BC,EAAOG,aAAW,CAMS,WAC1B,IAAMC,EAAUP,EAAqBC,EAAoBO,SAAS,CAAEP,EAAoBQ,WAAW,EAEnG,OACCV,EAAAW,aAAA,CAAAX,EAAAY,QAAA,CAAA,KACEJ,EAAQK,GAAG,CAAC,SAAAC,CAAA,EAAA,IAAGC,EAAGD,EAAHC,GAAG,CAAEC,EAAMF,EAANE,MAAM,CAAA,OAC1BhB,EAAAW,aAAA,CAACR,EAAa,CAACY,IAAKA,EAAKC,OAAQA,CAAO,EAAG,GAI/C"}