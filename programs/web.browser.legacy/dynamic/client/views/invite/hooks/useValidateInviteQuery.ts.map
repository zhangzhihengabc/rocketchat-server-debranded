)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/invite/hooks/useValidateInviteQuery.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useEndpoint, useSessionDispatch, useSetting, useToastMessageDispatch, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\n\nimport { useInviteTokenMutation } from './useInviteTokenMutation';\n\nexport const useValidateInviteQuery = (userId: string | null, token: string | undefined) => {\n\tconst t = useTranslation();\n\n\tconst registrationForm = useSetting('Accounts_RegistrationForm');\n\n\tconst setLoginDefaultState = useSessionDispatch('loginDefaultState');\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst getInviteRoomMutation = useInviteTokenMutation();\n\n\tconst handleValidateInviteToken = useEndpoint('POST', '/v1/validateInviteToken');\n\n\treturn useQuery(\n\t\t['invite', token],\n\t\tasync () => {\n\t\t\tif (!token) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst { valid } = await handleValidateInviteToken({ token });\n\n\t\t\t\treturn valid;\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: t('Failed_to_validate_invite_token') });\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tonSuccess: async (valid) => {\n\t\t\t\tif (!token) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (registrationForm !== 'Disabled') {\n\t\t\t\t\tsetLoginDefaultState('register');\n\t\t\t\t} else {\n\t\t\t\t\tsetLoginDefaultState('login');\n\t\t\t\t}\n\n\t\t\t\tif (!valid || !userId) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treturn getInviteRoomMutation(token);\n\t\t\t},\n\t\t},\n\t);\n};\n",null],"names":["module","default","v","_regeneratorRuntime","export","useValidateInviteQuery","useEndpoint","useSessionDispatch","useSetting","useToastMessageDispatch","useTranslation","useQuery","useInviteTokenMutation","userId","token","t","registrationForm","setLoginDefaultState","dispatchToastMessage","getInviteRoomMutation","handleValidateInviteToken","valid","async","_context","prev","next","abrupt","awrap","_await$handleValidate","sent","t0","type","message","stop","Promise","onSuccess","_context2"],"mappings":"uBAAsBA,EAAAA,IAAAA,CAAAA,6BAAgC,CAAAC,QAAAA,SAAyBC,CAAAA,EAAAC,EAAsBD,CAAA,CAAA,EAAA,GAArGF,EAAOI,MAAE,CAAA,CAAAC,uBAAa,WAAoB,OAAYA,CAAuB,CAAE,GAAiDL,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAM,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,mBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,WAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,wBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAV,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAW,SAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAX,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAY,uBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAKzH,IALPT,EAA+EG,EAAgBC,EAAMC,EAA2BC,EAAAA,EAAAE,EAAAC,EAKnHP,EAAyB,SAACQ,CAAqB,CAAEC,CAAyB,EACtF,IAAMC,EAAIL,IAEJM,EAAmBR,EAAW,6BAE9BS,EAAuBV,EAAmB,qBAC1CW,EAAuBT,IACvBU,EAAwBP,IAExBQ,EAA4Bd,EAAY,OAAQ,2BAEtD,OAAOK,EACN,CAAC,SAAUG,EAAM,CACjB,WAAA,IAAAO,EAAA,OAAAlB,EAAAmB,KAAA,CAAA,SAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAC,IAAA,CAAAD,EAAAE,IAAA,EAAA,KAAA,EAAA,GACMX,EAAK,CAAAS,EAAAE,IAAA,CAAA,EAAA,KAAA,CAAA,OAAAF,EAAAG,MAAA,CAAA,SACF,CAAA,EAAK,MAAA,EAAA,OAAAH,EAAAC,IAAA,CAAA,EAAAD,EAAAE,IAAA,CAAA,EAAAtB,EAAAwB,KAAA,CAIYP,EAA0B,CAAEN,MAAAA,CAAK,GAAG,MAAA,EAA/C,OAALO,EAAKO,AAA+CL,EAAAM,IAAA,CAApDR,KAAK,CAAAE,EAAAG,MAAA,CAAA,SAENL,EAAK,MAAA,GAE2E,OAF3EE,EAAAC,IAAA,CAAA,GAAAD,EAAAO,EAAA,CAAAP,EAAA,KAAA,CAAA,GAEZL,EAAqB,CAAEa,KAAM,QAASC,QAASjB,EAAE,kCAAkC,GAAIQ,EAAAG,MAAA,CAAA,SAChF,CAAA,EAAK,MAAA,GAAA,IAAA,MAAA,OAAAH,EAAAU,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,CAAA,CAAA,EAAA,GAAA,CAAA,CAAAC,QAAA,EAGd,CACCC,UAAW,SAAOd,CAAK,EAAA,OAAAlB,EAAAmB,KAAA,CAAA,SAAAc,CAAA,EAAA,OAAA,OAAAA,EAAAZ,IAAA,CAAAY,EAAAX,IAAA,EAAA,KAAA,EAAA,GACjBX,EAAK,CAAAsB,EAAAX,IAAA,CAAA,EAAA,KAAA,CAAA,OAAAW,EAAAV,MAAA,CAAA,SAAA,MAAA,EAQT,GAJGV,AAAqB,aAArBA,EACHC,EAAqB,YAErBA,EAAqB,SACrB,CAEG,CAAA,CAACI,GAAS,CAACR,CAAAA,EAAM,CAAAuB,EAAAX,IAAA,CAAA,EAAA,KAAA,CAAA,OAAAW,EAAAV,MAAA,CAAA,SAAA,MAAA,EAAA,OAAAU,EAAAV,MAAA,CAAA,SAIdP,EAAsBL,GAAM,MAAA,EAAA,IAAA,MAAA,OAAAsB,EAAAH,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,KAAAC,QAAA,GAIvC"}