)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/hooks/useActiveConnections.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useEndpoint } from '@rocket.chat/ui-contexts';\nimport type { UseQueryResult } from '@tanstack/react-query';\nimport { useQuery } from '@tanstack/react-query';\n\nexport const useActiveConnections = (): UseQueryResult<{ max: number; current: number; percentage: number }> => {\n\tconst getConnections = useEndpoint('GET', '/v1/presence.getConnections');\n\treturn useQuery(\n\t\t['userConnections'],\n\t\tasync () => {\n\t\t\tconst { current, max } = await getConnections();\n\t\t\treturn { current, max, percentage: Math.min((current / max) * 100, 100) };\n\t\t},\n\t\t{ staleTime: 1000 * 60 },\n\t);\n};\n",null],"names":["module","link","default","_regeneratorRuntime","export","useActiveConnections","useEndpoint","useQuery","getConnections","_await$getConnections","current","max","async","_context","prev","next","awrap","sent","abrupt","percentage","Math","min","stop","Promise","staleTime"],"mappings":"uBAAsBA,EAAMC,IAAA,CAAA,6BAA2B,CAAAC,QAAAA,SAAAA,CAAAA,EAAAC,EAAAA,CAAA,CAAA,EAAA,GAAvDH,EAAOI,MAAE,CAAA,CAAAC,qBAAmB,WAAA,OAA0BA,CAAC,CAAA,GAAAL,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAM,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAN,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAO,SAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAIhD,IAJPJ,EAAuDG,EAAAC,EAI1CF,EAAuB,WACnC,IAAMG,EAAiBF,EAAY,MAAO,+BAC1C,OAAOC,EACN,CAAC,kBAAkB,CACnB,WAAA,IAAAE,EAAAC,EAAAC,EAAA,OAAAR,EAAAS,KAAA,CAAA,SAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAC,IAAA,CAAAD,EAAAE,IAAA,EAAA,KAAA,EAAA,OAAAF,EAAAE,IAAA,CAAA,EAAAZ,EAAAa,KAAA,CACgCR,IAAgB,MAAA,EAA3B,OAAZE,EAAOD,AAAgCA,CAAAA,EAAAI,EAAAI,IAAA,EAAvCP,OAAO,CAAEC,EAAGF,EAAHE,GAAG,CAAAE,EAAAK,MAAA,CAAA,SACb,CAAER,QAAAA,EAASC,IAAAA,EAAKQ,WAAYC,KAAKC,GAAG,CAAEX,EAAUC,EAAO,IAAK,IAAI,EAAE,MAAA,EAAA,IAAA,MAAA,OAAAE,EAAAS,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,KAAAC,QAAA,EAE1E,CAAEC,UAAW,GAAS,EAExB"}