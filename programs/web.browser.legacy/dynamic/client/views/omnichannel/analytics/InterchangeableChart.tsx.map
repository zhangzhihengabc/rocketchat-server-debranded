)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/omnichannel/analytics/InterchangeableChart.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useToastMessageDispatch, useMethod, useTranslation } from '@rocket.chat/ui-contexts';\nimport type { Chart as ChartType, TooltipItem } from 'chart.js';\nimport React, { useRef, useEffect } from 'react';\n\nimport { drawLineChart } from '../../../../app/livechat/client/lib/chartHandler';\nimport { secondsToHHMMSS } from '../../../../lib/utils/secondsToHHMMSS';\nimport Chart from '../realTimeMonitoring/charts/Chart';\n\nconst getChartTooltips = (chartName: string) => {\n\tswitch (chartName) {\n\t\tcase 'Avg_chat_duration':\n\t\tcase 'Avg_first_response_time':\n\t\tcase 'Best_first_response_time':\n\t\tcase 'Avg_response_time':\n\t\tcase 'Avg_reaction_time':\n\t\t\treturn {\n\t\t\t\tcallbacks: {\n\t\t\t\t\ttitle([ctx]: TooltipItem<'line'>[]) {\n\t\t\t\t\t\tconst { dataset } = ctx;\n\t\t\t\t\t\treturn dataset.label;\n\t\t\t\t\t},\n\t\t\t\t\tlabel(ctx: TooltipItem<'line'>) {\n\t\t\t\t\t\tconst { dataset, dataIndex } = ctx;\n\t\t\t\t\t\tconst item = dataset.data[dataIndex];\n\t\t\t\t\t\treturn secondsToHHMMSS(typeof item === 'number' ? item : 0);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\t\tdefault:\n\t\t\treturn {};\n\t}\n};\n\nconst InterchangeableChart = ({\n\tdepartmentId,\n\tdateRange,\n\tchartName,\n\t...props\n}: {\n\tdepartmentId: string;\n\tdateRange: { start: string; end: string };\n\tchartName: string;\n\tflexShrink: number;\n\th: string;\n\tw: string;\n\talignSelf: string;\n}) => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst canvas = useRef<HTMLCanvasElement | null>(null);\n\tconst context = useRef<ChartType<'line', number, string> | void>();\n\n\tconst { start, end } = dateRange;\n\n\tconst loadData = useMethod('livechat:getAnalyticsChartData');\n\n\tconst draw = useMutableCallback(async (params) => {\n\t\ttry {\n\t\t\tconst tooltipCallbacks = getChartTooltips(chartName);\n\t\t\tif (!params?.daterange?.from || !params?.daterange?.to) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst result = await loadData(params);\n\t\t\tif (!result?.chartLabel || !result?.dataLabels || !result?.dataPoints) {\n\t\t\t\tthrow new Error('Error! fetching chart data. Details: livechat:getAnalyticsChartData => Missing Data');\n\t\t\t}\n\t\t\t(context.current || typeof context.current === 'undefined') &&\n\t\t\t\tcanvas.current &&\n\t\t\t\t(context.current = await drawLineChart(\n\t\t\t\t\tcanvas.current,\n\t\t\t\t\tcontext.current,\n\t\t\t\t\t[result.chartLabel],\n\t\t\t\t\tresult.dataLabels,\n\t\t\t\t\t[result.dataPoints as unknown as number], // TODO fix this\n\t\t\t\t\t{\n\t\t\t\t\t\ttooltipCallbacks,\n\t\t\t\t\t},\n\t\t\t\t));\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t});\n\n\tuseEffect(() => {\n\t\tdraw({\n\t\t\tdaterange: {\n\t\t\t\tfrom: start,\n\t\t\t\tto: end,\n\t\t\t},\n\t\t\tchartOptions: { name: chartName },\n\t\t\t...(departmentId && { departmentId }),\n\t\t});\n\t}, [chartName, departmentId, draw, end, start, t, loadData]);\n\n\treturn <Chart ref={canvas} {...props} />;\n};\n\nexport default InterchangeableChart;\n",null],"names":["_regeneratorRuntime","_extends","_objectSpread","_objectWithoutProperties","_slicedToArray","useMutableCallback","useToastMessageDispatch","useMethod","useTranslation","React","useRef","useEffect","drawLineChart","secondsToHHMMSS","Chart","module","link","default","v","getChartTooltips","chartName","callbacks","title","_ref","dataset","ctx","_ref2","label","dataIndex","item","data","exportDefault","_ref3","departmentId","dateRange","props","_excluded","t","dispatchToastMessage","canvas","context","start","end","loadData","draw","params","_params$daterange","_params$daterange2","tooltipCallbacks","result","async","_context","prev","next","daterange","from","to","abrupt","awrap","sent","chartLabel","dataLabels","dataPoints","Error","t0","current","t1","type","message","stop","Promise","chartOptions","name","createElement","ref"],"mappings":"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"}