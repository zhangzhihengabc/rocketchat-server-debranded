)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/omnichannel/directory/components/AgentField.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IOmnichannelRoom } from '@rocket.chat/core-typings';\nimport { useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport React from 'react';\n\nimport { UserStatus } from '../../../../components/UserStatus';\nimport UserAvatar from '../../../../components/avatar/UserAvatar';\nimport AgentInfoDetails from '../../components/AgentInfoDetails';\nimport Field from '../../components/Field';\nimport Info from '../../components/Info';\nimport Label from '../../components/Label';\nimport { FormSkeleton } from './FormSkeleton';\n\ntype AgentFieldProps = {\n\tagent: IOmnichannelRoom['servedBy'];\n\tisSmall?: boolean;\n};\n\nconst AgentField = ({ agent, isSmall = false }: AgentFieldProps) => {\n\tconst t = useTranslation();\n\tconst { username = '' } = agent ?? {};\n\tconst getUserInfo = useEndpoint('GET', '/v1/users.info');\n\tconst { data, isLoading } = useQuery(['/v1/users.info', username], () => getUserInfo({ username }));\n\n\tif (isLoading) {\n\t\treturn <FormSkeleton />;\n\t}\n\n\tconst {\n\t\tuser: { name, status },\n\t} = data ?? { user: {} };\n\n\tconst displayName = name || username;\n\n\treturn (\n\t\t<Field>\n\t\t\t<Label>{t('Agent')}</Label>\n\t\t\t<Info style={{ display: 'flex' }}>\n\t\t\t\t<UserAvatar size={isSmall ? 'x28' : 'x40'} title={username} username={username || ''} />\n\t\t\t\t<AgentInfoDetails mis={isSmall ? 'x8' : 'x10'} name={displayName} shortName={username} status={<UserStatus status={status} />} />\n\t\t\t</Info>\n\t\t</Field>\n\t);\n};\n\nexport default AgentField;\n",null],"names":["useEndpoint","useTranslation","useQuery","React","UserStatus","UserAvatar","AgentInfoDetails","Field","Info","Label","FormSkeleton","module","link","v","exportDefault","_ref","agent","_ref$isSmall","isSmall","t","_ref2$username","_ref2","username","getUserInfo","_useQuery","data","isLoading","createElement","_ref3$user","_ref3","user","name","status","displayName","style","display","size","title","mis","shortName"],"mappings":"uBAkBA,IAjBAA,EAASC,EAA8DC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAjDC,EAAgBC,IAAAA,CAAAA,2BAAgC,CAACZ,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAU,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAT,SAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAS,EAAAA,IAAAA,CAAAA,QAAAA,CAAA,QAAA,SAAAE,CAAA,EAAAV,EAAAA,CAAA,CAAA,EAAA,GAAAQ,EAAAA,IAAAA,CAAAA,oCAAAA,CAAAP,WAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAO,EAAAA,IAAAA,CAAAA,2CAAAA,CAAA,QAAA,SAAAE,CAAA,EAAAR,EAAAA,CAAA,CAAA,EAAA,GAAAM,EAAAA,IAAAA,CAAAA,oCAAAA,CAAA,QAAA,SAAAE,CAAA,EAAAP,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,yBAAAA,CAAA,QAAA,SAAAE,CAAA,EAAAN,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,wBAAAA,CAAA,QAAA,SAAAE,CAAA,EAAAL,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,yBAAAA,CAAA,QAAA,SAAAE,CAAA,EAAAJ,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,iBAAAA,CAAAD,aAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAvEC,EAAOG,aAAa,CAiBD,SAAAC,CAAA,EAAgD,IAA7CC,EAAKD,EAALC,KAAK,CAAAC,EAAAF,EAAEG,OAAO,CAAPA,EAAOD,AAAA,KAAA,IAAAA,GAAQA,EACrCE,EAAIlB,IAC2BmB,EAAAC,AAAXL,CAAAA,MAAAA,EAAAA,EAAS,CAAA,CAAA,EAA3BM,QAAQ,CAARA,EAAQF,AAAA,KAAA,IAAAA,EAAG,GAAEA,EACfG,EAAcvB,EAAY,MAAO,kBACvCwB,EAA4BtB,EAAS,CAAC,iBAAkBoB,EAAS,CAAE,WAAA,OAAMC,EAAY,CAAED,SAAAA,CAAQ,EAAG,GAA1FG,EAAID,EAAJC,IAAI,CAEZ,GAFuBD,EAATE,SAAS,CAGtB,OAAOvB,EAAAwB,aAAA,CAACjB,EAAY,MAGrB,IAEwBkB,EAAAC,AAApBJ,CAAAA,MAAAA,EAAAA,EAAQ,CAAEK,KAAM,CAAA,CAAE,CAAA,EADrBA,IAAI,CAAIC,EAAIH,EAAJG,IAAI,CAAEC,EAAMJ,EAANI,MAAM,CAGfC,EAAcF,GAAQT,EAE5B,OACCnB,EAAAwB,aAAA,CAACpB,EAAK,KACLJ,EAAAwB,aAAA,CAAClB,EAAK,KAAEU,EAAE,UACVhB,EAAAwB,aAAA,CAACnB,EAAI,CAAC0B,MAAO,CAAEC,QAAS,MAAM,CAAG,EAChChC,EAAAwB,aAAA,CAACtB,EAAU,CAAC+B,KAAMlB,EAAU,MAAQ,MAAOmB,MAAOf,EAAUA,SAAUA,GAAY,EAAG,GACrFnB,EAAAwB,aAAA,CAACrB,EAAgB,CAACgC,IAAKpB,EAAU,KAAO,MAAOa,KAAME,EAAaM,UAAWjB,EAAUU,OAAQ7B,EAAAwB,aAAA,CAACvB,EAAU,CAAC4B,OAAQA,CAAO,EAAI,IAIlI"}