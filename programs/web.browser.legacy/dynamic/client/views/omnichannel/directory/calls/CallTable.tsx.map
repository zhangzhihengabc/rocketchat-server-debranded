)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/omnichannel/directory/calls/CallTable.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Pagination } from '@rocket.chat/fuselage';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useRoute, useTranslation, useEndpoint, useUserId } from '@rocket.chat/ui-contexts';\nimport { useQuery, hashQueryKey } from '@tanstack/react-query';\nimport React, { useState, useMemo } from 'react';\n\nimport FilterByText from '../../../../components/FilterByText';\nimport GenericNoResults from '../../../../components/GenericNoResults/GenericNoResults';\nimport {\n\tGenericTable,\n\tGenericTableBody,\n\tGenericTableHeader,\n\tGenericTableHeaderCell,\n\tGenericTableLoadingRow,\n} from '../../../../components/GenericTable';\nimport { usePagination } from '../../../../components/GenericTable/hooks/usePagination';\nimport { useSort } from '../../../../components/GenericTable/hooks/useSort';\nimport { CallTableRow } from './CallTableRow';\n\nconst CallTable = () => {\n\tconst t = useTranslation();\n\tconst userIdLoggedIn = useUserId();\n\n\tconst [text, setText] = useState('');\n\tconst directoryRoute = useRoute('omnichannel-directory');\n\tconst { current, itemsPerPage, setItemsPerPage: onSetItemsPerPage, setCurrent: onSetCurrent, ...paginationProps } = usePagination();\n\tconst { sortBy, sortDirection, setSort } = useSort<'fname' | 'phone' | 'queue' | 'ts' | 'callDuration' | 'direction'>('fname');\n\n\tconst query = useMemo(\n\t\t() => ({\n\t\t\tsort: `{ \"${sortBy}\": ${sortDirection === 'asc' ? 1 : -1} }`,\n\t\t\topen: 'false' as const,\n\t\t\troomName: text || '',\n\t\t\tagents: userIdLoggedIn ? [userIdLoggedIn] : [],\n\t\t\t...(itemsPerPage && { count: itemsPerPage }),\n\t\t\t...(current && { offset: current }),\n\t\t}),\n\t\t[sortBy, current, sortDirection, itemsPerPage, userIdLoggedIn, text],\n\t);\n\n\tconst onRowClick = useMutableCallback((id, token) => {\n\t\tdirectoryRoute.push(\n\t\t\t{\n\t\t\t\tpage: 'calls',\n\t\t\t\tbar: 'info',\n\t\t\t\tid,\n\t\t\t},\n\t\t\t{ token },\n\t\t);\n\t});\n\n\tconst getVoipRooms = useEndpoint('GET', '/v1/voip/rooms');\n\tconst { data, isSuccess, isLoading } = useQuery(['voip-rooms', query], async () => getVoipRooms(query));\n\n\tconst [defaultQuery] = useState(hashQueryKey([query]));\n\tconst queryHasChanged = defaultQuery !== hashQueryKey([query]);\n\n\tconst headers = (\n\t\t<>\n\t\t\t<GenericTableHeaderCell key='fname' direction={sortDirection} active={sortBy === 'fname'} onClick={setSort} sort='fname' w='x400'>\n\t\t\t\t{t('Contact_Name')}\n\t\t\t</GenericTableHeaderCell>\n\t\t\t<GenericTableHeaderCell key='phone' direction={sortDirection} active={sortBy === 'phone'} onClick={setSort} sort='phone' w='x200'>\n\t\t\t\t{t('Phone')}\n\t\t\t</GenericTableHeaderCell>\n\t\t\t<GenericTableHeaderCell key='queue' direction={sortDirection} active={sortBy === 'queue'} onClick={setSort} sort='ts' w='x100'>\n\t\t\t\t{t('Queue')}\n\t\t\t</GenericTableHeaderCell>\n\t\t\t<GenericTableHeaderCell key='ts' direction={sortDirection} active={sortBy === 'ts'} onClick={setSort} sort='ts' w='x200'>\n\t\t\t\t{t('Started_At')}\n\t\t\t</GenericTableHeaderCell>\n\t\t\t<GenericTableHeaderCell\n\t\t\t\tkey='callDuration'\n\t\t\t\tdirection={sortDirection}\n\t\t\t\tactive={sortBy === 'callDuration'}\n\t\t\t\tonClick={setSort}\n\t\t\t\tsort='callDuration'\n\t\t\t\tw='x120'\n\t\t\t>\n\t\t\t\t{t('Talk_Time')}\n\t\t\t</GenericTableHeaderCell>\n\t\t\t<GenericTableHeaderCell\n\t\t\t\tkey='direction'\n\t\t\t\tdirection={sortDirection}\n\t\t\t\tactive={sortBy === 'direction'}\n\t\t\t\tonClick={setSort}\n\t\t\t\tsort='direction'\n\t\t\t\tw='x200'\n\t\t\t>\n\t\t\t\t{t('Direction')}\n\t\t\t</GenericTableHeaderCell>\n\t\t\t<GenericTableHeaderCell key='call' width={44} />\n\t\t</>\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t{((isSuccess && data?.rooms.length > 0) || queryHasChanged) && <FilterByText onChange={({ text }) => setText(text)} />}\n\t\t\t{isLoading && (\n\t\t\t\t<GenericTable>\n\t\t\t\t\t<GenericTableHeader>{headers}</GenericTableHeader>\n\t\t\t\t\t<GenericTableBody>\n\t\t\t\t\t\t<GenericTableLoadingRow cols={7} />\n\t\t\t\t\t</GenericTableBody>\n\t\t\t\t</GenericTable>\n\t\t\t)}\n\t\t\t{isSuccess && data?.rooms.length === 0 && queryHasChanged && <GenericNoResults />}\n\t\t\t{isSuccess && data?.rooms.length === 0 && !queryHasChanged && (\n\t\t\t\t<GenericNoResults\n\t\t\t\t\ticon='phone'\n\t\t\t\t\ttitle={t('No_calls_yet')}\n\t\t\t\t\tdescription={t('No_calls_yet_description')}\n\t\t\t\t\tlinkHref='https://go.rocket.chat/omnichannel-docs'\n\t\t\t\t\tlinkText={t('Learn_more_about_voice_channel')}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{isSuccess && data?.rooms.length > 0 && (\n\t\t\t\t<>\n\t\t\t\t\t<GenericTable>\n\t\t\t\t\t\t<GenericTableHeader>{headers}</GenericTableHeader>\n\t\t\t\t\t\t<GenericTableBody>\n\t\t\t\t\t\t\t{data?.rooms.map((room) => (\n\t\t\t\t\t\t\t\t<CallTableRow key={room._id} room={room} onRowClick={onRowClick} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</GenericTableBody>\n\t\t\t\t\t</GenericTable>\n\t\t\t\t\t<Pagination\n\t\t\t\t\t\tdivider\n\t\t\t\t\t\tcurrent={current}\n\t\t\t\t\t\titemsPerPage={itemsPerPage}\n\t\t\t\t\t\tcount={data?.total || 0}\n\t\t\t\t\t\tonSetItemsPerPage={onSetItemsPerPage}\n\t\t\t\t\t\tonSetCurrent={onSetCurrent}\n\t\t\t\t\t\t{...paginationProps}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default CallTable;\n",null],"names":["_regeneratorRuntime","_extends","_objectSpread","_objectWithoutProperties","_slicedToArray","Pagination","useMutableCallback","useRoute","useTranslation","useEndpoint","useUserId","useQuery","hashQueryKey","React","useState","useMemo","FilterByText","GenericNoResults","GenericTable","GenericTableBody","GenericTableHeader","GenericTableHeaderCell","GenericTableLoadingRow","usePagination","useSort","CallTableRow","module","link","default","v","exportDefault","t","userIdLoggedIn","_useState2","text","setText","directoryRoute","_usePagination","current","itemsPerPage","onSetItemsPerPage","setItemsPerPage","onSetCurrent","setCurrent","paginationProps","_excluded","_useSort","sortBy","sortDirection","setSort","query","sort","open","roomName","agents","count","offset","onRowClick","id","token","push","page","bar","getVoipRooms","_useQuery","async","_context","prev","next","abrupt","stop","Promise","data","isSuccess","isLoading","queryHasChanged","defaultQuery","_useState4","headers","createElement","Fragment","key","direction","active","onClick","w","width","rooms","length","onChange","_ref","cols","icon","title","description","linkHref","linkText","map","room","_id","divider","total"],"mappings":"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"}