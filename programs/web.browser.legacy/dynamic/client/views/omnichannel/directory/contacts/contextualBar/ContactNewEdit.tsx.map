)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/omnichannel/directory/contacts/contextualBar/ContactNewEdit.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { ILivechatVisitor, Serialized } from '@rocket.chat/core-typings';\nimport { Field, FieldLabel, FieldRow, FieldError, TextInput, ButtonGroup, Button, ContextualbarContent } from '@rocket.chat/fuselage';\nimport { CustomFieldsForm } from '@rocket.chat/ui-client';\nimport { useToastMessageDispatch, useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useQueryClient } from '@tanstack/react-query';\nimport type { ReactElement } from 'react';\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\n\nimport { hasAtLeastOnePermission } from '../../../../../../app/authorization/client';\nimport { validateEmail } from '../../../../../../lib/emailValidator';\nimport { ContextualbarScrollableContent, ContextualbarFooter } from '../../../../../components/Contextualbar';\nimport { createToken } from '../../../../../lib/utils/createToken';\nimport { ContactManager as ContactManagerForm } from '../../../additionalForms';\nimport { FormSkeleton } from '../../components/FormSkeleton';\nimport { useCustomFieldsMetadata } from '../../hooks/useCustomFieldsMetadata';\n\ntype ContactNewEditProps = {\n\tid: string;\n\tdata?: { contact: Serialized<ILivechatVisitor> | null };\n\tclose(): void;\n};\n\ntype ContactFormData = {\n\ttoken: string;\n\tname: string;\n\temail: string;\n\tphone: string;\n\tusername: string;\n\tcustomFields: Record<any, any>;\n};\n\nconst DEFAULT_VALUES = {\n\ttoken: '',\n\tname: '',\n\temail: '',\n\tphone: '',\n\tusername: '',\n\tcustomFields: {},\n};\n\nconst getInitialValues = (data: ContactNewEditProps['data']): ContactFormData => {\n\tif (!data) {\n\t\treturn DEFAULT_VALUES;\n\t}\n\n\tconst { name, token, phone, visitorEmails, livechatData, contactManager } = data.contact ?? {};\n\n\treturn {\n\t\ttoken: token ?? '',\n\t\tname: name ?? '',\n\t\temail: visitorEmails ? visitorEmails[0].address : '',\n\t\tphone: phone ? phone[0].phoneNumber : '',\n\t\tcustomFields: livechatData ?? {},\n\t\tusername: contactManager?.username ?? '',\n\t};\n};\n\nconst ContactNewEdit = ({ id, data, close }: ContactNewEditProps): ReactElement => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst queryClient = useQueryClient();\n\n\tconst canViewCustomFields = (): boolean =>\n\t\thasAtLeastOnePermission(['view-livechat-room-customfields', 'edit-livechat-room-customfields']);\n\n\tconst [userId, setUserId] = useState('no-agent-selected');\n\tconst saveContact = useEndpoint('POST', '/v1/omnichannel/contact');\n\tconst getContactBy = useEndpoint('GET', '/v1/omnichannel/contact.search');\n\tconst getUserData = useEndpoint('GET', '/v1/users.info');\n\n\tconst { data: customFieldsMetadata = [], isInitialLoading: isLoadingCustomFields } = useCustomFieldsMetadata({\n\t\tscope: 'visitor',\n\t\tenabled: canViewCustomFields(),\n\t});\n\n\tconst initialValue = getInitialValues(data);\n\tconst { username: initialUsername } = initialValue;\n\n\tconst {\n\t\tregister,\n\t\tformState: { errors, isValid, isDirty, isSubmitting },\n\t\tcontrol,\n\t\tsetValue,\n\t\thandleSubmit,\n\t\tsetError,\n\t} = useForm<ContactFormData>({\n\t\tmode: 'onChange',\n\t\treValidateMode: 'onChange',\n\t\tdefaultValues: initialValue,\n\t});\n\n\tuseEffect(() => {\n\t\tif (!initialUsername) {\n\t\t\treturn;\n\t\t}\n\n\t\tgetUserData({ username: initialUsername }).then(({ user }) => {\n\t\t\tsetUserId(user._id);\n\t\t});\n\t}, [getUserData, initialUsername]);\n\n\tconst validateEmailFormat = (email: string): boolean | string => {\n\t\tif (!email || email === initialValue.email) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (!validateEmail(email)) {\n\t\t\treturn t('error-invalid-email-address');\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tconst validateContactField = async (name: 'phone' | 'email', value: string, optional = true) => {\n\t\tif ((optional && !value) || value === initialValue[name]) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst query = { [name]: value } as Record<'phone' | 'email', string>;\n\t\tconst { contact } = await getContactBy(query);\n\t\treturn !contact || contact._id === id;\n\t};\n\n\tconst validateName = (v: string): string | boolean => (!v.trim() ? t('The_field_is_required', t('Name')) : true);\n\n\tconst handleContactManagerChange = async (userId: string): Promise<void> => {\n\t\tsetUserId(userId);\n\n\t\tif (userId === 'no-agent-selected') {\n\t\t\tsetValue('username', '', { shouldDirty: true });\n\t\t\treturn;\n\t\t}\n\n\t\tconst { user } = await getUserData({ userId });\n\t\tsetValue('username', user.username || '', { shouldDirty: true });\n\t};\n\n\tconst validateAsync = async ({ phone = '', email = '' } = {}) => {\n\t\tconst isEmailValid = await validateContactField('email', email);\n\t\tconst isPhoneValid = await validateContactField('phone', phone);\n\n\t\t!isEmailValid && setError('email', { message: t('Email_already_exists') });\n\t\t!isPhoneValid && setError('phone', { message: t('Phone_already_exists') });\n\n\t\treturn isEmailValid && isPhoneValid;\n\t};\n\n\tconst handleSave = async (data: ContactFormData): Promise<void> => {\n\t\tif (!(await validateAsync(data))) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { name, phone, email, customFields, username, token } = data;\n\n\t\tconst payload = {\n\t\t\tname,\n\t\t\tphone,\n\t\t\temail,\n\t\t\tcustomFields,\n\t\t\ttoken: token || createToken(),\n\t\t\t...(username && { contactManager: { username } }),\n\t\t\t...(id && { _id: id }),\n\t\t};\n\n\t\ttry {\n\t\t\tawait saveContact(payload);\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Saved') });\n\t\t\tawait queryClient.invalidateQueries({ queryKey: ['current-contacts'] });\n\t\t\tclose();\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t};\n\n\tif (isLoadingCustomFields) {\n\t\treturn (\n\t\t\t<ContextualbarContent>\n\t\t\t\t<FormSkeleton />\n\t\t\t</ContextualbarContent>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<ContextualbarScrollableContent is='form' onSubmit={handleSubmit(handleSave)}>\n\t\t\t\t<Field>\n\t\t\t\t\t<FieldLabel>{t('Name')}*</FieldLabel>\n\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t<TextInput {...register('name', { validate: validateName })} error={errors.name?.message} flexGrow={1} />\n\t\t\t\t\t</FieldRow>\n\t\t\t\t\t<FieldError>{errors.name?.message}</FieldError>\n\t\t\t\t</Field>\n\t\t\t\t<Field>\n\t\t\t\t\t<FieldLabel>{t('Email')}</FieldLabel>\n\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t<TextInput {...register('email', { validate: validateEmailFormat })} error={errors.email?.message} flexGrow={1} />\n\t\t\t\t\t</FieldRow>\n\t\t\t\t\t<FieldError>{errors.email?.message}</FieldError>\n\t\t\t\t</Field>\n\t\t\t\t<Field>\n\t\t\t\t\t<FieldLabel>{t('Phone')}</FieldLabel>\n\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t<TextInput {...register('phone')} error={errors.phone?.message} flexGrow={1} />\n\t\t\t\t\t</FieldRow>\n\t\t\t\t\t<FieldError>{errors.phone?.message}</FieldError>\n\t\t\t\t</Field>\n\t\t\t\t{canViewCustomFields() && <CustomFieldsForm formName='customFields' formControl={control} metadata={customFieldsMetadata} />}\n\t\t\t\t<ContactManagerForm value={userId} handler={handleContactManagerChange} />\n\t\t\t</ContextualbarScrollableContent>\n\t\t\t<ContextualbarFooter>\n\t\t\t\t<ButtonGroup stretch>\n\t\t\t\t\t<Button flexGrow={1} onClick={close}>\n\t\t\t\t\t\t{t('Cancel')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tmie='none'\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tonClick={handleSubmit(handleSave)}\n\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\tloading={isSubmitting}\n\t\t\t\t\t\tdisabled={!isValid || !isDirty}\n\t\t\t\t\t\tprimary\n\t\t\t\t\t>\n\t\t\t\t\t\t{t('Save')}\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</ContextualbarFooter>\n\t\t</>\n\t);\n};\n\nexport default ContactNewEdit;\n",null],"names":["module","link","default","v","_regeneratorRuntime","_extends","_objectSpread","_slicedToArray","Field","FieldLabel","FieldRow","FieldError","TextInput","ButtonGroup","Button","ContextualbarContent","CustomFieldsForm","useToastMessageDispatch","useEndpoint","useTranslation","useQueryClient","React","useState","useEffect","useForm","hasAtLeastOnePermission","validateEmail","ContextualbarScrollableContent","ContextualbarFooter","createToken","ContactManager","ContactManagerForm","FormSkeleton","useCustomFieldsMetadata","DEFAULT_VALUES","token","name","email","phone","username","customFields","getInitialValues","data","_data$contact","_contactManager$usern","_ref","contact","visitorEmails","livechatData","contactManager","address","phoneNumber","exportDefault","_ref2","_errors$name","_errors$name2","_errors$email","_errors$email2","_errors$phone","_errors$phone2","id","close","t","dispatchToastMessage","queryClient","canViewCustomFields","_useState2","userId","setUserId","saveContact","getContactBy","getUserData","_useCustomFieldsMetad","scope","enabled","_useCustomFieldsMetad2","isLoadingCustomFields","isInitialLoading","initialValue","initialUsername","_useForm","mode","reValidateMode","defaultValues","register","_useForm$formState","formState","errors","isValid","isDirty","isSubmitting","control","setValue","handleSubmit","setError","then","_ref3","user","_id","validateContactField","value","_query","query","_args","arguments","async","_context","prev","next","optional","length","undefined","abrupt","awrap","_await$getContactBy","sent","stop","Promise","validateAsync","_ref4","_ref4$phone","_ref4$email","isEmailValid","isPhoneValid","_args3","_context3","message","handleSave","payload","_context4","type","invalidateQueries","queryKey","t0","createElement","Fragment","is","onSubmit","validate","trim","error","flexGrow","formName","formControl","metadata","handler","_context2","shouldDirty","_await$getUserData","stretch","onClick","mie","loading","disabled","primary"],"mappings":"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"}