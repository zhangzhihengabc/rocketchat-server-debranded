)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/customEmoji/EditCustomEmojiWithData.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Callout } from '@rocket.chat/fuselage';\nimport { useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport type { FC } from 'react';\nimport React, { useMemo } from 'react';\n\nimport { FormSkeleton } from '../../../components/Skeleton';\nimport EditCustomEmoji from './EditCustomEmoji';\n\ntype EditCustomEmojiWithDataProps = {\n\t_id: string;\n\tclose: () => void;\n\tonChange: () => void;\n};\n\nconst EditCustomEmojiWithData: FC<EditCustomEmojiWithDataProps> = ({ _id, onChange, close, ...props }) => {\n\tconst t = useTranslation();\n\tconst query = useMemo(() => ({ query: JSON.stringify({ _id }) }), [_id]);\n\n\tconst getEmojis = useEndpoint('GET', '/v1/emoji-custom.list');\n\n\tconst { data, isLoading, error, refetch } = useQuery(['custom-emojis', query], async () => {\n\t\tconst emoji = await getEmojis(query);\n\t\treturn emoji;\n\t});\n\n\tif (isLoading) {\n\t\treturn <FormSkeleton pi={20} />;\n\t}\n\n\tif (error || !data || !data.emojis || data.emojis.update.length < 1) {\n\t\treturn <Callout title={t('Custom_Emoji_Error_Invalid_Emoji')} type='danger' />;\n\t}\n\n\tconst handleChange = (): void => {\n\t\tonChange?.();\n\t\trefetch?.();\n\t};\n\n\treturn <EditCustomEmoji data={data.emojis.update[0]} close={close} onChange={handleChange} {...props} />;\n};\n\nexport default EditCustomEmojiWithData;\n",null],"names":["_regeneratorRuntime","_extends","_objectWithoutProperties","Callout","useEndpoint","useTranslation","useQuery","React","useMemo","FormSkeleton","EditCustomEmoji","module","default","link","v","exportDefault","_ref","_id","onChange","close","props","_excluded","t","query","JSON","stringify","getEmojis","_useQuery","emoji","async","_context","prev","next","awrap","sent","abrupt","stop","Promise","data","isLoading","error","refetch","createElement","pi","emojis","update","length","title","type"],"mappings":"2BAAAA,EAAgDC,EAAAC,EAAhDC,EAAgDC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,+BAAxBC,EAAAA,IAAAA,CAAAA,6BAAwB,CAAAC,QAAAA,SAAAA,CAAAA,EAAAZ,EAAAA,CAAA,CAAA,EAAA,GAAAW,EAAAA,IAAAA,CAAAA,iCAAAA,CAAAC,QAAAA,SAAAA,CAAAA,EAAAX,EAAAA,CAAA,CAAA,EAAA,GAAAU,EAAAA,IAAAA,CAAAA,iDAAAA,CAAAC,QAAAA,SAAAA,CAAAA,EAAAV,EAAAA,CAAA,CAAA,EAAA,GAAvCS,EAASE,IAAA,CAAM,wBAAwB,CAAAV,QAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAQ,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAP,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAM,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAL,SAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,QAAAA,CAAA,QAAA,SAAAG,CAAA,EAAAP,EAAAA,CAAA,EAAAC,QAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,+BAAAA,CAAAF,aAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,oBAAAA,CAAA,QAAA,SAAAG,CAAA,EAAAJ,EAAAA,CAAA,CAAA,EAAA,GAAhDC,EAAOI,aAAW,CAegD,SAAAC,CAAA,EAAuC,IAApCC,EAAGD,EAAHC,GAAG,CAAEC,EAAQF,EAARE,QAAQ,CAAEC,EAAKH,EAALG,KAAK,CAAKC,EAAKlB,EAAAc,EAAAK,GAC5FC,EAAIjB,IACJkB,EAAQf,EAAQ,WAAA,MAAO,CAAEe,MAAOC,KAAKC,SAAS,CAAC,CAAER,IAAAA,CAAG,EAAG,CAAE,EAAG,CAACA,EAAI,EAEjES,EAAYtB,EAAY,MAAO,yBAErCuB,EAA4CrB,EAAS,CAAC,gBAAiBiB,EAAM,CAAE,WAAA,IAAAK,EAAA,OAAA5B,EAAA6B,KAAA,CAAA,SAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAC,IAAA,CAAAD,EAAAE,IAAA,EAAA,KAAA,EAAA,OAAAF,EAAAE,IAAA,CAAA,EAAAhC,EAAAiC,KAAA,CAC1DP,EAAUH,GAAM,MAAA,EAAzB,OAALK,EAAKE,EAAAI,IAAA,CAAAJ,EAAAK,MAAA,CAAA,SACJP,EAAK,MAAA,EAAA,IAAA,MAAA,OAAAE,EAAAM,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,KAAAC,QAAA,GAFLC,EAAIX,EAAJW,IAAI,CAAEC,EAASZ,EAATY,SAAS,CAAEC,EAAKb,EAALa,KAAK,CAAEC,EAAOd,EAAPc,OAAO,QAKvC,AAAIF,EACIhC,EAAAmC,aAAA,CAACjC,EAAY,CAACkC,GAAI,EAAG,GAGzBH,GAAS,CAACF,GAAQ,CAACA,EAAKM,MAAM,EAAIN,EAAKM,MAAM,CAACC,MAAM,CAACC,MAAM,CAAG,EAC1DvC,EAAAmC,aAAA,CAACvC,EAAO,CAAC4C,MAAOzB,EAAE,oCAAqC0B,KAAK,QAAQ,GAQrEzC,EAAAmC,aAAA,CAAChC,EAAeT,EAAA,CAACqC,KAAMA,EAAKM,MAAM,CAACC,MAAM,CAAC,EAAG,CAAC1B,MAAOA,EAAOD,SAL9C,WACpBA,MAAAA,GAAAA,IACAuB,MAAAA,GAAAA,GACD,CAE0F,EAAKrB,GAChG"}