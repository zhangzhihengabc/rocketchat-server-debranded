)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/settings/groups/LDAPGroupPage.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { ISetting } from '@rocket.chat/core-typings';\nimport { Button, Box, TextInput, Field, FieldLabel, FieldRow } from '@rocket.chat/fuselage';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useSetModal, useToastMessageDispatch, useSetting, useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport type { FormEvent } from 'react';\nimport React, { memo, useMemo } from 'react';\n\nimport GenericModal from '../../../../components/GenericModal';\nimport { useExternalLink } from '../../../../hooks/useExternalLink';\nimport { useEditableSettings } from '../../EditableSettingsContext';\nimport TabbedGroupPage from './TabbedGroupPage';\n\nfunction LDAPGroupPage({ _id, ...group }: ISetting): JSX.Element {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst testConnection = useEndpoint('POST', '/v1/ldap.testConnection');\n\tconst syncNow = useEndpoint('POST', '/v1/ldap.syncNow');\n\tconst testSearch = useEndpoint('POST', '/v1/ldap.testSearch');\n\tconst ldapEnabled = useSetting('LDAP_Enable');\n\tconst setModal = useSetModal();\n\tconst closeModal = useMutableCallback(() => setModal());\n\n\tconst handleLinkClick = useExternalLink();\n\n\tconst editableSettings = useEditableSettings(\n\t\tuseMemo(\n\t\t\t() => ({\n\t\t\t\tgroup: _id,\n\t\t\t}),\n\t\t\t[_id],\n\t\t),\n\t);\n\n\tconst changed = useMemo(() => editableSettings.some(({ changed }) => changed), [editableSettings]);\n\n\tconst handleTestConnectionButtonClick = async (): Promise<void> => {\n\t\ttry {\n\t\t\tconst { message } = await testConnection();\n\t\t\tdispatchToastMessage({ type: 'success', message: t(message as Parameters<typeof t>[0]) });\n\t\t} catch (error) {\n\t\t\terror instanceof Error && dispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t};\n\n\tconst handleSyncNowButtonClick = async (): Promise<void> => {\n\t\ttry {\n\t\t\tawait testConnection();\n\t\t\tconst confirmSync = async (): Promise<void> => {\n\t\t\t\tcloseModal();\n\n\t\t\t\ttry {\n\t\t\t\t\tconst { message } = await syncNow();\n\t\t\t\t\tdispatchToastMessage({ type: 'success', message: t(message as Parameters<typeof t>[0]) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\terror instanceof Error && dispatchToastMessage({ type: 'error', message: error });\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tsetModal(\n\t\t\t\t<GenericModal\n\t\t\t\t\tvariant='info'\n\t\t\t\t\tconfirmText={t('Sync')}\n\t\t\t\t\tcancelText={t('Cancel')}\n\t\t\t\t\ttitle={t('Execute_Synchronization_Now')}\n\t\t\t\t\tonConfirm={confirmSync}\n\t\t\t\t\tonClose={closeModal}\n\t\t\t\t>\n\t\t\t\t\t{t('LDAP_Sync_Now_Description')}\n\t\t\t\t</GenericModal>,\n\t\t\t);\n\t\t} catch (error) {\n\t\t\terror instanceof Error && dispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t};\n\n\tconst handleSearchTestButtonClick = async (): Promise<void> => {\n\t\ttry {\n\t\t\tawait testConnection();\n\t\t\tlet username = '';\n\t\t\tconst handleChangeUsername = (event: FormEvent<HTMLInputElement>): void => {\n\t\t\t\tusername = event.currentTarget.value;\n\t\t\t};\n\n\t\t\tconst confirmSearch = async (): Promise<void> => {\n\t\t\t\ttry {\n\t\t\t\t\tconst { message } = await testSearch({ username });\n\t\t\t\t\tdispatchToastMessage({ type: 'success', message: t(message as Parameters<typeof t>[0]) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\terror instanceof Error && dispatchToastMessage({ type: 'error', message: error });\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tsetModal(\n\t\t\t\t<GenericModal\n\t\t\t\t\twrapperFunction={(props) => (\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tis='form'\n\t\t\t\t\t\t\tonSubmit={(e: FormEvent) => {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tconfirmSearch();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\tvariant='info'\n\t\t\t\t\tconfirmText={t('Search')}\n\t\t\t\t\tcancelText={t('Cancel')}\n\t\t\t\t\ttitle={t('Test_LDAP_Search')}\n\t\t\t\t\tonClose={closeModal}\n\t\t\t\t>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<Box display='flex'>\n\t\t\t\t\t\t\t<FieldLabel>{t('LDAP_Username_To_Search')}</FieldLabel>\n\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t<TextInput onChange={handleChangeUsername} />\n\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t</Field>\n\t\t\t\t</GenericModal>,\n\t\t\t);\n\t\t} catch (error) {\n\t\t\terror instanceof Error && dispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t};\n\n\treturn (\n\t\t<TabbedGroupPage\n\t\t\t_id={_id}\n\t\t\t{...group}\n\t\t\theaderButtons={\n\t\t\t\t<>\n\t\t\t\t\t<Button children={t('Test_Connection')} disabled={!ldapEnabled || changed} onClick={handleTestConnectionButtonClick} />\n\t\t\t\t\t<Button children={t('Test_LDAP_Search')} disabled={!ldapEnabled || changed} onClick={handleSearchTestButtonClick} />\n\t\t\t\t\t<Button children={t('LDAP_Sync_Now')} disabled={!ldapEnabled || changed} onClick={handleSyncNowButtonClick} />\n\t\t\t\t\t<Button role='link' onClick={() => handleLinkClick('https://go.rocket.chat/i/ldap-docs')}>\n\t\t\t\t\t\t{t('LDAP_Documentation')}\n\t\t\t\t\t</Button>\n\t\t\t\t</>\n\t\t\t}\n\t\t/>\n\t);\n}\n\nexport default memo(LDAPGroupPage);\n",null],"names":["_regeneratorRuntime","_extends","_objectWithoutProperties","Button","Box","TextInput","Field","FieldLabel","FieldRow","useMutableCallback","useSetModal","useToastMessageDispatch","useSetting","useEndpoint","useTranslation","React","memo","useMemo","GenericModal","useExternalLink","useEditableSettings","TabbedGroupPage","module","link","default","v","exportDefault","_ref","_id","group","_excluded","t","dispatchToastMessage","testConnection","syncNow","testSearch","ldapEnabled","setModal","closeModal","handleLinkClick","editableSettings","changed","some","_ref2","createElement","headerButtons","Fragment","children","disabled","onClick","async","_context","prev","next","awrap","type","message","_await$testConnection","sent","t0","Error","stop","Promise","username","handleChangeUsername","_context5","event","currentTarget","value","wrapperFunction","props","is","onSubmit","e","preventDefault","_callee4$","_context4","_await$testSearch","variant","confirmText","cancelText","title","onClose","display","onChange","confirmSync","_context3","_callee2","_callee2$","_context2","_await$syncNow","onConfirm","role"],"mappings":"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"}