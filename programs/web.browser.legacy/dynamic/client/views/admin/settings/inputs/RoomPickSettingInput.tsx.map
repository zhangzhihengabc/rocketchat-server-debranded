)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/settings/inputs/RoomPickSettingInput.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { SettingValueRoomPick } from '@rocket.chat/core-typings';\nimport { Box, FieldLabel, FieldRow, Flex } from '@rocket.chat/fuselage';\nimport type { ReactElement } from 'react';\nimport React from 'react';\n\nimport RoomAutoCompleteMultiple from '../../../../components/RoomAutoCompleteMultiple';\nimport ResetSettingButton from '../ResetSettingButton';\n\ntype RoomPickSettingInputProps = {\n\t_id: string;\n\tlabel: string;\n\tvalue?: SettingValueRoomPick | '';\n\tplaceholder?: string;\n\treadonly?: boolean;\n\tdisabled?: boolean;\n\thasResetButton?: boolean;\n\tonChangeValue: (value: SettingValueRoomPick) => void;\n\tonResetButtonClick?: () => void;\n};\n\nfunction RoomPickSettingInput({\n\t_id,\n\tlabel,\n\tvalue,\n\tplaceholder,\n\treadonly,\n\tdisabled,\n\thasResetButton,\n\tonChangeValue,\n\tonResetButtonClick,\n}: RoomPickSettingInputProps): ReactElement {\n\tconst parsedValue = (value || []).map(({ _id }) => _id);\n\n\tconst handleChange = (value: string | string[]) => {\n\t\tif (typeof value === 'object') {\n\t\t\tconst newValue = value.map((currentValue: string) => ({ _id: currentValue }));\n\t\t\tonChangeValue(newValue);\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Flex.Container>\n\t\t\t\t<Box>\n\t\t\t\t\t<FieldLabel htmlFor={_id} title={_id}>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t{hasResetButton && <ResetSettingButton data-qa-reset-setting-id={_id} onClick={onResetButtonClick} />}\n\t\t\t\t</Box>\n\t\t\t</Flex.Container>\n\t\t\t<FieldRow>\n\t\t\t\t<RoomAutoCompleteMultiple\n\t\t\t\t\treadOnly={readonly}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tvalue={parsedValue}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t</FieldRow>\n\t\t</>\n\t);\n}\n\nexport default RoomPickSettingInput;\n",null],"names":["_typeof","Box","FieldLabel","FieldRow","Flex","React","RoomAutoCompleteMultiple","ResetSettingButton","module","link","default","v","exportDefault","_ref","_id","label","value","placeholder","readonly","disabled","hasResetButton","onChangeValue","onResetButtonClick","parsedValue","map","_ref2","createElement","Fragment","Container","htmlFor","title","onClick","readOnly","onChange","currentValue"],"mappings":"2BACAA,EAAAC,EAAOC,EAAOC,EAAYC,EAA8CC,EAAAC,EAAAC,EAA5DC,EAAEC,IAAA,CAAU,gCAAwB,CAAAC,QAAAA,SAAwBC,CAAAA,EAAAX,EAAAA,CAAA,CAAA,EAAA,GAA9CQ,EAAcC,IAAE,CAAA,wBAAM,CAAAR,IAAwB,SAAAU,CAAA,EAAAV,EAAAA,CAAA,EAAAC,WAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,SAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,KAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,QAAAA,CAAA,QAAA,SAAAG,CAAA,EAAAN,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,kDAAAA,CAAA,QAAA,SAAAG,CAAA,EAAAL,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,wBAAAA,CAAA,QAAA,SAAAG,CAAA,EAAAJ,EAAAA,CAAA,CAAA,EAAA,GAAxEC,EAAOI,aAAO,CAmBd,SAA6BC,CAAA,EAUD,IAT3BC,EAAGD,EAAHC,GAAG,CACHC,EAAKF,EAALE,KAAK,CACLC,EAAKH,EAALG,KAAK,CACLC,EAAWJ,EAAXI,WAAW,CACXC,EAAQL,EAARK,QAAQ,CACRC,EAAQN,EAARM,QAAQ,CACRC,EAAcP,EAAdO,cAAc,CACdC,EAAaR,EAAbQ,aAAa,CACbC,EAAkBT,EAAlBS,kBAAkB,CAEZC,EAAc,AAACP,CAAAA,GAAS,EAAE,AAAF,EAAIQ,GAAG,CAAC,SAAAC,CAAA,EAAM,OAAAA,EAAHX,GAAG,AAAU,GAStD,OACCT,EAAAqB,aAAA,CAAArB,EAAAsB,QAAA,CAAA,KACCtB,EAAAqB,aAAA,CAACtB,EAAKwB,SAAS,CAAA,KACdvB,EAAAqB,aAAA,CAACzB,EAAG,KACHI,EAAAqB,aAAA,CAACxB,EAAU,CAAC2B,QAASf,EAAKgB,MAAOhB,CAAI,EACnCC,GAEDK,GAAkBf,EAAAqB,aAAA,CAACnB,EAAkB,CAAC,2BAA0BO,EAAKiB,QAAST,CAAmB,KAGpGjB,EAAAqB,aAAA,CAACvB,EAAQ,KACRE,EAAAqB,aAAA,CAACpB,EAAwB,CACxB0B,SAAUd,EACVD,YAAaA,EACbE,SAAUA,EACVH,MAAOO,EACPU,SAvBiB,SAACjB,CAAwB,EACxB,WAAjBhB,EAAOgB,IAEVK,EADiBL,EAAMQ,GAAG,CAAC,SAACU,CAAoB,EAAA,MAAM,CAAEpB,IAAKoB,CAAY,CAAE,GAG7E,CAkB2B,IAK5B"}