)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/settings/inputs/ActionSettingInput.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Button, FieldRow, FieldHint } from '@rocket.chat/fuselage';\nimport type { ServerMethods, TranslationKey } from '@rocket.chat/ui-contexts';\nimport { useMethod, useToastMessageDispatch, useTranslation } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React from 'react';\n\ntype ActionSettingInputProps = {\n\t_id: string;\n\tactionText: TranslationKey;\n\tvalue: keyof ServerMethods;\n\tdisabled: boolean;\n\tsectionChanged: boolean;\n};\nfunction ActionSettingInput({ _id, actionText, value, disabled, sectionChanged }: ActionSettingInputProps): ReactElement {\n\tconst t = useTranslation();\n\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst actionMethod = useMethod(value);\n\n\tconst handleClick = async (): Promise<void> => {\n\t\ttry {\n\t\t\tconst data: { message: TranslationKey; params: string[] } = await actionMethod();\n\n\t\t\tdispatchToastMessage({ type: 'success', message: t(data.message, ...data.params) });\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<FieldRow>\n\t\t\t\t<Button data-qa-setting-id={_id} disabled={disabled || sectionChanged} primary onClick={handleClick}>\n\t\t\t\t\t{t(actionText)}\n\t\t\t\t</Button>\n\t\t\t</FieldRow>\n\t\t\t{sectionChanged && <FieldHint>{t('Save_to_enable_this_action')}</FieldHint>}\n\t\t</>\n\t);\n}\n\nexport default ActionSettingInput;\n",null],"names":["_regeneratorRuntime","_toConsumableArray","Button","FieldRow","FieldHint","useMethod","useToastMessageDispatch","useTranslation","React","module","link","default","v","exportDefault","_ref","_id","actionText","value","disabled","sectionChanged","t","dispatchToastMessage","actionMethod","createElement","Fragment","primary","onClick","data","async","_context","prev","next","awrap","sent","type","message","apply","concat","params","t0","stop","Promise"],"mappings":"2BAAAA,EAAoEC,EAApEC,EAASC,EAAQC,EAAmDC,EAAAC,EAAAC,EAAAC,EAAnDC,EAAUC,IAAA,CAAS,6BAAQ,CAAAC,QAAwB,SAAAC,CAAA,EAAAZ,EAAAA,CAAA,CAAA,EAAA,GAAAS,EAAAA,IAAAA,CAAAA,2CAAAA,CAAAE,QAAAA,SAAAA,CAAAA,EAAAV,EAAAA,CAAA,CAAA,EAAA,GAAzCQ,EAASC,IAAE,CAAA,wBAAM,CAAuBR,OAAC,SAAAU,CAAA,EAAAV,EAAAA,CAAA,EAAAC,SAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,UAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAJ,UAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,wBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,QAAAA,CAAA,QAAA,SAAAG,CAAA,EAAAJ,EAAAA,CAAA,CAAA,EAAA,GAApEC,EAAOI,aAAU,CAajB,SAA2BC,CAAA,EAA8E,IAA3EC,EAAGD,EAAHC,GAAG,CAAEC,EAAUF,EAAVE,UAAU,CAAEC,EAAKH,EAALG,KAAK,CAAEC,EAAQJ,EAARI,QAAQ,CAAEC,EAAcL,EAAdK,cAAc,CACvEC,EAAIb,IAEJc,EAAuBf,IACvBgB,EAAejB,EAAUY,GAY/B,OACCT,EAAAe,aAAA,CAAAf,EAAAgB,QAAA,CAAA,KACChB,EAAAe,aAAA,CAACpB,EAAQ,KACRK,EAAAe,aAAA,CAACrB,EAAM,CAAC,qBAAoBa,EAAKG,SAAUA,GAAYC,EAAgBM,QAAO,CAAA,EAACC,QAb9D,WAAA,IAAAC,EAAA,OAAA3B,EAAA4B,KAAA,CAAA,SAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAC,IAAA,CAAAD,EAAAE,IAAA,EAAA,KAAA,EAAA,OAAAF,EAAAC,IAAA,CAAA,EAAAD,EAAAE,IAAA,CAAA,EAAA/B,EAAAgC,KAAA,CAEgDV,IAAc,MAAA,EAA1EK,EAAIE,EAAAI,IAAA,CAEVZ,EAAqB,CAAEa,KAAM,UAAWC,QAASf,EAACgB,KAAA,CAAA,KAAA,EAAA,CAACT,EAAKQ,OAAO,CAAA,CAAAE,MAAA,CAAApC,EAAK0B,EAAKW,MAAM,GAAC,GAAIT,EAAAE,IAAA,CAAA,GAAA,KAAA,MAAA,EAAAF,EAAAC,IAAA,CAAA,EAAAD,EAAAU,EAAA,CAAAV,EAAA,KAAA,CAAA,GAEpFR,EAAqB,CAAEa,KAAM,QAASC,QAAON,EAAAU,EAAA,AAAO,EAAI,MAAA,GAAA,IAAA,MAAA,OAAAV,EAAAW,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAAC,QAAA,CAO6C,EAClGrB,EAAEJ,KAGJG,GAAkBX,EAAAe,aAAA,CAACnB,EAAS,KAAEgB,EAAE,+BAGpC"}