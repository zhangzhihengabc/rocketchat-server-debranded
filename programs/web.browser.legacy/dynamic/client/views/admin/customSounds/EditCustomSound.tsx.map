)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/customSounds/EditCustomSound.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useEndpoint, useToastMessageDispatch, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport type { ReactElement } from 'react';\nimport React from 'react';\n\nimport { FormSkeleton } from '../../../components/Skeleton';\nimport EditSound from './EditSound';\n\ntype EditCustomSoundProps = {\n\t_id: string | undefined;\n\tonChange?: () => void;\n\tclose?: () => void;\n};\n\nfunction EditCustomSound({ _id, onChange, ...props }: EditCustomSoundProps): ReactElement | null {\n\tconst t = useTranslation();\n\tconst getSounds = useEndpoint('GET', '/v1/custom-sounds.list');\n\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst { data, isLoading, refetch } = useQuery(\n\t\t['custom-sounds', _id],\n\t\tasync () => {\n\t\t\tconst { sounds } = await getSounds({ query: JSON.stringify({ _id }) });\n\n\t\t\tif (sounds.length === 0) {\n\t\t\t\tthrow new Error(t('No_results_found'));\n\t\t\t}\n\t\t\treturn sounds[0];\n\t\t},\n\t\t{\n\t\t\tonError: (error) => {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t},\n\t\t},\n\t);\n\n\tif (isLoading) {\n\t\treturn <FormSkeleton pi={20} />;\n\t}\n\n\tif (!data) {\n\t\treturn null;\n\t}\n\n\tconst handleChange: () => void = () => {\n\t\tonChange?.();\n\t\trefetch?.();\n\t};\n\n\treturn <EditSound data={data} onChange={handleChange} {...props} />;\n}\n\nexport default EditCustomSound;\n",null],"names":["_regeneratorRuntime","_extends","_objectWithoutProperties","useEndpoint","useToastMessageDispatch","useTranslation","useQuery","React","FormSkeleton","EditSound","module","default","v","link","exportDefault","_ref","_id","onChange","props","_excluded","t","getSounds","dispatchToastMessage","_useQuery","sounds","async","_context","prev","next","awrap","query","JSON","stringify","_await$getSounds","sent","length","Error","abrupt","stop","Promise","onError","error","type","message","data","isLoading","refetch","createElement","pi"],"mappings":"2BAAAA,EAAgGC,EAAAC,EAAhGC,EAASC,EAAaC,EAA0EC,EAAAC,EAAAC,EAAAC,uBAA1EC,EAAAA,IAAAA,CAAAA,6BAAyC,CAAAC,QAAM,SAAAC,CAAA,EAAAZ,EAA2BY,CAAA,CAAA,EAAA,GAAAF,EAAAA,IAAAA,CAAAA,iCAAAA,CAAAC,QAAAA,SAAAA,CAAAA,EAAAV,EAAAA,CAAA,CAAA,EAAA,GAAAS,EAAAA,IAAAA,CAAAA,iDAAAA,CAAAC,QAAAA,SAAAA,CAAAA,EAAAT,EAAAA,CAAA,CAAA,EAAA,GAAjDQ,EAAcG,IAAE,CAAA,2BAAM,CAA0BV,YAAC,SAAAS,CAAA,EAAAT,EAAAA,CAAA,EAAAC,wBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAJ,SAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,QAAAA,CAAA,QAAA,SAAAE,CAAA,EAAAL,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,+BAAAA,CAAAF,aAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,cAAAA,CAAA,QAAA,SAAAE,CAAA,EAAAH,EAAAA,CAAA,CAAA,EAAA,GAAhGC,EAAOI,aAAa,CAcpB,SAAwBC,CAAA,EAAkD,IAA/CC,EAAGD,EAAHC,GAAG,CAAEC,EAAQF,EAARE,QAAQ,CAAKC,EAAKhB,EAAAa,EAAAI,GAC3CC,EAAIf,IACJgB,EAAYlB,EAAY,MAAO,0BAE/BmB,EAAuBlB,IAE7BmB,EAAqCjB,EACpC,CAAC,gBAAiBU,EAAI,CACtB,WAAA,IAAAQ,EAAA,OAAAxB,EAAAyB,KAAA,CAAA,SAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAC,IAAA,CAAAD,EAAAE,IAAA,EAAA,KAAA,EAAA,OAAAF,EAAAE,IAAA,CAAA,EAAA5B,EAAA6B,KAAA,CAC0BR,EAAU,CAAES,MAAOC,KAAKC,SAAS,CAAC,CAAEhB,IAAAA,CAAG,EAAG,GAAG,MAAA,EAAxD,GAAA,AAEQ,IAAlBQ,AAFIA,CAAAA,EAAMS,AAAwDP,EAAAQ,IAAA,CAA9DV,MAAM,AAANA,EAEGW,MAAM,CAAM,CAAAT,EAAAE,IAAA,CAAA,EAAA,KAAA,CAAA,MAChB,AAAIQ,MAAMhB,EAAE,oBAAoB,MAAA,EAAA,OAAAM,EAAAW,MAAA,CAAA,SAEhCb,CAAM,CAAC,EAAE,CAAA,MAAA,EAAA,IAAA,MAAA,OAAAE,EAAAY,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,KAAAC,QAAA,EAEjB,CACCC,QAAS,SAACC,CAAK,EACdnB,EAAqB,CAAEoB,KAAM,QAASC,QAASF,CAAK,EACrD,IAbMG,EAAIrB,EAAJqB,IAAI,CAAEC,EAAStB,EAATsB,SAAS,CAAEC,EAAOvB,EAAPuB,OAAO,QAiBhC,AAAID,EACItC,EAAAwC,aAAA,CAACvC,EAAY,CAACwC,GAAI,EAAG,GAGxBJ,EASErC,EAAAwC,aAAA,CAACtC,EAASR,EAAA,CAAC2C,KAAMA,EAAM3B,SALG,WAChCA,MAAAA,GAAAA,IACA6B,MAAAA,GAAAA,GACD,CAEqD,EAAK5B,IARlD,IAST"}