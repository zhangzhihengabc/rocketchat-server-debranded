)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/subscription/hooks/useWorkspaceSync.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useEndpoint, useToastMessageDispatch } from '@rocket.chat/ui-contexts';\nimport { useMutation } from '@tanstack/react-query';\nimport { useTranslation } from 'react-i18next';\n\nexport const useWorkspaceSync = () => {\n\tconst { t } = useTranslation();\n\tconst cloudSync = useEndpoint('POST', '/v1/cloud.syncWorkspace');\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\treturn useMutation({\n\t\tmutationFn: () => cloudSync(),\n\t\tonSuccess: () => {\n\t\t\tdispatchToastMessage({\n\t\t\t\ttype: 'success',\n\t\t\t\tmessage: t('Sync_success'),\n\t\t\t});\n\t\t},\n\t\tonError: (error) => {\n\t\t\tdispatchToastMessage({\n\t\t\t\ttype: 'error',\n\t\t\t\tmessage: error,\n\t\t\t});\n\t\t},\n\t});\n};\n",null],"names":["module","export","useWorkspaceSync","useEndpoint","useToastMessageDispatch","useMutation","useTranslation","t","_useTranslation","cloudSync","dispatchToastMessage","mutationFn","onSuccess","type","message","onError","error"],"mappings":"uBAAAA,EAAOC,MAAE,CAAA,CAAAC,iBAAa,WAAA,OAAyBA,CAAM,CAAA,GAA2BF,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAG,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,wBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAJ,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAK,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAL,EAAAA,IAAAA,CAAAA,gBAAAA,CAAAM,eAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAIzE,IAJ8CH,EAA2BC,EAAAC,EAAAC,EAInEJ,EAAmB,WAC/B,IAAQK,EAACC,AAAKF,IAANC,CAAC,CACHE,EAAYN,EAAY,OAAQ,2BAChCO,EAAuBN,IAE7B,OAAOC,EAAY,CAClBM,WAAY,WAAA,OAAMF,GAAW,EAC7BG,UAAW,WACVF,EAAqB,CACpBG,KAAM,UACNC,QAASP,EAAE,iBAEb,EACAQ,QAAS,SAACC,CAAK,EACdN,EAAqB,CACpBG,KAAM,QACNC,QAASE,GAEX,GAEF"}