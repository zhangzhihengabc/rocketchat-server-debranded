)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/import/PrepareChannels.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { CheckBox, Table, Tag, Pagination, TableHead, TableRow, TableCell, TableBody } from '@rocket.chat/fuselage';\nimport { useTranslation } from '@rocket.chat/ui-contexts';\nimport type { FC, Dispatch, SetStateAction, ChangeEvent } from 'react';\nimport React, { useState, useCallback } from 'react';\n\ntype ChannelDescriptor = {\n\tchannel_id: string;\n\tname: string;\n\tis_archived: boolean;\n\tdo_import: boolean;\n};\n\ntype PrepareChannelsProps = {\n\tchannelsCount: number;\n\tchannels: ChannelDescriptor[];\n\tsetChannels: Dispatch<SetStateAction<ChannelDescriptor[]>>;\n};\n\nconst PrepareChannels: FC<PrepareChannelsProps> = ({ channels, channelsCount, setChannels }) => {\n\tconst t = useTranslation();\n\tconst [current, setCurrent] = useState(0);\n\tconst [itemsPerPage, setItemsPerPage] = useState<25 | 50 | 100>(25);\n\tconst showingResultsLabel = useCallback(\n\t\t({ count, current, itemsPerPage }) => t('Showing_results_of', current + 1, Math.min(current + itemsPerPage, count), count),\n\t\t[t],\n\t);\n\tconst itemsPerPageLabel = useCallback(() => t('Items_per_page:'), [t]);\n\n\tif (!channels.length) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Table>\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableCell width='x36'>\n\t\t\t\t\t\t\t<CheckBox\n\t\t\t\t\t\t\t\tchecked={channelsCount > 0}\n\t\t\t\t\t\t\t\tindeterminate={channelsCount > 0 && channelsCount !== channels.length}\n\t\t\t\t\t\t\t\tonChange={(): void => {\n\t\t\t\t\t\t\t\t\tsetChannels((channels) => {\n\t\t\t\t\t\t\t\t\t\tconst hasCheckedArchivedChannels = channels.some(({ is_archived, do_import }) => is_archived && do_import);\n\t\t\t\t\t\t\t\t\t\tconst isChecking = channelsCount === 0;\n\n\t\t\t\t\t\t\t\t\t\tif (isChecking) {\n\t\t\t\t\t\t\t\t\t\t\treturn channels.map((channel) => ({ ...channel, do_import: true }));\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (hasCheckedArchivedChannels) {\n\t\t\t\t\t\t\t\t\t\t\treturn channels.map((channel) => (channel.is_archived ? { ...channel, do_import: false } : channel));\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\treturn channels.map((channel) => ({ ...channel, do_import: false }));\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell is='th'>{t('Name')}</TableCell>\n\t\t\t\t\t\t<TableCell is='th' align='end'></TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t\t{channels.slice(current, current + itemsPerPage).map((channel) => (\n\t\t\t\t\t\t<TableRow key={channel.channel_id}>\n\t\t\t\t\t\t\t<TableCell width='x36'>\n\t\t\t\t\t\t\t\t<CheckBox\n\t\t\t\t\t\t\t\t\tchecked={channel.do_import}\n\t\t\t\t\t\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>): void => {\n\t\t\t\t\t\t\t\t\t\tconst { checked } = event.currentTarget;\n\t\t\t\t\t\t\t\t\t\tsetChannels((channels) =>\n\t\t\t\t\t\t\t\t\t\t\tchannels.map((_channel) => (_channel === channel ? { ..._channel, do_import: checked } : _channel)),\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>{channel.name}</TableCell>\n\t\t\t\t\t\t\t<TableCell align='end'>{channel.is_archived && <Tag variant='danger'>{t('Importer_Archived')}</Tag>}</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t))}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t\t<Pagination\n\t\t\t\tcurrent={current}\n\t\t\t\titemsPerPage={itemsPerPage}\n\t\t\t\titemsPerPageLabel={itemsPerPageLabel}\n\t\t\t\tshowingResultsLabel={showingResultsLabel}\n\t\t\t\tcount={channels.length || 0}\n\t\t\t\tonSetItemsPerPage={setItemsPerPage}\n\t\t\t\tonSetCurrent={setCurrent}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default PrepareChannels;\n",null],"names":["_objectSpread","_slicedToArray","CheckBox","Table","Tag","TableHead","TableRow","TableCell","TableBody","useTranslation","React","useState","useCallback","module","link","default","v","Pagination","exportDefault","_ref","channels","channelsCount","setChannels","t","_useState2","current","setCurrent","_useState4","itemsPerPage","setItemsPerPage","showingResultsLabel","_ref2","count","Math","min","itemsPerPageLabel","length","createElement","Fragment","width","checked","indeterminate","onChange","hasCheckedArchivedChannels","some","_ref3","is_archived","do_import","map","channel","is","align","slice","key","channel_id","event","currentTarget","_channel","name","variant","onSetItemsPerPage","onSetCurrent"],"mappings":"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"}