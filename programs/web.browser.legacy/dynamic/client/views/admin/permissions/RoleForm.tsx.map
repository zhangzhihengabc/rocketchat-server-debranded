)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/permissions/RoleForm.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { SelectOption } from '@rocket.chat/fuselage';\nimport { Box, Field, FieldLabel, FieldRow, FieldError, FieldHint, TextInput, Select, ToggleSwitch } from '@rocket.chat/fuselage';\nimport { useTranslation } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React, { useMemo } from 'react';\nimport { useFormContext, Controller } from 'react-hook-form';\n\ntype RoleFormProps = {\n\tclassName?: string;\n\tediting?: boolean;\n\tisProtected?: boolean;\n\tisDisabled?: boolean;\n};\n\nconst RoleForm = ({ className, editing = false, isProtected = false, isDisabled = false }: RoleFormProps): ReactElement => {\n\tconst t = useTranslation();\n\tconst {\n\t\tregister,\n\t\tcontrol,\n\t\tformState: { errors },\n\t} = useFormContext();\n\n\tconst options: SelectOption[] = useMemo(\n\t\t() => [\n\t\t\t['Users', t('Global')],\n\t\t\t['Subscriptions', t('Rooms')],\n\t\t],\n\t\t[t],\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Field className={className}>\n\t\t\t\t<FieldLabel>{t('Role')}</FieldLabel>\n\t\t\t\t<FieldRow>\n\t\t\t\t\t<TextInput disabled={editing || isDisabled} placeholder={t('Role')} {...register('name', { required: true })} />\n\t\t\t\t</FieldRow>\n\t\t\t\t{errors?.name && <FieldError>{t('error-the-field-is-required', { field: t('Role') })}</FieldError>}\n\t\t\t</Field>\n\t\t\t<Field className={className}>\n\t\t\t\t<FieldLabel>{t('Description')}</FieldLabel>\n\t\t\t\t<FieldRow>\n\t\t\t\t\t<TextInput placeholder={t('Description')} disabled={isDisabled} {...register('description')} />\n\t\t\t\t</FieldRow>\n\t\t\t\t<FieldHint>Leave the description field blank if you dont want to show the role</FieldHint>\n\t\t\t</Field>\n\t\t\t<Field className={className}>\n\t\t\t\t<FieldLabel>{t('Scope')}</FieldLabel>\n\t\t\t\t<FieldRow>\n\t\t\t\t\t<Controller\n\t\t\t\t\t\tname='scope'\n\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\trender={({ field }): ReactElement => (\n\t\t\t\t\t\t\t<Select {...field} options={options} disabled={isProtected || isDisabled} placeholder={t('Scope')} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t</FieldRow>\n\t\t\t</Field>\n\t\t\t<Field className={className}>\n\t\t\t\t<Box display='flex' flexDirection='row'>\n\t\t\t\t\t<FieldLabel>{t('Users must use Two Factor Authentication')}</FieldLabel>\n\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\tname='mandatory2fa'\n\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\trender={({ field }): ReactElement => <ToggleSwitch {...field} checked={field.value} disabled={isDisabled} />}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FieldRow>\n\t\t\t\t</Box>\n\t\t\t</Field>\n\t\t</>\n\t);\n};\n\nexport default RoleForm;\n",null],"names":["_extends","Box","Field","FieldLabel","FieldRow","FieldError","FieldHint","TextInput","Select","ToggleSwitch","useTranslation","React","useMemo","useFormContext","Controller","module","link","default","v","exportDefault","_ref","className","_ref$editing","editing","_ref$isProtected","isProtected","_ref$isDisabled","isDisabled","t","_useFormContext","register","control","errors","formState","options","createElement","Fragment","disabled","placeholder","required","name","field","render","_ref2","display","flexDirection","_ref3","checked","value"],"mappings":"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"}