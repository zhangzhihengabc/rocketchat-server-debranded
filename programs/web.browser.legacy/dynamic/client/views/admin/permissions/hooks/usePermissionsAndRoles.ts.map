)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/permissions/hooks/usePermissionsAndRoles.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRole, IPermission } from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport type { Mongo } from 'meteor/mongo';\nimport { useCallback } from 'react';\n\nimport { CONSTANTS } from '../../../../../app/authorization/lib';\nimport { ChatPermissions, Roles } from '../../../../../app/models/client';\nimport { useReactiveValue } from '../../../../hooks/useReactiveValue';\n\nexport const usePermissionsAndRoles = (\n\ttype = 'permissions',\n\tfilter = '',\n\tlimit = 25,\n\tskip = 0,\n): { permissions: IPermission[]; total: number; roleList: IRole[]; reload: () => void } => {\n\tconst getFilter = useCallback((): Mongo.Selector<IPermission> => {\n\t\tconst filterRegExp = new RegExp(escapeRegExp(filter), 'i');\n\n\t\treturn {\n\t\t\tlevel: type === 'permissions' ? { $ne: CONSTANTS.SETTINGS_LEVEL } : CONSTANTS.SETTINGS_LEVEL,\n\t\t\t_id: filterRegExp,\n\t\t};\n\t}, [type, filter]);\n\n\tconst getPermissions = useCallback(\n\t\t() =>\n\t\t\tChatPermissions.find(getFilter(), {\n\t\t\t\tsort: {\n\t\t\t\t\t_id: 1,\n\t\t\t\t},\n\t\t\t\tskip,\n\t\t\t\tlimit,\n\t\t\t}),\n\t\t[limit, skip, getFilter],\n\t);\n\tconst getTotalPermissions = useCallback(() => ChatPermissions.find(getFilter()).count(), [getFilter]);\n\n\tconst permissions = useReactiveValue(getPermissions);\n\tconst permissionsTotal = useReactiveValue(getTotalPermissions);\n\tconst getRoles = useMutableCallback(() => Roles.find().fetch());\n\tconst roles = useReactiveValue(getRoles);\n\n\treturn { permissions: permissions.fetch(), total: permissionsTotal, roleList: roles, reload: getRoles };\n};\n",null],"names":["module","export","usePermissionsAndRoles","useMutableCallback","escapeRegExp","useCallback","CONSTANTS","ChatPermissions","Roles","useReactiveValue","type","arguments","length","undefined","filter","limit","skip","getFilter","filterRegExp","RegExp","level","$ne","SETTINGS_LEVEL","_id","getPermissions","find","sort","getTotalPermissions","count","permissions","permissionsTotal","getRoles","fetch","roles","total","roleList","reload"],"mappings":"uBACAA,EAAOC,MAAE,CAAA,CAAAC,uBAA0B,WAAA,OAAAA,CAA8B,CAAA,GAAAF,EAAAA,IAAAA,CAAAA,8BAAAA,CAAAG,mBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAH,EAAAA,IAAAA,CAAAA,8BAAAA,CAAAI,aAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAJ,EAAAA,IAAAA,CAAAA,QAAAA,CAAAK,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAL,EAAAA,IAAAA,CAAAA,uCAAAA,CAAAM,UAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAN,EAAAA,IAAAA,CAAAA,mCAAAA,CAAAO,gBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,MAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAR,EAAAA,IAAAA,CAAAA,qCAAAA,CAAAS,iBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAS1D,IAT0DN,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EASpDP,EAAyB,WAKoD,IAJzFQ,EAAIC,UAAAC,MAAA,CAAA,GAAAD,AAAAE,KAAAA,IAAAF,SAAA,CAAA,EAAA,CAAAA,SAAA,CAAA,EAAA,CAAG,cACPG,EAAMH,UAAAC,MAAA,CAAA,GAAAD,AAAAE,KAAAA,IAAAF,SAAA,CAAA,EAAA,CAAAA,SAAA,CAAA,EAAA,CAAG,GACTI,EAAKJ,UAAAC,MAAA,CAAA,GAAAD,AAAAE,KAAAA,IAAAF,SAAA,CAAA,EAAA,CAAAA,SAAA,CAAA,EAAA,CAAG,GACRK,EAAIL,UAAAC,MAAA,CAAA,GAAAD,AAAAE,KAAAA,IAAAF,SAAA,CAAA,EAAA,CAAAA,SAAA,CAAA,EAAA,CAAG,EAEDM,EAAYZ,EAAY,WAC7B,IAAMa,EAAe,AAAIC,OAAOf,EAAaU,GAAS,KAEtD,MAAO,CACNM,MAAOV,AAAS,gBAATA,EAAyB,CAAEW,IAAKf,EAAUgB,cAAAA,AAAc,EAAKhB,EAAUgB,cAAc,CAC5FC,IAAKL,EAEP,EAAG,CAACR,EAAMI,EAAO,EAEXU,EAAiBnB,EACtB,WAAA,OACCE,EAAgBkB,IAAI,CAACR,IAAa,CACjCS,KAAM,CACLH,IAAK,GAENP,KAAAA,EACAD,MAAAA,GACC,EACH,CAACA,EAAOC,EAAMC,EAAU,EAEnBU,EAAsBtB,EAAY,WAAA,OAAME,EAAgBkB,IAAI,CAACR,KAAaW,KAAK,EAAE,EAAE,CAACX,EAAU,EAE9FY,EAAcpB,EAAiBe,GAC/BM,EAAmBrB,EAAiBkB,GACpCI,EAAW5B,EAAmB,WAAA,OAAMK,EAAMiB,IAAI,GAAGO,KAAK,EAAE,GACxDC,EAAQxB,EAAiBsB,GAE/B,MAAO,CAAEF,YAAaA,EAAYG,KAAK,GAAIE,MAAOJ,EAAkBK,SAAUF,EAAOG,OAAQL,CAAQ,CACtG"}