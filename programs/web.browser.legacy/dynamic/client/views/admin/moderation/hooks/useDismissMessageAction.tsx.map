)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/moderation/hooks/useDismissMessageAction.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useEndpoint, useSetModal, useToastMessageDispatch, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport React from 'react';\n\nimport GenericModal from '../../../../components/GenericModal';\n\nexport const useDismissMessageAction = (msgId: string): { action: () => void } => {\n\tconst t = useTranslation();\n\tconst setModal = useSetModal();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst queryClient = useQueryClient();\n\n\tconst dismissMessage = useEndpoint('POST', '/v1/moderation.dismissReports');\n\n\tconst handleDismissMessage = useMutation({\n\t\tmutationFn: dismissMessage,\n\t\tonError: (error) => {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t},\n\t\tonSuccess: () => {\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Moderation_Reports_dismissed') });\n\t\t},\n\t});\n\n\tconst onDismissMessage = async () => {\n\t\tawait handleDismissMessage.mutateAsync({ msgId });\n\t\tqueryClient.invalidateQueries({ queryKey: ['moderation.userMessages'] });\n\t\tsetModal();\n\t};\n\n\tconst confirmDismissMessage = (): void => {\n\t\tsetModal(\n\t\t\t<GenericModal\n\t\t\t\ttitle={t('Moderation_Dismiss_reports')}\n\t\t\t\tconfirmText={t('Moderation_Dismiss_reports')}\n\t\t\t\tvariant='danger'\n\t\t\t\tonConfirm={() => onDismissMessage()}\n\t\t\t\tonCancel={() => setModal()}\n\t\t\t>\n\t\t\t\t{t('Moderation_Dismiss_reports_confirm')}\n\t\t\t</GenericModal>,\n\t\t);\n\t};\n\n\treturn {\n\t\taction: () => confirmDismissMessage(),\n\t};\n};\n",null],"names":["module","default","v","_regeneratorRuntime","export","useDismissMessageAction","useEndpoint","useSetModal","useToastMessageDispatch","useTranslation","useMutation","useQueryClient","React","GenericModal","msgId","t","setModal","dispatchToastMessage","queryClient","handleDismissMessage","mutationFn","onError","error","type","message","onSuccess","confirmDismissMessage","createElement","title","confirmText","variant","onConfirm","async","_context","prev","next","awrap","mutateAsync","invalidateQueries","queryKey","stop","Promise","onCancel","action"],"mappings":"uBAAsBA,EAAAA,IAAa,CAAA,6BAAyB,CAAAC,QAAc,SAAQC,CAAAA,EAAAC,EAAAA,CAAA,CAA0B,EAAC,GAA7GH,EAAOI,MAAE,CAAA,CAAAC,wBAA0B,WAAA,OAAAA,CAAyC,CAAA,GAAiCL,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAM,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,wBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAT,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAU,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAX,EAAAA,IAAAA,CAAAA,QAAAA,CAAA,QAAA,SAAAE,CAAA,EAAAU,EAAAA,CAAA,CAAA,EAAA,GAAAZ,EAAAA,IAAAA,CAAAA,sCAAAA,CAAA,QAAA,SAAAE,CAAA,EAAAW,EAAAA,CAAA,CAAA,EAAA,GAMtG,IANPV,EAAkFG,EAAAC,EAA2BC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAMhGR,EAA0B,SAACS,CAAa,EACpD,IAAMC,EAAIN,IACJO,EAAWT,IACXU,EAAuBT,IACvBU,EAAcP,IAIdQ,EAAuBT,EAAY,CACxCU,WAHsBd,EAAY,OAAQ,iCAI1Ce,QAAS,SAACC,CAAK,EACdL,EAAqB,CAAEM,KAAM,QAASC,QAASF,CAAK,EACrD,EACAG,UAAW,WACVR,EAAqB,CAAEM,KAAM,UAAWC,QAAST,EAAE,+BAA+B,EACnF,IASKW,EAAwB,WAC7BV,EACCJ,EAAAe,aAAA,CAACd,EAAY,CACZe,MAAOb,EAAE,8BACTc,YAAad,EAAE,8BACfe,QAAQ,SACRC,UAAW,WAAA,OAZW5B,EAAA6B,KAAA,CAAA,SAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAC,IAAA,CAAAD,EAAAE,IAAA,EAAA,KAAA,EAAA,OAAAF,EAAAE,IAAA,CAAA,EAAAhC,EAAAiC,KAAA,CAClBjB,EAAqBkB,WAAW,CAAC,CAAEvB,MAAAA,CAAK,GAAG,MAAA,EACjDI,EAAYoB,iBAAiB,CAAC,CAAEC,SAAU,CAAC,0BAAyB,AAAC,GACrEvB,GAAW,MAAA,EAAA,IAAA,MAAA,OAAAiB,EAAAO,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,KAAAC,QAS0B,EACnCC,SAAU,WAAA,OAAM1B,GAAU,CAAC,EAE1BD,EAAE,uCAGN,EAEA,MAAO,CACN4B,OAAQ,WAAA,OAAMjB,GAAuB,EAEvC"}