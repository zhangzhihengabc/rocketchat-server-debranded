)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/moderation/hooks/useResetAvatarAction.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useEndpoint, useSetModal, useToastMessageDispatch, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport React from 'react';\n\nimport type { GenericMenuItemProps } from '../../../../components/GenericMenu/GenericMenuItem';\nimport GenericModal from '../../../../components/GenericModal';\n\nconst useResetAvatarAction = (userId: string): GenericMenuItemProps => {\n\tconst t = useTranslation();\n\tconst setModal = useSetModal();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst queryClient = useQueryClient();\n\n\tconst resetAvatar = useEndpoint('POST', '/v1/users.resetAvatar');\n\n\tconst handleResetAvatar = useMutation({\n\t\tmutationFn: resetAvatar,\n\t\tonError: (error) => {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t},\n\t\tonSuccess: () => {\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Moderation_Avatar_reset_success') });\n\t\t},\n\t});\n\n\tconst onResetAvatar = async () => {\n\t\tsetModal();\n\t\thandleResetAvatar.mutateAsync({ userId });\n\t\tqueryClient.invalidateQueries({ queryKey: ['moderation.reports'] });\n\t};\n\n\tconst confirmResetAvatar = (): void => {\n\t\tsetModal(\n\t\t\t<GenericModal\n\t\t\t\ttitle={t('Moderation_Reset_user_avatar')}\n\t\t\t\tconfirmText={t('Reset')}\n\t\t\t\tvariant='danger'\n\t\t\t\tonConfirm={() => onResetAvatar()}\n\t\t\t\tonCancel={() => setModal()}\n\t\t\t>\n\t\t\t\t{t('Moderation_Are_you_sure_you_want_to_reset_the_avatar')}\n\t\t\t</GenericModal>,\n\t\t);\n\t};\n\n\treturn {\n\t\tid: 'resetAvatar',\n\t\tcontent: t('Moderation_Reset_user_avatar'),\n\t\ticon: 'reload',\n\t\tonClick: () => confirmResetAvatar(),\n\t};\n};\n\nexport default useResetAvatarAction;\n",null],"names":["_regeneratorRuntime","useEndpoint","useSetModal","useToastMessageDispatch","useTranslation","useMutation","useQueryClient","React","GenericModal","module","default","v","link","exportDefault","userId","t","setModal","dispatchToastMessage","queryClient","handleResetAvatar","mutationFn","onError","error","type","message","onSuccess","confirmResetAvatar","createElement","title","confirmText","variant","onConfirm","async","_context","prev","next","mutateAsync","invalidateQueries","queryKey","stop","Promise","onCancel","id","content","icon","onClick"],"mappings":"uBAOA,IAPAA,EAAAC,EAASC,EAAaC,EAAaC,EAA0EC,EAAAC,EAAAC,EAAAC,EAAvFC,EAAAA,IAAa,CAAA,6BAAyB,CAAAC,QAAc,SAAQC,CAAAA,EAAAX,EAAAA,CAAA,CAA0B,EAAC,GAAjDS,EAAcG,IAAE,CAAA,2BAAM,CAAAX,YAA2B,SAAAU,CAAA,EAAAV,EAAAA,CAAA,EAAAC,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,wBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAJ,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,QAAAA,CAAA,QAAA,SAAAE,CAAA,EAAAJ,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,sCAAAA,CAAA,QAAA,SAAAE,CAAA,EAAAH,EAAAA,CAAA,CAAA,EAAA,GAA7GC,EAAOI,aAAa,CAOS,SAACC,CAAc,EAC3C,IAAMC,EAAIX,IACJY,EAAWd,IACXe,EAAuBd,IACvBe,EAAcZ,IAIda,EAAoBd,EAAY,CACrCe,WAHmBnB,EAAY,OAAQ,yBAIvCoB,QAAS,SAACC,CAAK,EACdL,EAAqB,CAAEM,KAAM,QAASC,QAASF,CAAK,EACrD,EACAG,UAAW,WACVR,EAAqB,CAAEM,KAAM,UAAWC,QAAST,EAAE,kCAAkC,EACtF,IASKW,EAAqB,WAC1BV,EACCT,EAAAoB,aAAA,CAACnB,EAAY,CACZoB,MAAOb,EAAE,gCACTc,YAAad,EAAE,SACfe,QAAQ,SACRC,UAAW,WAAA,OAZQ/B,EAAAgC,KAAA,CAAA,SAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAC,IAAA,CAAAD,EAAAE,IAAA,EAAA,KAAA,EACrBnB,IACAG,EAAkBiB,WAAW,CAAC,CAAEtB,OAAAA,CAAM,GACtCI,EAAYmB,iBAAiB,CAAC,CAAEC,SAAU,CAAC,qBAAoB,AAAC,EAAI,MAAA,EAAA,IAAA,MAAA,OAAAL,EAAAM,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,KAAAC,QASlC,EAChCC,SAAU,WAAA,OAAMzB,GAAU,CAAC,EAE1BD,EAAE,yDAGN,EAEA,MAAO,CACN2B,GAAI,cACJC,QAAS5B,EAAE,gCACX6B,KAAM,SACNC,QAAS,WAAA,OAAMnB,GAAoB,EAErC"}