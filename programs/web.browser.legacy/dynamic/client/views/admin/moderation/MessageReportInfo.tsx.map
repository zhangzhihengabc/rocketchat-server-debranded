)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/moderation/MessageReportInfo.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Box, Message } from '@rocket.chat/fuselage';\nimport { useEndpoint, useSetting, useToastMessageDispatch, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport React from 'react';\n\nimport ReportReason from './helpers/ReportReason';\n\nconst MessageReportInfo = ({ msgId }: { msgId: string }): JSX.Element => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst getReportsByMessage = useEndpoint('GET', `/v1/moderation.reports`);\n\n\tconst useRealName = Boolean(useSetting('UI_Use_Real_Name'));\n\n\tconst {\n\t\tdata: reportsByMessage,\n\t\tisLoading: isLoadingReportsByMessage,\n\t\tisSuccess: isSuccessReportsByMessage,\n\t\tisError: isErrorReportsByMessage,\n\t} = useQuery(\n\t\t['moderation.reports', { msgId }],\n\t\tasync () => {\n\t\t\tconst reports = await getReportsByMessage({ msgId });\n\t\t\treturn reports;\n\t\t},\n\t\t{\n\t\t\tonError: (error) => {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t},\n\t\t},\n\t);\n\n\tif (isLoadingReportsByMessage) {\n\t\treturn (\n\t\t\t<Box display='flex' flexDirection='column' width='full' height='full' overflow='hidden'>\n\t\t\t\t<Message>{t('Loading')}</Message>\n\t\t\t</Box>\n\t\t);\n\t}\n\n\tif (isErrorReportsByMessage) {\n\t\treturn (\n\t\t\t<Box display='flex' flexDirection='column' width='full' height='full' overflow='hidden'>\n\t\t\t\t<Message>{t('Error')}</Message>\n\t\t\t</Box>\n\t\t);\n\t}\n\n\tconst { reports } = reportsByMessage;\n\n\treturn (\n\t\t<>\n\t\t\t{isSuccessReportsByMessage && reportsByMessage?.reports && (\n\t\t\t\t<Box display='flex' flexDirection='column' width='full' height='full' overflowX='hidden' overflowY='auto'>\n\t\t\t\t\t{reports.map((report, index) => (\n\t\t\t\t\t\t<ReportReason\n\t\t\t\t\t\t\tkey={report._id}\n\t\t\t\t\t\t\tind={index + 1}\n\t\t\t\t\t\t\tuinfo={useRealName ? report.reportedBy?.name : report.reportedBy?.username}\n\t\t\t\t\t\t\tmsg={report.description}\n\t\t\t\t\t\t\tts={new Date(report.ts)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</Box>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default MessageReportInfo;\n",null],"names":["_regeneratorRuntime","Box","Message","useEndpoint","useSetting","useToastMessageDispatch","useTranslation","useQuery","React","ReportReason","module","link","default","v","exportDefault","_ref","msgId","t","dispatchToastMessage","getReportsByMessage","useRealName","Boolean","_useQuery","reports","async","_context","prev","next","awrap","sent","abrupt","stop","Promise","onError","error","type","message","reportsByMessage","data","isLoadingReportsByMessage","isLoading","isSuccessReportsByMessage","isSuccess","isErrorReportsByMessage","isError","createElement","display","flexDirection","width","height","overflow","Fragment","overflowX","overflowY","map","report","index","_report$reportedBy","_report$reportedBy2","key","_id","ind","uinfo","reportedBy","name","username","msg","description","ts","Date"],"mappings":"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"}