)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/marketplace/hooks/useLogs.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { OperationResult } from '@rocket.chat/rest-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport type { UseQueryResult } from '@tanstack/react-query';\nimport { useQuery } from '@tanstack/react-query';\n\nexport const useLogs = (appId: string): UseQueryResult<OperationResult<'GET', '/apps/:id/logs'>> => {\n\tconst logs = useEndpoint('GET', '/apps/:id/logs', { id: appId });\n\n\treturn useQuery(['marketplace', 'apps', appId, 'logs'], () => logs());\n};\n",null],"names":["module","export","useLogs","useEndpoint","useQuery","appId","logs","id"],"mappings":"uBACAA,EAAOC,MAAE,CAAA,CAAAC,QAAa,WAAM,OAAAA,CAAA,CAAA,GAA2BF,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAG,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAH,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAI,SAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAIhD,IAJgDD,EAAAC,EAI1CF,EAAU,SAACG,CAAa,EACpC,IAAMC,EAAOH,EAAY,MAAO,iBAAkB,CAAEI,GAAIF,CAAK,GAE7D,OAAOD,EAAS,CAAC,cAAe,OAAQC,EAAO,OAAO,CAAE,WAAA,OAAMC,GAAM,EACrE"}