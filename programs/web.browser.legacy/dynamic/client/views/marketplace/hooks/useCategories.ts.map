)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/marketplace/hooks/useCategories.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useTranslation } from '@rocket.chat/ui-contexts';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { AppClientOrchestratorInstance } from '../../../../ee/client/apps/orchestrator';\nimport type {\n\tCategoryDropDownGroups,\n\tCategoryDropdownItem,\n\tCategoryDropDownListProps,\n\tCategoryOnSelected,\n\tselectedCategoriesList,\n} from '../definitions/CategoryDropdownDefinitions';\nimport { handleAPIError } from '../helpers/handleAPIError';\nimport { useCategoryFlatList } from './useCategoryFlatList';\nimport { useCategoryToggle } from './useCategoryToggle';\n\nexport const useCategories = (): [CategoryDropDownGroups, selectedCategoriesList, selectedCategoriesList, CategoryOnSelected] => {\n\tconst t = useTranslation();\n\tconst [categories, setCategories] = useState<CategoryDropDownListProps['categories']>([]);\n\n\tconst fetchCategories = useCallback(async (): Promise<void> => {\n\t\ttry {\n\t\t\tconst fetchedCategories = await AppClientOrchestratorInstance.getCategories();\n\n\t\t\tconst mappedCategories = fetchedCategories\n\t\t\t\t.filter((currentCategory) => !currentCategory.hidden)\n\t\t\t\t.map((currentCategory) => ({\n\t\t\t\t\tid: currentCategory.id,\n\t\t\t\t\tlabel: currentCategory.title,\n\t\t\t\t\tchecked: false,\n\t\t\t\t}));\n\n\t\t\tsetCategories([\n\t\t\t\t{\n\t\t\t\t\titems: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'all',\n\t\t\t\t\t\t\tlabel: t('All_categories'),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: t('Filter_by_category'),\n\t\t\t\t\titems: mappedCategories,\n\t\t\t\t},\n\t\t\t]);\n\t\t} catch (e: any) {\n\t\t\thandleAPIError(e);\n\t\t}\n\t}, [t]);\n\n\tuseEffect(() => {\n\t\tconst fetchCategoriesWrapper = async (): Promise<void> => {\n\t\t\tawait fetchCategories();\n\t\t};\n\n\t\tfetchCategoriesWrapper();\n\t}, [fetchCategories]);\n\n\tconst onSelected = useCategoryToggle(setCategories);\n\tconst flatCategories = useCategoryFlatList(categories);\n\tconst originalSize = useCategoryFlatList(categories).length;\n\n\tconst selectedCategories = useMemo(\n\t\t() => flatCategories.filter((category) => Boolean(category.checked)),\n\t\t[flatCategories],\n\t) as (CategoryDropdownItem & { checked: true })[];\n\treturn [categories, selectedCategories, originalSize === selectedCategories.length ? [] : selectedCategories, onSelected];\n};\n",null],"names":["module","link","default","_regeneratorRuntime","_slicedToArray","export","useCategories","useTranslation","useCallback","useEffect","useMemo","useState","AppClientOrchestratorInstance","handleAPIError","useCategoryFlatList","useCategoryToggle","t","_useState2","categories","setCategories","fetchCategories","mappedCategories","async","_context","prev","next","awrap","getCategories","fetchedCategories","sent","filter","currentCategory","hidden","map","id","label","title","checked","items","t0","stop","Promise","_context2","onSelected","flatCategories","originalSize","length","selectedCategories","category","Boolean"],"mappings":"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"}