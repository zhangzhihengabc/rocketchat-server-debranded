)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/composer/EmojiPicker/EmojiPickerDropDown.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Dropdown as DropdownMobile } from '@rocket.chat/fuselage';\nimport { useLayout } from '@rocket.chat/ui-contexts';\nimport type { ReactNode } from 'react';\nimport React, { forwardRef } from 'react';\n\nimport EmojiPickerDesktopDropdown from './EmojiPickerDesktopDropdown';\n\ntype EmojiPickerDropdownProps<R> = {\n\tchildren: ReactNode;\n\treference: React.RefObject<R>;\n};\n\nconst EmojiPickerDropdown = forwardRef(function EmojiPickerDropdown<TReferenceElement extends HTMLElement>(\n\t{ children, reference }: EmojiPickerDropdownProps<TReferenceElement>,\n\tref: React.ForwardedRef<HTMLElement>,\n) {\n\tconst { isMobile } = useLayout();\n\n\tconst Dropdown = isMobile ? DropdownMobile : EmojiPickerDesktopDropdown;\n\n\treturn (\n\t\t<Dropdown ref={ref} reference={reference}>\n\t\t\t{children}\n\t\t</Dropdown>\n\t);\n});\n\nexport default EmojiPickerDropdown;\n",null],"names":["module","link","Dropdown","v","DropdownMobile","useLayout","React","forwardRef","EmojiPickerDesktopDropdown","EmojiPickerDropdown","_ref","ref","children","reference","isMobile","_useLayout","createElement","exportDefault"],"mappings":"uBAAiBA,EAAIC,IAAA,CAAA,wBAAsB,CAAAC,SAAAA,SAAwBC,CAAAA,EAAAC,EAAAA,CAAA,CAAA,EAAA,GAAAJ,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAK,UAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAL,EAAAA,IAAAA,CAAAA,QAAAA,CAAA,QAAA,SAAAG,CAAA,EAAAG,EAAAA,CAAA,EAAAC,WAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAP,EAAAA,IAAAA,CAAAA,+BAAAA,CAAA,QAAA,SAAAG,CAAA,EAAAK,EAAAA,CAAA,CAAA,EAAA,GAYnE,IAZAJ,EAAmEC,EAAAC,EAAAC,EAAAC,EAY7DC,EAAsBF,EAAW,SAA4BG,CAAA,CAElEC,CAAoC,EAAA,IADlCC,EAAQF,EAARE,QAAQ,CAAEC,EAASH,EAATG,SAAS,CAKfX,EAAWY,AAFDC,AAAKV,IAAbS,QAAQ,CAEYV,EAAiBI,EAE7C,OACCF,EAAAU,aAAA,CAACd,EAAQ,CAACS,IAAKA,EAAKE,UAAWA,CAAU,EACvCD,EAGJ,GAzBAZ,EAAOiB,aAAU,CA2BFR"}