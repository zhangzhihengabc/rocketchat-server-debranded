)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/account/security/EndToEnd.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Box, Margins, PasswordInput, Field, FieldGroup, FieldLabel, FieldRow, FieldError, FieldHint, Button } from '@rocket.chat/fuselage';\nimport { useToastMessageDispatch, useMethod, useTranslation, useLogout } from '@rocket.chat/ui-contexts';\nimport type { ComponentProps, ReactElement } from 'react';\nimport React, { useCallback, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\n\nimport { e2e } from '../../../../app/e2e/client/rocketchat.e2e';\n\nconst EndToEnd = (props: ComponentProps<typeof Box>): ReactElement => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst logout = useLogout();\n\n\tconst publicKey = localStorage.getItem('public_key');\n\tconst privateKey = localStorage.getItem('private_key');\n\n\tconst resetE2eKey = useMethod('e2e.resetOwnE2EKey');\n\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\twatch,\n\t\tresetField,\n\t\tformState: { errors, isValid },\n\t} = useForm({\n\t\tdefaultValues: {\n\t\t\tpassword: '',\n\t\t\tpasswordConfirm: '',\n\t\t},\n\t\tmode: 'onChange',\n\t});\n\n\tconst { password } = watch();\n\n\tconst keysExist = Boolean(publicKey && privateKey);\n\n\tconst hasTypedPassword = Boolean(password?.trim().length);\n\n\tconst saveNewPassword = async (data: { password: string; passwordConfirm: string }) => {\n\t\ttry {\n\t\t\tawait e2e.changePassword(data.password);\n\t\t\tresetField('password');\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Encryption_key_saved_successfully') });\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t};\n\n\tconst handleResetE2eKey = useCallback(async () => {\n\t\ttry {\n\t\t\tconst result = await resetE2eKey();\n\t\t\tif (result) {\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('User_e2e_key_was_reset') });\n\t\t\t\tlogout();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t}, [dispatchToastMessage, resetE2eKey, logout, t]);\n\n\tuseEffect(() => {\n\t\tif (password?.trim() === '') {\n\t\t\tresetField('passwordConfirm');\n\t\t}\n\t}, [password, resetField]);\n\n\treturn (\n\t\t<Box display='flex' flexDirection='column' alignItems='flex-start' mbs={16} {...props}>\n\t\t\t<Margins blockEnd={8}>\n\t\t\t\t<Box fontScale='h4'>{t('E2E_Encryption_Password_Change')}</Box>\n\t\t\t\t<Box dangerouslySetInnerHTML={{ __html: t('E2E_Encryption_Password_Explanation') }} />\n\t\t\t\t<FieldGroup w='full'>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<FieldLabel id='New_encryption_password'>{t('New_encryption_password')}</FieldLabel>\n\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t<PasswordInput\n\t\t\t\t\t\t\t\t{...register('password', { required: true })}\n\t\t\t\t\t\t\t\tplaceholder={t('New_Password_Placeholder')}\n\t\t\t\t\t\t\t\tdisabled={!keysExist}\n\t\t\t\t\t\t\t\taria-labelledby='New_encryption_password'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t{!keysExist && <FieldHint>{t('EncryptionKey_Change_Disabled')}</FieldHint>}\n\t\t\t\t\t</Field>\n\t\t\t\t\t{hasTypedPassword && (\n\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t<FieldLabel id='Confirm_new_encryption_password'>{t('Confirm_new_encryption_password')}</FieldLabel>\n\t\t\t\t\t\t\t<PasswordInput\n\t\t\t\t\t\t\t\terror={errors.passwordConfirm?.message}\n\t\t\t\t\t\t\t\t{...register('passwordConfirm', {\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tvalidate: (value: string) => (password !== value ? 'Your passwords do no match' : true),\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\tplaceholder={t('Confirm_New_Password_Placeholder')}\n\t\t\t\t\t\t\t\taria-labelledby='Confirm_new_encryption_password'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{errors.passwordConfirm && <FieldError>{errors.passwordConfirm.message}</FieldError>}\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t)}\n\t\t\t\t</FieldGroup>\n\t\t\t\t<Button\n\t\t\t\t\tprimary\n\t\t\t\t\tdisabled={!(keysExist && isValid)}\n\t\t\t\t\tonClick={handleSubmit(saveNewPassword)}\n\t\t\t\t\tdata-qa-type='e2e-encryption-save-password-button'\n\t\t\t\t>\n\t\t\t\t\t{t('Save_changes')}\n\t\t\t\t</Button>\n\t\t\t\t<Box fontScale='h4' mbs={16}>\n\t\t\t\t\t{t('Reset_E2E_Key')}\n\t\t\t\t</Box>\n\t\t\t\t<Box dangerouslySetInnerHTML={{ __html: t('E2E_Reset_Key_Explanation') }} />\n\t\t\t\t<Button onClick={handleResetE2eKey} data-qa-type='e2e-encryption-reset-key-button'>\n\t\t\t\t\t{t('Reset_E2E_Key')}\n\t\t\t\t</Button>\n\t\t\t</Margins>\n\t\t</Box>\n\t);\n};\n\nexport default EndToEnd;\n",null],"names":["_extends","_regeneratorRuntime","Box","Margins","PasswordInput","Field","FieldGroup","FieldLabel","FieldRow","FieldError","FieldHint","Button","useToastMessageDispatch","useMethod","useTranslation","useLogout","React","useCallback","useEffect","useForm","e2e","module","link","default","v","exportDefault","props","_errors$passwordConfi","t","dispatchToastMessage","logout","publicKey","localStorage","getItem","privateKey","resetE2eKey","_useForm","defaultValues","password","passwordConfirm","mode","register","handleSubmit","watch","resetField","_useForm$formState","formState","errors","isValid","_watch","keysExist","Boolean","hasTypedPassword","trim","length","handleResetE2eKey","async","_context2","prev","next","awrap","sent","type","message","t0","stop","Promise","createElement","display","flexDirection","alignItems","mbs","blockEnd","fontScale","dangerouslySetInnerHTML","__html","w","id","required","placeholder","disabled","error","validate","value","primary","onClick","data","_context","changePassword"],"mappings":"uBAQA,IARAA,EAA2FC,EAA3FC,EAAOC,EAAOC,EAASC,EAAaC,EAASC,EAAYC,EAAUC,EAAUC,EAAEC,EAA6DC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAhIC,EAAEC,IAAS,CAAA,iCAAkC,CAAAC,QAAU,SAAEC,CAAQ,EAAExB,EAAAA,CAAU,CAAA,EAAE,GAAyBqB,EAAAA,IAAAA,CAAAA,6BAAwB,CAAAE,QAAAA,SAAAA,CAAAA,EAAAtB,EAAAA,CAAA,CAAA,EAAA,GAAjDoB,EAAWC,IAAAA,CAAAA,wBAAc,CAAApB,IAAAA,SAAwBsB,CAAAA,EAAAtB,EAAAA,CAAA,EAAAC,QAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,cAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,MAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,WAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,WAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,SAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,WAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,UAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,OAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAU,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAT,wBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,UAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,UAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAM,EAAAA,IAAAA,CAAAA,QAAAA,CAAA,QAAA,SAAAG,CAAA,EAAAR,EAAAA,CAAA,EAAAC,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,UAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,kBAAAA,CAAAF,QAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,4CAAAA,CAAAD,IAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAA5IC,EAAOI,aAAO,CAQG,SAACC,CAAiC,EAClD,IADoEC,EAC9DC,EAAId,IACJe,EAAuBjB,IACvBkB,EAASf,IAETgB,EAAYC,aAAaC,OAAO,CAAC,cACjCC,EAAaF,aAAaC,OAAO,CAAC,eAElCE,EAActB,EAAU,sBAE9BuB,EAMIjB,EAAQ,CACXkB,cAAe,CACdC,SAAU,GACVC,gBAAiB,IAElBC,KAAM,aAVNC,EAAQL,EAARK,QAAQ,CACRC,EAAYN,EAAZM,YAAY,CACZC,EAAKP,EAALO,KAAK,CACLC,EAAUR,EAAVQ,UAAU,CAAAC,EAAAT,EACVU,SAAS,CAAIC,EAAMF,EAANE,MAAM,CAAEC,EAAOH,EAAPG,OAAO,CASrBV,EAAQW,AAAKN,IAAbL,QAAQ,CAEVY,EAAYC,CAAAA,CAAQpB,CAAAA,GAAaG,CAAAA,EAEjCkB,EAAmBD,CAAAA,CAAQb,CAAAA,MAAAA,EAAQ,KAAA,EAARA,EAAUe,IAAI,GAAGC,MAAM,AAANA,EAY5CC,EAAoBtC,EAAY,WAAA,OAAAhB,EAAAuD,KAAA,CAAA,SAAAC,CAAA,EAAA,OAAA,OAAAA,EAAAC,IAAA,CAAAD,EAAAE,IAAA,EAAA,KAAA,EAAA,OAAAF,EAAAC,IAAA,CAAA,EAAAD,EAAAE,IAAA,CAAA,EAAA1D,EAAA2D,KAAA,CAEfzB,IAAa,MAAA,EAAtBsB,EAAAI,IAAA,GAEXhC,EAAqB,CAAEiC,KAAM,UAAWC,QAASnC,EAAE,yBAAyB,GAC5EE,KACA2B,EAAAE,IAAA,CAAA,GAAA,KAAA,MAAA,EAAAF,EAAAC,IAAA,CAAA,EAAAD,EAAAO,EAAA,CAAAP,EAAA,KAAA,CAAA,GAED5B,EAAqB,CAAEiC,KAAM,QAASC,QAAON,EAAAO,EAAA,AAAO,EAAI,MAAA,GAAA,IAAA,MAAA,OAAAP,EAAAQ,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAAC,QAAA,EAEvD,CAACrC,EAAsBM,EAAaL,EAAQF,EAAE,EAQjD,OANAV,EAAU,WACLoB,CAAAA,MAAAA,EAAQ,KAAA,EAARA,EAAUe,IAAI,EAAA,IAAO,IACxBT,EAAW,kBAEb,EAAG,CAACN,EAAUM,EAAW,EAGxB5B,EAAAmD,aAAA,CAACjE,EAAGF,EAAA,CAACoE,QAAQ,OAAOC,cAAc,SAASC,WAAW,aAAaC,IAAK,EAAG,EAAK7C,GAC/EV,EAAAmD,aAAA,CAAChE,EAAO,CAACqE,SAAU,CAAE,EACpBxD,EAAAmD,aAAA,CAACjE,EAAG,CAACuE,UAAU,IAAI,EAAE7C,EAAE,mCACvBZ,EAAAmD,aAAA,CAACjE,EAAG,CAACwE,wBAAyB,CAAEC,OAAQ/C,EAAE,sCAAsC,CAAG,GACnFZ,EAAAmD,aAAA,CAAC7D,EAAU,CAACsE,EAAE,MAAM,EACnB5D,EAAAmD,aAAA,CAAC9D,EAAK,KACLW,EAAAmD,aAAA,CAAC5D,EAAU,CAACsE,GAAG,yBAAyB,EAAEjD,EAAE,4BAC5CZ,EAAAmD,aAAA,CAAC3D,EAAQ,KACRQ,EAAAmD,aAAA,CAAC/D,EAAaJ,EAAA,CAAA,EACTyC,EAAS,WAAY,CAAEqC,SAAU,CAAA,CAAI,GAAG,CAC5CC,YAAanD,EAAE,4BACfoD,SAAU,CAAC9B,EACX,kBAAgB,yBAAyB,KAG1C,CAACA,GAAalC,EAAAmD,aAAA,CAACzD,EAAS,KAAEkB,EAAE,mCAE7BwB,GACApC,EAAAmD,aAAA,CAAC9D,EAAK,KACLW,EAAAmD,aAAA,CAAC5D,EAAU,CAACsE,GAAG,iCAAiC,EAAEjD,EAAE,oCACpDZ,EAAAmD,aAAA,CAAC/D,EAAaJ,EAAA,CACbiF,MAAK,AAAwB,OAAxBtD,CAAAA,EAAEoB,EAAOR,eAAe,AAAfA,GAAeZ,AAAA,KAAA,IAAAA,EAAA,KAAA,EAAtBA,EAAwBoC,OAAAA,AAAQ,EACnCtB,EAAS,kBAAmB,CAC/BqC,SAAU,CAAA,EACVI,SAAU,SAACC,CAAa,EAAA,OAAM7C,IAAa6C,GAAQ,4BAAmC,IACrF,CACFJ,YAAanD,EAAE,oCACf,kBAAgB,iCAAiC,IAEjDmB,EAAOR,eAAe,EAAIvB,EAAAmD,aAAA,CAAC1D,EAAU,KAAEsC,EAAOR,eAAe,CAACwB,OAAO,IAIzE/C,EAAAmD,aAAA,CAACxD,EAAM,CACNyE,QAAO,CAAA,EACPJ,SAAU,CAAE9B,CAAAA,GAAaF,CAAAA,EACzBqC,QAAS3C,EAjEW,SAAO4C,CAAmD,EAAA,OAAArF,EAAAuD,KAAA,CAAA,SAAA+B,CAAA,EAAA,OAAA,OAAAA,EAAA7B,IAAA,CAAA6B,EAAA5B,IAAA,EAAA,KAAA,EAAA,OAAA4B,EAAA7B,IAAA,CAAA,EAAA6B,EAAA5B,IAAA,CAAA,EAAA1D,EAAA2D,KAAA,CAE1ExC,EAAIoE,cAAc,CAACF,EAAKhD,QAAQ,EAAC,MAAA,EACvCM,EAAW,YACXf,EAAqB,CAAEiC,KAAM,UAAWC,QAASnC,EAAE,oCAAoC,GAAI2D,EAAA5B,IAAA,CAAA,GAAA,KAAA,MAAA,EAAA4B,EAAA7B,IAAA,CAAA,EAAA6B,EAAAvB,EAAA,CAAAuB,EAAA,KAAA,CAAA,GAE3F1D,EAAqB,CAAEiC,KAAM,QAASC,QAAOwB,EAAAvB,EAAA,AAAO,EAAI,MAAA,GAAA,IAAA,MAAA,OAAAuB,EAAAtB,IAAA,EAAA,CAAA,EAAA,KAAA,KAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAAC,QAAA,GA4DtD,eAAa,qCAAqC,EAEjDtC,EAAE,iBAEJZ,EAAAmD,aAAA,CAACjE,EAAG,CAACuE,UAAU,KAAKF,IAAK,EAAG,EAC1B3C,EAAE,kBAEJZ,EAAAmD,aAAA,CAACjE,EAAG,CAACwE,wBAAyB,CAAEC,OAAQ/C,EAAE,4BAA4B,CAAG,GACzEZ,EAAAmD,aAAA,CAACxD,EAAM,CAAC0E,QAAS9B,EAAmB,eAAa,iCAAiC,EAChF3B,EAAE,mBAKR"}