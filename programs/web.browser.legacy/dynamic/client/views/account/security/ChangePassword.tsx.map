)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/account/security/ChangePassword.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Box, Field, FieldError, FieldGroup, FieldHint, FieldLabel, FieldRow, Icon, PasswordInput } from '@rocket.chat/fuselage';\nimport { useUniqueId } from '@rocket.chat/fuselage-hooks';\nimport { PasswordVerifier, useValidatePassword } from '@rocket.chat/ui-client';\nimport { useMethod, useToastMessageDispatch, useTranslation } from '@rocket.chat/ui-contexts';\nimport type { AllHTMLAttributes } from 'react';\nimport React from 'react';\nimport { Controller, useFormContext } from 'react-hook-form';\n\nimport { useAllowPasswordChange } from './useAllowPasswordChange';\n\ntype PasswordFieldValues = { password: string; confirmationPassword: string };\n\nconst ChangePassword = (props: AllHTMLAttributes<HTMLFormElement>) => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst passwordId = useUniqueId();\n\tconst confirmPasswordId = useUniqueId();\n\tconst passwordVerifierId = useUniqueId();\n\n\tconst {\n\t\twatch,\n\t\tformState: { errors },\n\t\thandleSubmit,\n\t\treset,\n\t\tcontrol,\n\t} = useFormContext<PasswordFieldValues>();\n\n\tconst password = watch('password');\n\tconst passwordIsValid = useValidatePassword(password);\n\tconst { allowPasswordChange } = useAllowPasswordChange();\n\n\t// FIXME: replace to endpoint\n\tconst updatePassword = useMethod('saveUserProfile');\n\n\tconst handleSave = async ({ password }: { password?: string }) => {\n\t\ttry {\n\t\t\tawait updatePassword({ newPassword: password }, {});\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Password_changed_successfully') });\n\t\t\treset();\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t};\n\n\treturn (\n\t\t<Box {...props} is='form' autoComplete='off' onSubmit={handleSubmit(handleSave)}>\n\t\t\t<FieldGroup>\n\t\t\t\t<Field>\n\t\t\t\t\t<FieldLabel htmlFor={passwordId}>{t('New_password')}</FieldLabel>\n\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\trules={{\n\t\t\t\t\t\t\t\tvalidate: () => (password?.length && !passwordIsValid ? t('Password_must_meet_the_complexity_requirements') : true),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\trender={({ field: { onChange, value } }) => (\n\t\t\t\t\t\t\t\t<PasswordInput\n\t\t\t\t\t\t\t\t\tid={passwordId}\n\t\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\t\terror={errors.password?.message}\n\t\t\t\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\t\t\t\taddon={<Icon name='key' size='x20' />}\n\t\t\t\t\t\t\t\t\tdisabled={!allowPasswordChange}\n\t\t\t\t\t\t\t\t\taria-describedby={`${passwordVerifierId} ${passwordId}-hint ${passwordId}-error`}\n\t\t\t\t\t\t\t\t\taria-invalid={errors.password ? 'true' : 'false'}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FieldRow>\n\t\t\t\t\t{!allowPasswordChange && <FieldHint id={`${passwordId}-hint`}>{t('Password_Change_Disabled')}</FieldHint>}\n\t\t\t\t\t{errors?.password && (\n\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${passwordId}-error`}>\n\t\t\t\t\t\t\t{errors.password.message}\n\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t)}\n\t\t\t\t\t{allowPasswordChange && <PasswordVerifier password={password} id={passwordVerifierId} />}\n\t\t\t\t</Field>\n\t\t\t\t<Field>\n\t\t\t\t\t<FieldLabel htmlFor={confirmPasswordId}>{t('Confirm_password')}</FieldLabel>\n\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\tname='confirmationPassword'\n\t\t\t\t\t\t\trules={{ validate: (confirmationPassword) => (password !== confirmationPassword ? t('Passwords_do_not_match') : true) }}\n\t\t\t\t\t\t\trender={({ field: { onChange, value } }) => (\n\t\t\t\t\t\t\t\t<PasswordInput\n\t\t\t\t\t\t\t\t\tid={confirmPasswordId}\n\t\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\t\terror={errors.confirmationPassword?.message}\n\t\t\t\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\t\t\t\taddon={<Icon name='key' size='x20' />}\n\t\t\t\t\t\t\t\t\tdisabled={!allowPasswordChange || !passwordIsValid}\n\t\t\t\t\t\t\t\t\taria-required={password !== '' ? 'true' : 'false'}\n\t\t\t\t\t\t\t\t\taria-invalid={errors.confirmationPassword ? 'true' : 'false'}\n\t\t\t\t\t\t\t\t\taria-describedby={`${confirmPasswordId}-error`}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FieldRow>\n\t\t\t\t\t{errors.confirmationPassword && (\n\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${confirmPasswordId}-error`}>\n\t\t\t\t\t\t\t{errors.confirmationPassword.message}\n\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t)}\n\t\t\t\t</Field>\n\t\t\t</FieldGroup>\n\t\t</Box>\n\t);\n};\n\nexport default ChangePassword;\n",null],"names":["_extends","_regeneratorRuntime","Box","Field","FieldError","FieldGroup","FieldHint","FieldLabel","FieldRow","Icon","PasswordInput","useUniqueId","PasswordVerifier","useValidatePassword","useMethod","useToastMessageDispatch","useTranslation","React","Controller","useFormContext","useAllowPasswordChange","module","link","default","v","exportDefault","props","t","dispatchToastMessage","passwordId","confirmPasswordId","passwordVerifierId","_useFormContext","watch","errors","formState","handleSubmit","reset","control","password","passwordIsValid","allowPasswordChange","_useAllowPasswordChan","updatePassword","createElement","is","autoComplete","onSubmit","_ref","async","_context","prev","next","awrap","newPassword","type","message","t0","stop","Promise","htmlFor","name","rules","validate","length","render","_ref2","_errors$password","_ref2$field","field","onChange","value","id","error","flexGrow","addon","size","disabled","confirmationPassword","_ref3","_errors$confirmationP","_ref3$field"],"mappings":"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"}