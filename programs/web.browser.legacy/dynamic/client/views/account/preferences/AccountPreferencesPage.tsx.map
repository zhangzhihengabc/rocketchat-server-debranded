)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/account/preferences/AccountPreferencesPage.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { ButtonGroup, Button, Box, Accordion } from '@rocket.chat/fuselage';\nimport { useUniqueId } from '@rocket.chat/fuselage-hooks';\nimport { useToastMessageDispatch, useSetting, useTranslation, useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useMutation } from '@tanstack/react-query';\nimport type { ReactElement } from 'react';\nimport React from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\n\nimport Page from '../../../components/Page';\nimport { getDirtyFields } from '../../../lib/getDirtyFields';\nimport PreferencesGlobalSection from './PreferencesGlobalSection';\nimport PreferencesHighlightsSection from './PreferencesHighlightsSection';\nimport PreferencesLocalizationSection from './PreferencesLocalizationSection';\nimport PreferencesMessagesSection from './PreferencesMessagesSection';\nimport PreferencesMyDataSection from './PreferencesMyDataSection';\nimport PreferencesNotificationsSection from './PreferencesNotificationsSection';\nimport PreferencesSoundSection from './PreferencesSoundSection';\nimport PreferencesUserPresenceSection from './PreferencesUserPresenceSection';\nimport type { AccountPreferencesData } from './useAccountPreferencesValues';\nimport { useAccountPreferencesValues } from './useAccountPreferencesValues';\n\nconst AccountPreferencesPage = (): ReactElement => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst dataDownloadEnabled = useSetting('UserData_EnableDownload');\n\tconst preferencesValues = useAccountPreferencesValues();\n\n\tconst methods = useForm({ defaultValues: preferencesValues });\n\tconst {\n\t\thandleSubmit,\n\t\treset,\n\t\twatch,\n\t\tformState: { isDirty, dirtyFields },\n\t} = methods;\n\n\tconst currentData = watch();\n\n\tconst setPreferencesEndpoint = useEndpoint('POST', '/v1/users.setPreferences');\n\tconst setPreferencesAction = useMutation({\n\t\tmutationFn: setPreferencesEndpoint,\n\t\tonSuccess: () => {\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Preferences_saved') });\n\t\t},\n\t\tonError: (error) => {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t},\n\t\tonSettled: () => reset(currentData),\n\t});\n\n\tconst handleSaveData = async (formData: AccountPreferencesData) => {\n\t\tconst { highlights, dontAskAgainList, ...data } = getDirtyFields(formData, dirtyFields);\n\t\tif (highlights || highlights === '') {\n\t\t\tObject.assign(data, {\n\t\t\t\thighlights:\n\t\t\t\t\ttypeof highlights === 'string' &&\n\t\t\t\t\thighlights\n\t\t\t\t\t\t.split(/,|\\n/)\n\t\t\t\t\t\t.map((val) => val.trim())\n\t\t\t\t\t\t.filter(Boolean),\n\t\t\t});\n\t\t}\n\n\t\tif (dontAskAgainList) {\n\t\t\tconst list =\n\t\t\t\tArray.isArray(dontAskAgainList) && dontAskAgainList.length > 0\n\t\t\t\t\t? dontAskAgainList.map(([action, label]) => ({ action, label }))\n\t\t\t\t\t: [];\n\t\t\tObject.assign(data, { dontAskAgainList: list });\n\t\t}\n\n\t\tsetPreferencesAction.mutateAsync({ data });\n\t};\n\n\tconst preferencesFormId = useUniqueId();\n\n\treturn (\n\t\t<Page>\n\t\t\t<Page.Header title={t('Preferences')} />\n\t\t\t<Page.ScrollableContentWithShadow>\n\t\t\t\t<FormProvider {...methods}>\n\t\t\t\t\t<Box id={preferencesFormId} is='form' maxWidth='x600' w='full' alignSelf='center' onSubmit={handleSubmit(handleSaveData)}>\n\t\t\t\t\t\t<Accordion>\n\t\t\t\t\t\t\t<PreferencesLocalizationSection />\n\t\t\t\t\t\t\t<PreferencesGlobalSection />\n\t\t\t\t\t\t\t<PreferencesUserPresenceSection />\n\t\t\t\t\t\t\t<PreferencesNotificationsSection />\n\t\t\t\t\t\t\t<PreferencesMessagesSection />\n\t\t\t\t\t\t\t<PreferencesHighlightsSection />\n\t\t\t\t\t\t\t<PreferencesSoundSection />\n\t\t\t\t\t\t\t{dataDownloadEnabled && <PreferencesMyDataSection />}\n\t\t\t\t\t\t</Accordion>\n\t\t\t\t\t</Box>\n\t\t\t\t</FormProvider>\n\t\t\t</Page.ScrollableContentWithShadow>\n\t\t\t<Page.Footer isDirty={isDirty}>\n\t\t\t\t<ButtonGroup>\n\t\t\t\t\t<Button onClick={() => reset(preferencesValues)}>{t('Cancel')}</Button>\n\t\t\t\t\t<Button form={preferencesFormId} primary type='submit'>\n\t\t\t\t\t\t{t('Save_changes')}\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</Page.Footer>\n\t\t</Page>\n\t);\n};\n\nexport default AccountPreferencesPage;\n",null],"names":["_regeneratorRuntime","_slicedToArray","_objectWithoutProperties","ButtonGroup","Button","Box","Accordion","useUniqueId","useToastMessageDispatch","useSetting","useTranslation","useEndpoint","useMutation","React","FormProvider","useForm","Page","getDirtyFields","PreferencesGlobalSection","PreferencesHighlightsSection","PreferencesLocalizationSection","PreferencesMessagesSection","PreferencesMyDataSection","PreferencesNotificationsSection","PreferencesSoundSection","PreferencesUserPresenceSection","useAccountPreferencesValues","module","link","default","v","exportDefault","t","dispatchToastMessage","dataDownloadEnabled","preferencesValues","methods","defaultValues","handleSubmit","reset","watch","_methods$formState","formState","isDirty","dirtyFields","currentData","setPreferencesAction","mutationFn","onSuccess","type","message","onError","error","onSettled","preferencesFormId","createElement","Header","title","ScrollableContentWithShadow","id","is","maxWidth","w","alignSelf","onSubmit","formData","_getDirtyFields","highlights","dontAskAgainList","data","async","_context","prev","next","_excluded","Object","assign","split","map","val","trim","filter","Boolean","Array","isArray","length","_ref","_ref2","action","label","mutateAsync","stop","Promise","Footer","onClick","form","primary"],"mappings":"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"}