)]}'
{"version":3,"sources":["meteor://ðŸ’»app/app/2fa/client/TOTPGoogle.js","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Accounts } from 'meteor/accounts-base';\nimport { Google } from 'meteor/google-oauth';\nimport { Meteor } from 'meteor/meteor';\n\nimport { overrideLoginMethod } from '../../../client/lib/2fa/overrideLoginMethod';\n\nconst loginWithGoogleAndTOTP = function (options, code, callback) {\n\t// support a callback without options\n\tif (!callback && typeof options === 'function') {\n\t\tcallback = options;\n\t\toptions = null;\n\t}\n\n\tif (Meteor.isCordova && Google.signIn) {\n\t\t// After 20 April 2017, Google OAuth login will no longer work from\n\t\t// a WebView, so Cordova apps must use Google Sign-In instead.\n\t\t// https://github.com/meteor/meteor/issues/8253\n\t\tGoogle.signIn(options, callback);\n\t\treturn;\n\t} // Use Google's domain-specific login page if we want to restrict creation to\n\t// a particular email domain. (Don't use it if restrictCreationByEmailDomain\n\t// is a function.) Note that all this does is change Google's UI ---\n\t// accounts-base/accounts_server.js still checks server-side that the server\n\t// has the proper email address after the OAuth conversation.\n\n\tif (typeof Accounts._options.restrictCreationByEmailDomain === 'string') {\n\t\toptions = Object.assign({}, options || {});\n\t\toptions.loginUrlParameters = Object.assign({}, options.loginUrlParameters || {});\n\t\toptions.loginUrlParameters.hd = Accounts._options.restrictCreationByEmailDomain;\n\t}\n\n\tconst credentialRequestCompleteCallback = Accounts.oauth.credentialRequestCompleteHandler(callback, code);\n\tGoogle.requestCredential(options, credentialRequestCompleteCallback);\n};\n\nconst { loginWithGoogle } = Meteor;\nMeteor.loginWithGoogle = function (options, cb) {\n\toverrideLoginMethod(loginWithGoogle, [options], cb, loginWithGoogleAndTOTP);\n};\n",null],"names":["module","link","Accounts","v","Google","Meteor","overrideLoginMethod","loginWithGoogleAndTOTP","options","code","callback","isCordova","signIn","_options","restrictCreationByEmailDomain","Object","assign","loginUrlParameters","hd","credentialRequestCompleteCallback","oauth","credentialRequestCompleteHandler","requestCredential","loginWithGoogle","_Meteor","cb"],"mappings":"uBAAaA,EAAOC,IAAI,CAAC,uBAAuB,CAACC,SAAS,SAASC,CAAC,EAAED,EAASC,CAAC,CAAC,EAAE,GAAcH,EAAOC,IAAI,CAAC,sBAAsB,CAACG,OAAO,SAASD,CAAC,EAAEC,EAAOD,CAAC,CAAC,EAAE,GAAcH,EAAOC,IAAI,CAAC,gBAAgB,CAACI,OAAO,SAASF,CAAC,EAAEE,EAAOF,CAAC,CAAC,EAAE,GAA2BH,EAAOC,IAAI,CAAC,8CAA8C,CAACK,oBAAoB,SAASH,CAAC,EAAEG,EAAoBH,CAAC,CAAC,EAAE,GAMzX,IANID,EAAsFE,EAA+EC,EAAyEC,EAM5OC,EAAyB,SAAUC,CAAO,CAAEC,CAAI,CAAEC,CAAQ,EAO/D,GALKA,GAAY,AAAmB,YAAnB,OAAOF,IACvBE,EAAWF,EACXA,EAAU,MAGPH,EAAOM,SAAS,EAAIP,EAAOQ,MAAM,CAAE,CAItCR,EAAOQ,MAAM,CAACJ,EAASE,GACvB,MACD,CAM+D,UAA3D,OAAOR,EAASW,QAAQ,CAACC,6BAA6B,GAEzDN,AADAA,CAAAA,EAAUO,OAAOC,MAAM,CAAC,CAAC,EAAGR,GAAW,CAAC,EAAC,EACjCS,kBAAkB,CAAGF,OAAOC,MAAM,CAAC,CAAC,EAAGR,EAAQS,kBAAkB,EAAI,CAAC,GAC9ET,EAAQS,kBAAkB,CAACC,EAAE,CAAGhB,EAASW,QAAQ,CAACC,6BAA6B,EAGhF,IAAMK,EAAoCjB,EAASkB,KAAK,CAACC,gCAAgC,CAACX,EAAUD,GACpGL,EAAOkB,iBAAiB,CAACd,EAASW,EACnC,EAEQI,EAAeC,AAAKnB,EAApBkB,eAAe,AACvBlB,CAAAA,EAAOkB,eAAe,CAAG,SAAUf,CAAO,CAAEiB,CAAE,EAC7CnB,EAAoBiB,EAAiB,CAACf,EAAQ,CAAEiB,EAAIlB,EACrD"}