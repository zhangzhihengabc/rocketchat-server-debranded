)]}'
{"version":3,"sources":["meteor://ðŸ’»app/app/2fa/client/TOTPOAuth.js","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { capitalize } from '@rocket.chat/string-helpers';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Facebook } from 'meteor/facebook-oauth';\nimport { Github } from 'meteor/github-oauth';\nimport { Meteor } from 'meteor/meteor';\nimport { MeteorDeveloperAccounts } from 'meteor/meteor-developer-oauth';\nimport { OAuth } from 'meteor/oauth';\nimport { Linkedin } from 'meteor/pauli:linkedin-oauth';\nimport { Twitter } from 'meteor/twitter-oauth';\n\nimport { overrideLoginMethod } from '../../../client/lib/2fa/overrideLoginMethod';\nimport { process2faReturn } from '../../../client/lib/2fa/process2faReturn';\nimport { convertError } from '../../../client/lib/2fa/utils';\nimport { CustomOAuth } from '../../custom-oauth/client/custom_oauth_client';\n\nlet lastCredentialToken = null;\nlet lastCredentialSecret = null;\n\nAccounts.oauth.tryLoginAfterPopupClosed = function (credentialToken, callback, totpCode, credentialSecret = null) {\n\tcredentialSecret = credentialSecret || OAuth._retrieveCredentialSecret(credentialToken) || null;\n\tconst methodArgument = {\n\t\toauth: {\n\t\t\tcredentialToken,\n\t\t\tcredentialSecret,\n\t\t},\n\t};\n\n\tlastCredentialToken = credentialToken;\n\tlastCredentialSecret = credentialSecret;\n\n\tif (totpCode && typeof totpCode === 'string') {\n\t\tmethodArgument.totp = {\n\t\t\tcode: totpCode,\n\t\t};\n\t}\n\n\tAccounts.callLoginMethod({\n\t\tmethodArguments: [methodArgument],\n\t\tuserCallback:\n\t\t\tcallback &&\n\t\t\tfunction (err) {\n\t\t\t\tcallback(convertError(err));\n\t\t\t},\n\t});\n};\n\nAccounts.oauth.credentialRequestCompleteHandler = function (callback, totpCode) {\n\treturn function (credentialTokenOrError) {\n\t\tif (credentialTokenOrError && credentialTokenOrError instanceof Error) {\n\t\t\tcallback && callback(credentialTokenOrError);\n\t\t} else {\n\t\t\tAccounts.oauth.tryLoginAfterPopupClosed(credentialTokenOrError, callback, totpCode);\n\t\t}\n\t};\n};\n\nconst createOAuthTotpLoginMethod = (credentialProvider) => (options, code, callback) => {\n\t// support a callback without options\n\tif (!callback && typeof options === 'function') {\n\t\tcallback = options;\n\t\toptions = null;\n\t}\n\n\tif (lastCredentialToken && lastCredentialSecret) {\n\t\tAccounts.oauth.tryLoginAfterPopupClosed(lastCredentialToken, callback, code, lastCredentialSecret);\n\t} else {\n\t\tconst provider = (credentialProvider && credentialProvider()) || this;\n\t\tconst credentialRequestCompleteCallback = Accounts.oauth.credentialRequestCompleteHandler(callback, code);\n\t\tprovider.requestCredential(options, credentialRequestCompleteCallback);\n\t}\n\n\tlastCredentialToken = null;\n\tlastCredentialSecret = null;\n};\n\nconst loginWithOAuthTokenAndTOTP = createOAuthTotpLoginMethod();\n\nconst loginWithFacebookAndTOTP = createOAuthTotpLoginMethod(() => Facebook);\nconst { loginWithFacebook } = Meteor;\nMeteor.loginWithFacebook = function (options, cb) {\n\toverrideLoginMethod(loginWithFacebook, [options], cb, loginWithFacebookAndTOTP);\n};\n\nconst loginWithGithubAndTOTP = createOAuthTotpLoginMethod(() => Github);\nconst { loginWithGithub } = Meteor;\nMeteor.loginWithGithub = function (options, cb) {\n\toverrideLoginMethod(loginWithGithub, [options], cb, loginWithGithubAndTOTP);\n};\n\nconst loginWithMeteorDeveloperAccountAndTOTP = createOAuthTotpLoginMethod(() => MeteorDeveloperAccounts);\nconst { loginWithMeteorDeveloperAccount } = Meteor;\nMeteor.loginWithMeteorDeveloperAccount = function (options, cb) {\n\toverrideLoginMethod(loginWithMeteorDeveloperAccount, [options], cb, loginWithMeteorDeveloperAccountAndTOTP);\n};\n\nconst loginWithTwitterAndTOTP = createOAuthTotpLoginMethod(() => Twitter);\nconst { loginWithTwitter } = Meteor;\nMeteor.loginWithTwitter = function (options, cb) {\n\toverrideLoginMethod(loginWithTwitter, [options], cb, loginWithTwitterAndTOTP);\n};\n\nconst loginWithLinkedinAndTOTP = createOAuthTotpLoginMethod(() => Linkedin);\nconst { loginWithLinkedin } = Meteor;\nMeteor.loginWithLinkedin = function (options, cb) {\n\toverrideLoginMethod(loginWithLinkedin, [options], cb, loginWithLinkedinAndTOTP);\n};\n\nAccounts.onPageLoadLogin(async (loginAttempt) => {\n\tif (loginAttempt?.error?.error !== 'totp-required') {\n\t\treturn;\n\t}\n\n\tconst { methodArguments } = loginAttempt;\n\tif (!methodArguments?.length) {\n\t\treturn;\n\t}\n\n\tconst oAuthArgs = methodArguments.find((arg) => arg.oauth);\n\tconst { credentialToken, credentialSecret } = oAuthArgs.oauth;\n\tconst cb = loginAttempt.userCallback;\n\n\tawait process2faReturn({\n\t\terror: loginAttempt.error,\n\t\toriginalCallback: cb,\n\t\tonCode: (code) => {\n\t\t\tAccounts.oauth.tryLoginAfterPopupClosed(credentialToken, cb, code, credentialSecret);\n\t\t},\n\t});\n});\n\nconst oldConfigureLogin = CustomOAuth.prototype.configureLogin;\nCustomOAuth.prototype.configureLogin = function (...args) {\n\tconst loginWithService = `loginWith${capitalize(String(this.name || ''))}`;\n\n\toldConfigureLogin.apply(this, args);\n\n\tconst oldMethod = Meteor[loginWithService];\n\n\tMeteor[loginWithService] = function (options, cb) {\n\t\toverrideLoginMethod(oldMethod, [options], cb, loginWithOAuthTokenAndTOTP);\n\t};\n};\n",null],"names":["_regeneratorRuntime","capitalize","Accounts","Facebook","Github","Meteor","MeteorDeveloperAccounts","OAuth","Linkedin","Twitter","overrideLoginMethod","process2faReturn","convertError","CustomOAuth","module","link","default","v","lastCredentialToken","lastCredentialSecret","oauth","tryLoginAfterPopupClosed","credentialToken","callback","totpCode","credentialSecret","arguments","length","undefined","_retrieveCredentialSecret","methodArgument","totp","code","callLoginMethod","methodArguments","userCallback","err","credentialRequestCompleteHandler","credentialTokenOrError","Error","createOAuthTotpLoginMethod","credentialProvider","options","provider","_this","credentialRequestCompleteCallback","requestCredential","loginWithOAuthTokenAndTOTP","loginWithFacebookAndTOTP","loginWithFacebook","_Meteor","cb","loginWithGithubAndTOTP","loginWithGithub","_Meteor2","loginWithMeteorDeveloperAccountAndTOTP","loginWithMeteorDeveloperAccount","_Meteor3","loginWithTwitterAndTOTP","loginWithTwitter","_Meteor4","loginWithLinkedinAndTOTP","loginWithLinkedin","_Meteor5","onPageLoadLogin","loginAttempt","_loginAttempt$error","_oAuthArgs$oauth","async","_context","prev","next","error","abrupt","oAuthArgs","find","arg","awrap","originalCallback","onCode","stop","Promise","oldConfigureLogin","prototype","configureLogin","loginWithService","String","name","_len","args","Array","_key","apply","oldMethod"],"mappings":"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"}