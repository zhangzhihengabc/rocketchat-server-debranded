)]}'
{"version":3,"sources":["meteor://ðŸ’»app/app/lib/client/methods/sendMessage.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IMessage, IUser } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ui-contexts';\nimport { Meteor } from 'meteor/meteor';\n\nimport { onClientMessageReceived } from '../../../../client/lib/onClientMessageReceived';\nimport { dispatchToastMessage } from '../../../../client/lib/toast';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { trim } from '../../../../lib/utils/stringUtils';\nimport { ChatMessage, ChatRoom } from '../../../models/client';\nimport { settings } from '../../../settings/client';\nimport { t } from '../../../utils/lib/i18n';\n\nMeteor.methods<ServerMethods>({\n\tasync sendMessage(message) {\n\t\tconst uid = Meteor.userId();\n\t\tif (!uid || trim(message.msg) === '') {\n\t\t\treturn false;\n\t\t}\n\t\tconst messageAlreadyExists = message._id && ChatMessage.findOne({ _id: message._id });\n\t\tif (messageAlreadyExists) {\n\t\t\treturn dispatchToastMessage({ type: 'error', message: t('Message_Already_Sent') });\n\t\t}\n\t\tconst user = Meteor.user() as IUser | null;\n\t\tif (!user?.username) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'sendMessage' });\n\t\t}\n\t\tmessage.ts = new Date();\n\t\tmessage.u = {\n\t\t\t_id: uid,\n\t\t\tusername: user.username,\n\t\t\tname: user.name || '',\n\t\t};\n\t\tmessage.temp = true;\n\t\tif (settings.get('Message_Read_Receipt_Enabled')) {\n\t\t\tmessage.unread = true;\n\t\t}\n\n\t\t// If the room is federated, send the message to matrix only\n\t\tconst room = ChatRoom.findOne({ _id: message.rid }, { fields: { federated: 1, name: 1 } });\n\t\tif (room?.federated) {\n\t\t\treturn;\n\t\t}\n\n\t\tmessage = await callbacks.run('beforeSaveMessage', message);\n\t\tawait onClientMessageReceived(message as IMessage).then((message) => {\n\t\t\tChatMessage.insert(message);\n\t\t\treturn callbacks.run('afterSaveMessage', message, room);\n\t\t});\n\t},\n});\n",null],"names":["_regeneratorRuntime","Meteor","onClientMessageReceived","dispatchToastMessage","callbacks","trim","ChatMessage","ChatRoom","settings","t","module","default","link","methods","sendMessage","message","uid","user","room","async","_context","prev","next","userId","msg","abrupt","_id","findOne","type","username","Error","method","ts","Date","u","name","temp","get","unread","rid","fields","federated","awrap","run","sent","then","insert","stop","Promise"],"mappings":"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"}