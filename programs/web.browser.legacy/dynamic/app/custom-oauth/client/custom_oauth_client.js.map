)]}'
{"version":3,"sources":["meteor://ðŸ’»app/app/custom-oauth/client/custom_oauth_client.js","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Random } from '@rocket.chat/random';\nimport { capitalize } from '@rocket.chat/string-helpers';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Match } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\nimport { OAuth } from 'meteor/oauth';\nimport { ServiceConfiguration } from 'meteor/service-configuration';\n\nimport { isURL } from '../../../lib/utils/isURL';\n\n// Request custom OAuth credentials for the user\n// @param options {optional}\n// @param credentialRequestCompleteCallback {Function} Callback function to call on\n//   completion. Takes one argument, credentialToken on success, or Error on\n//   error.\n\nexport class CustomOAuth {\n\tconstructor(name, options) {\n\t\tthis.name = name;\n\t\tif (!Match.test(this.name, String)) {\n\t\t\tthrow new Meteor.Error('CustomOAuth: Name is required and must be String');\n\t\t}\n\n\t\tthis.configure(options);\n\n\t\tAccounts.oauth.registerService(this.name);\n\n\t\tthis.configureLogin();\n\t}\n\n\tconfigure(options) {\n\t\tif (!Match.test(options, Object)) {\n\t\t\tthrow new Meteor.Error('CustomOAuth: Options is required and must be Object');\n\t\t}\n\n\t\tif (!Match.test(options.serverURL, String)) {\n\t\t\tthrow new Meteor.Error('CustomOAuth: Options.serverURL is required and must be String');\n\t\t}\n\n\t\tif (!Match.test(options.authorizePath, String)) {\n\t\t\toptions.authorizePath = '/oauth/authorize';\n\t\t}\n\n\t\tif (!Match.test(options.scope, String)) {\n\t\t\toptions.scope = 'openid';\n\t\t}\n\n\t\tthis.serverURL = options.serverURL;\n\t\tthis.authorizePath = options.authorizePath;\n\t\tthis.scope = options.scope;\n\t\tthis.responseType = options.responseType || 'code';\n\n\t\tif (!isURL(this.authorizePath)) {\n\t\t\tthis.authorizePath = this.serverURL + this.authorizePath;\n\t\t}\n\t}\n\n\tconfigureLogin() {\n\t\tconst loginWithService = `loginWith${capitalize(String(this.name || ''))}`;\n\n\t\tMeteor[loginWithService] = async (options, callback) => {\n\t\t\t// support a callback without options\n\t\t\tif (!callback && typeof options === 'function') {\n\t\t\t\tcallback = options;\n\t\t\t\toptions = null;\n\t\t\t}\n\n\t\t\tconst credentialRequestCompleteCallback = Accounts.oauth.credentialRequestCompleteHandler(callback);\n\t\t\tawait this.requestCredential(options, credentialRequestCompleteCallback);\n\t\t};\n\t}\n\n\tasync requestCredential(options, credentialRequestCompleteCallback) {\n\t\t// support both (options, callback) and (callback).\n\t\tif (!credentialRequestCompleteCallback && typeof options === 'function') {\n\t\t\tcredentialRequestCompleteCallback = options;\n\t\t\toptions = {};\n\t\t}\n\n\t\tconst config = await ServiceConfiguration.configurations.findOneAsync({ service: this.name });\n\t\tif (!config) {\n\t\t\tif (credentialRequestCompleteCallback) {\n\t\t\t\tcredentialRequestCompleteCallback(new ServiceConfiguration.ConfigError());\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tconst credentialToken = Random.secret();\n\t\tconst loginStyle = OAuth._loginStyle(this.name, config, options);\n\n\t\tconst separator = this.authorizePath.indexOf('?') !== -1 ? '&' : '?';\n\n\t\tconst loginUrl =\n\t\t\t`${this.authorizePath}${separator}client_id=${config.clientId}&redirect_uri=${encodeURIComponent(\n\t\t\t\tOAuth._redirectUri(this.name, config),\n\t\t\t)}&response_type=${encodeURIComponent(this.responseType)}` +\n\t\t\t`&state=${encodeURIComponent(OAuth._stateParam(loginStyle, credentialToken, options.redirectUrl))}&scope=${encodeURIComponent(\n\t\t\t\tthis.scope,\n\t\t\t)}`;\n\n\t\tOAuth.launchLogin({\n\t\t\tloginService: this.name,\n\t\t\tloginStyle,\n\t\t\tloginUrl,\n\t\t\tcredentialRequestCompleteCallback,\n\t\t\tcredentialToken,\n\t\t\tpopupOptions: {\n\t\t\t\twidth: 900,\n\t\t\t\theight: 450,\n\t\t\t},\n\t\t});\n\t}\n}\n",null],"names":["module","link","default","v","_regeneratorRuntime","export","CustomOAuth","Random","capitalize","Accounts","Match","Meteor","OAuth","ServiceConfiguration","isURL","name","options","test","String","Error","configure","oauth","registerService","configureLogin","_proto","prototype","Object","serverURL","authorizePath","scope","responseType","_this","callback","credentialRequestCompleteCallback","async","_context","prev","next","credentialRequestCompleteHandler","awrap","requestCredential","stop","Promise","config","credentialToken","loginStyle","separator","loginUrl","_context2","configurations","findOneAsync","service","sent","ConfigError","abrupt","secret","_loginStyle","indexOf","clientId","encodeURIComponent","_redirectUri","_stateParam","redirectUrl","launchLogin","loginService","popupOptions","width","height"],"mappings":"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"}