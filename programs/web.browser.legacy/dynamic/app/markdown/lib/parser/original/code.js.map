)]}'
{"version":3,"sources":["meteor://ðŸ’»app/app/markdown/lib/parser/original/code.js","meteor://ðŸ’»app/<anon>"],"sourcesContent":["/*\n * code() is a named function that will parse `inline code` and ```codeblock``` syntaxes\n * @param {Object} message - The message object\n */\nimport { unescapeHTML } from '@rocket.chat/string-helpers';\n\nimport hljs, { register } from '../../hljs';\nimport { addAsToken } from './token';\n\nconst inlinecode = (message) => {\n\t// Support `text`\n\tmessage.html = message.html.replace(/\\`([^`\\r\\n]+)\\`([<_*~]|\\B|\\b|$)/gm, (match, p1, p2) =>\n\t\taddAsToken(\n\t\t\tmessage,\n\t\t\t`<span class=\\\"copyonly\\\">\\`</span><span><code class=\\\"code-colors inline\\\">${p1}</code></span><span class=\\\"copyonly\\\">\\`</span>${p2}`,\n\t\t\t'inlinecode',\n\t\t\t{ noHtml: match },\n\t\t),\n\t);\n};\n\nconst codeblocks = (message) => {\n\t// Count occurencies of ```\n\tconst count = (message.html.match(/```/gm) || []).length;\n\n\tif (count) {\n\t\t// Check if we need to add a final ```\n\t\tif (count % 2 > 0) {\n\t\t\tmessage.html = `${message.html}\\n\\`\\`\\``;\n\t\t\tmessage.msg = `${message.msg}\\n\\`\\`\\``;\n\t\t}\n\n\t\t// Separate text in code blocks and non code blocks\n\t\tconst msgParts = message.html.split(/(^.*)(```(?:[a-zA-Z]+)?(?:(?:.|\\r|\\n)*?)```)(.*\\n?)$/gm);\n\n\t\tfor (let index = 0; index < msgParts.length; index++) {\n\t\t\t// Verify if this part is code\n\t\t\tconst part = msgParts[index];\n\t\t\tconst codeMatch = part.match(/^```[\\r\\n]*(.*[\\r\\n\\ ]?)[\\r\\n]*([\\s\\S]*?)```+?$/);\n\n\t\t\tif (codeMatch) {\n\t\t\t\t// Process highlight if this part is code\n\t\t\t\tconst singleLine = codeMatch[0].indexOf('\\n') === -1;\n\t\t\t\tconst lang = !singleLine && Array.from(hljs.listLanguages()).includes(codeMatch[1].trim()) ? codeMatch[1].trim() : '';\n\t\t\t\tconst emptyLanguage = lang === '' ? unescapeHTML(codeMatch[1] + codeMatch[2]) : unescapeHTML(codeMatch[2]);\n\t\t\t\tconst code = singleLine ? unescapeHTML(codeMatch[1]) : emptyLanguage;\n\n\t\t\t\tconst result = (() => {\n\t\t\t\t\tif (lang) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tregister(lang);\n\t\t\t\t\t\t\treturn hljs.highlight(lang, code);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn hljs.highlightAuto(lang + code);\n\t\t\t\t})();\n\t\t\t\tconst token = addAsToken(\n\t\t\t\t\tmessage,\n\t\t\t\t\t`<pre><code class='code-colors hljs ${result.language}'><span class='copyonly'>\\`\\`\\`<br></span>${result.value}<span class='copyonly'><br>\\`\\`\\`</span></code></pre>`,\n\t\t\t\t\t'code',\n\t\t\t\t\t{\n\t\t\t\t\t\tnoHtml: codeMatch[0],\n\t\t\t\t\t\thighlight: true,\n\t\t\t\t\t},\n\t\t\t\t);\n\n\t\t\t\tmsgParts[index] = token;\n\t\t\t} else {\n\t\t\t\tmsgParts[index] = part;\n\t\t\t}\n\t\t}\n\n\t\t// Re-mount message\n\t\tmessage.html = msgParts.join('');\n\t}\n};\n\nexport const code = (message) => {\n\tif (message.html?.trim()) {\n\t\tcodeblocks(message);\n\t\tinlinecode(message);\n\t}\n\n\treturn message;\n};\n",null],"names":["module","export","code","link","unescapeHTML","v","hljs","register","addAsToken","inlinecode","message","html","replace","match","p1","p2","noHtml","codeblocks","count","length","msg","msgParts","split","index","_loop","part","codeMatch","singleLine","indexOf","lang","Array","from","listLanguages","includes","trim","emptyLanguage","result","highlight","error","console","highlightAuto","token","language","value","join","_message$html"],"mappings":"uBAAAA,EAAOC,MAAM,CAAC,CAACC,KAAK,WAAW,OAAOA,CAAI,CAAC,GAAoBF,EAAOG,IAAI,CAAC,8BAA8B,CAACC,aAAa,SAASC,CAAC,EAAED,EAAaC,CAAC,CAAC,EAAE,GAAqBL,EAAOG,IAAI,CAAC,aAAa,CAAC,QAAQ,SAASE,CAAC,EAAEC,EAAKD,CAAC,EAAEE,SAAS,SAASF,CAAC,EAAEE,EAASF,CAAC,CAAC,EAAE,GAAkBL,EAAOG,IAAI,CAAC,UAAU,CAACK,WAAW,SAASH,CAAC,EAAEG,EAAWH,CAAC,CAAC,EAAE,GAShV,IATkDD,EAAyGE,EAAKC,EAAwGC,EASlQC,EAAa,SAACC,CAAO,EAE1BA,EAAQC,IAAI,CAAGD,EAAQC,IAAI,CAACC,OAAO,CAAC,oCAAqC,SAACC,CAAK,CAAEC,CAAE,CAAEC,CAAE,EAAA,OACtFP,EACCE,EAAO,yEACuEI,EAAE,gDAAmDC,EACnI,aACA,CAAEC,OAAQH,CAAM,EAChB,EAEH,EAEMI,EAAa,SAACP,CAAO,EAE1B,IAAMQ,EAAQ,AAACR,CAAAA,EAAQC,IAAI,CAACE,KAAK,CAAC,UAAY,EAAE,AAAF,EAAIM,MAAM,CAExD,GAAID,EAAO,CAENA,EAAQ,EAAI,IACfR,EAAQC,IAAI,CAAMD,EAAQC,IAAI,CAAA,QAC9BD,EAAQU,GAAG,CAAMV,EAAQU,GAAG,CAAA,SAM7B,IAAK,IAFCC,EAAWX,EAAQC,IAAI,CAACW,KAAK,CAAC,0DAE3BC,EAAQ,EAAGA,EAAQF,EAASF,MAAM,CAAEI,KAAOC,AAF0C,WAI7F,IAAMC,EAAOJ,CAAQ,CAACE,EAAM,CACtBG,EAAYD,EAAKZ,KAAK,CAAC,mDAE7B,GAAIa,EAAW,CAEd,IAAMC,EAAaD,AAA+B,KAA/BA,CAAS,CAAC,EAAE,CAACE,OAAO,CAAC,MAClCC,EAAO,CAACF,GAAcG,MAAMC,IAAI,CAACzB,EAAK0B,aAAa,IAAIC,QAAQ,CAACP,CAAS,CAAC,EAAE,CAACQ,IAAI,IAAMR,CAAS,CAAC,EAAE,CAACQ,IAAI,GAAK,GAC7GC,EAAgBN,AAAS,KAATA,EAAczB,EAAasB,CAAS,CAAC,EAAE,CAAGA,CAAS,CAAC,EAAE,EAAItB,EAAasB,CAAS,CAAC,EAAE,EACnGxB,EAAOyB,EAAavB,EAAasB,CAAS,CAAC,EAAE,EAAIS,EAEjDC,EAAU,WACf,GAAIP,EACH,GAAI,CAEH,OADAtB,EAASsB,GACFvB,EAAK+B,SAAS,CAACR,EAAM3B,EAC7B,CAAE,MAAOoC,EAAO,CACfC,QAAQD,KAAK,CAACA,EACf,CAED,OAAOhC,EAAKkC,aAAa,CAACX,EAAO3B,EAClC,IACMuC,EAAQjC,EACbE,EAAO,sCAC+B0B,EAAOM,QAAQ,CAAA,0CAA6CN,EAAOO,KAAK,CAAA,qDAC9G,OACA,CACC3B,OAAQU,CAAS,CAAC,EAAE,CACpBW,UAAW,CAAA,CACZ,EAGDhB,CAAAA,CAAQ,CAACE,EAAM,CAAGkB,CACnB,MACCpB,CAAQ,CAACE,EAAM,CAAGE,CAEpB,GAGAf,CAAAA,EAAQC,IAAI,CAAGU,EAASuB,IAAI,CAAC,GAC9B,CACD,EAEa1C,EAAO,SAACQ,CAAO,EAAK,IAAAmC,EAMhC,OALgB,OAAhBA,CAAAA,EAAInC,EAAQC,IAAI,AAAJA,GAAIkC,AAAA,KAAA,IAAAA,GAAZA,EAAcX,IAAI,KACrBjB,EAAWP,GACXD,EAAWC,IAGLA,CACR"}