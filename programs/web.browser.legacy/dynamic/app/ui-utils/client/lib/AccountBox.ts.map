)]}'
{"version":3,"sources":["meteor://ðŸ’»app/app/ui-utils/client/lib/AccountBox.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IUIActionButton, IUActionButtonWhen } from '@rocket.chat/apps-engine/definition/ui/IUIActionButtonDescriptor';\nimport type { UserStatus } from '@rocket.chat/core-typings';\nimport type { Keys as IconName } from '@rocket.chat/icons';\nimport type { TranslationKey, LocationPathname } from '@rocket.chat/ui-contexts';\n\nimport { sdk } from '../../../utils/client/lib/SDKClient';\n\nexport interface IAppAccountBoxItem extends IUIActionButton {\n\tname: string;\n\ticon?: string;\n\thref?: string;\n\tsideNav?: string;\n\tisAppButtonItem?: boolean;\n\tsubItems?: [IAppAccountBoxItem];\n\twhen?: Omit<IUActionButtonWhen, 'roomTypes' | 'messageActionContext'>;\n}\n\nexport type AccountBoxItem = {\n\tname: TranslationKey;\n\ticon: IconName;\n\thref: LocationPathname;\n\tsideNav?: string;\n\tcondition: () => boolean;\n};\n\nexport const isAppAccountBoxItem = (item: IAppAccountBoxItem | AccountBoxItem): item is IAppAccountBoxItem => 'isAppButtonItem' in item;\n\nclass AccountBoxBase {\n\tpublic setStatus(status: UserStatus, statusText?: string): any {\n\t\treturn sdk.rest.post('/v1/users.setStatus', { status, message: statusText });\n\t}\n}\n\nexport const AccountBox = new AccountBoxBase();\n",null],"names":["module","export","isAppAccountBoxItem","AccountBox","sdk","item","AccountBoxBase","_proto","prototype","setStatus","status","statusText","rest","post","message"],"mappings":"uBAKAA,EAAOC,MAAK,CAAE,CAAAC,oBAAM,WAAA,OAAAA,CAAsC,EAAAC,WAAAA,WAAA,OAAAA,CAAA,CAAA,GAAAH,EAAAA,IAAAA,CAAAA,sCAAAA,CAAAI,IAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAoBnD,IApBmDA,EAoB7CF,EAAsB,SAACG,CAAyC,EAAA,MAAiC,oBAAqBA,CAAI,EAQ1HF,EAAa,GANN,CAAA,WAAA,SAAAG,IAAA,CAGlB,OAHkBC,AAAAD,EAAAE,SAAA,CACZC,SAAS,CAAT,SAAUC,CAAkB,CAAEC,CAAmB,EACvD,OAAOP,EAAIQ,IAAI,CAACC,IAAI,CAAC,sBAAuB,CAAEH,OAAAA,EAAQI,QAASH,CAAU,EAC1E,EAACL,CAAA,GAAA"}