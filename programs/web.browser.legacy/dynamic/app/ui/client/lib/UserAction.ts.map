)]}'
{"version":3,"sources":["meteor://ðŸ’»app/app/ui/client/lib/UserAction.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IExtras, IRoomActivity, IActionsObject, IUser } from '@rocket.chat/core-typings';\nimport { debounce } from 'lodash';\nimport { Meteor } from 'meteor/meteor';\nimport { ReactiveDict } from 'meteor/reactive-dict';\n\nimport { Notifications } from '../../../notifications/client';\nimport { settings } from '../../../settings/client';\n\nconst TIMEOUT = 15000;\nconst RENEW = TIMEOUT / 3;\n\nconst USER_ACTIVITY = 'user-activity';\n\nexport const USER_ACTIVITIES = {\n\tUSER_RECORDING: 'user-recording',\n\tUSER_TYPING: 'user-typing',\n\tUSER_UPLOADING: 'user-uploading',\n\tUSER_PLAYING: 'user-playing',\n};\n\nconst activityTimeouts = new Map();\nconst activityRenews = new Map();\nconst continuingIntervals = new Map();\nconst roomActivities = new Map<string, Set<string>>();\nconst rooms = new Map<string, (username: string, activityType: string[], extras?: object | undefined) => void>();\n\nconst performingUsers = new ReactiveDict<IActionsObject>();\n\nconst shownName = function (user: IUser | null | undefined): string | undefined {\n\tif (!user) {\n\t\treturn;\n\t}\n\tif (settings.get('UI_Use_Real_Name')) {\n\t\treturn user.name;\n\t}\n\treturn user.username;\n};\n\nconst emitActivities = debounce(async (rid: string, extras: IExtras): Promise<void> => {\n\tconst activities = roomActivities.get(extras?.tmid || rid) || new Set();\n\tNotifications.notifyRoom(rid, USER_ACTIVITY, shownName(Meteor.user() as unknown as IUser), [...activities], extras);\n}, 500);\n\nfunction handleStreamAction(rid: string, username: string, activityTypes: string[], extras?: IExtras): void {\n\trid = extras?.tmid || rid;\n\tconst roomActivities = performingUsers.get(rid) || {};\n\n\tfor (const [, activity] of Object.entries(USER_ACTIVITIES)) {\n\t\troomActivities[activity] = roomActivities[activity] || new Map();\n\t\tconst users = roomActivities[activity];\n\t\tconst timeout = users[username];\n\n\t\tif (timeout) {\n\t\t\tclearTimeout(timeout);\n\t\t}\n\n\t\tif (activityTypes.includes(activity)) {\n\t\t\tactivityTypes.splice(activityTypes.indexOf(activity), 1);\n\t\t\tusers[username] = setTimeout(() => handleStreamAction(rid, username, activityTypes, extras), TIMEOUT);\n\t\t} else {\n\t\t\tdelete users[username];\n\t\t}\n\t}\n\n\tperformingUsers.set(rid, roomActivities);\n}\nexport const UserAction = new (class {\n\taddStream(rid: string): void {\n\t\tif (rooms.get(rid)) {\n\t\t\treturn;\n\t\t}\n\t\tconst handler = function (username: string, activityType: string[], extras?: object): void {\n\t\t\tconst user = Meteor.users.findOne(Meteor.userId() || undefined, {\n\t\t\t\tfields: { name: 1, username: 1 },\n\t\t\t}) as IUser;\n\t\t\tif (username === shownName(user)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\thandleStreamAction(rid, username, activityType, extras);\n\t\t};\n\t\trooms.set(rid, handler);\n\t\tNotifications.onRoom(rid, USER_ACTIVITY, handler);\n\t}\n\n\tperformContinuously(rid: string, activityType: string, extras: IExtras = {}): void {\n\t\tconst trid = extras?.tmid || rid;\n\t\tconst key = `${activityType}-${trid}`;\n\n\t\tif (continuingIntervals.get(key)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.start(rid, activityType, extras);\n\n\t\tcontinuingIntervals.set(\n\t\t\tkey,\n\t\t\tsetInterval(() => {\n\t\t\t\tthis.start(rid, activityType, extras);\n\t\t\t}, RENEW),\n\t\t);\n\t}\n\n\tstart(rid: string, activityType: string, extras: IExtras = {}): void {\n\t\tconst trid = extras?.tmid || rid;\n\t\tconst key = `${activityType}-${trid}`;\n\n\t\tif (activityRenews.get(key)) {\n\t\t\treturn;\n\t\t}\n\n\t\tactivityRenews.set(\n\t\t\tkey,\n\t\t\tsetTimeout(() => {\n\t\t\t\tclearTimeout(activityRenews.get(key));\n\t\t\t\tactivityRenews.delete(key);\n\t\t\t}, RENEW),\n\t\t);\n\n\t\tconst activities = roomActivities.get(trid) || new Set();\n\t\tactivities.add(activityType);\n\t\troomActivities.set(trid, activities);\n\n\t\tvoid emitActivities(rid, extras);\n\n\t\tif (activityTimeouts.get(key)) {\n\t\t\tclearTimeout(activityTimeouts.get(key));\n\t\t\tactivityTimeouts.delete(key);\n\t\t}\n\n\t\tactivityTimeouts.set(\n\t\t\tkey,\n\t\t\tsetTimeout(() => this.stop(trid, activityType, extras), TIMEOUT),\n\t\t);\n\t\tactivityTimeouts.get(key);\n\t}\n\n\tstop(rid: string, activityType: string, extras: IExtras): void {\n\t\tconst trid = extras?.tmid || rid;\n\t\tconst key = `${activityType}-${trid}`;\n\n\t\tif (activityTimeouts.get(key)) {\n\t\t\tclearTimeout(activityTimeouts.get(key));\n\t\t\tactivityTimeouts.delete(key);\n\t\t}\n\t\tif (activityRenews.get(key)) {\n\t\t\tclearTimeout(activityRenews.get(key));\n\t\t\tactivityRenews.delete(key);\n\t\t}\n\t\tif (continuingIntervals.get(key)) {\n\t\t\tclearInterval(continuingIntervals.get(key));\n\t\t\tcontinuingIntervals.delete(key);\n\t\t}\n\n\t\tconst activities = roomActivities.get(trid) || new Set();\n\t\tactivities.delete(activityType);\n\t\troomActivities.set(trid, activities);\n\t\tvoid emitActivities(rid, extras);\n\t}\n\n\tcancel(rid: string): void {\n\t\tif (!rooms.get(rid)) {\n\t\t\treturn;\n\t\t}\n\n\t\tNotifications.unRoom(rid, USER_ACTIVITY);\n\t\trooms.delete(rid);\n\t}\n\n\tget(roomId: string): IRoomActivity | undefined {\n\t\treturn performingUsers.get(roomId);\n\t}\n})();\n",null],"names":["module","link","default","_regeneratorRuntime","_slicedToArray","_toConsumableArray","export","USER_ACTIVITIES","UserAction","debounce","Meteor","ReactiveDict","Notifications","settings","USER_ACTIVITY","USER_RECORDING","USER_TYPING","USER_UPLOADING","USER_PLAYING","activityTimeouts","Map","activityRenews","continuingIntervals","roomActivities","rooms","performingUsers","shownName","user","get","name","username","emitActivities","rid","extras","activities","async","_context","prev","next","tmid","Set","notifyRoom","stop","Promise","_class","_proto","prototype","addStream","handler","activityType","users","findOne","userId","undefined","fields","handleStreamAction","activityTypes","_i","_Object$entries","Object","entries","length","activity","_ref2","timeout","clearTimeout","includes","splice","indexOf","setTimeout","set","onRoom","performContinuously","_this","key","start","setInterval","TIMEOUT","_this2","trid","delete","add","clearInterval","cancel","unRoom","roomId"],"mappings":"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"}