)]}'
{"version":3,"sources":["meteor://ðŸ’»app/app/ui-message/client/popup/messagePopupConfig.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { Tracker } from 'meteor/tracker';\n\nimport { RoomManager } from '../../../../client/lib/RoomManager';\nimport { asReactiveSource } from '../../../../client/lib/tracker';\nimport { Messages } from '../../../models/client';\n\nexport const usersFromRoomMessages = new Mongo.Collection<{\n\t_id: string;\n\tusername: string;\n\tname: string | undefined;\n\tts: Date;\n\tsuggestion?: boolean;\n}>(null);\n\nMeteor.startup(() => {\n\tTracker.autorun(() => {\n\t\tconst uid = Meteor.userId();\n\t\tconst rid = asReactiveSource(\n\t\t\t(cb) => RoomManager.on('changed', cb),\n\t\t\t() => RoomManager.opened,\n\t\t);\n\t\tconst user = uid ? (Meteor.users.findOne(uid, { fields: { username: 1 } }) as IUser | undefined) : undefined;\n\t\tif (!rid || !user) {\n\t\t\treturn;\n\t\t}\n\n\t\tusersFromRoomMessages.remove({});\n\n\t\tconst uniqueMessageUsersControl: Record<string, boolean> = {};\n\n\t\tMessages.find(\n\t\t\t{\n\t\t\t\trid,\n\t\t\t\t'u.username': { $ne: user.username },\n\t\t\t\t't': { $exists: false },\n\t\t\t},\n\t\t\t{\n\t\t\t\tfields: {\n\t\t\t\t\t'u.username': 1,\n\t\t\t\t\t'u.name': 1,\n\t\t\t\t\t'u._id': 1,\n\t\t\t\t\t'ts': 1,\n\t\t\t\t},\n\t\t\t\tsort: { ts: -1 },\n\t\t\t},\n\t\t)\n\t\t\t.fetch()\n\t\t\t.filter(({ u: { username } }) => {\n\t\t\t\tconst notMapped = !uniqueMessageUsersControl[username];\n\t\t\t\tuniqueMessageUsersControl[username] = true;\n\t\t\t\treturn notMapped;\n\t\t\t})\n\t\t\t.forEach(({ u: { username, name, _id }, ts }) =>\n\t\t\t\tusersFromRoomMessages.upsert(_id, {\n\t\t\t\t\t_id,\n\t\t\t\t\tusername,\n\t\t\t\t\tname,\n\t\t\t\t\tts,\n\t\t\t\t}),\n\t\t\t);\n\t});\n});\n",null],"names":["module","export","usersFromRoomMessages","Meteor","Mongo","Tracker","RoomManager","asReactiveSource","Messages","Collection","startup","autorun","uid","userId","rid","cb","on","opened","user","users","findOne","fields","username","undefined","remove","uniqueMessageUsersControl","find","$ne","$exists","sort","ts","fetch","filter","_ref","u","notMapped","forEach","_ref2","_ref2$u","name","_id","upsert"],"mappings":"uBACAA,EAAOC,MAAE,CAAA,CAAMC,sBAAQ,WAAgB,OAAAA,CAAA,CAAA,GAAAF,EAAAA,IAAAA,CAAAA,gBAAAA,CAAAG,OAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAH,EAAAA,IAAAA,CAAAA,eAAAA,CAAAI,MAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAJ,EAAAA,IAAAA,CAAAA,iBAAAA,CAAAK,QAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAL,EAAAA,IAAAA,CAAAA,qCAAAA,CAAAM,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAN,EAAAA,IAAAA,CAAAA,iCAAAA,CAAAO,iBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAP,EAAAA,IAAAA,CAAAA,yBAAAA,CAAAQ,SAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAQhC,IARgCL,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAQ1BN,EAAwB,IAAIE,EAAMK,UAAU,CAMtD,MAEHN,EAAOO,OAAO,CAAC,WACdL,EAAQM,OAAO,CAAC,WACf,IAAMC,EAAMT,EAAOU,MAAM,GACnBC,EAAMP,EACX,SAACQ,CAAE,EAAA,OAAKT,EAAYU,EAAE,CAAC,UAAWD,EAAG,EACrC,WAAA,OAAMT,EAAYW,MAAM,GAEnBC,EAAON,EAAOT,EAAOgB,KAAK,CAACC,OAAO,CAACR,EAAK,CAAES,OAAQ,CAAEC,SAAU,CAAC,CAAE,GAA4BC,KAAAA,EACnG,GAAI,AAACT,GAAQI,GAIbhB,EAAsBsB,MAAM,CAAC,CAAA,GAE7B,IAAMC,EAAqD,CAAA,EAE3DjB,EAASkB,IAAI,CACZ,CACCZ,IAAAA,EACA,aAAc,CAAEa,IAAKT,EAAKI,QAAAA,AAAQ,EAClC,EAAK,CAAEM,QAAS,CAAA,CAAK,GAEtB,CACCP,OAAQ,CACP,aAAc,EACd,SAAU,EACV,QAAS,EACT,GAAM,GAEPQ,KAAM,CAAEC,GAAI,EAAE,IAGdC,KAAK,GACLC,MAAM,CAAC,SAAAC,CAAA,EAAwB,IAAhBX,EAAQW,EAAbC,CAAC,CAAIZ,QAAQ,CACjBa,EAAY,CAACV,CAAyB,CAACH,EAAS,CAEtD,OADAG,CAAyB,CAACH,EAAS,CAAG,CAAA,EAC/Ba,CACR,GACCC,OAAO,CAAC,SAAAC,CAAA,EAAA,IAAAC,EAAAD,EAAGH,CAAC,CAAIZ,EAAQgB,EAARhB,QAAQ,CAAEiB,EAAID,EAAJC,IAAI,CAAEC,EAAGF,EAAHE,GAAG,CAAIV,EAAEO,EAAFP,EAAE,CAAA,OACzC5B,EAAsBuC,MAAM,CAACD,EAAK,CACjCA,IAAAA,EACAlB,SAAAA,EACAiB,KAAAA,EACAT,GAAAA,GACC,GAEL,EACD"}