)]}'
{"version":3,"sources":["meteor://ðŸ’»app/app/ui-message/client/popup/components/composerBoxPopup/ComposerBoxPopupUser.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { OptionAvatar, OptionColumn, OptionContent, OptionInput } from '@rocket.chat/fuselage';\nimport { useTranslation } from '@rocket.chat/ui-contexts';\nimport React from 'react';\n\nimport ReactiveUserStatus from '../../../../../../client/components/UserStatus/ReactiveUserStatus';\nimport UserAvatar from '../../../../../../client/components/avatar/UserAvatar';\n\nexport type ComposerBoxPopupUserProps = {\n\t_id: string;\n\tsystem?: boolean;\n\toutside?: boolean;\n\tsuggestion?: boolean;\n\tusername: string;\n\tname?: string;\n\tnickname?: string;\n\tstatus?: string;\n\tsort?: number;\n\tvariant?: 'small' | 'large';\n};\n\nconst ComposerBoxPopupUser = ({ _id, system, username, name, nickname, outside, suggestion, variant }: ComposerBoxPopupUserProps) => {\n\tconst t = useTranslation();\n\n\treturn (\n\t\t<>\n\t\t\t{!system && (\n\t\t\t\t<>\n\t\t\t\t\t<OptionAvatar>\n\t\t\t\t\t\t<UserAvatar size='x28' username={username} />\n\t\t\t\t\t</OptionAvatar>\n\t\t\t\t\t<OptionColumn>\n\t\t\t\t\t\t<ReactiveUserStatus uid={_id} />\n\t\t\t\t\t</OptionColumn>\n\t\t\t\t\t<OptionContent>\n\t\t\t\t\t\t<strong>{name ?? username}</strong> {name && name !== username && username}\n\t\t\t\t\t\t{nickname && <span className='popup-user-nickname'>({nickname})</span>}\n\t\t\t\t\t</OptionContent>\n\t\t\t\t</>\n\t\t\t)}\n\n\t\t\t{system && (\n\t\t\t\t<OptionContent>\n\t\t\t\t\t<strong>{username}</strong> {name}\n\t\t\t\t</OptionContent>\n\t\t\t)}\n\n\t\t\t{outside && variant === 'large' && (\n\t\t\t\t<OptionColumn>\n\t\t\t\t\t<OptionInput>{t('Not_in_channel')}</OptionInput>\n\t\t\t\t</OptionColumn>\n\t\t\t)}\n\n\t\t\t{suggestion && variant === 'large' && (\n\t\t\t\t<OptionColumn>\n\t\t\t\t\t<OptionInput>{t('Suggestion_from_recent_messages')}</OptionInput>\n\t\t\t\t</OptionColumn>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default ComposerBoxPopupUser;\n",null],"names":["OptionAvatar","OptionColumn","OptionContent","OptionInput","useTranslation","React","ReactiveUserStatus","UserAvatar","module","link","v","exportDefault","_ref","_id","system","username","name","nickname","outside","suggestion","variant","t","createElement","Fragment","size","uid","className"],"mappings":"uBAoBA,IApBAA,EAASC,EAAcC,EAAcC,EAA0DC,EAAAC,EAAAC,EAAAC,EAA3CC,EAAWC,IAAE,CAAA,wBAAM,CAAAT,aAAwB,SAAAU,CAAA,EAAAV,EAAAA,CAAA,EAAAC,aAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,cAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,YAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAJ,eAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,QAAAA,CAAA,QAAA,SAAAE,CAAA,EAAAL,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,oEAAAA,CAAA,QAAA,SAAAE,CAAA,EAAAJ,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,wDAAAA,CAAA,QAAA,SAAAE,CAAA,EAAAH,EAAAA,CAAA,CAAA,EAAA,GAA/FC,EAAOG,aAAE,CAoBoB,SAAAC,CAAA,EAAuG,IAApGC,EAAGD,EAAHC,GAAG,CAAEC,EAAMF,EAANE,MAAM,CAAEC,EAAQH,EAARG,QAAQ,CAAEC,EAAIJ,EAAJI,IAAI,CAAEC,EAAQL,EAARK,QAAQ,CAAEC,EAAON,EAAPM,OAAO,CAAEC,EAAUP,EAAVO,UAAU,CAAEC,EAAOR,EAAPQ,OAAO,CAC5FC,EAAIjB,IAEV,OACCC,EAAAiB,aAAA,CAAAjB,EAAAkB,QAAA,CAAA,KACE,CAACT,GACDT,EAAAiB,aAAA,CAAAjB,EAAAkB,QAAA,CAAA,KACClB,EAAAiB,aAAA,CAACtB,EAAY,KACZK,EAAAiB,aAAA,CAACf,EAAU,CAACiB,KAAK,MAAMT,SAAUA,CAAS,IAE3CV,EAAAiB,aAAA,CAACrB,EAAY,KACZI,EAAAiB,aAAA,CAAChB,EAAkB,CAACmB,IAAKZ,CAAI,IAE9BR,EAAAiB,aAAA,CAACpB,EAAa,KACbG,EAAAiB,aAAA,CAAA,SAAA,KAASN,MAAAA,EAAAA,EAAQD,GAAmB,IAACC,GAAQA,IAASD,GAAYA,EACjEE,GAAYZ,EAAAiB,aAAA,CAAA,OAAA,CAAMI,UAAU,qBAAqB,EAAC,IAAET,EAAS,OAKhEH,GACAT,EAAAiB,aAAA,CAACpB,EAAa,KACbG,EAAAiB,aAAA,CAAA,SAAA,KAASP,GAAmB,IAACC,GAI9BE,GAAWE,AAAY,UAAZA,GACXf,EAAAiB,aAAA,CAACrB,EAAY,KACZI,EAAAiB,aAAA,CAACnB,EAAW,KAAEkB,EAAE,oBAIjBF,GAAcC,AAAY,UAAZA,GACdf,EAAAiB,aAAA,CAACrB,EAAY,KACZI,EAAAiB,aAAA,CAACnB,EAAW,KAAEkB,EAAE,qCAKrB"}