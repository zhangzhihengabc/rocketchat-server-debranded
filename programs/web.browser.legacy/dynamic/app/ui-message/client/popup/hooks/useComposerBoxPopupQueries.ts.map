)]}'
{"version":3,"sources":["meteor://ðŸ’»app/app/ui-message/client/popup/hooks/useComposerBoxPopupQueries.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { QueriesResults } from '@tanstack/react-query';\nimport { useQueries } from '@tanstack/react-query';\nimport { useEffect, useState } from 'react';\n\nimport type { ComposerPopupOption } from '../../../../../client/views/room/contexts/ComposerPopupContext';\nimport { slashCommands } from '../../../../utils/lib/slashCommand';\nimport { useEnablePopupPreview } from './useEnablePopupPreview';\n\nexport const useComposerBoxPopupQueries = <T extends { _id: string; sort?: number }>(filter: unknown, popup?: ComposerPopupOption<T>) => {\n\tconst [counter, setCounter] = useState(0);\n\n\tuseEffect(() => {\n\t\tsetCounter(0);\n\t}, [popup, filter]);\n\n\tconst shouldPopupPreview = useEnablePopupPreview(filter, popup);\n\n\tconst enableQuery =\n\t\t!popup ||\n\t\t(popup.preview &&\n\t\t\tBoolean(slashCommands.commands[(filter as any)?.cmd]) &&\n\t\t\tslashCommands.commands[(filter as any)?.cmd].providesPreview) ||\n\t\tshouldPopupPreview;\n\n\treturn {\n\t\tqueries: useQueries({\n\t\t\tqueries: [\n\t\t\t\tpopup?.getItemsFromLocal && {\n\t\t\t\t\tkeepPreviousData: true,\n\t\t\t\t\tqueryKey: ['message-popup', 'local', filter, popup],\n\t\t\t\t\tqueryFn: () => popup?.getItemsFromLocal && popup.getItemsFromLocal(filter),\n\t\t\t\t\tonSuccess: (args: T[]) => {\n\t\t\t\t\t\tif (args.length < 5) {\n\t\t\t\t\t\t\tsetCounter(1);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tenabled: enableQuery,\n\t\t\t\t},\n\t\t\t\tpopup?.getItemsFromServer && {\n\t\t\t\t\tkeepPreviousData: true,\n\t\t\t\t\tqueryKey: ['message-popup', 'server', filter, popup],\n\t\t\t\t\tqueryFn: () => popup?.getItemsFromServer && popup.getItemsFromServer(filter),\n\t\t\t\t\tenabled: counter > 0,\n\t\t\t\t},\n\t\t\t].filter(Boolean) as any,\n\t\t}) as QueriesResults<T[]>,\n\t\tsuspended: !enableQuery,\n\t};\n};\n",null],"names":["module","link","default","_slicedToArray","export","useComposerBoxPopupQueries","useQueries","useEffect","useState","slashCommands","useEnablePopupPreview","filter","popup","_useState2","counter","setCounter","shouldPopupPreview","enableQuery","preview","Boolean","commands","cmd","providesPreview","queries","getItemsFromLocal","keepPreviousData","queryKey","queryFn","onSuccess","args","length","enabled","getItemsFromServer","suspended"],"mappings":"uBACmBA,EAAEC,IAAM,CAAA,uCAAwB,CAAAC,QAAAA,SAAAA,CAAAA,EAAAC,EAAAA,CAAA,CAAA,EAAA,GAAnDH,EAAOI,MAAE,CAAA,CAAAC,2BAAkB,WAAwB,OAAAA,CAAA,CAAA,GAAAL,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAM,WAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAN,EAAAA,IAAAA,CAAAA,QAAAA,CAAAO,UAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,SAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAR,EAAAA,IAAAA,CAAAA,qCAAAA,CAAAS,cAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAT,EAAAA,IAAAA,CAAAA,0BAAAA,CAAAU,sBAAAA,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAO5C,IAPPP,EAAmDG,EAAAC,EAAAC,EAAAC,EAAAC,EAOtCL,EAA6B,SAA2CM,CAAe,CAAEC,CAA8B,EACnI,IAAyCC,EAAAV,EAAXK,EAAS,GAAE,GAAlCM,EAAOD,CAAA,CAAA,EAAA,CAAEE,EAAUF,CAAA,CAAA,EAAA,CAE1BN,EAAU,WACTQ,EAAW,EACZ,EAAG,CAACH,EAAOD,EAAO,EAElB,IAAMK,EAAqBN,EAAsBC,EAAQC,GAEnDK,EACL,CAACL,GACAA,EAAMM,OAAO,EACbC,CAAAA,CAAQV,EAAcW,QAAQ,CAAET,MAAAA,EAAc,KAAA,EAAdA,EAAgBU,GAAG,CAAC,EACpDZ,EAAcW,QAAQ,CAAET,MAAAA,EAAc,KAAA,EAAdA,EAAgBU,GAAG,CAAC,CAACC,eAAgB,EAC9DN,EAED,MAAO,CACNO,QAASjB,EAAW,CACnBiB,QAAS,CACR,AAAAX,CAAAA,MAAAA,EAAK,KAAA,EAALA,EAAOY,iBAAiB,AAAjBA,GAAqB,CAC3BC,iBAAkB,CAAA,EAClBC,SAAU,CAAC,gBAAiB,QAASf,EAAQC,EAAM,CACnDe,QAAS,WAAA,MAAM,AAAAf,CAAAA,MAAAA,EAAK,KAAA,EAALA,EAAOY,iBAAiB,AAAjBA,GAAqBZ,EAAMY,iBAAiB,CAACb,EAAO,EAC1EiB,UAAW,SAACC,CAAS,EAChBA,EAAKC,MAAM,CAAG,GACjBf,EAAW,EAEb,EACAgB,QAASd,GAEV,AAAAL,CAAAA,MAAAA,EAAK,KAAA,EAALA,EAAOoB,kBAAkB,AAAlBA,GAAsB,CAC5BP,iBAAkB,CAAA,EAClBC,SAAU,CAAC,gBAAiB,SAAUf,EAAQC,EAAM,CACpDe,QAAS,WAAA,MAAM,AAAAf,CAAAA,MAAAA,EAAK,KAAA,EAALA,EAAOoB,kBAAkB,AAAlBA,GAAsBpB,EAAMoB,kBAAkB,CAACrB,EAAO,EAC5EoB,QAASjB,EAAU,GAEpB,CAACH,MAAM,CAACQ,WAEVc,UAAW,CAAChB,EAEd"}