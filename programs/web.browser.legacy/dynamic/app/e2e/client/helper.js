function module(n,r,e){e.link("@babel/runtime/regenerator",{default:function(n){t=n}},0),e.link("@babel/runtime/helpers/typeof",{default:function(n){u=n}},1),e.export({toString:function(){return i},toArrayBuffer:function(){return s},joinVectorAndEcryptedData:function(){return l},splitVectorAndEcryptedData:function(){return f},encryptRSA:function(){return p},encryptAES:function(){return y},decryptRSA:function(){return d},decryptAES:function(){return m},generateAESKey:function(){return A},generateRSAKey:function(){return h},exportJWKKey:function(){return b},importRSAKey:function(){return v},importAESKey:function(){return w},importRawKey:function(){return g},deriveKey:function(){return S},readFileAsArrayBuffer:function(){return P},generateMnemonicPhrase:function(){return x}}),e.link("@rocket.chat/random",{Random:function(n){c=n}},0),e.link("bytebuffer",{default:function(n){o=n}},1);var t,u,c,o,a=new ArrayBuffer().__proto__;function i(n){return"string"==typeof n?n:new o.wrap(n).toString("binary")}function s(n){if(void 0!==n){if(n===Object(n)&&n.__proto__===a)return n;if("string"!=typeof n)throw Error("Tried to convert a non-string of type "+u(n)+" to an array buffer");return new o.wrap(n,"binary").toArrayBuffer()}}function l(n,r){var e=new Uint8Array(r),t=new Uint8Array(n.length+e.length);return t.set(n,0),t.set(e,n.length),t}function f(n){return[n.slice(0,16),n.slice(16)]}function p(n,r){return t.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",crypto.subtle.encrypt({name:"RSA-OAEP"},n,r));case 1:case"end":return e.stop()}},null,null,null,Promise)}function y(n,r,e){return t.async(function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",crypto.subtle.encrypt({name:"AES-CBC",iv:n},r,e));case 1:case"end":return t.stop()}},null,null,null,Promise)}function d(n,r){return t.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",crypto.subtle.decrypt({name:"RSA-OAEP"},n,r));case 1:case"end":return e.stop()}},null,null,null,Promise)}function m(n,r,e){return t.async(function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",crypto.subtle.decrypt({name:"AES-CBC",iv:n},r,e));case 1:case"end":return t.stop()}},null,null,null,Promise)}function A(){return t.async(function(n){for(;;)switch(n.prev=n.next){case 0:return n.abrupt("return",crypto.subtle.generateKey({name:"AES-CBC",length:128},!0,["encrypt","decrypt"]));case 1:case"end":return n.stop()}},null,null,null,Promise)}function h(){return t.async(function(n){for(;;)switch(n.prev=n.next){case 0:return n.abrupt("return",crypto.subtle.generateKey({name:"RSA-OAEP",modulusLength:2048,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,["encrypt","decrypt"]));case 1:case"end":return n.stop()}},null,null,null,Promise)}function b(n){return t.async(function(r){for(;;)switch(r.prev=r.next){case 0:return r.abrupt("return",crypto.subtle.exportKey("jwk",n));case 1:case"end":return r.stop()}},null,null,null,Promise)}function v(n){var r,e=arguments;return t.async(function(t){for(;;)switch(t.prev=t.next){case 0:return r=e.length>1&&void 0!==e[1]?e[1]:["encrypt","decrypt"],t.abrupt("return",crypto.subtle.importKey("jwk",n,{name:"RSA-OAEP",modulusLength:2048,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,r));case 2:case"end":return t.stop()}},null,null,null,Promise)}function w(n){var r,e=arguments;return t.async(function(t){for(;;)switch(t.prev=t.next){case 0:return r=e.length>1&&void 0!==e[1]?e[1]:["encrypt","decrypt"],t.abrupt("return",crypto.subtle.importKey("jwk",n,{name:"AES-CBC"},!0,r));case 2:case"end":return t.stop()}},null,null,null,Promise)}function g(n){var r,e=arguments;return t.async(function(t){for(;;)switch(t.prev=t.next){case 0:return r=e.length>1&&void 0!==e[1]?e[1]:["deriveKey"],t.abrupt("return",crypto.subtle.importKey("raw",n,{name:"PBKDF2"},!1,r));case 2:case"end":return t.stop()}},null,null,null,Promise)}function S(n,r){var e,u=arguments;return t.async(function(t){for(;;)switch(t.prev=t.next){case 0:return e=u.length>2&&void 0!==u[2]?u[2]:["encrypt","decrypt"],t.abrupt("return",crypto.subtle.deriveKey({name:"PBKDF2",salt:n,iterations:1e3,hash:"SHA-256"},r,{name:"AES-CBC",length:256},!0,e));case 4:case"end":return t.stop()}},null,null,null,Promise)}function P(n){return t.async(function(r){for(;;)switch(r.prev=r.next){case 0:return r.abrupt("return",new Promise(function(r,e){var t=new FileReader;t.onload=function(n){r(n.target.result)},t.onerror=function(n){e(n)},t.readAsArrayBuffer(n)}));case 1:case"end":return r.stop()}},null,null,null,Promise)}function x(n){var r,u,o,a,i,s,l=arguments;return t.async(function(f){for(;;)switch(f.prev=f.next){case 0:return r=l.length>1&&void 0!==l[1]?l[1]:" ",f.next=3,t.awrap(e.dynamicImport("./wordList"));case 3:for(u=f.sent.default,o=Array(n),i=Array(a=u.length);n--;)s=Math.floor(c.fraction()*a),o[n]=u[s in i?i[s]:s],i[s]=--a in i?i[a]:a;return f.abrupt("return",o.join(r));case 10:case"end":return f.stop()}},null,null,null,Promise)}}
//# sourceMappingURL=/dynamic/app/e2e/client/f37948e9a28c3ccc5623c59f264bb8fecb3ab479.map
