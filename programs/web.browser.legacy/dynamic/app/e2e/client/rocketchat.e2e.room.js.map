)]}'
{"version":3,"sources":["meteor://ðŸ’»app/app/e2e/client/rocketchat.e2e.room.js","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Base64 } from '@rocket.chat/base64';\nimport { Emitter } from '@rocket.chat/emitter';\nimport { Random } from '@rocket.chat/random';\nimport EJSON from 'ejson';\n\nimport { RoomManager } from '../../../client/lib/RoomManager';\nimport { roomCoordinator } from '../../../client/lib/rooms/roomCoordinator';\nimport { RoomSettingsEnum } from '../../../definition/IRoomTypeConfig';\nimport { ChatRoom, Subscriptions, Messages } from '../../models/client';\nimport { Notifications } from '../../notifications/client';\nimport { sdk } from '../../utils/client/lib/SDKClient';\nimport { E2ERoomState } from './E2ERoomState';\nimport {\n\ttoString,\n\ttoArrayBuffer,\n\tjoinVectorAndEcryptedData,\n\tsplitVectorAndEcryptedData,\n\tencryptRSA,\n\tencryptAES,\n\tdecryptRSA,\n\tdecryptAES,\n\tgenerateAESKey,\n\texportJWKKey,\n\timportAESKey,\n\timportRSAKey,\n\treadFileAsArrayBuffer,\n} from './helper';\nimport { log, logError } from './logger';\nimport { e2e } from './rocketchat.e2e';\n\nconst KEY_ID = Symbol('keyID');\nconst PAUSED = Symbol('PAUSED');\n\nconst permitedMutations = {\n\t[E2ERoomState.NOT_STARTED]: [E2ERoomState.ESTABLISHING, E2ERoomState.DISABLED, E2ERoomState.KEYS_RECEIVED],\n\t[E2ERoomState.READY]: [E2ERoomState.DISABLED],\n\t[E2ERoomState.ERROR]: [E2ERoomState.KEYS_RECEIVED, E2ERoomState.NOT_STARTED],\n\t[E2ERoomState.WAITING_KEYS]: [E2ERoomState.KEYS_RECEIVED, E2ERoomState.ERROR, E2ERoomState.DISABLED],\n\t[E2ERoomState.ESTABLISHING]: [\n\t\tE2ERoomState.READY,\n\t\tE2ERoomState.KEYS_RECEIVED,\n\t\tE2ERoomState.ERROR,\n\t\tE2ERoomState.DISABLED,\n\t\tE2ERoomState.WAITING_KEYS,\n\t],\n};\n\nconst filterMutation = (currentState, nextState) => {\n\tif (currentState === nextState) {\n\t\treturn nextState === E2ERoomState.ERROR;\n\t}\n\n\tif (!(currentState in permitedMutations)) {\n\t\treturn nextState;\n\t}\n\n\tif (permitedMutations[currentState].includes(nextState)) {\n\t\treturn nextState;\n\t}\n\n\treturn false;\n};\n\nexport class E2ERoom extends Emitter {\n\tstate = undefined;\n\n\t[PAUSED] = undefined;\n\n\tconstructor(userId, roomId, t) {\n\t\tsuper();\n\n\t\tthis.userId = userId;\n\t\tthis.roomId = roomId;\n\t\tthis.typeOfRoom = t;\n\n\t\tthis.once(E2ERoomState.READY, () => this.decryptPendingMessages());\n\t\tthis.once(E2ERoomState.READY, () => this.decryptSubscription());\n\t\tthis.on('STATE_CHANGED', (prev) => {\n\t\t\tif (this.roomId === RoomManager.opened) {\n\t\t\t\tthis.log(`[PREV: ${prev}]`, 'State CHANGED');\n\t\t\t}\n\t\t});\n\t\tthis.on('STATE_CHANGED', () => this.handshake());\n\n\t\tthis.setState(E2ERoomState.NOT_STARTED);\n\t}\n\n\tlog(...msg) {\n\t\tlog(`E2E ROOM { state: ${this.state}, rid: ${this.roomId} }`, ...msg);\n\t}\n\n\terror(...msg) {\n\t\tlogError(`E2E ROOM { state: ${this.state}, rid: ${this.roomId} }`, ...msg);\n\t}\n\n\tsetState(requestedState) {\n\t\tconst currentState = this.state;\n\t\tconst nextState = filterMutation(currentState, requestedState);\n\n\t\tif (!nextState) {\n\t\t\tthis.error(`invalid state ${currentState} -> ${requestedState}`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state = nextState;\n\t\tthis.log(currentState, '->', nextState);\n\t\tthis.emit('STATE_CHANGED', currentState, nextState, this);\n\t\tthis.emit(nextState, this);\n\t}\n\n\tisReady() {\n\t\treturn this.state === E2ERoomState.READY;\n\t}\n\n\tisDisabled() {\n\t\treturn this.state === E2ERoomState.DISABLED;\n\t}\n\n\tenable() {\n\t\tif (this.state === E2ERoomState.READY) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setState(E2ERoomState.READY);\n\t}\n\n\tdisable() {\n\t\tthis.setState(E2ERoomState.DISABLED);\n\t}\n\n\tpause() {\n\t\tthis.log('PAUSED', this[PAUSED], '->', true);\n\t\tthis[PAUSED] = true;\n\t\tthis.emit('PAUSED', true);\n\t}\n\n\tresume() {\n\t\tthis.log('PAUSED', this[PAUSED], '->', false);\n\t\tthis[PAUSED] = false;\n\t\tthis.emit('PAUSED', false);\n\t}\n\n\tkeyReceived() {\n\t\tthis.setState(E2ERoomState.KEYS_RECEIVED);\n\t}\n\n\tasync shouldConvertSentMessages(message) {\n\t\tif (!this.isReady() || this[PAUSED]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this[PAUSED] === undefined) {\n\t\t\treturn new Promise((resolve) => {\n\t\t\t\tthis.once('PAUSED', resolve);\n\t\t\t});\n\t\t}\n\n\t\tif (message.msg[0] === '/') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tshouldConvertReceivedMessages() {\n\t\treturn this.isReady();\n\t}\n\n\tisWaitingKeys() {\n\t\treturn this.state === E2ERoomState.WAITING_KEYS;\n\t}\n\n\tget keyID() {\n\t\treturn this[KEY_ID];\n\t}\n\n\tset keyID(keyID) {\n\t\tthis[KEY_ID] = keyID;\n\t}\n\n\tasync decryptSubscription() {\n\t\tconst subscription = Subscriptions.findOne({ rid: this.roomId });\n\n\t\tconst data = await (subscription.lastMessage?.msg && this.decrypt(subscription.lastMessage.msg));\n\t\tif (!data?.text) {\n\t\t\tthis.log('decryptSubscriptions nothing to do');\n\t\t\treturn;\n\t\t}\n\n\t\tSubscriptions.update(\n\t\t\t{\n\t\t\t\t_id: subscription._id,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\t'lastMessage.msg': data.text,\n\t\t\t\t\t'lastMessage.e2e': 'done',\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t\tthis.log('decryptSubscriptions Done');\n\t}\n\n\tasync decryptPendingMessages() {\n\t\treturn Messages.find({ rid: this.roomId, t: 'e2e', e2e: 'pending' }).forEach(async ({ _id, ...msg }) => {\n\t\t\tMessages.update({ _id }, await this.decryptMessage(msg));\n\t\t});\n\t}\n\n\t// Initiates E2E Encryption\n\tasync handshake() {\n\t\tif (this.state !== E2ERoomState.KEYS_RECEIVED && this.state !== E2ERoomState.NOT_STARTED) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setState(E2ERoomState.ESTABLISHING);\n\n\t\ttry {\n\t\t\tconst groupKey = Subscriptions.findOne({ rid: this.roomId }).E2EKey;\n\t\t\tif (groupKey) {\n\t\t\t\tawait this.importGroupKey(groupKey);\n\t\t\t\tthis.setState(E2ERoomState.READY);\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.setState(E2ERoomState.ERROR);\n\t\t\tthis.error('Error fetching group key: ', error);\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst room = ChatRoom.findOne({ _id: this.roomId });\n\t\t\tif (!room.e2eKeyId) {\n\t\t\t\t// TODO CHECK_PERMISSION\n\t\t\t\tthis.setState(E2ERoomState.CREATING_KEYS);\n\t\t\t\tawait this.createGroupKey();\n\t\t\t\tthis.setState(E2ERoomState.READY);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.setState(E2ERoomState.WAITING_KEYS);\n\t\t\tthis.log('Requesting room key');\n\t\t\tNotifications.notifyUsersOfRoom(this.roomId, 'e2ekeyRequest', this.roomId, room.e2eKeyId);\n\t\t} catch (error) {\n\t\t\t// this.error = error;\n\t\t\tthis.setState(E2ERoomState.ERROR);\n\t\t}\n\t}\n\n\tisSupportedRoomType(type) {\n\t\treturn roomCoordinator.getRoomDirectives(type).allowRoomSettingChange({}, RoomSettingsEnum.E2E);\n\t}\n\n\tasync importGroupKey(groupKey) {\n\t\tthis.log('Importing room key ->', this.roomId);\n\t\t// Get existing group key\n\t\t// const keyID = groupKey.slice(0, 12);\n\t\tgroupKey = groupKey.slice(12);\n\t\tgroupKey = Base64.decode(groupKey);\n\n\t\t// Decrypt obtained encrypted session key\n\t\ttry {\n\t\t\tconst decryptedKey = await decryptRSA(e2e.privateKey, groupKey);\n\t\t\tthis.sessionKeyExportedString = toString(decryptedKey);\n\t\t} catch (error) {\n\t\t\tthis.error('Error decrypting group key: ', error);\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.keyID = Base64.encode(this.sessionKeyExportedString).slice(0, 12);\n\n\t\t// Import session key for use.\n\t\ttry {\n\t\t\tconst key = await importAESKey(JSON.parse(this.sessionKeyExportedString));\n\t\t\t// Key has been obtained. E2E is now in session.\n\t\t\tthis.groupSessionKey = key;\n\t\t} catch (error) {\n\t\t\tthis.error('Error importing group key: ', error);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tasync createGroupKey() {\n\t\tthis.log('Creating room key');\n\t\t// Create group key\n\t\ttry {\n\t\t\tthis.groupSessionKey = await generateAESKey();\n\t\t} catch (error) {\n\t\t\tconsole.error('Error generating group key: ', error);\n\t\t\tthrow error;\n\t\t}\n\n\t\ttry {\n\t\t\tconst sessionKeyExported = await exportJWKKey(this.groupSessionKey);\n\t\t\tthis.sessionKeyExportedString = JSON.stringify(sessionKeyExported);\n\t\t\tthis.keyID = Base64.encode(this.sessionKeyExportedString).slice(0, 12);\n\n\t\t\tawait sdk.call('e2e.setRoomKeyID', this.roomId, this.keyID);\n\t\t\tawait this.encryptKeyForOtherParticipants();\n\t\t} catch (error) {\n\t\t\tthis.error('Error exporting group key: ', error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync encryptKeyForOtherParticipants() {\n\t\t// Encrypt generated session key for every user in room and publish to subscription model.\n\t\ttry {\n\t\t\tconst { users } = await sdk.call('e2e.getUsersOfRoomWithoutKey', this.roomId);\n\t\t\tusers.forEach((user) => this.encryptForParticipant(user));\n\t\t} catch (error) {\n\t\t\treturn this.error('Error getting room users: ', error);\n\t\t}\n\t}\n\n\tasync encryptForParticipant(user) {\n\t\tlet userKey;\n\t\ttry {\n\t\t\tuserKey = await importRSAKey(JSON.parse(user.e2e.public_key), ['encrypt']);\n\t\t} catch (error) {\n\t\t\treturn this.error('Error importing user key: ', error);\n\t\t}\n\t\t// const vector = crypto.getRandomValues(new Uint8Array(16));\n\n\t\t// Encrypt session key for this user with his/her public key\n\t\ttry {\n\t\t\tconst encryptedUserKey = await encryptRSA(userKey, toArrayBuffer(this.sessionKeyExportedString));\n\t\t\t// Key has been encrypted. Publish to that user's subscription model for this room.\n\t\t\tawait sdk.call('e2e.updateGroupKey', this.roomId, user._id, this.keyID + Base64.encode(new Uint8Array(encryptedUserKey)));\n\t\t} catch (error) {\n\t\t\treturn this.error('Error encrypting user key: ', error);\n\t\t}\n\t}\n\n\t// Encrypts files before upload. I/O is in arraybuffers.\n\tasync encryptFile(file) {\n\t\tif (!this.isSupportedRoomType(this.typeOfRoom)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst fileArrayBuffer = await readFileAsArrayBuffer(file);\n\n\t\tconst vector = crypto.getRandomValues(new Uint8Array(16));\n\t\tlet result;\n\t\ttry {\n\t\t\tresult = await encryptAES(vector, this.groupSessionKey, fileArrayBuffer);\n\t\t} catch (error) {\n\t\t\treturn this.error('Error encrypting group key: ', error);\n\t\t}\n\n\t\tconst output = joinVectorAndEcryptedData(vector, result);\n\n\t\tconst encryptedFile = new File([toArrayBuffer(EJSON.stringify(output))], file.name);\n\n\t\treturn encryptedFile;\n\t}\n\n\t// Decrypt uploaded encrypted files. I/O is in arraybuffers.\n\tasync decryptFile(message) {\n\t\tif (message[0] !== '{') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst [vector, cipherText] = splitVectorAndEcryptedData(EJSON.parse(message));\n\n\t\ttry {\n\t\t\treturn await decryptAES(vector, this.groupSessionKey, cipherText);\n\t\t} catch (error) {\n\t\t\tthis.error('Error decrypting file: ', error);\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// Encrypts messages\n\tasync encryptText(data) {\n\t\tif (!(typeof data === 'function' || (typeof data === 'object' && !!data))) {\n\t\t\tdata = new TextEncoder('UTF-8').encode(EJSON.stringify({ text: data, ack: Random.id((Random.fraction() + 1) * 20) }));\n\t\t}\n\n\t\tif (!this.isSupportedRoomType(this.typeOfRoom)) {\n\t\t\treturn data;\n\t\t}\n\n\t\tconst vector = crypto.getRandomValues(new Uint8Array(16));\n\t\tlet result;\n\t\ttry {\n\t\t\tresult = await encryptAES(vector, this.groupSessionKey, data);\n\t\t} catch (error) {\n\t\t\treturn this.error('Error encrypting message: ', error);\n\t\t}\n\n\t\treturn this.keyID + Base64.encode(joinVectorAndEcryptedData(vector, result));\n\t}\n\n\t// Helper function for encryption of messages\n\tencrypt(message) {\n\t\tconst ts = new Date();\n\n\t\tconst data = new TextEncoder('UTF-8').encode(\n\t\t\tEJSON.stringify({\n\t\t\t\t_id: message._id,\n\t\t\t\ttext: message.msg,\n\t\t\t\tuserId: this.userId,\n\t\t\t\tts,\n\t\t\t}),\n\t\t);\n\n\t\treturn this.encryptText(data);\n\t}\n\n\t// Decrypt messages\n\n\tasync decryptMessage(message) {\n\t\tif (message.t !== 'e2e' || message.e2e === 'done') {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst data = await this.decrypt(message.msg);\n\n\t\tif (!data?.text) {\n\t\t\treturn message;\n\t\t}\n\n\t\treturn {\n\t\t\t...message,\n\t\t\tmsg: data.text,\n\t\t\te2e: 'done',\n\t\t};\n\t}\n\n\tasync decrypt(message) {\n\t\tif (!this.isSupportedRoomType(this.typeOfRoom)) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst keyID = message.slice(0, 12);\n\n\t\tif (keyID !== this.keyID) {\n\t\t\treturn message;\n\t\t}\n\n\t\tmessage = message.slice(12);\n\n\t\tconst [vector, cipherText] = splitVectorAndEcryptedData(Base64.decode(message));\n\n\t\ttry {\n\t\t\tconst result = await decryptAES(vector, this.groupSessionKey, cipherText);\n\t\t\treturn EJSON.parse(new TextDecoder('UTF-8').decode(new Uint8Array(result)));\n\t\t} catch (error) {\n\t\t\treturn this.error('Error decrypting message: ', error, message);\n\t\t}\n\t}\n\n\tprovideKeyToUser(keyId) {\n\t\tif (this.keyID !== keyId) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.encryptKeyForOtherParticipants();\n\t}\n}\n",null],"names":["_objectSpread","_typeof","_slicedToArray","_objectWithoutProperties","_regeneratorRuntime","_createClass","_inheritsLoose","Base64","Emitter","Random","EJSON","RoomManager","roomCoordinator","RoomSettingsEnum","ChatRoom","Subscriptions","Messages","Notifications","sdk","E2ERoomState","toString","toArrayBuffer","joinVectorAndEcryptedData","splitVectorAndEcryptedData","encryptRSA","encryptAES","decryptRSA","decryptAES","generateAESKey","exportJWKKey","importAESKey","importRSAKey","readFileAsArrayBuffer","log","logError","e2e","module","link","default","v","export","E2ERoom","KEY_ID","Symbol","PAUSED","permitedMutations","_permitedMutations","NOT_STARTED","ESTABLISHING","DISABLED","KEYS_RECEIVED","READY","ERROR","WAITING_KEYS","_Emitter","userId","roomId","t","_this","call","state","undefined","typeOfRoom","once","decryptPendingMessages","decryptSubscription","on","prev","opened","handshake","setState","_proto","prototype","_len","arguments","length","msg","Array","_key","apply","concat","error","_len2","_key2","requestedState","currentState","nextState","includes","emit","isReady","isDisabled","enable","disable","pause","resume","keyReceived","shouldConvertSentMessages","message","_this2","async","_context","next","abrupt","Promise","resolve","stop","shouldConvertReceivedMessages","isWaitingKeys","_subscription$lastMes","subscription","data","_context2","findOne","rid","awrap","lastMessage","decrypt","sent","text","update","_id","$set","_this3","_context4","find","forEach","_callee","_ref","_callee$","_context3","_excluded","t0","t1","decryptMessage","t2","groupKey","room","_context5","E2EKey","importGroupKey","e2eKeyId","CREATING_KEYS","createGroupKey","notifyUsersOfRoom","isSupportedRoomType","type","getRoomDirectives","allowRoomSettingChange","E2E","decryptedKey","key","_context6","slice","decode","privateKey","sessionKeyExportedString","keyID","encode","JSON","parse","groupSessionKey","sessionKeyExported","_context7","console","stringify","encryptKeyForOtherParticipants","_this4","_context8","users","_await$sdk$call","user","encryptForParticipant","userKey","encryptedUserKey","_context9","public_key","Uint8Array","encryptFile","file","fileArrayBuffer","vector","result","output","encryptedFile","_context10","crypto","getRandomValues","File","name","decryptFile","_splitVectorAndEcrypt2","cipherText","_context11","encryptText","_context12","TextEncoder","ack","id","fraction","encrypt","ts","Date","_context13","_splitVectorAndEcrypt4","_context14","TextDecoder","provideKeyToUser","keyId","get","set"],"mappings":"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"}