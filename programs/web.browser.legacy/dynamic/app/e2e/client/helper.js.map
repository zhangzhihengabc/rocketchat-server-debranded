)]}'
{"version":3,"sources":["meteor://ðŸ’»app/app/e2e/client/helper.js","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Random } from '@rocket.chat/random';\nimport ByteBuffer from 'bytebuffer';\n\n// eslint-disable-next-line no-proto\nconst StaticArrayBufferProto = new ArrayBuffer().__proto__;\n\nexport function toString(thing) {\n\tif (typeof thing === 'string') {\n\t\treturn thing;\n\t}\n\t// eslint-disable-next-line new-cap\n\treturn new ByteBuffer.wrap(thing).toString('binary');\n}\n\nexport function toArrayBuffer(thing) {\n\tif (thing === undefined) {\n\t\treturn undefined;\n\t}\n\tif (thing === Object(thing)) {\n\t\t// eslint-disable-next-line no-proto\n\t\tif (thing.__proto__ === StaticArrayBufferProto) {\n\t\t\treturn thing;\n\t\t}\n\t}\n\n\tif (typeof thing !== 'string') {\n\t\tthrow new Error(`Tried to convert a non-string of type ${typeof thing} to an array buffer`);\n\t}\n\t// eslint-disable-next-line new-cap\n\treturn new ByteBuffer.wrap(thing, 'binary').toArrayBuffer();\n}\n\nexport function joinVectorAndEcryptedData(vector, encryptedData) {\n\tconst cipherText = new Uint8Array(encryptedData);\n\tconst output = new Uint8Array(vector.length + cipherText.length);\n\toutput.set(vector, 0);\n\toutput.set(cipherText, vector.length);\n\treturn output;\n}\n\nexport function splitVectorAndEcryptedData(cipherText) {\n\tconst vector = cipherText.slice(0, 16);\n\tconst encryptedData = cipherText.slice(16);\n\n\treturn [vector, encryptedData];\n}\n\nexport async function encryptRSA(key, data) {\n\treturn crypto.subtle.encrypt({ name: 'RSA-OAEP' }, key, data);\n}\n\nexport async function encryptAES(vector, key, data) {\n\treturn crypto.subtle.encrypt({ name: 'AES-CBC', iv: vector }, key, data);\n}\n\nexport async function decryptRSA(key, data) {\n\treturn crypto.subtle.decrypt({ name: 'RSA-OAEP' }, key, data);\n}\n\nexport async function decryptAES(vector, key, data) {\n\treturn crypto.subtle.decrypt({ name: 'AES-CBC', iv: vector }, key, data);\n}\n\nexport async function generateAESKey() {\n\treturn crypto.subtle.generateKey({ name: 'AES-CBC', length: 128 }, true, ['encrypt', 'decrypt']);\n}\n\nexport async function generateRSAKey() {\n\treturn crypto.subtle.generateKey(\n\t\t{\n\t\t\tname: 'RSA-OAEP',\n\t\t\tmodulusLength: 2048,\n\t\t\tpublicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n\t\t\thash: { name: 'SHA-256' },\n\t\t},\n\t\ttrue,\n\t\t['encrypt', 'decrypt'],\n\t);\n}\n\nexport async function exportJWKKey(key) {\n\treturn crypto.subtle.exportKey('jwk', key);\n}\n\nexport async function importRSAKey(keyData, keyUsages = ['encrypt', 'decrypt']) {\n\treturn crypto.subtle.importKey(\n\t\t'jwk',\n\t\tkeyData,\n\t\t{\n\t\t\tname: 'RSA-OAEP',\n\t\t\tmodulusLength: 2048,\n\t\t\tpublicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n\t\t\thash: { name: 'SHA-256' },\n\t\t},\n\t\ttrue,\n\t\tkeyUsages,\n\t);\n}\n\nexport async function importAESKey(keyData, keyUsages = ['encrypt', 'decrypt']) {\n\treturn crypto.subtle.importKey('jwk', keyData, { name: 'AES-CBC' }, true, keyUsages);\n}\n\nexport async function importRawKey(keyData, keyUsages = ['deriveKey']) {\n\treturn crypto.subtle.importKey('raw', keyData, { name: 'PBKDF2' }, false, keyUsages);\n}\n\nexport async function deriveKey(salt, baseKey, keyUsages = ['encrypt', 'decrypt']) {\n\tconst iterations = 1000;\n\tconst hash = 'SHA-256';\n\n\treturn crypto.subtle.deriveKey({ name: 'PBKDF2', salt, iterations, hash }, baseKey, { name: 'AES-CBC', length: 256 }, true, keyUsages);\n}\n\nexport async function readFileAsArrayBuffer(file) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst reader = new FileReader();\n\t\treader.onload = function (evt) {\n\t\t\tresolve(evt.target.result);\n\t\t};\n\t\treader.onerror = function (evt) {\n\t\t\treject(evt);\n\t\t};\n\t\treader.readAsArrayBuffer(file);\n\t});\n}\n\nexport async function generateMnemonicPhrase(n, sep = ' ') {\n\tconst { default: wordList } = await import('./wordList');\n\tconst result = new Array(n);\n\tlet len = wordList.length;\n\tconst taken = new Array(len);\n\n\twhile (n--) {\n\t\tconst x = Math.floor(Random.fraction() * len);\n\t\tresult[n] = wordList[x in taken ? taken[x] : x];\n\t\ttaken[x] = --len in taken ? taken[len] : len;\n\t}\n\treturn result.join(sep);\n}\n",null],"names":["module","link","default","v","_regeneratorRuntime","_typeof","export","toString","toArrayBuffer","joinVectorAndEcryptedData","splitVectorAndEcryptedData","encryptRSA","encryptAES","decryptRSA","decryptAES","generateAESKey","generateRSAKey","exportJWKKey","importRSAKey","importAESKey","importRawKey","deriveKey","readFileAsArrayBuffer","generateMnemonicPhrase","Random","ByteBuffer","StaticArrayBufferProto","ArrayBuffer","__proto__","thing","wrap","undefined","Object","Error","vector","encryptedData","cipherText","Uint8Array","output","length","set","slice","key","data","async","_context","prev","next","abrupt","crypto","subtle","encrypt","name","stop","Promise","_context2","iv","_context3","decrypt","_context4","_context5","generateKey","_context6","modulusLength","publicExponent","hash","_context7","exportKey","keyData","keyUsages","_args8","arguments","_context8","importKey","_args9","_context9","_args10","_context10","salt","baseKey","_args11","_context11","iterations","file","_context12","resolve","reject","reader","FileReader","onload","evt","target","result","onerror","readAsArrayBuffer","n","sep","wordList","len","taken","x","_args13","_context13","awrap","dynamicImport","_await$module$dynamic","sent","Array","Math","floor","fraction","join"],"mappings":"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"}