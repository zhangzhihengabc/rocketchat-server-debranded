"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.prettify = void 0;
const types_1 = require("../../types");
const style_1 = require("../../style");
const code_1 = require("../../code");
const json_1 = require("../../json");
function prettify(context) {
    const { dataPath, error: { params: { type } } } = types_1.getTypedContext(context);
    const value = json_1.getValueByPath(context);
    const [prePath, pathExpr, postPath] = style_1.pathDescription(context, 'value');
    const suggestionValue = types_1.suggestAnotherType(value, type);
    const suggestion = suggestionValue === undefined
        ? ''
        : style_1.formatTypedValue(suggestionValue, context, { includeType: true });
    const title = style_1.style.title(`The type of the ${prePath}`, context) +
        pathExpr +
        style_1.style.title(`${postPath} should be `, context) +
        style_1.style.pathDescription(type, context) +
        (suggestion ? style_1.style.title(', e.g. ', context) + suggestion : '');
    const codeFrame = code_1.printCode('Replace this' +
        (suggestion
            ? ' with e.g. ' + suggestion
            : ''), context.parsedJson, { dataPath: dataPath.dotOnly, markIdentifier: false });
    return { title, codeFrame };
}
exports.prettify = prettify;
