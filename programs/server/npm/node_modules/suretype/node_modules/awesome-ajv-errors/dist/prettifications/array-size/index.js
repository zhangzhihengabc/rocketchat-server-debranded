"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.prettify = void 0;
const types_1 = require("../../types");
const style_1 = require("../../style");
const code_1 = require("../../code");
const json_1 = require("../../json");
function prettify(context) {
    const { dataPath, error: { keyword, params: { limit } } } = types_1.getTypedContext(context);
    const [prePath, pathExpr, postPath] = style_1.pathDescription(context, 'array');
    const value = json_1.getValueByPath(context);
    const plural = (text, num = Math.abs(value.length - limit)) => text + (num > 1 ? 's' : '');
    const limitOperation = keyword === 'maxItems'
        ? style_1.style.expr('should NOT have more than ', context)
        : style_1.style.expr('should have at least ', context);
    const validStatement = limitOperation +
        style_1.style.number(`${limit}`, context) +
        style_1.style.expr(plural(' item', limit), context);
    const title = style_1.style.title(`The ${prePath}`, context) +
        pathExpr +
        style_1.style.title(`${postPath} should be `, context) +
        validStatement;
    const shortMessage = keyword === 'maxItems'
        ?
            style_1.style.title('Remove ', context) +
                style_1.style.number(`${value.length - limit}`, context) +
                style_1.style.title(plural(' item'), context)
        :
            style_1.style.title('Ensure the array has ', context) +
                style_1.style.number(`${limit - value.length}`, context) +
                style_1.style.title(plural(' more item'), context);
    const codeFrame = code_1.printCode(shortMessage, context.parsedJson, { dataPath: dataPath.dotOnly, markIdentifier: false });
    return { title, codeFrame };
}
exports.prettify = prettify;
