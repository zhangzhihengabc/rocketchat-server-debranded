import { Type } from "../types";
import { TreeTraverser } from "../core/validator";
import { ValueValidator } from "../value/validator";
import { Formats } from "./types";
export declare class StringValidator<T extends string = string> extends ValueValidator<T, StringValidator<T>> {
    protected type: Type;
    private _min;
    private _max;
    private _pattern;
    private _format;
    protected chainedMinLength(): number | undefined;
    protected chainedMaxLength(): number | undefined;
    protected chainedPattern(): string | undefined;
    protected chainedFormat(): Formats | undefined;
    const<V extends T>(value: V): StringValidator<V>;
    enum<V extends readonly T[]>(...values: V): StringValidator<V[number]>;
    minLength(n: number): this;
    maxLength(n: number): this;
    matches(regex: string | RegExp): this;
    numeric(): this;
    format(format: Formats): this;
    protected toSchema(traverser: TreeTraverser): {
        format?: "date-time" | "time" | "date" | "email" | "idn-email" | "hostname" | "idn-hostname" | "ipv4" | "ipv6" | "uri" | "uri-reference" | "iri" | "iri-reference" | "uri-template" | "json-pointer" | "relative-json-pointer" | "regex" | undefined;
        pattern?: string | undefined;
        maxLength?: number | undefined;
        minLength?: number | undefined;
        allOf?: undefined;
        anyOf?: undefined;
        default?: undefined;
        examples?: string[] | undefined;
        description?: string | undefined;
        title?: string | undefined;
        type: string;
    } | {
        format?: "date-time" | "time" | "date" | "email" | "idn-email" | "hostname" | "idn-hostname" | "ipv4" | "ipv6" | "uri" | "uri-reference" | "iri" | "iri-reference" | "uri-template" | "json-pointer" | "relative-json-pointer" | "regex" | undefined;
        pattern?: string | undefined;
        maxLength?: number | undefined;
        minLength?: number | undefined;
        allOf: Omit<any, "type">[];
        anyOf?: undefined;
        default?: undefined;
        examples?: string[] | undefined;
        description?: string | undefined;
        title?: string | undefined;
        type: string;
    } | {
        format?: "date-time" | "time" | "date" | "email" | "idn-email" | "hostname" | "idn-hostname" | "ipv4" | "ipv6" | "uri" | "uri-reference" | "iri" | "iri-reference" | "uri-template" | "json-pointer" | "relative-json-pointer" | "regex" | undefined;
        pattern?: string | undefined;
        maxLength?: number | undefined;
        minLength?: number | undefined;
        allOf?: undefined;
        anyOf: Omit<any, "type">[];
        default?: undefined;
        examples?: string[] | undefined;
        description?: string | undefined;
        title?: string | undefined;
        type: string;
    } | {
        format?: "date-time" | "time" | "date" | "email" | "idn-email" | "hostname" | "idn-hostname" | "ipv4" | "ipv6" | "uri" | "uri-reference" | "iri" | "iri-reference" | "uri-template" | "json-pointer" | "relative-json-pointer" | "regex" | undefined;
        pattern?: string | undefined;
        maxLength?: number | undefined;
        minLength?: number | undefined;
        allOf: Omit<any, "type">[];
        anyOf: Omit<any, "type">[];
        default?: undefined;
        examples?: string[] | undefined;
        description?: string | undefined;
        title?: string | undefined;
        type: string;
    } | {
        format?: "date-time" | "time" | "date" | "email" | "idn-email" | "hostname" | "idn-hostname" | "ipv4" | "ipv6" | "uri" | "uri-reference" | "iri" | "iri-reference" | "uri-template" | "json-pointer" | "relative-json-pointer" | "regex" | undefined;
        pattern?: string | undefined;
        maxLength?: number | undefined;
        minLength?: number | undefined;
        allOf?: undefined;
        anyOf?: undefined;
        default: T;
        examples?: string[] | undefined;
        description?: string | undefined;
        title?: string | undefined;
        type: string;
    } | {
        format?: "date-time" | "time" | "date" | "email" | "idn-email" | "hostname" | "idn-hostname" | "ipv4" | "ipv6" | "uri" | "uri-reference" | "iri" | "iri-reference" | "uri-template" | "json-pointer" | "relative-json-pointer" | "regex" | undefined;
        pattern?: string | undefined;
        maxLength?: number | undefined;
        minLength?: number | undefined;
        allOf: Omit<any, "type">[];
        anyOf?: undefined;
        default: T;
        examples?: string[] | undefined;
        description?: string | undefined;
        title?: string | undefined;
        type: string;
    } | {
        format?: "date-time" | "time" | "date" | "email" | "idn-email" | "hostname" | "idn-hostname" | "ipv4" | "ipv6" | "uri" | "uri-reference" | "iri" | "iri-reference" | "uri-template" | "json-pointer" | "relative-json-pointer" | "regex" | undefined;
        pattern?: string | undefined;
        maxLength?: number | undefined;
        minLength?: number | undefined;
        allOf?: undefined;
        anyOf: Omit<any, "type">[];
        default: T;
        examples?: string[] | undefined;
        description?: string | undefined;
        title?: string | undefined;
        type: string;
    } | {
        format?: "date-time" | "time" | "date" | "email" | "idn-email" | "hostname" | "idn-hostname" | "ipv4" | "ipv6" | "uri" | "uri-reference" | "iri" | "iri-reference" | "uri-template" | "json-pointer" | "relative-json-pointer" | "regex" | undefined;
        pattern?: string | undefined;
        maxLength?: number | undefined;
        minLength?: number | undefined;
        allOf: Omit<any, "type">[];
        anyOf: Omit<any, "type">[];
        default: T;
        examples?: string[] | undefined;
        description?: string | undefined;
        title?: string | undefined;
        type: string;
    };
    protected clone(clean?: boolean): this;
}
