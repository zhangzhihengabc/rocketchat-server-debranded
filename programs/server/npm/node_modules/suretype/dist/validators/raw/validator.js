"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRaw = exports.isRaw = exports.RawValidator = void 0;
const validator_1 = require("../core/validator");
const validator_2 = require("../required/validator");
class RawValidator extends validator_1.CoreValidator {
    constructor(jsonSchema, fragment) {
        super();
        this.jsonSchema = jsonSchema;
        this.fragment = fragment;
        this.type = 'raw';
    }
    toSchema() {
        return this.jsonSchema;
    }
    required() {
        return new validator_2.RequiredValidator(this);
    }
    clone(_clean = false) {
        return new RawValidator(JSON.parse(JSON.stringify(this.jsonSchema)));
    }
}
exports.RawValidator = RawValidator;
function isRaw(validator) {
    return validator instanceof RawValidator;
}
exports.isRaw = isRaw;
function getRaw(validator) {
    validator = validator_2.extractRequiredValidator(validator);
    return isRaw(validator) ? validator : undefined;
}
exports.getRaw = getRaw;
