"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports._RequestTrialPage = void 0;
var jsx_runtime_1 = require("react/jsx-runtime");
var countries_list_1 = require("countries-list");
var RequestTrialPage_1 = __importDefault(require("./RequestTrialPage"));
exports.default = {
    title: 'pages/RequestTrialPage',
    component: RequestTrialPage_1.default,
    parameters: {
        actions: { argTypesRegex: '^on.*' },
        layout: 'fullscreen',
    },
    args: {
        validateEmail: function (email) {
            return email === 'rocket@rocket.chat' ? 'invalid email' : true;
        },
        onManageWorkspaces: function () {
            return window.open('https://cloud.rocket.chat/login', '_blank');
        },
        organizationSizeOptions: [
            ['0', '1-10 people'],
            ['1', '11-50 people'],
            ['2', '51-100 people'],
            ['3', '101-250 people'],
            ['4', '251-500 people'],
            ['5', '501-1000 people'],
            ['6', '1001-4000 people'],
            ['7', '4001 or more people'],
        ],
        countryOptions: __spreadArray(__spreadArray([], Object.entries(countries_list_1.countries).map(function (_a) {
            var code = _a[0], name = _a[1].name;
            return [code, name];
        }), true), [
            ['worldwide', 'Worldwide'],
        ], false),
    },
};
var _RequestTrialPage = function (args) { return ((0, jsx_runtime_1.jsx)(RequestTrialPage_1.default, __assign({}, args))); };
exports._RequestTrialPage = _RequestTrialPage;
exports._RequestTrialPage.storyName = 'RequestTrialPage';
//# sourceMappingURL=RequestTrialPage.stories.js.map