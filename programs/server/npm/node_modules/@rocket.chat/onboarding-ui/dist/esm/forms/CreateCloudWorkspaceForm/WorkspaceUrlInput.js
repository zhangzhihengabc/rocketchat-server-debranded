var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx } from "react/jsx-runtime";
import { Box, InputBox } from '@rocket.chat/fuselage';
import { forwardRef } from 'react';
var WorkspaceUrlInput = forwardRef(function TextInput(props, ref) {
    var domain = props.domain;
    return (_jsx(InputBox, __assign({ type: 'text', ref: ref }, props, { addon: _jsx(Box, __assign({ borderInlineStart: '2px solid', mb: 'neg-x8', pb: 8, borderColor: 'neutral-500', color: 'info', pis: 12 }, { children: domain })) })));
});
export default WorkspaceUrlInput;
//# sourceMappingURL=WorkspaceUrlInput.js.map