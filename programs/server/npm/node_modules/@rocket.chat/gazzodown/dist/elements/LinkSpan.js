import { jsx as _jsx } from "react/jsx-runtime";
import { useMemo } from 'react';
import BoldSpan from './BoldSpan';
import ItalicSpan from './ItalicSpan';
import PlainSpan from './PlainSpan';
import StrikeSpan from './StrikeSpan';
const getBaseURI = () => {
    if (document.baseURI) {
        return document.baseURI;
    }
    // Should be exactly one tag:
    //   https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base
    const base = document.getElementsByTagName('base');
    // Return location from BASE tag.
    if (base.length > 0) {
        return base[0].href;
    }
    // Else use implementation of documentURI:
    //   http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-baseURI
    return document.URL;
};
const isExternal = (href) => href.indexOf(getBaseURI()) !== 0;
const LinkSpan = ({ href, label }) => {
    const children = useMemo(() => {
        const labelArray = Array.isArray(label) ? label : [label];
        const labelElements = labelArray.map((child, index) => {
            switch (child.type) {
                case 'PLAIN_TEXT':
                    return _jsx(PlainSpan, { text: child.value }, index);
                case 'STRIKE':
                    return _jsx(StrikeSpan, { children: child.value }, index);
                case 'ITALIC':
                    return _jsx(ItalicSpan, { children: child.value }, index);
                case 'BOLD':
                    return _jsx(BoldSpan, { children: child.value }, index);
                default:
                    return null;
            }
        });
        return labelElements;
    }, [label]);
    if (isExternal(href)) {
        return (_jsx("a", { href: href, title: href, rel: 'noopener noreferrer', target: '_blank', children: children }));
    }
    return (_jsx("a", { href: href, title: href, children: children }));
};
export default LinkSpan;
//# sourceMappingURL=LinkSpan.js.map