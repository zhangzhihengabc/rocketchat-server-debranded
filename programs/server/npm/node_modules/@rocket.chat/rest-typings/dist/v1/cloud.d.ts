import type { CloudRegistrationIntentData, CloudConfirmationPollData, CloudRegistrationStatus } from '@rocket.chat/core-typings';
type CloudManualRegister = {
    cloudBlob: string;
};
export declare const isCloudManualRegisterProps: import("ajv").ValidateFunction<CloudManualRegister>;
type CloudCreateRegistrationIntent = {
    resend: boolean;
    email: string;
};
export declare const isCloudCreateRegistrationIntentProps: import("ajv").ValidateFunction<CloudCreateRegistrationIntent>;
type CloudConfirmationPoll = {
    deviceCode: string;
    resend?: string;
};
export declare const isCloudConfirmationPollProps: import("ajv").ValidateFunction<CloudConfirmationPoll>;
export type CloudEndpoints = {
    '/v1/cloud.manualRegister': {
        POST: (params: CloudManualRegister) => void;
    };
    '/v1/cloud.createRegistrationIntent': {
        POST: (params: CloudCreateRegistrationIntent) => {
            intentData: CloudRegistrationIntentData;
        };
    };
    '/v1/cloud.registerPreIntent': {
        POST: () => {
            offline: boolean;
        };
    };
    '/v1/cloud.confirmationPoll': {
        GET: (params: CloudConfirmationPoll) => {
            pollData: CloudConfirmationPollData;
        };
    };
    '/v1/cloud.registrationStatus': {
        GET: () => {
            registrationStatus: CloudRegistrationStatus;
        };
    };
    '/v1/cloud.syncWorkspace': {
        POST: () => {
            success: boolean;
        };
    };
    '/v1/cloud.removeLicense': {
        POST: () => {
            success: boolean;
        };
    };
};
export {};
//# sourceMappingURL=cloud.d.ts.map