import type { IStats } from '@rocket.chat/core-typings';
import type { PaginatedRequest } from '../helpers/PaginatedRequest';
type OTREnded = {
    rid: string;
};
type SlashCommand = {
    command: string;
};
type SettingsCounter = {
    settingsId: string;
};
export type TelemetryMap = {
    otrStats: OTREnded;
    slashCommandsStats: SlashCommand;
    updateCounter: SettingsCounter;
};
export type TelemetryEvents = keyof TelemetryMap;
type Param = {
    eventName: TelemetryEvents;
    timestamp?: number;
} & (OTREnded | SlashCommand | SettingsCounter);
type TelemetryPayload = {
    params: Param[];
};
type StatisticsProps = {
    refresh?: 'true' | 'false';
};
export declare const isStatisticsProps: import("ajv").ValidateFunction<StatisticsProps>;
type StatisticsListProps = PaginatedRequest<{
    fields?: string;
}>;
export declare const isStatisticsListProps: import("ajv").ValidateFunction<StatisticsListProps>;
export type StatisticsEndpoints = {
    '/v1/statistics': {
        GET: (params: StatisticsProps) => IStats;
    };
    '/v1/statistics.list': {
        GET: (params: StatisticsListProps) => {
            statistics: IStats[];
            count: number;
            offset: number;
            total: number;
        };
    };
    '/v1/statistics.telemetry': {
        POST: (params: TelemetryPayload) => any;
    };
};
export {};
//# sourceMappingURL=statistics.d.ts.map