import type { IEmailInbox } from '@rocket.chat/core-typings';
import type { PaginatedRequest } from '../helpers/PaginatedRequest';
import type { PaginatedResult } from '../helpers/PaginatedResult';
type EmailInboxListProps = PaginatedRequest<{
    query?: string;
}>;
export declare const isEmailInboxList: import("ajv").ValidateFunction<EmailInboxListProps>;
type EmailInboxProps = {
    _id?: string;
    name: string;
    email: string;
    active: boolean;
    description: string;
    senderInfo: string;
    department: string;
    smtp: {
        password: string;
        port: number;
        secure: boolean;
        server: string;
        username: string;
    };
    imap: {
        password: string;
        port: number;
        secure: boolean;
        server: string;
        username: string;
    };
};
export declare const isEmailInbox: import("ajv").ValidateFunction<EmailInboxProps>;
type EmailInboxSearchProps = {
    email: string;
};
export declare const isEmailInboxSearch: import("ajv").ValidateFunction<EmailInboxSearchProps>;
export type EmailInboxEndpoints = {
    '/v1/email-inbox.list': {
        GET: (params: EmailInboxListProps) => PaginatedResult<{
            emailInboxes: IEmailInbox[];
        }>;
    };
    '/v1/email-inbox': {
        POST: (params: EmailInboxProps) => {
            _id: string;
        };
    };
    '/v1/email-inbox/:_id': {
        GET: () => IEmailInbox | null;
        DELETE: () => {
            _id: string;
        };
    };
    '/v1/email-inbox.search': {
        GET: (params: EmailInboxSearchProps) => {
            emailInbox: IEmailInbox | null;
        };
    };
    '/v1/email-inbox.send-test/:_id': {
        POST: () => {
            _id: string;
        };
    };
};
export {};
//# sourceMappingURL=email-inbox.d.ts.map