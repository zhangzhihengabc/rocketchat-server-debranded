import Ajv from 'ajv';
const ajv = new Ajv({
    coerceTypes: true,
});
const RoomsAutoCompleteChannelAndPrivateSchema = {
    type: 'object',
    properties: {
        selector: {
            type: 'string',
        },
    },
    required: ['selector'],
    additionalProperties: false,
};
export const isRoomsAutoCompleteChannelAndPrivateProps = ajv.compile(RoomsAutoCompleteChannelAndPrivateSchema);
const RoomsAutocompleteChannelAndPrivateWithPaginationSchema = {
    type: 'object',
    properties: {
        selector: {
            type: 'string',
        },
        count: {
            type: 'number',
            nullable: true,
        },
        offset: {
            type: 'number',
            nullable: true,
        },
        sort: {
            type: 'string',
            nullable: true,
        },
        query: {
            type: 'string',
            nullable: true,
        },
    },
    required: ['selector'],
    additionalProperties: false,
};
export const isRoomsAutocompleteChannelAndPrivateWithPaginationProps = ajv.compile(RoomsAutocompleteChannelAndPrivateWithPaginationSchema);
const RoomsAutocompleteAvailableForTeamsSchema = {
    type: 'object',
    properties: {
        name: {
            type: 'string',
        },
    },
    required: ['name'],
    additionalProperties: false,
};
export const isRoomsAutocompleteAvailableForTeamsProps = ajv.compile(RoomsAutocompleteAvailableForTeamsSchema);
const RoomsAutocompleteAdminRoomsPayloadSchema = {
    type: 'object',
    properties: {
        selector: {
            type: 'string',
        },
    },
    required: ['selector'],
    additionalProperties: false,
};
export const isRoomsAutocompleteAdminRoomsPayload = ajv.compile(RoomsAutocompleteAdminRoomsPayloadSchema);
const RoomsInfoSchema = {
    oneOf: [
        {
            type: 'object',
            properties: {
                roomId: {
                    type: 'string',
                },
            },
            required: ['roomId'],
            additionalProperties: false,
        },
        {
            type: 'object',
            properties: {
                roomName: {
                    type: 'string',
                },
            },
            required: ['roomName'],
            additionalProperties: false,
        },
    ],
};
export const isRoomsInfoProps = ajv.compile(RoomsInfoSchema);
const RoomsCreateDiscussionSchema = {
    type: 'object',
    properties: {
        prid: {
            type: 'string',
        },
        pmid: {
            type: 'string',
            nullable: true,
        },
        t_name: {
            type: 'string',
            nullable: true,
        },
        users: {
            type: 'array',
            items: {
                type: 'string',
            },
            nullable: true,
        },
        encrypted: {
            type: 'boolean',
            nullable: true,
        },
        reply: {
            type: 'string',
            nullable: true,
        },
    },
    required: ['prid', 't_name'],
    additionalProperties: false,
};
export const isRoomsCreateDiscussionProps = ajv.compile(RoomsCreateDiscussionSchema);
const RoomsExportSchema = {
    type: 'object',
    properties: {
        rid: {
            type: 'string',
        },
        type: {
            type: 'string',
            nullable: true,
        },
        toUsers: {
            type: 'array',
            items: {
                type: 'string',
            },
            nullable: true,
        },
        toEmails: {
            type: 'array',
            items: {
                type: 'string',
            },
            nullable: true,
        },
        additionalEmails: {
            type: 'string',
            nullable: true,
        },
        subject: {
            type: 'string',
            nullable: true,
        },
        messages: {
            type: 'array',
            items: {
                type: 'string',
            },
            nullable: true,
        },
        dateFrom: {
            type: 'string',
            nullable: true,
        },
        dateTo: {
            type: 'string',
            nullable: true,
        },
        format: {
            type: 'string',
            nullable: true,
        },
    },
    required: ['rid'],
    additionalProperties: false,
};
export const isRoomsExportProps = ajv.compile(RoomsExportSchema);
const RoomsAdminRoomsSchema = {
    type: 'object',
    properties: {
        filter: {
            type: 'string',
            nullable: true,
        },
        types: {
            type: 'array',
            items: {
                type: 'string',
            },
            nullable: true,
        },
        count: {
            type: 'number',
            nullable: true,
        },
        offset: {
            type: 'number',
            nullable: true,
        },
        sort: {
            type: 'string',
            nullable: true,
        },
        query: {
            type: 'string',
            nullable: true,
        },
    },
    required: [],
    additionalProperties: false,
};
export const isRoomsAdminRoomsProps = ajv.compile(RoomsAdminRoomsSchema);
const RoomsAdminRoomsGetRoomSchema = {
    type: 'object',
    properties: {
        rid: {
            type: 'string',
            nullable: true,
        },
    },
    required: [],
    additionalProperties: false,
};
export const isRoomsAdminRoomsGetRoomProps = ajv.compile(RoomsAdminRoomsGetRoomSchema);
const RoomsChangeArchivationStateSchema = {
    type: 'object',
    properties: {
        rid: {
            type: 'string',
        },
        action: {
            type: 'string',
            nullable: true,
        },
    },
    required: ['rid'],
    additionalProperties: false,
};
export const isRoomsChangeArchivationStateProps = ajv.compile(RoomsChangeArchivationStateSchema);
const RoomsSaveRoomSettingsSchema = {
    type: 'object',
    properties: {
        rid: {
            type: 'string',
        },
        roomAvatar: {
            type: 'string',
            nullable: true,
        },
        featured: {
            type: 'boolean',
            nullable: true,
        },
        roomName: {
            type: 'string',
            nullable: true,
        },
        roomTopic: {
            type: 'string',
            nullable: true,
        },
        roomAnnouncement: {
            type: 'string',
            nullable: true,
        },
        roomDescription: {
            type: 'string',
            nullable: true,
        },
        roomType: {
            type: 'string',
            nullable: true,
        },
        readOnly: {
            type: 'boolean',
            nullable: true,
        },
        reactWhenReadOnly: {
            type: 'boolean',
            nullable: true,
        },
        default: {
            type: 'boolean',
            nullable: true,
        },
        encrypted: {
            type: 'boolean',
            nullable: true,
        },
        favorite: {
            type: 'object',
            properties: {
                defaultValue: {
                    type: 'boolean',
                    nullable: true,
                },
                favorite: {
                    type: 'boolean',
                    nullable: true,
                },
            },
            nullable: true,
        },
    },
    required: ['rid'],
    additionalProperties: false,
};
export const isRoomsSaveRoomSettingsProps = ajv.compile(RoomsSaveRoomSettingsSchema);
const GETRoomsNameExistsSchema = {
    type: 'object',
    properties: {
        roomName: {
            type: 'string',
        },
    },
    required: ['roomName'],
    additionalProperties: false,
};
export const isGETRoomsNameExists = ajv.compile(GETRoomsNameExistsSchema);
//# sourceMappingURL=rooms.js.map