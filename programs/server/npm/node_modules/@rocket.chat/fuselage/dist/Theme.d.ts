export declare class Var {
    private name;
    private value;
    constructor(name: string, value: string);
    toString(): string;
    theme(name: string): Var;
}
export declare let throwErrorOnInvalidToken: boolean;
export declare const __setThrowErrorOnInvalidToken__: (value: boolean) => void;
export declare const neutral: {
    100: Var;
    200: Var;
    250: Var;
    300: Var;
    400: Var;
    450: Var;
    500: Var;
    600: Var;
    700: Var;
    800: Var;
    900: Var;
};
export declare const surfaceColors: {
    'surface-light': Var;
    'surface-tint': Var;
    'surface-room': Var;
    'surface-neutral': Var;
    'surface-disabled': Var;
    'surface-hover': Var;
    'surface-selected': Var;
    'surface-dark': Var;
    'surface-featured': Var;
    'surface-featured-hover': Var;
    'surface-overlay': Var;
    'surface-transparent': string;
    'surface-sidebar': Var;
};
export declare const strokeColors: {
    'stroke-extra-light': Var;
    'stroke-light': Var;
    'stroke-medium': Var;
    'stroke-dark': Var;
    'stroke-extra-dark': Var;
    'stroke-extra-light-highlight': Var;
    'stroke-highlight': Var;
    'stroke-extra-light-error': Var;
    'stroke-error': Var;
};
export declare const textIconColors: {
    'font-white': Var;
    'font-disabled': Var;
    'font-annotation': Var;
    'font-hint': Var;
    'font-secondary-info': Var;
    'font-default': Var;
    'font-titles-labels': Var;
    'font-info': Var;
    'font-danger': Var;
    'font-pure-black': Var;
    'font-pure-white': Var;
};
export declare const statusBackgroundColors: {
    'status-background-info': Var;
    'status-background-success': Var;
    'status-background-danger': Var;
    'status-background-warning': Var;
    'status-background-warning-2': Var;
    'status-background-service-1': Var;
    'status-background-service-2': Var;
};
export declare const statusColors: {
    'status-font-on-info': Var;
    'status-font-on-success': Var;
    'status-font-on-warning': Var;
    'status-font-on-warning-2': Var;
    'status-font-on-danger': Var;
    'status-font-on-service-1': Var;
    'status-font-on-service-2': Var;
};
export declare const badgeBackgroundColors: {
    'badge-background-level-0': Var;
    'badge-background-level-1': Var;
    'badge-background-level-2': Var;
    'badge-background-level-3': Var;
    'badge-background-level-4': Var;
};
export declare const shadowColors: {
    'shadow-elevation-border': Var;
    'shadow-elevation-1': Var;
    'shadow-elevation-2x': Var;
    'shadow-elevation-2y': Var;
    'shadow-highlight': Var;
    'shadow-danger': Var;
};
export declare const isSurfaceColor: (color: unknown) => color is "surface-light" | "surface-tint" | "surface-room" | "surface-neutral" | "surface-disabled" | "surface-hover" | "surface-selected" | "surface-dark" | "surface-featured" | "surface-featured-hover" | "surface-overlay" | "surface-sidebar" | "surface-transparent";
export declare const isStrokeColor: (color: unknown) => color is "stroke-extra-light" | "stroke-light" | "stroke-medium" | "stroke-dark" | "stroke-extra-dark" | "stroke-extra-light-highlight" | "stroke-highlight" | "stroke-extra-light-error" | "stroke-error";
export declare const isTextIconColor: (color: unknown) => color is "font-white" | "font-disabled" | "font-annotation" | "font-hint" | "font-secondary-info" | "font-default" | "font-titles-labels" | "font-info" | "font-danger" | "font-pure-black" | "font-pure-white";
export declare const isBadgeColor: (color: unknown) => color is "badge-background-level-0" | "badge-background-level-1" | "badge-background-level-2" | "badge-background-level-3" | "badge-background-level-4";
export declare const isStatusBackgroundColor: (color: unknown) => color is "status-background-info" | "status-background-success" | "status-background-danger" | "status-background-warning" | "status-background-warning-2" | "status-background-service-1" | "status-background-service-2";
export declare const isStatusColor: (color: unknown) => color is "status-font-on-info" | "status-font-on-success" | "status-font-on-warning" | "status-font-on-warning-2" | "status-font-on-danger" | "status-font-on-service-1" | "status-font-on-service-2";
export declare const isShadowColor: (color: unknown) => color is "shadow-elevation-border" | "shadow-elevation-1" | "shadow-elevation-2x" | "shadow-elevation-2y" | "shadow-highlight" | "shadow-danger";
export declare const Palette: {
    surface: {
        'surface-light': Var;
        'surface-tint': Var;
        'surface-room': Var;
        'surface-neutral': Var;
        'surface-disabled': Var;
        'surface-hover': Var;
        'surface-selected': Var;
        'surface-dark': Var;
        'surface-featured': Var;
        'surface-featured-hover': Var;
        'surface-overlay': Var;
        'surface-transparent': string;
        'surface-sidebar': Var;
    };
    status: {
        'status-background-info': Var;
        'status-background-success': Var;
        'status-background-danger': Var;
        'status-background-warning': Var;
        'status-background-warning-2': Var;
        'status-background-service-1': Var;
        'status-background-service-2': Var;
    };
    statusColor: {
        'status-font-on-info': Var;
        'status-font-on-success': Var;
        'status-font-on-warning': Var;
        'status-font-on-warning-2': Var;
        'status-font-on-danger': Var;
        'status-font-on-service-1': Var;
        'status-font-on-service-2': Var;
    };
    badge: {
        'badge-background-level-0': Var;
        'badge-background-level-1': Var;
        'badge-background-level-2': Var;
        'badge-background-level-3': Var;
        'badge-background-level-4': Var;
    };
    text: {
        'font-white': Var;
        'font-disabled': Var;
        'font-annotation': Var;
        'font-hint': Var;
        'font-secondary-info': Var;
        'font-default': Var;
        'font-titles-labels': Var;
        'font-info': Var;
        'font-danger': Var;
        'font-pure-black': Var;
        'font-pure-white': Var;
    };
    stroke: {
        'stroke-extra-light': Var;
        'stroke-light': Var;
        'stroke-medium': Var;
        'stroke-dark': Var;
        'stroke-extra-dark': Var;
        'stroke-extra-light-highlight': Var;
        'stroke-highlight': Var;
        'stroke-extra-light-error': Var;
        'stroke-error': Var;
    };
    shadow: {
        'shadow-elevation-border': Var;
        'shadow-elevation-1': Var;
        'shadow-elevation-2x': Var;
        'shadow-elevation-2y': Var;
        'shadow-highlight': Var;
        'shadow-danger': Var;
    };
};
//# sourceMappingURL=Theme.d.ts.map