import type { ComponentProps, ReactElement } from 'react';
import type Box from '../Box';
import { type OptionsPaginated } from '../OptionsPaginated';
import { type PaginatedMultiSelectOption } from './PaginatedMultiSelect';
type PaginatedMultiSelectFilteredProps = Omit<ComponentProps<typeof Box>, 'onChange' | 'value' | 'filter'> & {
    error?: boolean;
    options: PaginatedMultiSelectOption[];
    withTitle?: boolean;
    placeholder?: string;
    endReached?: (start?: number, end?: number) => void;
    value?: PaginatedMultiSelectOption[];
    onChange: (values: PaginatedMultiSelectOption[]) => void;
    renderOptions?: (props: ComponentProps<typeof OptionsPaginated>) => ReactElement | null;
    anchor?: any;
    filter?: string;
    setFilter?: (value: string) => void;
};
export declare const PaginatedMultiSelectFiltered: ({ filter, setFilter, options, placeholder, ...props }: PaginatedMultiSelectFilteredProps) => JSX.Element;
export {};
//# sourceMappingURL=PaginatedMultiSelectFiltered.d.ts.map