import type { ComponentProps, ForwardRefExoticComponent, ReactNode } from 'react';
import type { InputBoxSkeleton } from '.';
import type Box from '../Box';
import type { Option } from './Option';
import type { Placeholder } from './Placeholder';
type InputBoxProps = ComponentProps<typeof Box> & {
    addon?: ReactNode;
    input?: ReactNode;
    multiple?: boolean;
    error?: string;
    placeholder?: string;
    placeholderVisible?: boolean;
    type: 'button' | 'checkbox' | 'color' | 'date' | 'datetime' | 'datetime-local' | 'email' | 'file' | 'hidden' | 'image' | 'month' | 'number' | 'password' | 'radio' | 'range' | 'reset' | 'search' | 'submit' | 'tel' | 'text' | 'time' | 'url' | 'week' | 'textarea' | 'select';
};
export type InputBox = ForwardRefExoticComponent<InputBoxProps> & {
    Input: ForwardRefExoticComponent<ComponentProps<typeof Box>>;
    Skeleton: ForwardRefExoticComponent<ComponentProps<typeof InputBoxSkeleton>>;
    Option: ForwardRefExoticComponent<ComponentProps<typeof Option>>;
    Placeholder: ForwardRefExoticComponent<ComponentProps<typeof Placeholder>>;
};
export declare const InputBox: InputBox;
export {};
//# sourceMappingURL=InputBox.d.ts.map