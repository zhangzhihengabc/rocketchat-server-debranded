import { type ComponentProps, type ReactElement } from 'react';
import Box from '../Box';
import Option from '../Option';
import { OptionsPaginated } from '../OptionsPaginated';
export type PaginatedMultiSelectOption = {
    value: string | number;
    label: string;
};
type PaginatedMultiSelectProps = Omit<ComponentProps<typeof Box>, 'onChange' | 'value'> & {
    error?: boolean;
    options: PaginatedMultiSelectOption[];
    withTitle?: boolean;
    placeholder?: string;
    endReached?: (start?: number, end?: number) => void;
    value?: PaginatedMultiSelectOption[];
    onChange: (values: PaginatedMultiSelectOption[]) => void;
    renderOptions?: (props: ComponentProps<typeof OptionsPaginated>) => ReactElement | null;
    renderItem?: (props: ComponentProps<typeof Option>) => ReactElement | null;
    anchor?: any;
};
declare const PaginatedMultiSelect: ({ withTitle, value, filter, options, error, disabled, anchor: Anchor, onChange, placeholder, renderOptions: OptionsComponent, renderItem, endReached, ...props }: PaginatedMultiSelectProps) => JSX.Element;
export default PaginatedMultiSelect;
//# sourceMappingURL=PaginatedMultiSelect.d.ts.map