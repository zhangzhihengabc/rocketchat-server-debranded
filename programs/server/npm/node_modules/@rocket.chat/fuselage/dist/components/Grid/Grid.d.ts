import type { ComponentProps } from 'react';
import React from 'react';
import Box from '../Box';
type GridProps = ComponentProps<typeof Box> & {
    xs?: boolean;
    sm?: boolean;
    md?: boolean;
    lg?: boolean;
    xl?: boolean;
};
export declare const Grid: {
    ({ xs, sm, md, lg, xl, ...props }: GridProps): JSX.Element;
    Item: ({ xs, sm, md, lg, xl, ...props }: {
        is?: React.ElementType | undefined;
        className?: string | (<T extends readonly unknown[]>(...args: T) => string) | (string | false | 0 | (<T extends readonly unknown[]>(...args: T) => string) | null | undefined)[] | undefined;
        animated?: boolean | undefined;
        withRichContent?: boolean | "inlineWithoutBreaks" | undefined;
        htmlSize?: number | undefined;
    } & Partial<import("../Box/stylingProps").StylingProps> & Omit<React.AllHTMLAttributes<HTMLElement>, "ref" | "is" | "className" | "size" | "elevation"> & Omit<React.SVGAttributes<SVGElement>, "elevation" | keyof React.AllHTMLAttributes<HTMLElement>> & React.RefAttributes<any> & {
        xs?: 2 | 1 | 3 | 4 | undefined;
        sm?: 2 | 1 | 3 | 4 | 5 | 6 | 7 | 8 | undefined;
        md?: 2 | 1 | 3 | 4 | 5 | 6 | 7 | 8 | undefined;
        lg?: 12 | 10 | 2 | 1 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 11 | undefined;
        xl?: 12 | 10 | 2 | 1 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 11 | undefined;
    }) => JSX.Element;
};
export {};
//# sourceMappingURL=Grid.d.ts.map