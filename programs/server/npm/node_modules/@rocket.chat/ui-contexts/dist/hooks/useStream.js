"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useSingleStream = exports.useStream = void 0;
const react_1 = require("react");
const ServerContext_1 = require("../ServerContext");
function useStream(streamName, options) {
    const { getStream } = (0, react_1.useContext)(ServerContext_1.ServerContext);
    return (0, react_1.useMemo)(() => getStream(streamName, options), [getStream, streamName, options]);
}
exports.useStream = useStream;
/*
 * @param streamName The name of the stream to subscribe to
 * @returns A function that can be used to subscribe to the stream
 * the main difference between this and useStream is that this function
 * will only subscribe to the `stream + key` only once, but you can still add multiple callbacks
 * to the same path
 */
function useSingleStream(streamName, options) {
    const { getSingleStream } = (0, react_1.useContext)(ServerContext_1.ServerContext);
    return (0, react_1.useMemo)(() => getSingleStream(streamName, options), [getSingleStream, streamName, options]);
}
exports.useSingleStream = useSingleStream;
//# sourceMappingURL=useStream.js.map