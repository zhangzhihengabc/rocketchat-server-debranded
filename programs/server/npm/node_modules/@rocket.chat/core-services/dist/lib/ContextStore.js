"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FibersContextStore = exports.AsyncContextStore = void 0;
const async_hooks_1 = require("async_hooks");
const fibers_1 = __importDefault(require("fibers"));
// This is the default implementation of the context store but there is a bug on Meteor 2.5 that prevents us from using it
class AsyncContextStore extends async_hooks_1.AsyncLocalStorage {
}
exports.AsyncContextStore = AsyncContextStore;
class FibersContextStore {
    getStore() {
        return fibers_1.default.current;
    }
    run(store, callback, ...args) {
        // eslint-disable-next-line new-cap
        return (0, fibers_1.default)((...rest) => {
            const fiber = fibers_1.default.current;
            for (const key in store) {
                if (store.hasOwnProperty(key)) {
                    fiber[key] = store[key];
                }
            }
            fibers_1.default.yield(callback(...rest));
        }).run(...args);
    }
}
exports.FibersContextStore = FibersContextStore;
//# sourceMappingURL=ContextStore.js.map