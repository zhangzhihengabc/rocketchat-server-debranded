import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { MessageFooterCallout, MessageFooterCalloutAction } from '.';
import MessageComposer from '../MessageComposer/MessageComposer';
import MessageComposerIcon from '../MessageComposer/MessageComposerIcon';
import MessageFooterCalloutContent from './MessageFooterCalloutContent';
import MessageFooterCalloutDivider from './MessageFooterCalloutDivider';
import '@rocket.chat/icons/dist/rocketchat.css';
export default {
    title: 'Components/MessageComposer/Locked',
    component: MessageComposer,
};
export const MessageComposerBlocked = () => (_jsxs(MessageFooterCallout, { children: [_jsx(MessageComposerIcon, { name: 'burger' }), "Feedback text"] }));
export const MessageComposerBlockedLargeText = () => (_jsxs(MessageFooterCallout, { children: [_jsx(MessageComposerIcon, { name: 'burger' }), _jsx(MessageFooterCalloutContent, { children: "Feedback text Feedback text Feedback text Feedback text Feedback text Feedback text Feedback text Feedback text Feedback text Feedback text Feedback text Feedback text Feedback text Feedback text Feedback text text Feedback text Feedback text Feedback text Feedback text Feedback text text Feedback text Feedback text Feedback text Feedback text Feedback text text Feedback text Feedback text Feedback text Feedback text Feedback text" }), _jsx(MessageFooterCalloutAction, { onClick: () => undefined, children: "Button" })] }));
export const MessageComposerBlockedLargeTextDashed = () => (_jsxs(MessageFooterCallout, { dashed: true, children: [_jsx(MessageComposerIcon, { name: 'burger' }), _jsx(MessageFooterCalloutContent, { children: "Feedback text Feedback text Feedback text Feedback text Feedback text Feedback text Feedback text Feedback text Feedback text Feedback text Feedback text Feedback text Feedback text Feedback text Feedback text text Feedback text Feedback text Feedback text Feedback text Feedback text text Feedback text Feedback text Feedback text Feedback text Feedback text text Feedback text Feedback text Feedback text Feedback text Feedback text" }), _jsx(MessageFooterCalloutAction, { onClick: () => undefined, children: "Button" })] }));
export const _MessageFooterCalloutAction = () => (_jsxs(MessageFooterCallout, { children: ["Feedback text ", _jsx(MessageFooterCalloutDivider, {}), _jsx(MessageFooterCalloutAction, { onClick: () => undefined, children: "Button" })] }));
//# sourceMappingURL=MessageFooterCallout.stories.js.map