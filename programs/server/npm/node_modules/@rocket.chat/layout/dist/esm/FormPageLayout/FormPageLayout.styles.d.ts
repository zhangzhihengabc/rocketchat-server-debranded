/// <reference types="react" />
export declare const Wrapper: import("react").ForwardRefExoticComponent<Pick<import("react").ClassAttributes<HTMLDivElement> & import("react").HTMLAttributes<HTMLDivElement>, "key" | keyof import("react").HTMLAttributes<HTMLDivElement>> & import("react").RefAttributes<HTMLDivElement>>;
export declare const Aside: import("react").ForwardRefExoticComponent<Pick<import("react").ClassAttributes<HTMLDivElement> & import("react").HTMLAttributes<HTMLDivElement> & {
    justifyContent?: string | undefined;
}, "justifyContent" | "key" | keyof import("react").HTMLAttributes<HTMLDivElement>> & import("react").RefAttributes<HTMLDivElement>>;
export declare const Content: import("react").ForwardRefExoticComponent<Pick<import("react").ClassAttributes<HTMLDivElement> & import("react").HTMLAttributes<HTMLDivElement>, "key" | keyof import("react").HTMLAttributes<HTMLDivElement>> & import("react").RefAttributes<HTMLDivElement>>;
export declare const Logo: import("react").ForwardRefExoticComponent<Pick<import("react").ClassAttributes<HTMLDivElement> & import("react").HTMLAttributes<HTMLDivElement>, "key" | keyof import("react").HTMLAttributes<HTMLDivElement>> & import("react").RefAttributes<HTMLDivElement>>;
export declare const Title: import("react").ForwardRefExoticComponent<Pick<import("react").ClassAttributes<HTMLHeadingElement> & import("react").HTMLAttributes<HTMLHeadingElement>, "key" | keyof import("react").HTMLAttributes<HTMLHeadingElement>> & import("react").RefAttributes<HTMLHeadingElement>>;
export declare const TitleHighlight: import("react").ForwardRefExoticComponent<Pick<import("react").ClassAttributes<HTMLSpanElement> & import("react").HTMLAttributes<HTMLSpanElement> & {
    fontColor?: string | undefined;
    isDark?: boolean | undefined;
}, "key" | "fontColor" | "isDark" | keyof import("react").HTMLAttributes<HTMLSpanElement>> & import("react").RefAttributes<HTMLSpanElement>>;
export declare const Subtitle: import("react").ForwardRefExoticComponent<Pick<import("react").ClassAttributes<HTMLHeadingElement> & import("react").HTMLAttributes<HTMLHeadingElement> & {
    fontColor?: string | undefined;
    fontWeight?: string | undefined;
}, "fontWeight" | "key" | keyof import("react").HTMLAttributes<HTMLHeadingElement> | "fontColor"> & import("react").RefAttributes<HTMLHeadingElement>>;
export declare const Description: import("react").ForwardRefExoticComponent<Pick<import("react").ClassAttributes<HTMLDivElement> & import("react").HTMLAttributes<HTMLDivElement>, "key" | keyof import("react").HTMLAttributes<HTMLDivElement>> & import("react").RefAttributes<HTMLDivElement>>;
//# sourceMappingURL=FormPageLayout.styles.d.ts.map