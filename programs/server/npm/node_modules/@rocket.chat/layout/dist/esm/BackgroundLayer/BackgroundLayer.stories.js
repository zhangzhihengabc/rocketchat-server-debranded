var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx } from "react/jsx-runtime";
import { Tile } from '@rocket.chat/fuselage';
import BackgroundLayer from './BackgroundLayer';
export default {
    title: 'common/BackgroundLayer',
    component: BackgroundLayer,
    parameters: {
        layout: 'fullscreen',
    },
};
export var SystemDarkMode = function () { return (_jsx(BackgroundLayer, { children: _jsx(Tile, { children: "An example tile" }) })); };
export var DarkMode = function (props) { return (_jsx(BackgroundLayer, __assign({}, props, { children: _jsx(Tile, { children: "An example tile" }) }))); };
DarkMode.args = { forcedDarkMode: true };
export var LightMode = function (props) { return (_jsx(BackgroundLayer, __assign({}, props, { children: _jsx(Tile, { children: "An example tile" }) }))); };
LightMode.args = { forcedDarkMode: false };
//# sourceMappingURL=BackgroundLayer.stories.js.map