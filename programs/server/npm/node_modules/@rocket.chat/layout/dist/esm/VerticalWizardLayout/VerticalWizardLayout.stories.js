var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Field, FieldDescription, FieldError, FieldHint, FieldLabel, FieldRow, InputBox, } from '@rocket.chat/fuselage';
import Form from '../FormPageLayout';
import { VerticalWizardLayout, VerticalWizardLayoutTitle, VerticalWizardLayoutForm, VerticalWizardLayoutFooter, } from './VerticalWizardLayout';
export default {
    title: 'VerticalWizardLayout',
    component: VerticalWizardLayout,
};
export var Default = function () { return (_jsxs(VerticalWizardLayout, { children: [_jsx(VerticalWizardLayoutTitle, { children: "Title" }), _jsx(VerticalWizardLayoutForm, { children: _jsxs(Form, __assign({ onSubmit: console.log }, { children: [_jsxs(Form.Header, { children: [_jsx(Form.Title, { children: "Title" }), _jsx(Form.Subtitle, { children: "Subtitle" })] }), _jsx(Form.Container, { children: _jsxs(Field, { children: [_jsx(FieldLabel, { children: "Label" }), _jsx(FieldDescription, { children: "Description" }), _jsx(FieldRow, { children: _jsx(InputBox.Skeleton, {}) }), _jsx(FieldError, { children: "Error" }), _jsx(FieldHint, { children: "Hint" })] }) }), _jsx(Form.Footer, { children: "footer" })] })) }), _jsx(VerticalWizardLayoutFooter, { children: "New here? Create account" })] })); };
export var WithScroll = function () { return (_jsxs(VerticalWizardLayout, { children: [_jsx(VerticalWizardLayoutTitle, { children: "Title" }), _jsx(VerticalWizardLayoutForm, { children: _jsxs(Form, __assign({ onSubmit: console.log }, { children: [_jsxs(Form.Header, { children: [_jsx(Form.Title, { children: "Title" }), _jsx(Form.Subtitle, { children: "Subtitle" })] }), _jsxs(Form.Container, { children: [_jsxs(Field, { children: [_jsx(FieldLabel, { children: "Label" }), _jsx(FieldDescription, { children: "Description" }), _jsx(FieldRow, { children: _jsx(InputBox.Skeleton, {}) }), _jsx(FieldError, { children: "Error" }), _jsx(FieldHint, { children: "Hint" })] }), ' ', _jsxs(Field, { children: [_jsx(FieldLabel, { children: "Label" }), _jsx(FieldDescription, { children: "Description" }), _jsx(FieldRow, { children: _jsx(InputBox.Skeleton, {}) }), _jsx(FieldError, { children: "Error" }), _jsx(FieldHint, { children: "Hint" })] }), ' ', _jsxs(Field, { children: [_jsx(FieldLabel, { children: "Label" }), _jsx(FieldDescription, { children: "Description" }), _jsx(FieldRow, { children: _jsx(InputBox.Skeleton, {}) }), _jsx(FieldError, { children: "Error" }), _jsx(FieldHint, { children: "Hint" })] }), ' ', _jsxs(Field, { children: [_jsx(FieldLabel, { children: "Label" }), _jsx(FieldDescription, { children: "Description" }), _jsx(FieldRow, { children: _jsx(InputBox.Skeleton, {}) }), _jsx(FieldError, { children: "Error" }), _jsx(FieldHint, { children: "Hint" })] }), ' ', _jsxs(Field, { children: [_jsx(FieldLabel, { children: "Label" }), _jsx(FieldDescription, { children: "Description" }), _jsx(FieldRow, { children: _jsx(InputBox.Skeleton, {}) }), _jsx(FieldError, { children: "Error" }), _jsx(FieldHint, { children: "Hint" })] }), ' ', _jsxs(Field, { children: [_jsx(FieldLabel, { children: "Label" }), _jsx(FieldDescription, { children: "Description" }), _jsx(FieldRow, { children: _jsx(InputBox.Skeleton, {}) }), _jsx(FieldError, { children: "Error" }), _jsx(FieldHint, { children: "Hint" })] }), ' ', _jsxs(Field, { children: [_jsx(FieldLabel, { children: "Label" }), _jsx(FieldDescription, { children: "Description" }), _jsx(FieldRow, { children: _jsx(InputBox.Skeleton, {}) }), _jsx(FieldError, { children: "Error" }), _jsx(FieldHint, { children: "Hint" })] }), ' ', _jsxs(Field, { children: [_jsx(FieldLabel, { children: "Label" }), _jsx(FieldDescription, { children: "Description" }), _jsx(FieldRow, { children: _jsx(InputBox.Skeleton, {}) }), _jsx(FieldError, { children: "Error" }), _jsx(FieldHint, { children: "Hint" })] }), ' ', _jsxs(Field, { children: [_jsx(FieldLabel, { children: "Label" }), _jsx(FieldDescription, { children: "Description" }), _jsx(FieldRow, { children: _jsx(InputBox.Skeleton, {}) }), _jsx(FieldError, { children: "Error" }), _jsx(FieldHint, { children: "Hint" })] }), ' ', _jsxs(Field, { children: [_jsx(FieldLabel, { children: "Label" }), _jsx(FieldDescription, { children: "Description" }), _jsx(FieldRow, { children: _jsx(InputBox.Skeleton, {}) }), _jsx(FieldError, { children: "Error" }), _jsx(FieldHint, { children: "Hint" })] }), ' ', _jsxs(Field, { children: [_jsx(FieldLabel, { children: "Label" }), _jsx(FieldDescription, { children: "Description" }), _jsx(FieldRow, { children: _jsx(InputBox.Skeleton, {}) }), _jsx(FieldError, { children: "Error" }), _jsx(FieldHint, { children: "Hint" })] }), ' ', _jsxs(Field, { children: [_jsx(FieldLabel, { children: "Label" }), _jsx(FieldDescription, { children: "Description" }), _jsx(FieldRow, { children: _jsx(InputBox.Skeleton, {}) }), _jsx(FieldError, { children: "Error" }), _jsx(FieldHint, { children: "Hint" })] }), ' ', _jsxs(Field, { children: [_jsx(FieldLabel, { children: "Label" }), _jsx(FieldDescription, { children: "Description" }), _jsx(FieldRow, { children: _jsx(InputBox.Skeleton, {}) }), _jsx(FieldError, { children: "Error" }), _jsx(FieldHint, { children: "Hint" })] })] }), _jsx(Form.Footer, { children: "footer" })] })) }), _jsx(VerticalWizardLayoutFooter, { children: "New here? Create account" })] })); };
//# sourceMappingURL=VerticalWizardLayout.stories.js.map