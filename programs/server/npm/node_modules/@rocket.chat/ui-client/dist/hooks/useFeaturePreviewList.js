import { useUserPreference, useSetting } from '@rocket.chat/ui-contexts';
export const defaultFeaturesPreview = [
    {
        name: 'quickReactions',
        i18n: 'Quick_reactions',
        description: 'Quick_reactions_description',
        group: 'Message',
        imageUrl: 'images/featurePreview/quick-reactions.png',
        value: false,
        enabled: true,
    },
    {
        name: 'navigationBar',
        i18n: 'Navigation_bar',
        description: 'Navigation_bar_description',
        group: 'Navigation',
        value: false,
        enabled: false,
    },
];
export const enabledDefaultFeatures = defaultFeaturesPreview.filter((feature) => feature.enabled);
export const useFeaturePreviewList = () => {
    const featurePreviewEnabled = useSetting('Accounts_AllowFeaturePreview');
    const userFeaturesPreview = useUserPreference('featuresPreview');
    if (!featurePreviewEnabled) {
        return { unseenFeatures: 0, features: [], featurePreviewEnabled };
    }
    const unseenFeatures = enabledDefaultFeatures.filter((feature) => !(userFeaturesPreview === null || userFeaturesPreview === void 0 ? void 0 : userFeaturesPreview.find((userFeature) => userFeature.name === feature.name))).length;
    const mergedFeatures = enabledDefaultFeatures.map((feature) => {
        const userFeature = userFeaturesPreview === null || userFeaturesPreview === void 0 ? void 0 : userFeaturesPreview.find((userFeature) => userFeature.name === feature.name);
        return Object.assign(Object.assign({}, feature), userFeature);
    });
    return { unseenFeatures, features: mergedFeatures, featurePreviewEnabled };
};
//# sourceMappingURL=useFeaturePreviewList.js.map