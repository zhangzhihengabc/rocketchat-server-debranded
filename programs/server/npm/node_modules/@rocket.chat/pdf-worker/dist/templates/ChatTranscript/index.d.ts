/// <reference types="node" />
/// <reference types="react" />
/// <reference types="node" />
/// <reference types="webpack-env" />
/// <reference types="meteor" />
/// <reference types="node" />
/// <reference types="node" />
/// <reference types="node" />
import type { ILivechatAgent, ILivechatVisitor, IMessage, Serialized } from '@rocket.chat/core-typings';
import type { Root } from '@rocket.chat/message-parser';
export type PDFFile = {
    name?: string;
    buffer: Buffer | null;
    extension?: 'png' | 'jpg';
};
export type Quote = {
    md: Root;
    name: string;
    ts: string;
};
export type PDFMessage = Serialized<Omit<Pick<IMessage, 'msg' | 'u' | 'ts' | 'md'>, 'files'>> & {
    files?: PDFFile[];
} & {
    divider?: string;
} & {
    quotes?: Quote[];
};
export type ChatTranscriptData = {
    header: {
        agent: Pick<ILivechatAgent, 'name' | 'username'>;
        visitor: Pick<ILivechatVisitor, 'name' | 'username'>;
        siteName: string;
        date: string;
        time: string;
    };
    messages: PDFMessage[];
    t: (key: string) => string;
};
export declare const ChatTranscriptPDF: ({ header, messages, t }: ChatTranscriptData) => JSX.Element;
declare const _default: (data: ChatTranscriptData) => Promise<NodeJS.ReadableStream>;
export default _default;
