const getPrototypeOf = require('./getPrototypeOf')

const getOwnPropertyNames = Object.getOwnPropertyNames

const RootCtor = (function() {
  class A {}
  return getPrototypeOf(A)
})()

function Dynamic(options) {
  if (typeof options === 'function') {
    return _Dynamic(options)
  } else {
    return function(ctor) {
      return _Dynamic(ctor, options)
    };
  }
}

function _Dynamic(ctor, options) {
  const vPrototype = ctor.prototype
  const ParentCtor = getPrototypeOf(ctor)
  const vConstruct = vPrototype.constructor // the constructor is ctor too.
  // static members
  getOwnPropertyNames(ctor).forEach(key => {
    const value = ctor[key]
    if (typeof value === 'function') {

    }
  })

}

module.exports = {Dynamic: Dynamic}
