{"version":3,"sources":["meteor://ðŸ’»app/packages/oauth2/oauth2_server.js"],"names":["OAuth","_requestHandlers","service","query","res","credentialSecret","error","oauthResult","handleOauthRequest","Random","secret","credentialToken","_credentialTokenFromQuery","_storePendingCredential","serviceName","serviceData","options","_renderOauthResults"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACAA,KAAK,CAACC,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAOC,OAAO,EAAEC,KAAK,EAAEC,GAAG,8BAAK;EAC3D,IAAIC,gBAAgB;;EAEpB;EACA,IAAI,CAACF,KAAK,CAACG,KAAK,EAAE;IAChB;;IAEA;IACA,MAAMC,WAAW,iBAASL,OAAO,CAACM,kBAAkB,CAACL,KAAK,CAAC;IAC3DE,gBAAgB,GAAGI,MAAM,CAACC,MAAM,EAAE;IAElC,MAAMC,eAAe,GAAGX,KAAK,CAACY,yBAAyB,CAACT,KAAK,CAAC;;IAE9D;IACA;IACAH,KAAK,CAACa,uBAAuB,CAACF,eAAe,EAAE;MAC7CG,WAAW,EAAEZ,OAAO,CAACY,WAAW;MAChCC,WAAW,EAAER,WAAW,CAACQ,WAAW;MACpCC,OAAO,EAAET,WAAW,CAACS;IACvB,CAAC,EAAEX,gBAAgB,CAAC;EACtB;;EAEA;EACA;EACAL,KAAK,CAACiB,mBAAmB,CAACb,GAAG,EAAED,KAAK,EAAEE,gBAAgB,CAAC;AACzD,CAAC,E","file":"/packages/oauth2.js","sourcesContent":["// connect middleware\nOAuth._requestHandlers['2'] = async (service, query, res) => {\n  let credentialSecret;\n\n  // check if user authorized access\n  if (!query.error) {\n    // Prepare the login results before returning.\n\n    // Run service-specific handler.\n    const oauthResult = await service.handleOauthRequest(query);\n    credentialSecret = Random.secret();\n\n    const credentialToken = OAuth._credentialTokenFromQuery(query);\n\n    // Store the login result so it can be retrieved in another\n    // browser tab by the result handler\n    OAuth._storePendingCredential(credentialToken, {\n      serviceName: service.serviceName,\n      serviceData: oauthResult.serviceData,\n      options: oauthResult.options\n    }, credentialSecret);\n  }\n\n  // Either close the window, redirect, or render nothing\n  // if all else fails\n  OAuth._renderOauthResults(res, query, credentialSecret);\n};\n"]}