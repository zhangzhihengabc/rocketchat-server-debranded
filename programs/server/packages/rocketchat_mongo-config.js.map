{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:mongo-config/server/index.js"],"names":["_objectSpread","module","link","default","v","tls","PassThrough","Email","Mongo","shouldDisableOplog","includes","String","process","env","USE_NATIVE_OPLOG","toLowerCase","Package","DEFAULT_ECDH_CURVE","mongoConnectionOptions","MONGO_URL","retryWrites","mongoOptionStr","MONGO_OPTIONS","mongoOptions","JSON","parse","Object","assign","keys","length","setConnectionOptions","HTTP_FORWARDED_COUNT","TEST_MODE","sendAsync","_sendAsync","options","console","log","NODE_ENV","stream","on","call"],"mappings":"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","file":"/packages/rocketchat_mongo-config.js","sourcesContent":["import tls from 'tls';\nimport { PassThrough } from 'stream';\n\nimport { Email } from 'meteor/email';\nimport { Mongo } from 'meteor/mongo';\n\nconst shouldDisableOplog = ['yes', 'true'].includes(String(process.env.USE_NATIVE_OPLOG).toLowerCase());\nif (!shouldDisableOplog) {\n\tPackage['disable-oplog'] = {};\n}\n\n// FIX For TLS error see more here https://github.com/RocketChat/Rocket.Chat/issues/9316\n// TODO: Remove after NodeJS fix it, more information\n// https://github.com/nodejs/node/issues/16196\n// https://github.com/nodejs/node/pull/16853\n// This is fixed in Node 10, but this supports LTS versions\ntls.DEFAULT_ECDH_CURVE = 'auto';\n\nconst mongoConnectionOptions = {\n\t// add retryWrites=false if not present in MONGO_URL\n\t...(!process.env.MONGO_URL.includes('retryWrites') && { retryWrites: false }),\n\t// ignoreUndefined: false, // TODO evaluate adding this config\n};\n\nconst mongoOptionStr = process.env.MONGO_OPTIONS;\nif (typeof mongoOptionStr !== 'undefined') {\n\tconst mongoOptions = JSON.parse(mongoOptionStr);\n\tObject.assign(mongoConnectionOptions, mongoOptions);\n}\n\nif (Object.keys(mongoConnectionOptions).length > 0) {\n\tMongo.setConnectionOptions(mongoConnectionOptions);\n}\n\nprocess.env.HTTP_FORWARDED_COUNT = process.env.HTTP_FORWARDED_COUNT || '1';\n\n// Just print to logs if in TEST_MODE due to a bug in Meteor 2.5: TypeError: Cannot read property '_syncSendMail' of null\nif (process.env.TEST_MODE === 'true') {\n\tEmail.sendAsync = function _sendAsync(options) {\n\t\tconsole.log('Email.sendAsync', options);\n\t};\n} else if (process.env.NODE_ENV !== 'development') {\n\t// Send emails to a \"fake\" stream instead of print them in console in case MAIL_URL or SMTP is not configured\n\tconst stream = new PassThrough();\n\tstream.on('data', () => {});\n\tstream.on('end', () => {});\n\n\tconst { sendAsync } = Email;\n\tEmail.sendAsync = function _sendAsync(options) {\n\t\treturn sendAsync.call(this, { stream, ...options });\n\t};\n}\n"]}