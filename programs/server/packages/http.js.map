{"version":3,"sources":["meteor://ðŸ’»app/packages/http/httpcall_server.js","meteor://ðŸ’»app/packages/http/httpcall_common.js"],"names":["module","export","HTTP","HTTPInternals","Meteor","link","v","fetch","Request","URL","URLSearchParams","makeErrorByStatus","populateData","hasOwn","Object","prototype","hasOwnProperty","_call","method","url","options","callback","call","Error","toUpperCase","test","headers","content","data","JSON","stringify","paramsForUrl","paramsForBody","params","newUrl","_constructUrl","query","auth","indexOf","base64","Buffer","from","toString","entries","forEach","key","value","append","keys","caching","corsMode","mode","credentials","cb","called","error","response","followRedirects","requestOptions","jar","timeout","body","redirect","referrer","integrity","request","then","res","text","statusCode","status","entry","val","ok","redirected","undefined","catch","err","wrapAsync","MAX_LENGTH","slice","Array","exports","message","stringContent","truncate","replace","str","length","contentType","split","parse","get","apply","concat","arguments","post","put","del","patch"],"mappings":"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","file":"/packages/http.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { fetch, Request } from 'meteor/fetch';\nimport { URL, URLSearchParams } from 'meteor/url';\nimport { HTTP, makeErrorByStatus, populateData } from './httpcall_common.js';\n\nexport { HTTP };\nconst hasOwn = Object.prototype.hasOwnProperty;\n\n/**\n * @deprecated\n */\nexport const HTTPInternals = {};\n\n// _call always runs asynchronously; HTTP.call, defined below,\n// wraps _call and runs synchronously when no callback is provided.\nfunction _call (method, url, options, callback) {\n  ////////// Process arguments //////////\n\n  if (!callback && typeof options === 'function') {\n    // support (method, url, callback) argument list\n    callback = options;\n    options = null;\n  }\n\n  options = options || {};\n\n  if (hasOwn.call(options, 'beforeSend')) {\n    throw new Error('Option beforeSend not supported on server.');\n  }\n\n  method = (method || '').toUpperCase();\n\n  if (!/^https?:\\/\\//.test(url)) {\n    throw new Error('url must be absolute and start with http:// or https://');\n  }\n\n  const headers = {};\n  let content = options.content;\n\n  if (options.data) {\n    content = JSON.stringify(options.data);\n    headers['Content-Type'] = 'application/json';\n  }\n\n  let paramsForUrl;\n  let paramsForBody;\n\n  if (content || method === 'GET' || method === 'HEAD') {\n    paramsForUrl = options.params;\n  }\n  else {\n    paramsForBody = options.params;\n  }\n\n  const newUrl = URL._constructUrl(url, options.query, paramsForUrl);\n\n  if (options.auth) {\n    if (options.auth.indexOf(':') < 0) {\n      throw new Error('auth option should be of the form \"username:password\"');\n    }\n\n    const base64 = Buffer.from(options.auth, 'ascii').toString('base64');\n    headers['Authorization'] = `Basic ${base64}`;\n  }\n\n  if (paramsForBody) {\n    const data = new URLSearchParams();\n    Object.entries(paramsForBody).forEach(([key, value]) => {\n      data.append(key, value);\n    });\n    content = data;\n    headers['Content-Type'] = 'application/x-www-form-urlencoded';\n  }\n\n  if (options.headers) {\n    Object.keys(options.headers).forEach(function (key) {\n      headers[key] = options.headers[key];\n    });\n  }\n\n  let caching;\n  if (options.caching) {\n    // TODO implement fetch-specific options\n  }\n\n  let corsMode;\n  if (options.mode) {\n    // TODO implement fetch-specific options\n  }\n\n  let credentials;\n\n  // wrap callback to add a 'response' property on an error, in case\n  // we have both (http 4xx/5xx error, which has a response payload)\n  callback = (function (cb) {\n    let called = false;\n    return function (error, response) {\n      if (!called) {\n        called = true;\n        if (error && response) {\n          error.response = response;\n        }\n        cb(error, response);\n      }\n    }\n  })(callback);\n\n  // is false if false, otherwise always true\n  const followRedirects = options.followRedirects === false\n    ? 'manual'\n    : 'follow';\n\n  ////////// Kickoff! //////////\n\n  // Allow users to override any request option with the npmRequestOptions\n  // option.\n\n  const requestOptions = {\n    method: method,\n    caching: caching,\n    mode: corsMode,\n\n    jar: false,\n    timeout: options.timeout,\n    body: content,\n    redirect: followRedirects,\n    referrer: options.referrer,\n    integrity: options.integrity,\n    headers: headers\n  };\n\n  const request = new Request(newUrl, requestOptions);\n\n  fetch(request)\n    .then(async res => {\n      const content = await res.text();\n      const response = {};\n      response.statusCode = res.status;\n      response.content = '' + content;\n\n      // fetch headers don't allow simple read using bracket notation\n      // so we iterate their entries and assign them to a new Object\n      response.headers = {};\n      for (const entry of res.headers.entries()) {\n        const [key, val] = entry;\n        response.headers[key] = val;\n      }\n\n      response.ok = res.ok;\n      response.redirected = res.redirected;\n\n      populateData(response);\n\n      if (response.statusCode >= 400) {\n        const error = makeErrorByStatus(\n          response.statusCode,\n          response.content\n        );\n        callback(error, response);\n      } else {\n        callback(undefined, response);\n      }\n    })\n    .catch(err => callback(err));\n}\n\nHTTP.call = Meteor.wrapAsync(_call);\n","var MAX_LENGTH = 500; // if you change this, also change the appropriate test\nvar slice = Array.prototype.slice;\n\nexports.makeErrorByStatus = function(statusCode, content) {\n  var message = \"failed [\" + statusCode + \"]\";\n\n  if (content) {\n    var stringContent = typeof content == \"string\" ?\n      content : content.toString();\n\n    message += ' ' + truncate(stringContent.replace(/\\n/g, ' '), MAX_LENGTH);\n  }\n\n  return new Error(message);\n};\n\nfunction truncate(str, length) {\n  return str.length > length ? str.slice(0, length) + '...' : str;\n}\n\n// Fill in `response.data` if the content-type is JSON.\nexports.populateData = function(response) {\n  // Read Content-Type header, up to a ';' if there is one.\n  // A typical header might be \"application/json; charset=utf-8\"\n  // or just \"application/json\".\n  var contentType = (response.headers['content-type'] || ';').split(';')[0];\n\n  // Only try to parse data as JSON if server sets correct content type.\n  if (['application/json',\n       'text/javascript',\n       'application/javascript',\n       'application/x-javascript',\n      ].indexOf(contentType) >= 0) {\n    try {\n      response.data = JSON.parse(response.content);\n    } catch (err) {\n      response.data = null;\n    }\n  } else {\n    response.data = null;\n  }\n};\n\nvar HTTP = exports.HTTP = {};\n\n/**\n * @summary Send an HTTP `GET` request. Equivalent to calling [`HTTP.call`](#http_call) with \"GET\" as the first argument.\n * @param {String} url The URL to which the request should be sent.\n * @param {Object} [callOptions] Options passed on to [`HTTP.call`](#http_call).\n * @param {Function} [asyncCallback] Callback that is called when the request is completed. Required on the client.\n * @locus Anywhere\n * @deprecated\n */\nHTTP.get = function (/* varargs */) {\n  return HTTP.call.apply(this, [\"GET\"].concat(slice.call(arguments)));\n};\n\n/**\n * @summary Send an HTTP `POST` request. Equivalent to calling [`HTTP.call`](#http_call) with \"POST\" as the first argument.\n * @param {String} url The URL to which the request should be sent.\n * @param {Object} [callOptions] Options passed on to [`HTTP.call`](#http_call).\n * @param {Function} [asyncCallback] Callback that is called when the request is completed. Required on the client.\n * @locus Anywhere\n * @deprecated\n */\nHTTP.post = function (/* varargs */) {\n  return HTTP.call.apply(this, [\"POST\"].concat(slice.call(arguments)));\n};\n\n/**\n * @summary Send an HTTP `PUT` request. Equivalent to calling [`HTTP.call`](#http_call) with \"PUT\" as the first argument.\n * @param {String} url The URL to which the request should be sent.\n * @param {Object} [callOptions] Options passed on to [`HTTP.call`](#http_call).\n * @param {Function} [asyncCallback] Callback that is called when the request is completed. Required on the client.\n * @locus Anywhere\n * @deprecated\n */\nHTTP.put = function (/* varargs */) {\n  return HTTP.call.apply(this, [\"PUT\"].concat(slice.call(arguments)));\n};\n\n/**\n * @summary Send an HTTP `DELETE` request. Equivalent to calling [`HTTP.call`](#http_call) with \"DELETE\" as the first argument. (Named `del` to avoid conflict with the Javascript keyword `delete`)\n * @param {String} url The URL to which the request should be sent.\n * @param {Object} [callOptions] Options passed on to [`HTTP.call`](#http_call).\n * @param {Function} [asyncCallback] Callback that is called when the request is completed. Required on the client.\n * @locus Anywhere\n * @deprecated\n */\nHTTP.del = function (/* varargs */) {\n  return HTTP.call.apply(this, [\"DELETE\"].concat(slice.call(arguments)));\n};\n\n/**\n * @summary Send an HTTP `PATCH` request. Equivalent to calling [`HTTP.call`](#http_call) with \"PATCH\" as the first argument.\n * @param {String} url The URL to which the request should be sent.\n * @param {Object} [callOptions] Options passed on to [`HTTP.call`](#http_call).\n * @param {Function} [asyncCallback] Callback that is called when the request is completed. Required on the client.\n * @locus Anywhere\n * @deprecated\n */\nHTTP.patch = function (/* varargs */) {\n  return HTTP.call.apply(this, [\"PATCH\"].concat(slice.call(arguments)));\n};\n"]}