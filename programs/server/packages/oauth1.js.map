{"version":3,"sources":["meteor://ðŸ’»app/packages/oauth1/oauth1_binding.js","meteor://ðŸ’»app/packages/oauth1/oauth1_server.js","meteor://ðŸ’»app/packages/oauth1/oauth1_pending_request_tokens.js"],"names":["_objectSpread","module","link","default","v","export","OAuth1Binding","crypto","querystring","urlModule","constructor","config","urls","_config","_urls","prepareRequestToken","callbackUrl","headers","_buildHeader","oauth_callback","response","_call","method","url","requestToken","tokens","parse","content","oauth_callback_confirmed","Object","assign","Error","oauth_token","requestTokenSecret","oauth_token_secret","prepareAccessToken","query","accessTokenSecret","oauth_verifier","accessToken","error","callAsync","params","callback","getAsync","postAsync","call","Promise","await","get","post","oauth_consumer_key","consumerKey","oauth_nonce","Random","secret","replace","oauth_signature_method","oauth_timestamp","Date","valueOf","toFixed","toString","oauth_version","_getSignature","rawHeaders","_encodeHeader","parameters","keys","map","key","sort","join","signatureBase","_encodeString","OAuth","openSecret","signingKey","createHmac","update","digest","parsedUrl","search","format","oauth_signature","authString","_getAuthHeaderString","_fetch","Authorization","toUpperCase","body","_addValuesToQueryParams","queryParams","then","res","text","responseHeaders","Array","from","entries","reduce","acc","val","toLowerCase","data","includes","JSON","undefined","nonce","redirected","ok","statusCode","status","catch","err","console","log","message","header","memo","str","encodeURIComponent","escape","module1","_queryParamsWithAuthTokenUrl","authUrl","oauthBinding","whitelistedQueryParams","redirectUrlObj","prev","param","_requestHandlers","service","ServiceConfiguration","configurations","findOne","serviceName","ConfigError","credentialSecret","requestTokenAndRedirect","_redirectUri","state","cordova","android","_storeRequestToken","_credentialTokenFromQuery","redirectUrl","authParams","authenticate","writeHead","end","requestTokenInfo","_retrieveRequestToken","oauthResult","handleOauthRequest","credentialToken","_storePendingCredential","serviceData","options","_renderOauthResults","_pendingRequestTokens","Mongo","Collection","_preventAutopublish","createIndex","unique","_cleanStaleResults","timeCutoff","setMinutes","getMinutes","remove","createdAt","$lt","_cleanupHandle","Meteor","setInterval","check","String","upsert","sealSecret","pendingRequestToken","_id"],"mappings":"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","file":"/packages/oauth1.js","sourcesContent":["import crypto from 'crypto';\nimport querystring from 'querystring';\nimport urlModule from 'url';\n\n// An OAuth1 wrapper around http calls which helps get tokens and\n// takes care of HTTP headers\n//\n// @param config {Object}\n//   - consumerKey (String): oauth consumer key\n//   - secret (String): oauth consumer secret\n// @param urls {Object}\n//   - requestToken (String): url\n//   - authorize (String): url\n//   - accessToken (String): url\n//   - authenticate (String): url\nexport class OAuth1Binding {\n  constructor(config, urls) {\n    this._config = config;\n    this._urls = urls;\n  }\n\n  async prepareRequestToken(callbackUrl) {\n    const headers = this._buildHeader({\n      oauth_callback: callbackUrl\n    });\n\n    const response = await this._call({method: 'POST', url: this._urls.requestToken, headers});\n    const tokens = querystring.parse(response.content);\n\n    if (! tokens.oauth_callback_confirmed)\n      throw Object.assign(new Error(\"oauth_callback_confirmed false when requesting oauth1 token\"),\n                               {response: response});\n\n    this.requestToken = tokens.oauth_token;\n    this.requestTokenSecret = tokens.oauth_token_secret;\n  }\n\n  async prepareAccessToken(query, requestTokenSecret) {\n    // support implementations that use request token secrets. This is\n    // read by this._call.\n    //\n    // XXX make it a param to call, not something stashed on self? It's\n    // kinda confusing right now, everything except this is passed as\n    // arguments, but this is stored.\n    if (requestTokenSecret)\n      this.accessTokenSecret = requestTokenSecret;\n\n    const headers = this._buildHeader({\n      oauth_token: query.oauth_token,\n      oauth_verifier: query.oauth_verifier\n    });\n\n    const response = await this._call({ method: 'POST', url: this._urls.accessToken, headers });\n    const tokens = querystring.parse(response.content);\n\n    if (! tokens.oauth_token || ! tokens.oauth_token_secret) {\n      const error = new Error(\"missing oauth token or secret\");\n      // We provide response only if no token is available, we do not want to leak any tokens\n      if (! tokens.oauth_token && ! tokens.oauth_token_secret) {\n        Object.assign(error, {response: response});\n      }\n      throw error;\n    }\n\n    this.accessToken = tokens.oauth_token;\n    this.accessTokenSecret = tokens.oauth_token_secret;\n  }\n\n  async callAsync(method, url, params, callback) {\n    const headers = this._buildHeader({\n      oauth_token: this.accessToken\n    });\n\n    if(! params) {\n      params = {};\n    }\n\n    return this._call({ method, url, headers, params, callback });\n  }\n\n  async getAsync(url, params, callback) {\n    return this.callAsync('GET', url, params, callback);\n  }\n\n  async postAsync(url, params, callback) {\n    return this.callAsync('POST', url, params, callback);\n  }\n\n  call(method, url, params, callback) {\n    // Require changes when remove Fibers. Exposed to public api.\n    return Promise.await(this.callAsync(method, url, params, callback));\n  }\n\n  get(url, params, callback) {\n    // Require changes when remove Fibers. Exposed to public api.\n    return this.call('GET', url, params, callback);\n  }\n\n  post(url, params, callback) {\n    // Require changes when remove Fibers. Exposed to public api.\n    return this.call('POST', url, params, callback);\n  }\n\n  _buildHeader(headers) {\n    return {\n      oauth_consumer_key: this._config.consumerKey,\n      oauth_nonce: Random.secret().replace(/\\W/g, ''),\n      oauth_signature_method: 'HMAC-SHA1',\n      oauth_timestamp: (new Date().valueOf()/1000).toFixed().toString(),\n      oauth_version: '1.0',\n      ...headers,\n    }\n  }\n\n  _getSignature(method, url, rawHeaders, accessTokenSecret, params) {\n    const headers = this._encodeHeader({ ...rawHeaders, ...params });\n\n    const parameters = Object.keys(headers).map(key => `${key}=${headers[key]}`)\n      .sort().join('&');\n\n    const signatureBase = [\n      method,\n      this._encodeString(url),\n      this._encodeString(parameters)\n    ].join('&');\n\n    const secret = OAuth.openSecret(this._config.secret);\n\n    let signingKey = `${this._encodeString(secret)}&`;\n    if (accessTokenSecret)\n      signingKey += this._encodeString(accessTokenSecret);\n\n    return crypto.createHmac('SHA1', signingKey).update(signatureBase).digest('base64');\n  };\n\n  async _call({method, url, headers = {}, params = {}, callback}) {\n    // all URLs to be functions to support parameters/customization\n    if(typeof url === \"function\") {\n      url = url(this);\n    }\n\n    // Extract all query string parameters from the provided URL\n    const parsedUrl = urlModule.parse(url, true);\n    // Merge them in a way that params given to the method call have precedence\n    params = { ...parsedUrl.query, ...params };\n\n    // Reconstruct the URL back without any query string parameters\n    // (they are now in params)\n    parsedUrl.query = {};\n    parsedUrl.search = '';\n    url = urlModule.format(parsedUrl);\n\n    // Get the signature\n    headers.oauth_signature =\n      this._getSignature(method, url, headers, this.accessTokenSecret, params);\n\n    // Make a authorization string according to oauth1 spec\n    const authString = this._getAuthHeaderString(headers);\n    // Make signed request\n    return OAuth._fetch(url, method, {\n      headers: {\n        Authorization: authString,\n        ...(method.toUpperCase() === 'POST' ? { 'Content-Type': 'application/x-www-form-urlencoded' } : {})\n      },\n      ...(method.toUpperCase() === 'POST' ?\n        { body: OAuth._addValuesToQueryParams(params).toString() }\n        : { queryParams: params })\n    }).then((res) =>\n        res.text().then((content) => {\n          const responseHeaders = Array.from(res.headers.entries()).reduce(\n            (acc, [key, val]) => {\n              return { ...acc, [key.toLowerCase()]: val };\n            },\n            {}\n          );\n          const data = responseHeaders['content-type'].includes('application/json') ?\n            JSON.parse(content) : undefined;\n          return  {\n            content: data ? '' : content,\n            data,\n            headers: { ...responseHeaders, nonce: headers.oauth_nonce },\n            redirected: res.redirected,\n            ok: res.ok,\n            statusCode: res.status,\n          };\n        })\n      )\n      .then((response) => {\n        if (callback) {\n          callback(undefined, response);\n        }\n        return response;\n      })\n      .catch((err) => {\n        if (callback) {\n          callback(err);\n        }\n        console.log({ err });\n        throw Object.assign(\n          new Error(`Failed to send OAuth1 request to ${url}. ${err.message}`),\n          { response: err.response }\n        );\n      });\n  }\n\n  _encodeHeader(header) {\n    return Object.keys(header).reduce((memo, key) => {\n      memo[this._encodeString(key)] = this._encodeString(header[key]);\n      return memo;\n    }, {});\n  };\n\n  _encodeString(str) {\n    return encodeURIComponent(str).replace(/[!'()]/g, escape).replace(/\\*/g, \"%2A\");\n  };\n\n  _getAuthHeaderString(headers) {\n    return 'OAuth ' +  Object.keys(headers).map(key =>\n      `${this._encodeString(key)}=\"${this._encodeString(headers[key])}\"`\n    ).sort().join(', ');\n  };\n\n};\n","import url from 'url';\nimport { OAuth1Binding } from './oauth1_binding';\n\nOAuth._queryParamsWithAuthTokenUrl = (authUrl, oauthBinding, params = {}, whitelistedQueryParams = []) => {\n  const redirectUrlObj = url.parse(authUrl, true);\n\n  Object.assign(\n    redirectUrlObj.query,\n    whitelistedQueryParams.reduce((prev, param) =>\n      params.query[param] ? { ...prev, param: params.query[param] } : prev,\n      {}\n    ),\n    {\n      oauth_token: oauthBinding.requestToken,\n    }\n  );\n\n  // Clear the `search` so it is rebuilt by Node's `url` from the `query` above.\n  // Using previous versions of the Node `url` module, this was just set to \"\"\n  // However, Node 6 docs seem to indicate that this should be `undefined`.\n  delete redirectUrlObj.search;\n\n  // Reconstruct the URL back with provided query parameters merged with oauth_token\n  return url.format(redirectUrlObj);\n};\n\n// connect middleware\nOAuth._requestHandlers['1'] = async (service, query, res) => {\n  const config = ServiceConfiguration.configurations.findOne({service: service.serviceName});\n  if (! config) {\n    throw new ServiceConfiguration.ConfigError(service.serviceName);\n  }\n\n  const { urls } = service;\n  const oauthBinding = new OAuth1Binding(config, urls);\n\n  let credentialSecret;\n\n  if (query.requestTokenAndRedirect) {\n    // step 1 - get and store a request token\n    const callbackUrl = OAuth._redirectUri(service.serviceName, config, {\n      state: query.state,\n      cordova: (query.cordova === \"true\"),\n      android: (query.android === \"true\")\n    });\n\n    // Get a request token to start auth process\n    await oauthBinding.prepareRequestToken(callbackUrl);\n\n    // Keep track of request token so we can verify it on the next step\n    OAuth._storeRequestToken(\n      OAuth._credentialTokenFromQuery(query),\n      oauthBinding.requestToken,\n      oauthBinding.requestTokenSecret);\n\n    // support for scope/name parameters\n    let redirectUrl;\n    const authParams = { query };\n\n    if(typeof urls.authenticate === \"function\") {\n      redirectUrl = urls.authenticate(oauthBinding, authParams);\n    } else {\n      redirectUrl = OAuth._queryParamsWithAuthTokenUrl(\n        urls.authenticate,\n        oauthBinding,\n        authParams\n      );\n    }\n\n    // redirect to provider login, which will redirect back to \"step 2\" below\n\n    res.writeHead(302, {'Location': redirectUrl});\n    res.end();\n  } else {\n    // step 2, redirected from provider login - store the result\n    // and close the window to allow the login handler to proceed\n\n    // Get the user's request token so we can verify it and clear it\n    const requestTokenInfo = OAuth._retrieveRequestToken(\n      OAuth._credentialTokenFromQuery(query));\n\n    if (! requestTokenInfo) {\n      throw new Error(\"Unable to retrieve request token\");\n    }\n\n    // Verify user authorized access and the oauth_token matches\n    // the requestToken from previous step\n    if (query.oauth_token && query.oauth_token === requestTokenInfo.requestToken) {\n\n      // Prepare the login results before returning.  This way the\n      // subsequent call to the `login` method will be immediate.\n\n      // Get the access token for signing requests\n      await oauthBinding.prepareAccessToken(query, requestTokenInfo.requestTokenSecret);\n\n      // Run service-specific handler.\n      const oauthResult = await service.handleOauthRequest(\n        oauthBinding, { query: query });\n\n      const credentialToken = OAuth._credentialTokenFromQuery(query);\n      credentialSecret = Random.secret();\n\n      // Store the login result so it can be retrieved in another\n      // browser tab by the result handler\n      OAuth._storePendingCredential(credentialToken, {\n        serviceName: service.serviceName,\n        serviceData: oauthResult.serviceData,\n        options: oauthResult.options\n      }, credentialSecret);\n    }\n\n    // Either close the window, redirect, or render nothing\n    // if all else fails\n    OAuth._renderOauthResults(res, query, credentialSecret);\n  }\n};\n","//\n// _pendingRequestTokens are request tokens that have been received\n// but not yet fully authorized (processed).\n//\n// During the oauth1 authorization process, the Meteor App opens\n// a pop-up, requests a request token from the oauth1 service, and\n// redirects the browser to the oauth1 service for the user\n// to grant authorization.  The user is then returned to the\n// Meteor Apps' callback url and the request token is verified.\n//\n// When Meteor Apps run on multiple servers, it's possible that\n// 2 different servers may be used to generate the request token\n// and to verify it in the callback once the user has authorized.\n//\n// For this reason, the _pendingRequestTokens are stored in the database\n// so they can be shared across Meteor App servers.\n//\n// XXX This code is fairly similar to oauth/pending_credentials.js --\n// maybe we can combine them somehow.\n\n// Collection containing pending request tokens\n// Has key, requestToken, requestTokenSecret, and createdAt fields.\nOAuth._pendingRequestTokens = new Mongo.Collection(\n  \"meteor_oauth_pendingRequestTokens\", {\n    _preventAutopublish: true\n  });\n\nOAuth._pendingRequestTokens.createIndex('key', { unique: true });\nOAuth._pendingRequestTokens.createIndex('createdAt');\n\n\n\n// Periodically clear old entries that never got completed\nconst _cleanStaleResults = () => {\n  // Remove request tokens older than 5 minute\n  const timeCutoff = new Date();\n  timeCutoff.setMinutes(timeCutoff.getMinutes() - 5);\n  OAuth._pendingRequestTokens.remove({ createdAt: { $lt: timeCutoff } });\n};\nconst _cleanupHandle = Meteor.setInterval(_cleanStaleResults, 60 * 1000);\n\n\n// Stores the key and request token in the _pendingRequestTokens collection.\n// Will throw an exception if `key` is not a string.\n//\n// @param key {string}\n// @param requestToken {string}\n// @param requestTokenSecret {string}\n//\nOAuth._storeRequestToken = (key, requestToken, requestTokenSecret) => {\n  check(key, String);\n\n  // We do an upsert here instead of an insert in case the user happens\n  // to somehow send the same `state` parameter twice during an OAuth\n  // login; we don't want a duplicate key error.\n  OAuth._pendingRequestTokens.upsert({\n    key,\n  }, {\n    key,\n    requestToken: OAuth.sealSecret(requestToken),\n    requestTokenSecret: OAuth.sealSecret(requestTokenSecret),\n    createdAt: new Date()\n  });\n};\n\n\n// Retrieves and removes a request token from the _pendingRequestTokens collection\n// Returns an object containing requestToken and requestTokenSecret properties\n//\n// @param key {string}\n//\nOAuth._retrieveRequestToken = key => {\n  check(key, String);\n\n  const pendingRequestToken = OAuth._pendingRequestTokens.findOne({ key: key });\n  if (pendingRequestToken) {\n    OAuth._pendingRequestTokens.remove({ _id: pendingRequestToken._id });\n    return {\n      requestToken: OAuth.openSecret(pendingRequestToken.requestToken),\n      requestTokenSecret: OAuth.openSecret(\n        pendingRequestToken.requestTokenSecret)\n    };\n  } else {\n    return undefined;\n  }\n};\n"]}