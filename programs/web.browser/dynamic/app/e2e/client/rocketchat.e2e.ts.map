)]}'
{"version":3,"sources":["meteor://ðŸ’»app/app/e2e/client/rocketchat.e2e.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import QueryString from 'querystring';\nimport URL from 'url';\n\nimport type { IE2EEMessage, IMessage, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { isE2EEMessage } from '@rocket.chat/core-typings';\nimport { Emitter } from '@rocket.chat/emitter';\nimport EJSON from 'ejson';\nimport { Meteor } from 'meteor/meteor';\nimport type { ReactiveVar as ReactiveVarType } from 'meteor/reactive-var';\nimport { ReactiveVar } from 'meteor/reactive-var';\n\nimport * as banners from '../../../client/lib/banners';\nimport type { LegacyBannerPayload } from '../../../client/lib/banners';\nimport { imperativeModal } from '../../../client/lib/imperativeModal';\nimport { mapMessageFromApi } from '../../../client/lib/utils/mapMessageFromApi';\nimport { waitUntilFind } from '../../../client/lib/utils/waitUntilFind';\nimport EnterE2EPasswordModal from '../../../client/views/e2e/EnterE2EPasswordModal';\nimport SaveE2EPasswordModal from '../../../client/views/e2e/SaveE2EPasswordModal';\nimport { createQuoteAttachment } from '../../../lib/createQuoteAttachment';\nimport { getMessageUrlRegex } from '../../../lib/getMessageUrlRegex';\nimport { ChatRoom, Subscriptions, Messages } from '../../models/client';\nimport { settings } from '../../settings/client';\nimport { getUserAvatarURL } from '../../utils/client';\nimport { sdk } from '../../utils/client/lib/SDKClient';\nimport { t } from '../../utils/lib/i18n';\nimport {\n\ttoString,\n\ttoArrayBuffer,\n\tjoinVectorAndEcryptedData,\n\tsplitVectorAndEcryptedData,\n\tencryptAES,\n\tdecryptAES,\n\tgenerateRSAKey,\n\texportJWKKey,\n\timportRSAKey,\n\timportRawKey,\n\tderiveKey,\n\tgenerateMnemonicPhrase,\n} from './helper';\nimport { log, logError } from './logger';\nimport { E2ERoom } from './rocketchat.e2e.room';\nimport './events.js';\n\nlet failedToDecodeKey = false;\n\ntype KeyPair = {\n\tpublic_key: string | null;\n\tprivate_key: string | null;\n};\n\nclass E2E extends Emitter {\n\tprivate started: boolean;\n\n\tpublic enabled: ReactiveVarType<boolean>;\n\n\tprivate _ready: ReactiveVarType<boolean>;\n\n\tprivate instancesByRoomId: Record<IRoom['_id'], E2ERoom>;\n\n\tprivate db_public_key: string | null;\n\n\tprivate db_private_key: string | null;\n\n\tpublic privateKey: CryptoKey | undefined;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.started = false;\n\t\tthis.enabled = new ReactiveVar(false);\n\t\tthis._ready = new ReactiveVar(false);\n\t\tthis.instancesByRoomId = {};\n\n\t\tthis.on('ready', async () => {\n\t\t\tthis._ready.set(true);\n\t\t\tthis.log('startClient -> Done');\n\t\t\tthis.log('decryptSubscriptions');\n\n\t\t\tawait this.decryptSubscriptions();\n\t\t\tthis.log('decryptSubscriptions -> Done');\n\t\t});\n\t}\n\n\tlog(...msg: unknown[]) {\n\t\tlog('E2E', ...msg);\n\t}\n\n\terror(...msg: unknown[]) {\n\t\tlogError('E2E', ...msg);\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn this.enabled.get();\n\t}\n\n\tisReady(): boolean {\n\t\treturn this.enabled.get() && this._ready.get();\n\t}\n\n\tasync getInstanceByRoomId(rid: IRoom['_id']): Promise<E2ERoom | null> {\n\t\tconst room = await waitUntilFind(() => ChatRoom.findOne({ _id: rid }));\n\n\t\tif (room.t !== 'd' && room.t !== 'p') {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (room.encrypted !== true && !room.e2eKeyId) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!this.instancesByRoomId[rid]) {\n\t\t\tthis.instancesByRoomId[rid] = new E2ERoom(Meteor.userId(), rid, room.t);\n\t\t}\n\n\t\treturn this.instancesByRoomId[rid];\n\t}\n\n\tremoveInstanceByRoomId(rid: IRoom['_id']): void {\n\t\tdelete this.instancesByRoomId[rid];\n\t}\n\n\tasync persistKeys({ public_key, private_key }: KeyPair, password: string): Promise<void> {\n\t\tif (typeof public_key !== 'string' || typeof private_key !== 'string') {\n\t\t\tthrow new Error('Failed to persist keys as they are not strings.');\n\t\t}\n\n\t\tconst encodedPrivateKey = await this.encodePrivateKey(private_key, password);\n\n\t\tif (!encodedPrivateKey) {\n\t\t\tthrow new Error('Failed to encode private key with provided password.');\n\t\t}\n\n\t\tawait sdk.rest.post('/v1/e2e.setUserPublicAndPrivateKeys', {\n\t\t\tpublic_key,\n\t\t\tprivate_key: encodedPrivateKey,\n\t\t});\n\t}\n\n\tasync acceptSuggestedKey(rid: string): Promise<void> {\n\t\tawait sdk.rest.post('/v1/e2e.acceptSuggestedGroupKey', {\n\t\t\trid,\n\t\t});\n\t}\n\n\tasync rejectSuggestedKey(rid: string): Promise<void> {\n\t\tawait sdk.rest.post('/v1/e2e.rejectSuggestedGroupKey', {\n\t\t\trid,\n\t\t});\n\t}\n\n\tgetKeysFromLocalStorage(): KeyPair {\n\t\treturn {\n\t\t\tpublic_key: Meteor._localStorage.getItem('public_key'),\n\t\t\tprivate_key: Meteor._localStorage.getItem('private_key'),\n\t\t};\n\t}\n\n\tasync startClient(): Promise<void> {\n\t\tif (this.started) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.log('startClient -> STARTED');\n\n\t\tthis.started = true;\n\n\t\tlet { public_key, private_key } = this.getKeysFromLocalStorage();\n\n\t\tawait this.loadKeysFromDB();\n\n\t\tif (!public_key && this.db_public_key) {\n\t\t\tpublic_key = this.db_public_key;\n\t\t}\n\n\t\tif (!private_key && this.db_private_key) {\n\t\t\ttry {\n\t\t\t\tprivate_key = await this.decodePrivateKey(this.db_private_key);\n\t\t\t} catch (error) {\n\t\t\t\tthis.started = false;\n\t\t\t\tfailedToDecodeKey = true;\n\t\t\t\tthis.openAlert({\n\t\t\t\t\ttitle: \"Wasn't possible to decode your encryption key to be imported.\", // TODO: missing translation\n\t\t\t\t\thtml: '<div>Your encryption password seems wrong. Click here to try again.</div>', // TODO: missing translation\n\t\t\t\t\tmodifiers: ['large', 'danger'],\n\t\t\t\t\tclosable: true,\n\t\t\t\t\ticon: 'key',\n\t\t\t\t\taction: async () => {\n\t\t\t\t\t\tawait this.startClient();\n\t\t\t\t\t\tthis.closeAlert();\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (public_key && private_key) {\n\t\t\tawait this.loadKeys({ public_key, private_key });\n\t\t} else {\n\t\t\tawait this.createAndLoadKeys();\n\t\t}\n\n\t\tif (!this.db_public_key || !this.db_private_key) {\n\t\t\tawait this.persistKeys(this.getKeysFromLocalStorage(), await this.createRandomPassword());\n\t\t}\n\n\t\tconst randomPassword = Meteor._localStorage.getItem('e2e.randomPassword');\n\t\tif (randomPassword) {\n\t\t\tthis.openAlert({\n\t\t\t\ttitle: () => t('Save_your_encryption_password'),\n\t\t\t\thtml: () => t('Click_here_to_view_and_copy_your_password'),\n\t\t\t\tmodifiers: ['large'],\n\t\t\t\tclosable: false,\n\t\t\t\ticon: 'key',\n\t\t\t\taction: () => {\n\t\t\t\t\timperativeModal.open({\n\t\t\t\t\t\tcomponent: SaveE2EPasswordModal,\n\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\trandomPassword,\n\t\t\t\t\t\t\tonClose: imperativeModal.close,\n\t\t\t\t\t\t\tonCancel: () => {\n\t\t\t\t\t\t\t\tthis.closeAlert();\n\t\t\t\t\t\t\t\timperativeModal.close();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonConfirm: () => {\n\t\t\t\t\t\t\t\tMeteor._localStorage.removeItem('e2e.randomPassword');\n\t\t\t\t\t\t\t\tthis.closeAlert();\n\t\t\t\t\t\t\t\timperativeModal.close();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tthis.emit('ready');\n\t}\n\n\tasync stopClient(): Promise<void> {\n\t\tthis.log('-> Stop Client');\n\t\tthis.closeAlert();\n\n\t\tMeteor._localStorage.removeItem('public_key');\n\t\tMeteor._localStorage.removeItem('private_key');\n\t\tthis.instancesByRoomId = {};\n\t\tthis.privateKey = undefined;\n\t\tthis.enabled.set(false);\n\t\tthis._ready.set(false);\n\t\tthis.started = false;\n\t}\n\n\tasync changePassword(newPassword: string): Promise<void> {\n\t\tawait this.persistKeys(this.getKeysFromLocalStorage(), newPassword);\n\n\t\tif (Meteor._localStorage.getItem('e2e.randomPassword')) {\n\t\t\tMeteor._localStorage.setItem('e2e.randomPassword', newPassword);\n\t\t}\n\t}\n\n\tasync loadKeysFromDB(): Promise<void> {\n\t\ttry {\n\t\t\tconst { public_key, private_key } = await sdk.rest.get('/v1/e2e.fetchMyKeys');\n\n\t\t\tthis.db_public_key = public_key;\n\t\t\tthis.db_private_key = private_key;\n\t\t} catch (error) {\n\t\t\treturn this.error('Error fetching RSA keys: ', error);\n\t\t}\n\t}\n\n\tasync loadKeys({ public_key, private_key }: { public_key: string; private_key: string }): Promise<void> {\n\t\tMeteor._localStorage.setItem('public_key', public_key);\n\n\t\ttry {\n\t\t\tthis.privateKey = await importRSAKey(EJSON.parse(private_key), ['decrypt']);\n\n\t\t\tMeteor._localStorage.setItem('private_key', private_key);\n\t\t} catch (error) {\n\t\t\treturn this.error('Error importing private key: ', error);\n\t\t}\n\t}\n\n\tasync createAndLoadKeys(): Promise<void> {\n\t\t// Could not obtain public-private keypair from server.\n\t\tlet key;\n\t\ttry {\n\t\t\tkey = await generateRSAKey();\n\t\t\tthis.privateKey = key.privateKey;\n\t\t} catch (error) {\n\t\t\treturn this.error('Error generating key: ', error);\n\t\t}\n\n\t\ttry {\n\t\t\tconst publicKey = await exportJWKKey(key.publicKey);\n\n\t\t\tMeteor._localStorage.setItem('public_key', JSON.stringify(publicKey));\n\t\t} catch (error) {\n\t\t\treturn this.error('Error exporting public key: ', error);\n\t\t}\n\n\t\ttry {\n\t\t\tconst privateKey = await exportJWKKey(key.privateKey);\n\n\t\t\tMeteor._localStorage.setItem('private_key', JSON.stringify(privateKey));\n\t\t} catch (error) {\n\t\t\treturn this.error('Error exporting private key: ', error);\n\t\t}\n\n\t\tawait this.requestSubscriptionKeys();\n\t}\n\n\tasync requestSubscriptionKeys(): Promise<void> {\n\t\tawait sdk.call('e2e.requestSubscriptionKeys');\n\t}\n\n\tasync createRandomPassword(): Promise<string> {\n\t\tconst randomPassword = await generateMnemonicPhrase(5);\n\t\tMeteor._localStorage.setItem('e2e.randomPassword', randomPassword);\n\t\treturn randomPassword;\n\t}\n\n\tasync encodePrivateKey(privateKey: string, password: string): Promise<string | void> {\n\t\tconst masterKey = await this.getMasterKey(password);\n\n\t\tconst vector = crypto.getRandomValues(new Uint8Array(16));\n\t\ttry {\n\t\t\tconst encodedPrivateKey = await encryptAES(vector, masterKey, toArrayBuffer(privateKey));\n\n\t\t\treturn EJSON.stringify(joinVectorAndEcryptedData(vector, encodedPrivateKey));\n\t\t} catch (error) {\n\t\t\treturn this.error('Error encrypting encodedPrivateKey: ', error);\n\t\t}\n\t}\n\n\tasync getMasterKey(password: string): Promise<void | CryptoKey> {\n\t\tif (password == null) {\n\t\t\talert('You should provide a password');\n\t\t}\n\n\t\t// First, create a PBKDF2 \"key\" containing the password\n\t\tlet baseKey;\n\t\ttry {\n\t\t\tbaseKey = await importRawKey(toArrayBuffer(password));\n\t\t} catch (error) {\n\t\t\treturn this.error('Error creating a key based on user password: ', error);\n\t\t}\n\n\t\t// Derive a key from the password\n\t\ttry {\n\t\t\treturn await deriveKey(toArrayBuffer(Meteor.userId()), baseKey);\n\t\t} catch (error) {\n\t\t\treturn this.error('Error deriving baseKey: ', error);\n\t\t}\n\t}\n\n\tasync requestPassword(): Promise<string> {\n\t\treturn new Promise((resolve) => {\n\t\t\tconst showModal = () => {\n\t\t\t\timperativeModal.open({\n\t\t\t\t\tcomponent: EnterE2EPasswordModal,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\tonClose: imperativeModal.close,\n\t\t\t\t\t\tonCancel: () => {\n\t\t\t\t\t\t\tfailedToDecodeKey = false;\n\t\t\t\t\t\t\tthis.closeAlert();\n\t\t\t\t\t\t\timperativeModal.close();\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonConfirm: (password) => {\n\t\t\t\t\t\t\tresolve(password);\n\t\t\t\t\t\t\tthis.closeAlert();\n\t\t\t\t\t\t\timperativeModal.close();\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tconst showAlert = () => {\n\t\t\t\tthis.openAlert({\n\t\t\t\t\ttitle: () => t('Enter_your_E2E_password'),\n\t\t\t\t\thtml: () => t('Click_here_to_enter_your_encryption_password'),\n\t\t\t\t\tmodifiers: ['large'],\n\t\t\t\t\tclosable: false,\n\t\t\t\t\ticon: 'key',\n\t\t\t\t\taction() {\n\t\t\t\t\t\tshowModal();\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tif (failedToDecodeKey) {\n\t\t\t\tshowModal();\n\t\t\t} else {\n\t\t\t\tshowAlert();\n\t\t\t}\n\t\t});\n\t}\n\n\tasync decodePrivateKey(privateKey: string): Promise<string> {\n\t\tconst password = await this.requestPassword();\n\n\t\tconst masterKey = await this.getMasterKey(password);\n\n\t\tconst [vector, cipherText] = splitVectorAndEcryptedData(EJSON.parse(privateKey));\n\n\t\ttry {\n\t\t\tconst privKey = await decryptAES(vector, masterKey, cipherText);\n\t\t\treturn toString(privKey);\n\t\t} catch (error) {\n\t\t\tthrow new Error('E2E -> Error decrypting private key');\n\t\t}\n\t}\n\n\tasync decryptMessage(message: IMessage | IE2EEMessage): Promise<IMessage> {\n\t\tif (!isE2EEMessage(message) || message.e2e === 'done') {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst e2eRoom = await this.getInstanceByRoomId(message.rid);\n\n\t\tif (!e2eRoom) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst data = await e2eRoom.decrypt(message.msg);\n\n\t\tif (!data) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst decryptedMessage: IE2EEMessage = {\n\t\t\t...message,\n\t\t\tmsg: data.text,\n\t\t\te2e: 'done',\n\t\t};\n\n\t\tconst decryptedMessageWithQuote = await this.parseQuoteAttachment(decryptedMessage);\n\n\t\treturn decryptedMessageWithQuote;\n\t}\n\n\tasync decryptPendingMessages(): Promise<void> {\n\t\treturn Messages.find({ t: 'e2e', e2e: 'pending' }).forEach(async ({ _id, ...msg }: IMessage) => {\n\t\t\tMessages.update({ _id }, await this.decryptMessage(msg as IE2EEMessage));\n\t\t});\n\t}\n\n\tasync decryptSubscription(subscriptionId: ISubscription['_id']): Promise<void> {\n\t\tconst e2eRoom = await this.getInstanceByRoomId(subscriptionId);\n\t\tthis.log('decryptSubscription ->', subscriptionId);\n\t\tawait e2eRoom?.decryptSubscription();\n\t}\n\n\tasync decryptSubscriptions(): Promise<void> {\n\t\tSubscriptions.find({\n\t\t\tencrypted: true,\n\t\t}).forEach((subscription) => this.decryptSubscription(subscription._id));\n\t}\n\n\topenAlert(config: Omit<LegacyBannerPayload, 'id'>): void {\n\t\tbanners.open({ id: 'e2e', ...config });\n\t}\n\n\tcloseAlert(): void {\n\t\tbanners.closeById('e2e');\n\t}\n\n\tasync parseQuoteAttachment(message: IE2EEMessage): Promise<IE2EEMessage> {\n\t\tconst urls = message.msg.match(getMessageUrlRegex()) || [];\n\n\t\tawait Promise.all(\n\t\t\turls.map(async (url) => {\n\t\t\t\tif (!url.includes(settings.get('Site_Url'))) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst urlObj = URL.parse(url);\n\t\t\t\t// if the URL doesn't have query params (doesn't reference message) skip\n\t\t\t\tif (!urlObj.query) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { msg: msgId } = QueryString.parse(urlObj.query);\n\n\t\t\t\tif (!msgId || Array.isArray(msgId)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst getQuotedMessage = await sdk.rest.get('/v1/chat.getMessage', { msgId });\n\t\t\t\tconst quotedMessage = getQuotedMessage?.message;\n\n\t\t\t\tif (!quotedMessage) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst decryptedQuoteMessage = await this.decryptMessage(mapMessageFromApi(quotedMessage));\n\n\t\t\t\tmessage.attachments = message.attachments || [];\n\n\t\t\t\tconst useRealName = settings.get('UI_Use_Real_Name');\n\t\t\t\tconst quoteAttachment = createQuoteAttachment(\n\t\t\t\t\tdecryptedQuoteMessage,\n\t\t\t\t\turl,\n\t\t\t\t\tuseRealName,\n\t\t\t\t\tgetUserAvatarURL(decryptedQuoteMessage.u.username || '') as string,\n\t\t\t\t);\n\n\t\t\t\tmessage.attachments.push(quoteAttachment);\n\t\t\t}),\n\t\t);\n\n\t\treturn message;\n\t}\n}\n\nexport const e2e = new E2E();\n",null],"names":["_objectWithoutProperties","_objectSpread","QueryString","URL","isE2EEMessage","Emitter","EJSON","Meteor","ReactiveVar","banners","imperativeModal","mapMessageFromApi","waitUntilFind","EnterE2EPasswordModal","SaveE2EPasswordModal","createQuoteAttachment","getMessageUrlRegex","ChatRoom","Subscriptions","Messages","settings","getUserAvatarURL","sdk","t","toString","toArrayBuffer","joinVectorAndEcryptedData","splitVectorAndEcryptedData","encryptAES","decryptAES","generateRSAKey","exportJWKKey","importRSAKey","importRawKey","deriveKey","generateMnemonicPhrase","log","logError","E2ERoom","module","default","export","e2e","v","failedToDecodeKey","E2E","constructor","started","enabled","_ready","instancesByRoomId","db_public_key","db_private_key","privateKey","on","set","decryptSubscriptions","_len","arguments","length","msg","Array","_key","error","_len2","_key2","isEnabled","get","isReady","getInstanceByRoomId","rid","room","findOne","_id","encrypted","e2eKeyId","userId","removeInstanceByRoomId","persistKeys","_ref","password","public_key","private_key","Error","encodedPrivateKey","encodePrivateKey","rest","post","acceptSuggestedKey","rejectSuggestedKey","getKeysFromLocalStorage","_localStorage","getItem","startClient","loadKeysFromDB","decodePrivateKey","openAlert","title","html","modifiers","closable","icon","action","closeAlert","loadKeys","createAndLoadKeys","createRandomPassword","randomPassword","open","component","props","onClose","close","onCancel","onConfirm","removeItem","emit","stopClient","undefined","changePassword","newPassword","setItem","_ref2","parse","key","publicKey","JSON","stringify","requestSubscriptionKeys","call","masterKey","getMasterKey","vector","crypto","getRandomValues","Uint8Array","baseKey","alert","requestPassword","Promise","resolve","showModal","showAlert","cipherText","privKey","decryptMessage","message","e2eRoom","data","decrypt","decryptedMessage","text","decryptedMessageWithQuote","parseQuoteAttachment","decryptPendingMessages","find","forEach","_ref3","_excluded","update","decryptSubscription","subscriptionId","subscription","config","id","closeById","urls","match","all","map","url","includes","urlObj","query","msgId","isArray","getQuotedMessage","quotedMessage","decryptedQuoteMessage","attachments","useRealName","quoteAttachment","u","username","push"],"mappings":"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"}