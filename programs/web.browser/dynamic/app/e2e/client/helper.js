function module(e,t,n){let r,o;n.export({toString:()=>y,toArrayBuffer:()=>a,joinVectorAndEcryptedData:()=>i,splitVectorAndEcryptedData:()=>u,encryptRSA:()=>p,encryptAES:()=>l,decryptRSA:()=>f,decryptAES:()=>s,generateAESKey:()=>A,generateRSAKey:()=>d,exportJWKKey:()=>m,importRSAKey:()=>g,importAESKey:()=>h,importRawKey:()=>S,deriveKey:()=>b,readFileAsArrayBuffer:()=>w,generateMnemonicPhrase:()=>E}),n.link("@rocket.chat/random",{Random(e){r=e}},0),n.link("bytebuffer",{default(e){o=e}},1);let c=new ArrayBuffer().__proto__;function y(e){return"string"==typeof e?e:new o.wrap(e).toString("binary")}function a(e){if(void 0!==e){if(e===Object(e)&&e.__proto__===c)return e;if("string"!=typeof e)throw Error("Tried to convert a non-string of type ".concat(typeof e," to an array buffer"));return new o.wrap(e,"binary").toArrayBuffer()}}function i(e,t){let n=new Uint8Array(t),r=new Uint8Array(e.length+n.length);return r.set(e,0),r.set(n,e.length),r}function u(e){let t=e.slice(0,16),n=e.slice(16);return[t,n]}async function p(e,t){return crypto.subtle.encrypt({name:"RSA-OAEP"},e,t)}async function l(e,t,n){return crypto.subtle.encrypt({name:"AES-CBC",iv:e},t,n)}async function f(e,t){return crypto.subtle.decrypt({name:"RSA-OAEP"},e,t)}async function s(e,t,n){return crypto.subtle.decrypt({name:"AES-CBC",iv:e},t,n)}async function A(){return crypto.subtle.generateKey({name:"AES-CBC",length:128},!0,["encrypt","decrypt"])}async function d(){return crypto.subtle.generateKey({name:"RSA-OAEP",modulusLength:2048,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,["encrypt","decrypt"])}async function m(e){return crypto.subtle.exportKey("jwk",e)}async function g(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:["encrypt","decrypt"];return crypto.subtle.importKey("jwk",e,{name:"RSA-OAEP",modulusLength:2048,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},!0,t)}async function h(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:["encrypt","decrypt"];return crypto.subtle.importKey("jwk",e,{name:"AES-CBC"},!0,t)}async function S(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:["deriveKey"];return crypto.subtle.importKey("raw",e,{name:"PBKDF2"},!1,t)}async function b(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:["encrypt","decrypt"];return crypto.subtle.deriveKey({name:"PBKDF2",salt:e,iterations:1e3,hash:"SHA-256"},t,{name:"AES-CBC",length:256},!0,n)}async function w(e){return new Promise((t,n)=>{let r=new FileReader;r.onload=function(e){t(e.target.result)},r.onerror=function(e){n(e)},r.readAsArrayBuffer(e)})}async function E(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:" ",{default:o}=await n.dynamicImport("./wordList"),c=Array(e),y=o.length,a=Array(y);for(;e--;){let t=Math.floor(r.fraction()*y);c[e]=o[t in a?a[t]:t],a[t]=--y in a?a[y]:y}return c.join(t)}}
//# sourceMappingURL=/dynamic/app/e2e/client/f2d6678b78c7610b1fc2e2730ef8d6e38467130e.map
