)]}'
{"version":3,"sources":["meteor://ðŸ’»app/app/e2e/client/rocketchat.e2e.room.js","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Base64 } from '@rocket.chat/base64';\nimport { Emitter } from '@rocket.chat/emitter';\nimport { Random } from '@rocket.chat/random';\nimport EJSON from 'ejson';\n\nimport { RoomManager } from '../../../client/lib/RoomManager';\nimport { roomCoordinator } from '../../../client/lib/rooms/roomCoordinator';\nimport { RoomSettingsEnum } from '../../../definition/IRoomTypeConfig';\nimport { ChatRoom, Subscriptions, Messages } from '../../models/client';\nimport { Notifications } from '../../notifications/client';\nimport { sdk } from '../../utils/client/lib/SDKClient';\nimport { E2ERoomState } from './E2ERoomState';\nimport {\n\ttoString,\n\ttoArrayBuffer,\n\tjoinVectorAndEcryptedData,\n\tsplitVectorAndEcryptedData,\n\tencryptRSA,\n\tencryptAES,\n\tdecryptRSA,\n\tdecryptAES,\n\tgenerateAESKey,\n\texportJWKKey,\n\timportAESKey,\n\timportRSAKey,\n\treadFileAsArrayBuffer,\n} from './helper';\nimport { log, logError } from './logger';\nimport { e2e } from './rocketchat.e2e';\n\nconst KEY_ID = Symbol('keyID');\nconst PAUSED = Symbol('PAUSED');\n\nconst permitedMutations = {\n\t[E2ERoomState.NOT_STARTED]: [E2ERoomState.ESTABLISHING, E2ERoomState.DISABLED, E2ERoomState.KEYS_RECEIVED],\n\t[E2ERoomState.READY]: [E2ERoomState.DISABLED],\n\t[E2ERoomState.ERROR]: [E2ERoomState.KEYS_RECEIVED, E2ERoomState.NOT_STARTED],\n\t[E2ERoomState.WAITING_KEYS]: [E2ERoomState.KEYS_RECEIVED, E2ERoomState.ERROR, E2ERoomState.DISABLED],\n\t[E2ERoomState.ESTABLISHING]: [\n\t\tE2ERoomState.READY,\n\t\tE2ERoomState.KEYS_RECEIVED,\n\t\tE2ERoomState.ERROR,\n\t\tE2ERoomState.DISABLED,\n\t\tE2ERoomState.WAITING_KEYS,\n\t],\n};\n\nconst filterMutation = (currentState, nextState) => {\n\tif (currentState === nextState) {\n\t\treturn nextState === E2ERoomState.ERROR;\n\t}\n\n\tif (!(currentState in permitedMutations)) {\n\t\treturn nextState;\n\t}\n\n\tif (permitedMutations[currentState].includes(nextState)) {\n\t\treturn nextState;\n\t}\n\n\treturn false;\n};\n\nexport class E2ERoom extends Emitter {\n\tstate = undefined;\n\n\t[PAUSED] = undefined;\n\n\tconstructor(userId, roomId, t) {\n\t\tsuper();\n\n\t\tthis.userId = userId;\n\t\tthis.roomId = roomId;\n\t\tthis.typeOfRoom = t;\n\n\t\tthis.once(E2ERoomState.READY, () => this.decryptPendingMessages());\n\t\tthis.once(E2ERoomState.READY, () => this.decryptSubscription());\n\t\tthis.on('STATE_CHANGED', (prev) => {\n\t\t\tif (this.roomId === RoomManager.opened) {\n\t\t\t\tthis.log(`[PREV: ${prev}]`, 'State CHANGED');\n\t\t\t}\n\t\t});\n\t\tthis.on('STATE_CHANGED', () => this.handshake());\n\n\t\tthis.setState(E2ERoomState.NOT_STARTED);\n\t}\n\n\tlog(...msg) {\n\t\tlog(`E2E ROOM { state: ${this.state}, rid: ${this.roomId} }`, ...msg);\n\t}\n\n\terror(...msg) {\n\t\tlogError(`E2E ROOM { state: ${this.state}, rid: ${this.roomId} }`, ...msg);\n\t}\n\n\tsetState(requestedState) {\n\t\tconst currentState = this.state;\n\t\tconst nextState = filterMutation(currentState, requestedState);\n\n\t\tif (!nextState) {\n\t\t\tthis.error(`invalid state ${currentState} -> ${requestedState}`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state = nextState;\n\t\tthis.log(currentState, '->', nextState);\n\t\tthis.emit('STATE_CHANGED', currentState, nextState, this);\n\t\tthis.emit(nextState, this);\n\t}\n\n\tisReady() {\n\t\treturn this.state === E2ERoomState.READY;\n\t}\n\n\tisDisabled() {\n\t\treturn this.state === E2ERoomState.DISABLED;\n\t}\n\n\tenable() {\n\t\tif (this.state === E2ERoomState.READY) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setState(E2ERoomState.READY);\n\t}\n\n\tdisable() {\n\t\tthis.setState(E2ERoomState.DISABLED);\n\t}\n\n\tpause() {\n\t\tthis.log('PAUSED', this[PAUSED], '->', true);\n\t\tthis[PAUSED] = true;\n\t\tthis.emit('PAUSED', true);\n\t}\n\n\tresume() {\n\t\tthis.log('PAUSED', this[PAUSED], '->', false);\n\t\tthis[PAUSED] = false;\n\t\tthis.emit('PAUSED', false);\n\t}\n\n\tkeyReceived() {\n\t\tthis.setState(E2ERoomState.KEYS_RECEIVED);\n\t}\n\n\tasync shouldConvertSentMessages(message) {\n\t\tif (!this.isReady() || this[PAUSED]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this[PAUSED] === undefined) {\n\t\t\treturn new Promise((resolve) => {\n\t\t\t\tthis.once('PAUSED', resolve);\n\t\t\t});\n\t\t}\n\n\t\tif (message.msg[0] === '/') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tshouldConvertReceivedMessages() {\n\t\treturn this.isReady();\n\t}\n\n\tisWaitingKeys() {\n\t\treturn this.state === E2ERoomState.WAITING_KEYS;\n\t}\n\n\tget keyID() {\n\t\treturn this[KEY_ID];\n\t}\n\n\tset keyID(keyID) {\n\t\tthis[KEY_ID] = keyID;\n\t}\n\n\tasync decryptSubscription() {\n\t\tconst subscription = Subscriptions.findOne({ rid: this.roomId });\n\n\t\tconst data = await (subscription.lastMessage?.msg && this.decrypt(subscription.lastMessage.msg));\n\t\tif (!data?.text) {\n\t\t\tthis.log('decryptSubscriptions nothing to do');\n\t\t\treturn;\n\t\t}\n\n\t\tSubscriptions.update(\n\t\t\t{\n\t\t\t\t_id: subscription._id,\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\t'lastMessage.msg': data.text,\n\t\t\t\t\t'lastMessage.e2e': 'done',\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t\tthis.log('decryptSubscriptions Done');\n\t}\n\n\tasync decryptPendingMessages() {\n\t\treturn Messages.find({ rid: this.roomId, t: 'e2e', e2e: 'pending' }).forEach(async ({ _id, ...msg }) => {\n\t\t\tMessages.update({ _id }, await this.decryptMessage(msg));\n\t\t});\n\t}\n\n\t// Initiates E2E Encryption\n\tasync handshake() {\n\t\tif (this.state !== E2ERoomState.KEYS_RECEIVED && this.state !== E2ERoomState.NOT_STARTED) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setState(E2ERoomState.ESTABLISHING);\n\n\t\ttry {\n\t\t\tconst groupKey = Subscriptions.findOne({ rid: this.roomId }).E2EKey;\n\t\t\tif (groupKey) {\n\t\t\t\tawait this.importGroupKey(groupKey);\n\t\t\t\tthis.setState(E2ERoomState.READY);\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.setState(E2ERoomState.ERROR);\n\t\t\tthis.error('Error fetching group key: ', error);\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst room = ChatRoom.findOne({ _id: this.roomId });\n\t\t\tif (!room.e2eKeyId) {\n\t\t\t\t// TODO CHECK_PERMISSION\n\t\t\t\tthis.setState(E2ERoomState.CREATING_KEYS);\n\t\t\t\tawait this.createGroupKey();\n\t\t\t\tthis.setState(E2ERoomState.READY);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.setState(E2ERoomState.WAITING_KEYS);\n\t\t\tthis.log('Requesting room key');\n\t\t\tNotifications.notifyUsersOfRoom(this.roomId, 'e2ekeyRequest', this.roomId, room.e2eKeyId);\n\t\t} catch (error) {\n\t\t\t// this.error = error;\n\t\t\tthis.setState(E2ERoomState.ERROR);\n\t\t}\n\t}\n\n\tisSupportedRoomType(type) {\n\t\treturn roomCoordinator.getRoomDirectives(type).allowRoomSettingChange({}, RoomSettingsEnum.E2E);\n\t}\n\n\tasync importGroupKey(groupKey) {\n\t\tthis.log('Importing room key ->', this.roomId);\n\t\t// Get existing group key\n\t\t// const keyID = groupKey.slice(0, 12);\n\t\tgroupKey = groupKey.slice(12);\n\t\tgroupKey = Base64.decode(groupKey);\n\n\t\t// Decrypt obtained encrypted session key\n\t\ttry {\n\t\t\tconst decryptedKey = await decryptRSA(e2e.privateKey, groupKey);\n\t\t\tthis.sessionKeyExportedString = toString(decryptedKey);\n\t\t} catch (error) {\n\t\t\tthis.error('Error decrypting group key: ', error);\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.keyID = Base64.encode(this.sessionKeyExportedString).slice(0, 12);\n\n\t\t// Import session key for use.\n\t\ttry {\n\t\t\tconst key = await importAESKey(JSON.parse(this.sessionKeyExportedString));\n\t\t\t// Key has been obtained. E2E is now in session.\n\t\t\tthis.groupSessionKey = key;\n\t\t} catch (error) {\n\t\t\tthis.error('Error importing group key: ', error);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tasync createGroupKey() {\n\t\tthis.log('Creating room key');\n\t\t// Create group key\n\t\ttry {\n\t\t\tthis.groupSessionKey = await generateAESKey();\n\t\t} catch (error) {\n\t\t\tconsole.error('Error generating group key: ', error);\n\t\t\tthrow error;\n\t\t}\n\n\t\ttry {\n\t\t\tconst sessionKeyExported = await exportJWKKey(this.groupSessionKey);\n\t\t\tthis.sessionKeyExportedString = JSON.stringify(sessionKeyExported);\n\t\t\tthis.keyID = Base64.encode(this.sessionKeyExportedString).slice(0, 12);\n\n\t\t\tawait sdk.call('e2e.setRoomKeyID', this.roomId, this.keyID);\n\t\t\tawait this.encryptKeyForOtherParticipants();\n\t\t} catch (error) {\n\t\t\tthis.error('Error exporting group key: ', error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync encryptKeyForOtherParticipants() {\n\t\t// Encrypt generated session key for every user in room and publish to subscription model.\n\t\ttry {\n\t\t\tconst { users } = await sdk.call('e2e.getUsersOfRoomWithoutKey', this.roomId);\n\t\t\tusers.forEach((user) => this.encryptForParticipant(user));\n\t\t} catch (error) {\n\t\t\treturn this.error('Error getting room users: ', error);\n\t\t}\n\t}\n\n\tasync encryptForParticipant(user) {\n\t\tlet userKey;\n\t\ttry {\n\t\t\tuserKey = await importRSAKey(JSON.parse(user.e2e.public_key), ['encrypt']);\n\t\t} catch (error) {\n\t\t\treturn this.error('Error importing user key: ', error);\n\t\t}\n\t\t// const vector = crypto.getRandomValues(new Uint8Array(16));\n\n\t\t// Encrypt session key for this user with his/her public key\n\t\ttry {\n\t\t\tconst encryptedUserKey = await encryptRSA(userKey, toArrayBuffer(this.sessionKeyExportedString));\n\t\t\t// Key has been encrypted. Publish to that user's subscription model for this room.\n\t\t\tawait sdk.call('e2e.updateGroupKey', this.roomId, user._id, this.keyID + Base64.encode(new Uint8Array(encryptedUserKey)));\n\t\t} catch (error) {\n\t\t\treturn this.error('Error encrypting user key: ', error);\n\t\t}\n\t}\n\n\t// Encrypts files before upload. I/O is in arraybuffers.\n\tasync encryptFile(file) {\n\t\tif (!this.isSupportedRoomType(this.typeOfRoom)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst fileArrayBuffer = await readFileAsArrayBuffer(file);\n\n\t\tconst vector = crypto.getRandomValues(new Uint8Array(16));\n\t\tlet result;\n\t\ttry {\n\t\t\tresult = await encryptAES(vector, this.groupSessionKey, fileArrayBuffer);\n\t\t} catch (error) {\n\t\t\treturn this.error('Error encrypting group key: ', error);\n\t\t}\n\n\t\tconst output = joinVectorAndEcryptedData(vector, result);\n\n\t\tconst encryptedFile = new File([toArrayBuffer(EJSON.stringify(output))], file.name);\n\n\t\treturn encryptedFile;\n\t}\n\n\t// Decrypt uploaded encrypted files. I/O is in arraybuffers.\n\tasync decryptFile(message) {\n\t\tif (message[0] !== '{') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst [vector, cipherText] = splitVectorAndEcryptedData(EJSON.parse(message));\n\n\t\ttry {\n\t\t\treturn await decryptAES(vector, this.groupSessionKey, cipherText);\n\t\t} catch (error) {\n\t\t\tthis.error('Error decrypting file: ', error);\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// Encrypts messages\n\tasync encryptText(data) {\n\t\tif (!(typeof data === 'function' || (typeof data === 'object' && !!data))) {\n\t\t\tdata = new TextEncoder('UTF-8').encode(EJSON.stringify({ text: data, ack: Random.id((Random.fraction() + 1) * 20) }));\n\t\t}\n\n\t\tif (!this.isSupportedRoomType(this.typeOfRoom)) {\n\t\t\treturn data;\n\t\t}\n\n\t\tconst vector = crypto.getRandomValues(new Uint8Array(16));\n\t\tlet result;\n\t\ttry {\n\t\t\tresult = await encryptAES(vector, this.groupSessionKey, data);\n\t\t} catch (error) {\n\t\t\treturn this.error('Error encrypting message: ', error);\n\t\t}\n\n\t\treturn this.keyID + Base64.encode(joinVectorAndEcryptedData(vector, result));\n\t}\n\n\t// Helper function for encryption of messages\n\tencrypt(message) {\n\t\tconst ts = new Date();\n\n\t\tconst data = new TextEncoder('UTF-8').encode(\n\t\t\tEJSON.stringify({\n\t\t\t\t_id: message._id,\n\t\t\t\ttext: message.msg,\n\t\t\t\tuserId: this.userId,\n\t\t\t\tts,\n\t\t\t}),\n\t\t);\n\n\t\treturn this.encryptText(data);\n\t}\n\n\t// Decrypt messages\n\n\tasync decryptMessage(message) {\n\t\tif (message.t !== 'e2e' || message.e2e === 'done') {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst data = await this.decrypt(message.msg);\n\n\t\tif (!data?.text) {\n\t\t\treturn message;\n\t\t}\n\n\t\treturn {\n\t\t\t...message,\n\t\t\tmsg: data.text,\n\t\t\te2e: 'done',\n\t\t};\n\t}\n\n\tasync decrypt(message) {\n\t\tif (!this.isSupportedRoomType(this.typeOfRoom)) {\n\t\t\treturn message;\n\t\t}\n\n\t\tconst keyID = message.slice(0, 12);\n\n\t\tif (keyID !== this.keyID) {\n\t\t\treturn message;\n\t\t}\n\n\t\tmessage = message.slice(12);\n\n\t\tconst [vector, cipherText] = splitVectorAndEcryptedData(Base64.decode(message));\n\n\t\ttry {\n\t\t\tconst result = await decryptAES(vector, this.groupSessionKey, cipherText);\n\t\t\treturn EJSON.parse(new TextDecoder('UTF-8').decode(new Uint8Array(result)));\n\t\t} catch (error) {\n\t\t\treturn this.error('Error decrypting message: ', error, message);\n\t\t}\n\t}\n\n\tprovideKeyToUser(keyId) {\n\t\tif (this.keyID !== keyId) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.encryptKeyForOtherParticipants();\n\t}\n}\n",null],"names":["_objectSpread","_objectWithoutProperties","Base64","Emitter","Random","EJSON","RoomManager","roomCoordinator","RoomSettingsEnum","ChatRoom","Subscriptions","Messages","Notifications","sdk","E2ERoomState","toString","toArrayBuffer","joinVectorAndEcryptedData","splitVectorAndEcryptedData","encryptRSA","encryptAES","decryptRSA","decryptAES","generateAESKey","exportJWKKey","importAESKey","importRSAKey","readFileAsArrayBuffer","log","logError","e2e","module","link","default","v","export","E2ERoom","KEY_ID","Symbol","PAUSED","permitedMutations","NOT_STARTED","ESTABLISHING","DISABLED","KEYS_RECEIVED","READY","ERROR","WAITING_KEYS","filterMutation","currentState","nextState","includes","constructor","userId","roomId","t","state","undefined","typeOfRoom","once","decryptPendingMessages","decryptSubscription","on","prev","opened","concat","handshake","setState","_len","arguments","length","msg","Array","_key","error","_len2","_key2","requestedState","emit","isReady","isDisabled","enable","disable","pause","resume","keyReceived","shouldConvertSentMessages","message","Promise","resolve","shouldConvertReceivedMessages","isWaitingKeys","keyID","_subscription$lastMes","subscription","findOne","rid","data","lastMessage","decrypt","text","update","_id","$set","find","forEach","_ref","_excluded","decryptMessage","groupKey","E2EKey","importGroupKey","room","e2eKeyId","CREATING_KEYS","createGroupKey","notifyUsersOfRoom","isSupportedRoomType","type","getRoomDirectives","allowRoomSettingChange","E2E","slice","decode","decryptedKey","privateKey","sessionKeyExportedString","encode","key","JSON","parse","groupSessionKey","console","sessionKeyExported","stringify","call","encryptKeyForOtherParticipants","users","user","encryptForParticipant","userKey","public_key","encryptedUserKey","Uint8Array","encryptFile","file","result","fileArrayBuffer","vector","crypto","getRandomValues","output","encryptedFile","File","name","decryptFile","cipherText","encryptText","TextEncoder","ack","id","fraction","encrypt","ts","Date","TextDecoder","provideKeyToUser","keyId"],"mappings":"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"}