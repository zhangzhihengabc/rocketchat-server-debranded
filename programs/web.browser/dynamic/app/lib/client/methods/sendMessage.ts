function module(e,s,i){let n,t,a,l,r,d,o,u,m;i.link("meteor/meteor",{Meteor(e){n=e}},0),i.link("../../../../client/lib/onClientMessageReceived",{onClientMessageReceived(e){t=e}},1),i.link("../../../../client/lib/toast",{dispatchToastMessage(e){a=e}},2),i.link("../../../../lib/callbacks",{callbacks(e){l=e}},3),i.link("../../../../lib/utils/stringUtils",{trim(e){r=e}},4),i.link("../../../models/client",{ChatMessage(e){d=e},ChatRoom(e){o=e}},5),i.link("../../../settings/client",{settings(e){u=e}},6),i.link("../../../utils/lib/i18n",{t(e){m=e}},7),n.methods({async sendMessage(e){let s=n.userId();if(!s||""===r(e.msg))return!1;let i=e._id&&d.findOne({_id:e._id});if(i)return a({type:"error",message:m("Message_Already_Sent")});let g=n.user();if(!(null!=g&&g.username))throw new n.Error("error-invalid-user","Invalid user",{method:"sendMessage"});e.ts=new Date,e.u={_id:s,username:g.username,name:g.name||""},e.temp=!0,u.get("Message_Read_Receipt_Enabled")&&(e.unread=!0);let c=o.findOne({_id:e.rid},{fields:{federated:1,name:1}});null!=c&&c.federated||(e=await l.run("beforeSaveMessage",e),await t(e).then(e=>(d.insert(e),l.run("afterSaveMessage",e,c))))}})}
//# sourceMappingURL=/dynamic/app/lib/client/methods/4b5e4560d53c3db7550b442eb8174951564c84f9.map
