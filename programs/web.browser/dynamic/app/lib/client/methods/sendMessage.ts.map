)]}'
{"version":3,"sources":["meteor://ðŸ’»app/app/lib/client/methods/sendMessage.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IMessage, IUser } from '@rocket.chat/core-typings';\nimport type { ServerMethods } from '@rocket.chat/ui-contexts';\nimport { Meteor } from 'meteor/meteor';\n\nimport { onClientMessageReceived } from '../../../../client/lib/onClientMessageReceived';\nimport { dispatchToastMessage } from '../../../../client/lib/toast';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { trim } from '../../../../lib/utils/stringUtils';\nimport { ChatMessage, ChatRoom } from '../../../models/client';\nimport { settings } from '../../../settings/client';\nimport { t } from '../../../utils/lib/i18n';\n\nMeteor.methods<ServerMethods>({\n\tasync sendMessage(message) {\n\t\tconst uid = Meteor.userId();\n\t\tif (!uid || trim(message.msg) === '') {\n\t\t\treturn false;\n\t\t}\n\t\tconst messageAlreadyExists = message._id && ChatMessage.findOne({ _id: message._id });\n\t\tif (messageAlreadyExists) {\n\t\t\treturn dispatchToastMessage({ type: 'error', message: t('Message_Already_Sent') });\n\t\t}\n\t\tconst user = Meteor.user() as IUser | null;\n\t\tif (!user?.username) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'sendMessage' });\n\t\t}\n\t\tmessage.ts = new Date();\n\t\tmessage.u = {\n\t\t\t_id: uid,\n\t\t\tusername: user.username,\n\t\t\tname: user.name || '',\n\t\t};\n\t\tmessage.temp = true;\n\t\tif (settings.get('Message_Read_Receipt_Enabled')) {\n\t\t\tmessage.unread = true;\n\t\t}\n\n\t\t// If the room is federated, send the message to matrix only\n\t\tconst room = ChatRoom.findOne({ _id: message.rid }, { fields: { federated: 1, name: 1 } });\n\t\tif (room?.federated) {\n\t\t\treturn;\n\t\t}\n\n\t\tmessage = await callbacks.run('beforeSaveMessage', message);\n\t\tawait onClientMessageReceived(message as IMessage).then((message) => {\n\t\t\tChatMessage.insert(message);\n\t\t\treturn callbacks.run('afterSaveMessage', message, room);\n\t\t});\n\t},\n});\n",null],"names":["Meteor","onClientMessageReceived","dispatchToastMessage","callbacks","trim","ChatMessage","ChatRoom","settings","t","module","link","methods","sendMessage","message","uid","userId","msg","messageAlreadyExists","_id","findOne","type","user","username","Error","method","ts","Date","u","name","temp","get","unread","room","rid","fields","federated","run","then","insert"],"mappings":"2BAEAA,EAAuCC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA9BC,EAAQC,IAAA,CAAM,gBAAgB,CAAAV,OAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAS,EAAAA,IAAAA,CAAAA,iDAAAA,CAAAR,wBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAQ,EAAAA,IAAAA,CAAAA,+BAAAA,CAAAP,qBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAO,EAAAA,IAAAA,CAAAA,4BAAAA,CAAAN,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAM,EAAAA,IAAAA,CAAAA,oCAAAA,CAAAL,KAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,yBAAAA,CAAAJ,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAF,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,0BAAAA,CAAAD,EAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAUvCR,EAAOW,OAAO,CAAgB,CAC7B,MAAMC,YAAYC,CAAO,EACxB,IAAMC,EAAMd,EAAOe,MAAM,GACzB,GAAI,CAACD,GAAOV,AAAsB,KAAtBA,EAAKS,EAAQG,GAAG,EAC3B,MAAO,CAAA,EAER,IAAMC,EAAuBJ,EAAQK,GAAG,EAAIb,EAAYc,OAAO,CAAC,CAAED,IAAKL,EAAQK,GAAAA,AAAG,GAClF,GAAID,EACH,OAAOf,EAAqB,CAAEkB,KAAM,QAASP,QAASL,EAAE,uBAAuB,GAEhF,IAAMa,EAAOrB,EAAOqB,IAAI,GACxB,GAAI,CAACA,CAAAA,MAAAA,GAAAA,EAAMC,QAAQ,AAARA,EACV,MAAM,IAAItB,EAAOuB,KAAK,CAAC,qBAAsB,eAAgB,CAAEC,OAAQ,aAAa,EAErFX,CAAAA,EAAQY,EAAE,CAAG,IAAIC,KACjBb,EAAQc,CAAC,CAAG,CACXT,IAAKJ,EACLQ,SAAUD,EAAKC,QAAQ,CACvBM,KAAMP,EAAKO,IAAI,EAAI,IAEpBf,EAAQgB,IAAI,CAAG,CAAA,EACXtB,EAASuB,GAAG,CAAC,iCAChBjB,CAAAA,EAAQkB,MAAM,CAAG,CAAA,CAAA,EAIlB,IAAMC,EAAO1B,EAASa,OAAO,CAAC,CAAED,IAAKL,EAAQoB,GAAAA,AAAG,EAAI,CAAEC,OAAQ,CAAEC,UAAW,EAAGP,KAAM,CAAC,CAAE,SACnFI,GAAAA,EAAMG,SAAS,GAInBtB,EAAU,MAAMV,EAAUiC,GAAG,CAAC,oBAAqBvB,GACnD,MAAMZ,EAAwBY,GAAqBwB,IAAI,CAAExB,IACxDR,EAAYiC,MAAM,CAACzB,GACZV,EAAUiC,GAAG,CAAC,mBAAoBvB,EAASmB,KAEpD"}