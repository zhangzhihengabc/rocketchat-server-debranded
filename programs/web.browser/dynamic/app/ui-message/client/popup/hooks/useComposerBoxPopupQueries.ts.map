)]}'
{"version":3,"sources":["meteor://ðŸ’»app/app/ui-message/client/popup/hooks/useComposerBoxPopupQueries.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { QueriesResults } from '@tanstack/react-query';\nimport { useQueries } from '@tanstack/react-query';\nimport { useEffect, useState } from 'react';\n\nimport type { ComposerPopupOption } from '../../../../../client/views/room/contexts/ComposerPopupContext';\nimport { slashCommands } from '../../../../utils/lib/slashCommand';\nimport { useEnablePopupPreview } from './useEnablePopupPreview';\n\nexport const useComposerBoxPopupQueries = <T extends { _id: string; sort?: number }>(filter: unknown, popup?: ComposerPopupOption<T>) => {\n\tconst [counter, setCounter] = useState(0);\n\n\tuseEffect(() => {\n\t\tsetCounter(0);\n\t}, [popup, filter]);\n\n\tconst shouldPopupPreview = useEnablePopupPreview(filter, popup);\n\n\tconst enableQuery =\n\t\t!popup ||\n\t\t(popup.preview &&\n\t\t\tBoolean(slashCommands.commands[(filter as any)?.cmd]) &&\n\t\t\tslashCommands.commands[(filter as any)?.cmd].providesPreview) ||\n\t\tshouldPopupPreview;\n\n\treturn {\n\t\tqueries: useQueries({\n\t\t\tqueries: [\n\t\t\t\tpopup?.getItemsFromLocal && {\n\t\t\t\t\tkeepPreviousData: true,\n\t\t\t\t\tqueryKey: ['message-popup', 'local', filter, popup],\n\t\t\t\t\tqueryFn: () => popup?.getItemsFromLocal && popup.getItemsFromLocal(filter),\n\t\t\t\t\tonSuccess: (args: T[]) => {\n\t\t\t\t\t\tif (args.length < 5) {\n\t\t\t\t\t\t\tsetCounter(1);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tenabled: enableQuery,\n\t\t\t\t},\n\t\t\t\tpopup?.getItemsFromServer && {\n\t\t\t\t\tkeepPreviousData: true,\n\t\t\t\t\tqueryKey: ['message-popup', 'server', filter, popup],\n\t\t\t\t\tqueryFn: () => popup?.getItemsFromServer && popup.getItemsFromServer(filter),\n\t\t\t\t\tenabled: counter > 0,\n\t\t\t\t},\n\t\t\t].filter(Boolean) as any,\n\t\t}) as QueriesResults<T[]>,\n\t\tsuspended: !enableQuery,\n\t};\n};\n",null],"names":["useQueries","useEffect","useState","slashCommands","useEnablePopupPreview","module","export","useComposerBoxPopupQueries","filter","popup","counter","setCounter","shouldPopupPreview","enableQuery","preview","Boolean","commands","cmd","providesPreview","queries","getItemsFromLocal","keepPreviousData","queryKey","queryFn","onSuccess","args","length","enabled","getItemsFromServer","suspended"],"mappings":"2BACmDA,EAAAC,EAAAC,EAAAC,EAAAC,EAAnDC,EAAOC,MAAE,CAAA,CAAAC,2BAAkB,IAAAA,CAAwB,GAAAF,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAL,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,QAAAA,CAAAJ,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,qCAAAA,CAAAF,cAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,0BAAAA,CAAAD,sBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAO5C,IAAMG,EAA6B,CAA2CC,EAAiBC,KACrG,GAAM,CAACC,EAASC,EAAW,CAAGT,EAAS,GAEvCD,EAAU,KACTU,EAAW,EACZ,EAAG,CAACF,EAAOD,EAAO,EAElB,IAAMI,EAAqBR,EAAsBI,EAAQC,GAEnDI,EACL,CAACJ,GACAA,EAAMK,OAAO,EACbC,CAAAA,CAAQZ,EAAca,QAAQ,CAAER,MAAAA,EAAc,KAAA,EAAdA,EAAgBS,GAAG,CAAC,EACpDd,EAAca,QAAQ,CAAER,MAAAA,EAAc,KAAA,EAAdA,EAAgBS,GAAG,CAAC,CAACC,eAAgB,EAC9DN,EAED,MAAO,CACNO,QAASnB,EAAW,CACnBmB,QAAS,CACR,AAAAV,CAAAA,MAAAA,EAAK,KAAA,EAALA,EAAOW,iBAAiB,AAAjBA,GAAqB,CAC3BC,iBAAkB,CAAA,EAClBC,SAAU,CAAC,gBAAiB,QAASd,EAAQC,EAAM,CACnDc,QAAS,IAAM,AAAAd,CAAAA,MAAAA,EAAK,KAAA,EAALA,EAAOW,iBAAiB,AAAjBA,GAAqBX,EAAMW,iBAAiB,CAACZ,GACnEgB,UAAYC,IACPA,EAAKC,MAAM,CAAG,GACjBf,EAAW,EAEb,EACAgB,QAASd,GAEV,AAAAJ,CAAAA,MAAAA,EAAK,KAAA,EAALA,EAAOmB,kBAAkB,AAAlBA,GAAsB,CAC5BP,iBAAkB,CAAA,EAClBC,SAAU,CAAC,gBAAiB,SAAUd,EAAQC,EAAM,CACpDc,QAAS,IAAM,AAAAd,CAAAA,MAAAA,EAAK,KAAA,EAALA,EAAOmB,kBAAkB,AAAlBA,GAAsBnB,EAAMmB,kBAAkB,CAACpB,GACrEmB,QAASjB,EAAU,GAEpB,CAACF,MAAM,CAACO,WAEVc,UAAW,CAAChB,EAEd"}