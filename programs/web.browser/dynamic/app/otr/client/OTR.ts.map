)]}'
{"version":3,"sources":["meteor://ðŸ’»app/app/otr/client/OTR.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\n\nimport type { IOTR } from '../lib/IOTR';\nimport { OTRRoom } from './OTRRoom';\n\nclass OTR implements IOTR {\n\tprivate instancesByRoomId: { [rid: string]: OTRRoom };\n\n\tconstructor() {\n\t\tthis.instancesByRoomId = {};\n\t}\n\n\tgetInstanceByRoomId(uid: IUser['_id'], rid: IRoom['_id']): OTRRoom | undefined {\n\t\tif (this.instancesByRoomId[rid]) {\n\t\t\treturn this.instancesByRoomId[rid];\n\t\t}\n\n\t\tconst otrRoom = OTRRoom.create(uid, rid);\n\n\t\tif (!otrRoom) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis.instancesByRoomId[rid] = otrRoom;\n\t\treturn this.instancesByRoomId[rid];\n\t}\n}\n\nexport default new OTR();\n",null],"names":["OTRRoom","module","link","exportDefault","OTR","constructor","instancesByRoomId","getInstanceByRoomId","uid","rid","otrRoom","create"],"mappings":"uBAGA,IAAAA,EAASC,EAASC,IAAA,CAAM,YAAY,CAAAF,QAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAApCC,EAAOE,aAAW,CAyBH,IAvBf,MAAMC,EAGLC,aAAAA,CAAA,IAAA,CAFQC,iBAAiB,CAAA,KAAA,EAGxB,IAAI,CAACA,iBAAiB,CAAG,CAAA,CAC1B,CAEAC,oBAAoBC,CAAiB,CAAEC,CAAiB,CAAA,CACvD,GAAI,IAAI,CAACH,iBAAiB,CAACG,EAAI,CAC9B,OAAO,IAAI,CAACH,iBAAiB,CAACG,EAAI,CAGnC,IAAMC,EAAUV,EAAQW,MAAM,CAACH,EAAKC,GAEpC,GAAKC,EAKL,OADA,IAAI,CAACJ,iBAAiB,CAACG,EAAI,CAAGC,EACvB,IAAI,CAACJ,iBAAiB,CAACG,EAAI,AACnC"}