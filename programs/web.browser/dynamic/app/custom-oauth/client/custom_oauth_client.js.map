)]}'
{"version":3,"sources":["meteor://ðŸ’»app/app/custom-oauth/client/custom_oauth_client.js","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Random } from '@rocket.chat/random';\nimport { capitalize } from '@rocket.chat/string-helpers';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Match } from 'meteor/check';\nimport { Meteor } from 'meteor/meteor';\nimport { OAuth } from 'meteor/oauth';\nimport { ServiceConfiguration } from 'meteor/service-configuration';\n\nimport { isURL } from '../../../lib/utils/isURL';\n\n// Request custom OAuth credentials for the user\n// @param options {optional}\n// @param credentialRequestCompleteCallback {Function} Callback function to call on\n//   completion. Takes one argument, credentialToken on success, or Error on\n//   error.\n\nexport class CustomOAuth {\n\tconstructor(name, options) {\n\t\tthis.name = name;\n\t\tif (!Match.test(this.name, String)) {\n\t\t\tthrow new Meteor.Error('CustomOAuth: Name is required and must be String');\n\t\t}\n\n\t\tthis.configure(options);\n\n\t\tAccounts.oauth.registerService(this.name);\n\n\t\tthis.configureLogin();\n\t}\n\n\tconfigure(options) {\n\t\tif (!Match.test(options, Object)) {\n\t\t\tthrow new Meteor.Error('CustomOAuth: Options is required and must be Object');\n\t\t}\n\n\t\tif (!Match.test(options.serverURL, String)) {\n\t\t\tthrow new Meteor.Error('CustomOAuth: Options.serverURL is required and must be String');\n\t\t}\n\n\t\tif (!Match.test(options.authorizePath, String)) {\n\t\t\toptions.authorizePath = '/oauth/authorize';\n\t\t}\n\n\t\tif (!Match.test(options.scope, String)) {\n\t\t\toptions.scope = 'openid';\n\t\t}\n\n\t\tthis.serverURL = options.serverURL;\n\t\tthis.authorizePath = options.authorizePath;\n\t\tthis.scope = options.scope;\n\t\tthis.responseType = options.responseType || 'code';\n\n\t\tif (!isURL(this.authorizePath)) {\n\t\t\tthis.authorizePath = this.serverURL + this.authorizePath;\n\t\t}\n\t}\n\n\tconfigureLogin() {\n\t\tconst loginWithService = `loginWith${capitalize(String(this.name || ''))}`;\n\n\t\tMeteor[loginWithService] = async (options, callback) => {\n\t\t\t// support a callback without options\n\t\t\tif (!callback && typeof options === 'function') {\n\t\t\t\tcallback = options;\n\t\t\t\toptions = null;\n\t\t\t}\n\n\t\t\tconst credentialRequestCompleteCallback = Accounts.oauth.credentialRequestCompleteHandler(callback);\n\t\t\tawait this.requestCredential(options, credentialRequestCompleteCallback);\n\t\t};\n\t}\n\n\tasync requestCredential(options, credentialRequestCompleteCallback) {\n\t\t// support both (options, callback) and (callback).\n\t\tif (!credentialRequestCompleteCallback && typeof options === 'function') {\n\t\t\tcredentialRequestCompleteCallback = options;\n\t\t\toptions = {};\n\t\t}\n\n\t\tconst config = await ServiceConfiguration.configurations.findOneAsync({ service: this.name });\n\t\tif (!config) {\n\t\t\tif (credentialRequestCompleteCallback) {\n\t\t\t\tcredentialRequestCompleteCallback(new ServiceConfiguration.ConfigError());\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tconst credentialToken = Random.secret();\n\t\tconst loginStyle = OAuth._loginStyle(this.name, config, options);\n\n\t\tconst separator = this.authorizePath.indexOf('?') !== -1 ? '&' : '?';\n\n\t\tconst loginUrl =\n\t\t\t`${this.authorizePath}${separator}client_id=${config.clientId}&redirect_uri=${encodeURIComponent(\n\t\t\t\tOAuth._redirectUri(this.name, config),\n\t\t\t)}&response_type=${encodeURIComponent(this.responseType)}` +\n\t\t\t`&state=${encodeURIComponent(OAuth._stateParam(loginStyle, credentialToken, options.redirectUrl))}&scope=${encodeURIComponent(\n\t\t\t\tthis.scope,\n\t\t\t)}`;\n\n\t\tOAuth.launchLogin({\n\t\t\tloginService: this.name,\n\t\t\tloginStyle,\n\t\t\tloginUrl,\n\t\t\tcredentialRequestCompleteCallback,\n\t\t\tcredentialToken,\n\t\t\tpopupOptions: {\n\t\t\t\twidth: 900,\n\t\t\t\theight: 450,\n\t\t\t},\n\t\t});\n\t}\n}\n",null],"names":["Random","capitalize","Accounts","Match","Meteor","OAuth","ServiceConfiguration","isURL","module","export","CustomOAuth","link","v","constructor","name","options","test","String","Error","configure","oauth","registerService","configureLogin","Object","serverURL","authorizePath","scope","responseType","loginWithService","concat","callback","credentialRequestCompleteCallback","credentialRequestCompleteHandler","requestCredential","config","configurations","findOneAsync","service","ConfigError","credentialToken","secret","loginStyle","_loginStyle","separator","indexOf","loginUrl","clientId","encodeURIComponent","_redirectUri","_stateParam","redirectUrl","launchLogin","loginService","popupOptions","width","height"],"mappings":"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"}