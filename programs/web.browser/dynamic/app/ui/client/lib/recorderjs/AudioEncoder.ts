function module(e,t,o){let s,r;o.export({AudioEncoder:()=>i}),o.link("@rocket.chat/emitter",{Emitter(e){s=e}},0),o.link("meteor/meteor",{Meteor(e){r=e}},1);class i extends s{constructor(e){let{bufferLen:t=4096,numChannels:o=1,bitRate:s=32}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),this.worker=void 0,this.scriptNode=void 0,this.handleWorkerMessage=e=>{if("end"===e.data.command){let t=new Int8Array([73,68,51,3,0,0,0,0,0,0]),o=[t,...e.data.buffer],s=new Blob(o,{type:"audio/mpeg"});this.emit("encoded",s),this.worker.terminate()}},this.handleAudioProcess=e=>{for(let t=0;t<e.inputBuffer.numberOfChannels;t++){let o=e.inputBuffer.getChannelData(t);this.worker.postMessage({command:"encode",buffer:o})}};let i=r.absoluteUrl("workers/mp3-encoder/index.js");this.worker=new Worker(i),this.worker.onmessage=this.handleWorkerMessage,this.worker.postMessage({command:"init",config:{sampleRate:e.context.sampleRate,numChannels:o,bitRate:s}}),this.scriptNode=e.context.createScriptProcessor(t,o,o),this.scriptNode.onaudioprocess=this.handleAudioProcess,e.connect(this.scriptNode),this.scriptNode.connect(e.context.destination)}close(){this.worker.postMessage({command:"finish"})}}}
//# sourceMappingURL=/dynamic/app/ui/client/lib/recorderjs/b959b76a31d8ac2f639d25f3458f2f95b8e4f0fe.map
