)]}'
{"version":3,"sources":["meteor://ðŸ’»app/app/ui/client/lib/UserAction.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IExtras, IRoomActivity, IActionsObject, IUser } from '@rocket.chat/core-typings';\nimport { debounce } from 'lodash';\nimport { Meteor } from 'meteor/meteor';\nimport { ReactiveDict } from 'meteor/reactive-dict';\n\nimport { Notifications } from '../../../notifications/client';\nimport { settings } from '../../../settings/client';\n\nconst TIMEOUT = 15000;\nconst RENEW = TIMEOUT / 3;\n\nconst USER_ACTIVITY = 'user-activity';\n\nexport const USER_ACTIVITIES = {\n\tUSER_RECORDING: 'user-recording',\n\tUSER_TYPING: 'user-typing',\n\tUSER_UPLOADING: 'user-uploading',\n\tUSER_PLAYING: 'user-playing',\n};\n\nconst activityTimeouts = new Map();\nconst activityRenews = new Map();\nconst continuingIntervals = new Map();\nconst roomActivities = new Map<string, Set<string>>();\nconst rooms = new Map<string, (username: string, activityType: string[], extras?: object | undefined) => void>();\n\nconst performingUsers = new ReactiveDict<IActionsObject>();\n\nconst shownName = function (user: IUser | null | undefined): string | undefined {\n\tif (!user) {\n\t\treturn;\n\t}\n\tif (settings.get('UI_Use_Real_Name')) {\n\t\treturn user.name;\n\t}\n\treturn user.username;\n};\n\nconst emitActivities = debounce(async (rid: string, extras: IExtras): Promise<void> => {\n\tconst activities = roomActivities.get(extras?.tmid || rid) || new Set();\n\tNotifications.notifyRoom(rid, USER_ACTIVITY, shownName(Meteor.user() as unknown as IUser), [...activities], extras);\n}, 500);\n\nfunction handleStreamAction(rid: string, username: string, activityTypes: string[], extras?: IExtras): void {\n\trid = extras?.tmid || rid;\n\tconst roomActivities = performingUsers.get(rid) || {};\n\n\tfor (const [, activity] of Object.entries(USER_ACTIVITIES)) {\n\t\troomActivities[activity] = roomActivities[activity] || new Map();\n\t\tconst users = roomActivities[activity];\n\t\tconst timeout = users[username];\n\n\t\tif (timeout) {\n\t\t\tclearTimeout(timeout);\n\t\t}\n\n\t\tif (activityTypes.includes(activity)) {\n\t\t\tactivityTypes.splice(activityTypes.indexOf(activity), 1);\n\t\t\tusers[username] = setTimeout(() => handleStreamAction(rid, username, activityTypes, extras), TIMEOUT);\n\t\t} else {\n\t\t\tdelete users[username];\n\t\t}\n\t}\n\n\tperformingUsers.set(rid, roomActivities);\n}\nexport const UserAction = new (class {\n\taddStream(rid: string): void {\n\t\tif (rooms.get(rid)) {\n\t\t\treturn;\n\t\t}\n\t\tconst handler = function (username: string, activityType: string[], extras?: object): void {\n\t\t\tconst user = Meteor.users.findOne(Meteor.userId() || undefined, {\n\t\t\t\tfields: { name: 1, username: 1 },\n\t\t\t}) as IUser;\n\t\t\tif (username === shownName(user)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\thandleStreamAction(rid, username, activityType, extras);\n\t\t};\n\t\trooms.set(rid, handler);\n\t\tNotifications.onRoom(rid, USER_ACTIVITY, handler);\n\t}\n\n\tperformContinuously(rid: string, activityType: string, extras: IExtras = {}): void {\n\t\tconst trid = extras?.tmid || rid;\n\t\tconst key = `${activityType}-${trid}`;\n\n\t\tif (continuingIntervals.get(key)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.start(rid, activityType, extras);\n\n\t\tcontinuingIntervals.set(\n\t\t\tkey,\n\t\t\tsetInterval(() => {\n\t\t\t\tthis.start(rid, activityType, extras);\n\t\t\t}, RENEW),\n\t\t);\n\t}\n\n\tstart(rid: string, activityType: string, extras: IExtras = {}): void {\n\t\tconst trid = extras?.tmid || rid;\n\t\tconst key = `${activityType}-${trid}`;\n\n\t\tif (activityRenews.get(key)) {\n\t\t\treturn;\n\t\t}\n\n\t\tactivityRenews.set(\n\t\t\tkey,\n\t\t\tsetTimeout(() => {\n\t\t\t\tclearTimeout(activityRenews.get(key));\n\t\t\t\tactivityRenews.delete(key);\n\t\t\t}, RENEW),\n\t\t);\n\n\t\tconst activities = roomActivities.get(trid) || new Set();\n\t\tactivities.add(activityType);\n\t\troomActivities.set(trid, activities);\n\n\t\tvoid emitActivities(rid, extras);\n\n\t\tif (activityTimeouts.get(key)) {\n\t\t\tclearTimeout(activityTimeouts.get(key));\n\t\t\tactivityTimeouts.delete(key);\n\t\t}\n\n\t\tactivityTimeouts.set(\n\t\t\tkey,\n\t\t\tsetTimeout(() => this.stop(trid, activityType, extras), TIMEOUT),\n\t\t);\n\t\tactivityTimeouts.get(key);\n\t}\n\n\tstop(rid: string, activityType: string, extras: IExtras): void {\n\t\tconst trid = extras?.tmid || rid;\n\t\tconst key = `${activityType}-${trid}`;\n\n\t\tif (activityTimeouts.get(key)) {\n\t\t\tclearTimeout(activityTimeouts.get(key));\n\t\t\tactivityTimeouts.delete(key);\n\t\t}\n\t\tif (activityRenews.get(key)) {\n\t\t\tclearTimeout(activityRenews.get(key));\n\t\t\tactivityRenews.delete(key);\n\t\t}\n\t\tif (continuingIntervals.get(key)) {\n\t\t\tclearInterval(continuingIntervals.get(key));\n\t\t\tcontinuingIntervals.delete(key);\n\t\t}\n\n\t\tconst activities = roomActivities.get(trid) || new Set();\n\t\tactivities.delete(activityType);\n\t\troomActivities.set(trid, activities);\n\t\tvoid emitActivities(rid, extras);\n\t}\n\n\tcancel(rid: string): void {\n\t\tif (!rooms.get(rid)) {\n\t\t\treturn;\n\t\t}\n\n\t\tNotifications.unRoom(rid, USER_ACTIVITY);\n\t\trooms.delete(rid);\n\t}\n\n\tget(roomId: string): IRoomActivity | undefined {\n\t\treturn performingUsers.get(roomId);\n\t}\n})();\n",null],"names":["debounce","Meteor","ReactiveDict","Notifications","settings","module","export","USER_ACTIVITIES","UserAction","USER_ACTIVITY","USER_RECORDING","USER_TYPING","USER_UPLOADING","USER_PLAYING","activityTimeouts","Map","activityRenews","continuingIntervals","roomActivities","rooms","performingUsers","shownName","user","get","name","username","emitActivities","rid","extras","activities","tmid","Set","notifyRoom","addStream","handler","activityType","users","findOne","userId","undefined","fields","handleStreamAction","activityTypes","activity","Object","entries","timeout","clearTimeout","includes","splice","indexOf","setTimeout","set","onRoom","performContinuously","trid","key","concat","start","setInterval","TIMEOUT","delete","add","stop","clearInterval","cancel","unRoom","roomId"],"mappings":"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"}