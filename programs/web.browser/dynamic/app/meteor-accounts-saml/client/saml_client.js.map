)]}'
{"version":3,"sources":["meteor://ðŸ’»app/app/meteor-accounts-saml/client/saml_client.js","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Random } from '@rocket.chat/random';\nimport { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\nimport { ServiceConfiguration } from 'meteor/service-configuration';\n\nimport { sdk } from '../../utils/client/lib/SDKClient';\n\nif (!Accounts.saml) {\n\tAccounts.saml = {};\n}\n\n// Override the standard logout behaviour.\n//\n// If we find a samlProvider, and we are using single\n// logout we will initiate logout from rocketchat via saml.\n// If not using single logout, we just do the standard logout.\n// This can be overridden by a configured logout behaviour.\n//\n// TODO: This may need some work as it is not clear if we are really\n// logging out of the idp when doing the standard logout.\n\nconst MeteorLogout = Meteor.logout;\nconst logoutBehaviour = {\n\tTERMINATE_SAML: 'SAML',\n\tONLY_RC: 'Local',\n};\n\nMeteor.logout = async function (...args) {\n\tconst samlService = await ServiceConfiguration.configurations.findOneAsync({ service: 'saml' });\n\tif (samlService) {\n\t\tconst provider = samlService.clientConfig && samlService.clientConfig.provider;\n\t\tif (provider) {\n\t\t\tif (samlService.logoutBehaviour == null || samlService.logoutBehaviour === logoutBehaviour.TERMINATE_SAML) {\n\t\t\t\tif (samlService.idpSLORedirectURL) {\n\t\t\t\t\tconsole.info('SAML session terminated via SLO');\n\t\t\t\t\treturn Meteor.logoutWithSaml({ provider });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (samlService.logoutBehaviour === logoutBehaviour.ONLY_RC) {\n\t\t\t\tconsole.info('SAML session not terminated, only the Rocket.Chat session is going to be killed');\n\t\t\t}\n\t\t}\n\t}\n\treturn MeteorLogout.apply(Meteor, args);\n};\n\nMeteor.loginWithSaml = function (options /* , callback*/) {\n\toptions = options || {};\n\tconst credentialToken = `id-${Random.id()}`;\n\toptions.credentialToken = credentialToken;\n\n\twindow.location.href = `_saml/authorize/${options.provider}/${options.credentialToken}`;\n};\n\nMeteor.logoutWithSaml = function (options /* , callback*/) {\n\t// Accounts.saml.idpInitiatedSLO(options, callback);\n\tsdk\n\t\t.call('samlLogout', options.provider)\n\t\t.then((result) => {\n\t\t\tif (!result) {\n\t\t\t\tMeteorLogout.apply(Meteor);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Remove the userId from the client to prevent calls to the server while the logout is processed.\n\t\t\t// If the logout fails, the userId will be reloaded on the resume call\n\t\t\tMeteor._localStorage.removeItem(Accounts.USER_ID_KEY);\n\n\t\t\t// A nasty bounce: 'result' has the SAML LogoutRequest but we need a proper 302 to redirected from the server.\n\t\t\twindow.location.replace(Meteor.absoluteUrl(`_saml/sloRedirect/${options.provider}/?redirect=${encodeURIComponent(result)}`));\n\t\t})\n\t\t.catch(() => MeteorLogout.apply(Meteor));\n};\n\nMeteor.loginWithSamlToken = function (token, userCallback) {\n\tAccounts.callLoginMethod({\n\t\tmethodArguments: [\n\t\t\t{\n\t\t\t\tsaml: true,\n\t\t\t\tcredentialToken: token,\n\t\t\t},\n\t\t],\n\t\tuserCallback,\n\t});\n};\n",null],"names":["Random","Accounts","Meteor","ServiceConfiguration","sdk","module","link","v","saml","MeteorLogout","logout","logoutBehaviour","TERMINATE_SAML","ONLY_RC","samlService","configurations","findOneAsync","service","provider","clientConfig","idpSLORedirectURL","console","info","logoutWithSaml","_len","arguments","length","args","Array","_key","apply","loginWithSaml","options","credentialToken","concat","id","window","location","href","call","then","result","_localStorage","removeItem","USER_ID_KEY","replace","absoluteUrl","encodeURIComponent","catch","loginWithSamlToken","token","userCallback","callLoginMethod","methodArguments"],"mappings":"2BAAIA,EAAsEC,EAA6EC,EAAgEC,EAAyHC,EAArUC,EAAOC,IAAI,CAAC,sBAAsB,CAACN,OAAOO,CAAC,EAAEP,EAAOO,CAAC,CAAC,EAAE,GAAgBF,EAAOC,IAAI,CAAC,uBAAuB,CAACL,SAASM,CAAC,EAAEN,EAASM,CAAC,CAAC,EAAE,GAAcF,EAAOC,IAAI,CAAC,gBAAgB,CAACJ,OAAOK,CAAC,EAAEL,EAAOK,CAAC,CAAC,EAAE,GAA4BF,EAAOC,IAAI,CAAC,+BAA+B,CAACH,qBAAqBI,CAAC,EAAEJ,EAAqBI,CAAC,CAAC,EAAE,GAAWF,EAAOC,IAAI,CAAC,mCAAmC,CAACF,IAAIG,CAAC,EAAEH,EAAIG,CAAC,CAAC,EAAE,GAO9YN,EAASO,IAAI,EACjBP,CAAAA,EAASO,IAAI,CAAG,CAAC,CAAA,EAalB,IAAMC,EAAeP,EAAOQ,MAAM,CAC5BC,EAAkB,CACvBC,eAAgB,OAChBC,QAAS,OACV,CAEAX,CAAAA,EAAOQ,MAAM,CAAG,iBACf,IAAMI,EAAc,MAAMX,EAAqBY,cAAc,CAACC,YAAY,CAAC,CAAEC,QAAS,MAAO,GAC7F,GAAIH,EAAa,CAChB,IAAMI,EAAWJ,EAAYK,YAAY,EAAIL,EAAYK,YAAY,CAACD,QAAQ,CAC9E,GAAIA,EAAU,CACb,GAAIJ,CAAAA,AAA+B,MAA/BA,EAAYH,eAAe,EAAYG,EAAYH,eAAe,GAAKA,EAAgBC,cAAc,AAAdA,GACtFE,EAAYM,iBAAiB,CAEhC,OADAC,QAAQC,IAAI,CAAC,mCACNpB,EAAOqB,cAAc,CAAC,CAAEL,SAAAA,CAAS,EAItCJ,CAAAA,EAAYH,eAAe,GAAKA,EAAgBE,OAAO,EAC1DQ,QAAQC,IAAI,CAAC,kFAEf,CACD,CAAC,IAAA,IAAAE,EAAAC,UAAAC,MAAA,CAhBiCC,EAAI,AAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAJF,CAAI,CAAAE,EAAA,CAAAJ,SAAA,CAAAI,EAAA,CAiBtC,OAAOpB,EAAaqB,KAAK,CAAC5B,EAAQyB,EACnC,EAEAzB,EAAO6B,aAAa,CAAG,SAAUC,CAAO,EACvCA,EAAUA,GAAW,CAAC,EACtB,IAAMC,EAAe,MAAAC,MAAA,CAASlC,EAAOmC,EAAE,GACvCH,CAAAA,EAAQC,eAAe,CAAGA,EAE1BG,OAAOC,QAAQ,CAACC,IAAI,CAAA,mBAAAJ,MAAA,CAAsBF,EAAQd,QAAQ,CAAA,KAAAgB,MAAA,CAAIF,EAAQC,eAAe,CACtF,EAEA/B,EAAOqB,cAAc,CAAG,SAAUS,CAAO,EAExC5B,EACEmC,IAAI,CAAC,aAAcP,EAAQd,QAAQ,EACnCsB,IAAI,CAAEC,IACN,GAAI,CAACA,EAAQ,CACZhC,EAAaqB,KAAK,CAAC5B,GACnB,MACD,CAIAA,EAAOwC,aAAa,CAACC,UAAU,CAAC1C,EAAS2C,WAAW,EAGpDR,OAAOC,QAAQ,CAACQ,OAAO,CAAC3C,EAAO4C,WAAW,CAAA,qBAAAZ,MAAA,CAAsBF,EAAQd,QAAQ,CAAA,eAAAgB,MAAA,CAAca,mBAAmBN,KAClH,GACCO,KAAK,CAAC,IAAMvC,EAAaqB,KAAK,CAAC5B,GAClC,EAEAA,EAAO+C,kBAAkB,CAAG,SAAUC,CAAK,CAAEC,CAAY,EACxDlD,EAASmD,eAAe,CAAC,CACxBC,gBAAiB,CAChB,CACC7C,KAAM,CAAA,EACNyB,gBAAiBiB,CAClB,EACA,CACDC,aAAAA,CACD,EACD"}