)]}'
{"version":3,"sources":["meteor://ðŸ’»app/app/emoji-emojione/client/lib.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { emoji } from '../../emoji/client';\nimport { getUserPreference } from '../../utils/client';\nimport { getEmojiConfig } from '../lib/getEmojiConfig';\nimport { isSetNotNull } from '../lib/isSetNotNull';\n\nconst config = getEmojiConfig();\n\nemoji.packages.emojione = config.emojione as any;\nif (emoji.packages.emojione) {\n\temoji.packages.emojione.sprites = config.sprites;\n\temoji.packages.emojione.emojisByCategory = config.emojisByCategory;\n\temoji.packages.emojione.emojiCategories = config.emojiCategories as any;\n\temoji.packages.emojione.toneList = config.toneList;\n\n\temoji.packages.emojione.render = config.render;\n\temoji.packages.emojione.renderPicker = config.renderPicker;\n\n\t// RocketChat.emoji.list is the collection of emojis from all emoji packages\n\tfor (const [key, currentEmoji] of Object.entries(config.emojione.emojioneList)) {\n\t\tcurrentEmoji.emojiPackage = 'emojione';\n\t\temoji.list[key] = currentEmoji;\n\n\t\tif (currentEmoji.shortnames) {\n\t\t\tcurrentEmoji.shortnames.forEach((shortname: string) => {\n\t\t\t\temoji.list[shortname] = currentEmoji;\n\t\t\t});\n\t\t}\n\t}\n\n\t// Additional settings -- ascii emojis\n\tMeteor.startup(() => {\n\t\tTracker.autorun(async () => {\n\t\t\tif ((await isSetNotNull(() => emoji.packages.emojione)) && emoji.packages.emojione) {\n\t\t\t\tif (await isSetNotNull(() => getUserPreference(Meteor.userId() as string, 'convertAsciiEmoji'))) {\n\t\t\t\t\temoji.packages.emojione.ascii = await getUserPreference(Meteor.userId() as string, 'convertAsciiEmoji');\n\t\t\t\t} else {\n\t\t\t\t\temoji.packages.emojione.ascii = true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n",null],"names":["Meteor","emoji","getUserPreference","getEmojiConfig","isSetNotNull","module","link","config","packages","emojione","key","currentEmoji","sprites","emojisByCategory","emojiCategories","toneList","render","renderPicker","Object","entries","emojioneList","emojiPackage","list","shortnames","forEach","shortname","startup","Tracker","autorun","userId","ascii"],"mappings":"2BAAAA,EAAuCC,EAAAC,EAAAC,EAAAC,EAA9BC,EAAQC,IAAA,CAAM,gBAAgB,CAAAN,OAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,qBAAAA,CAAAJ,MAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,qBAAAA,CAAAH,kBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAF,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,sBAAAA,CAAAD,aAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAOvC,IAAMG,EAASJ,IAGf,GADAF,EAAMO,QAAQ,CAACC,QAAQ,CAAGF,EAAOE,QAAe,CAC5CR,EAAMO,QAAQ,CAACC,QAAQ,CAAE,CAU5B,IAAK,GAAM,CAACC,EAAKC,EAAa,GAT9BV,EAAMO,QAAQ,CAACC,QAAQ,CAACG,OAAO,CAAGL,EAAOK,OAAO,CAChDX,EAAMO,QAAQ,CAACC,QAAQ,CAACI,gBAAgB,CAAGN,EAAOM,gBAAgB,CAClEZ,EAAMO,QAAQ,CAACC,QAAQ,CAACK,eAAe,CAAGP,EAAOO,eAAsB,CACvEb,EAAMO,QAAQ,CAACC,QAAQ,CAACM,QAAQ,CAAGR,EAAOQ,QAAQ,CAElDd,EAAMO,QAAQ,CAACC,QAAQ,CAACO,MAAM,CAAGT,EAAOS,MAAM,CAC9Cf,EAAMO,QAAQ,CAACC,QAAQ,CAACQ,YAAY,CAAGV,EAAOU,YAAY,CAGxBC,OAAOC,OAAO,CAACZ,EAAOE,QAAQ,CAACW,YAAY,GAC5ET,EAAaU,YAAY,CAAG,WAC5BpB,EAAMqB,IAAI,CAACZ,EAAI,CAAGC,EAEdA,EAAaY,UAAU,EAC1BZ,EAAaY,UAAU,CAACC,OAAO,CAAEC,IAChCxB,EAAMqB,IAAI,CAACG,EAAU,CAAGd,CACzB,GAKFX,EAAO0B,OAAO,CAAC,KACdC,QAAQC,OAAO,CAAC,UACV,MAAMxB,EAAa,IAAMH,EAAMO,QAAQ,CAACC,QAAQ,GAAMR,EAAMO,QAAQ,CAACC,QAAQ,GAC7E,MAAML,EAAa,IAAMF,EAAkBF,EAAO6B,MAAM,GAAc,sBACzE5B,EAAMO,QAAQ,CAACC,QAAQ,CAACqB,KAAK,CAAG,MAAM5B,EAAkBF,EAAO6B,MAAM,GAAc,qBAEnF5B,EAAMO,QAAQ,CAACC,QAAQ,CAACqB,KAAK,CAAG,CAAA,EAGnC,EACD"}