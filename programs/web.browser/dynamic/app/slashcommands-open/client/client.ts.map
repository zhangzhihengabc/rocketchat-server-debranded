)]}'
{"version":3,"sources":["meteor://ðŸ’»app/app/slashcommands-open/client/client.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { RoomType, ISubscription, SlashCommandCallbackParams } from '@rocket.chat/core-typings';\nimport type { Mongo } from 'meteor/mongo';\n\nimport { roomCoordinator } from '../../../client/lib/rooms/roomCoordinator';\nimport { router } from '../../../client/providers/RouterProvider';\nimport { Subscriptions, ChatSubscription } from '../../models/client';\nimport { sdk } from '../../utils/client/lib/SDKClient';\nimport { slashCommands } from '../../utils/lib/slashCommand';\n\nslashCommands.add({\n\tcommand: 'open',\n\tcallback: async function Open({ params }: SlashCommandCallbackParams<'open'>): Promise<void> {\n\t\tconst dict: Record<string, RoomType[]> = {\n\t\t\t'#': ['c', 'p'],\n\t\t\t'@': ['d'],\n\t\t};\n\n\t\tconst room = params.trim().replace(/#|@/, '');\n\t\tconst type = dict[params.trim()[0]] || [];\n\n\t\tconst query: Mongo.Selector<ISubscription> = {\n\t\t\tname: room,\n\t\t\t...(type && { t: { $in: type } }),\n\t\t};\n\n\t\tconst subscription = ChatSubscription.findOne(query);\n\n\t\tif (subscription) {\n\t\t\troomCoordinator.openRouteLink(subscription.t, subscription, router.getSearchParameters());\n\t\t}\n\n\t\tif (type && type.indexOf('d') === -1) {\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tawait sdk.call('createDirectMessage', room);\n\t\t\tconst subscription = Subscriptions.findOne(query);\n\t\t\tif (!subscription) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\troomCoordinator.openRouteLink(subscription.t, subscription, router.getSearchParameters());\n\t\t} catch (err: unknown) {\n\t\t\t// noop\n\t\t}\n\t},\n\toptions: {\n\t\tdescription: 'Opens_a_channel_group_or_direct_message',\n\t\tparams: 'room_name',\n\t\tclientOnly: true,\n\t\tpermission: ['view-c-room', 'view-c-room', 'view-d-room', 'view-joined-room', 'create-d'],\n\t},\n});\n",null],"names":["_objectSpread","roomCoordinator","router","Subscriptions","ChatSubscription","sdk","slashCommands","module","link","default","v","add","command","callback","Open","_ref","params","room","trim","replace","type","dict","query","name","t","$in","subscription","findOne","openRouteLink","getSearchParameters","indexOf","call","err","options","description","clientOnly","permission"],"mappings":"2BAGAA,EAAAC,EAA4EC,EAAAC,EAAAC,EAAAC,EAAAC,EAAnEC,EAAeC,IAAE,CAAA,uCAAM,CAAAC,QAA4CC,CAAA,EAAAV,EAAAA,CAAA,CAAA,EAAA,GAAnEO,EAAiBC,IAAA,CAAM,4CAA4C,CAAAP,gBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAM,EAAAA,IAAAA,CAAAA,2CAAAA,CAAAL,OAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,sBAAAA,CAAAJ,cAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,iBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,mCAAAA,CAAAF,IAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,+BAAAA,CAAAD,cAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAM5EA,EAAcK,GAAG,CAAC,CACjBC,QAAS,OACTC,SAAU,eAAeC,EAAIC,CAAA,EAA+C,GAA9C,CAAEC,OAAAA,CAAAA,CAA4C,CAAAD,EAMrEE,EAAOD,EAAOE,IAAI,GAAGC,OAAO,CAAC,MAAO,IACpCC,EAAOC,AAN4B,CACxC,IAAK,CAAC,IAAK,IAAI,CACf,IAAK,CAAC,IAAG,CAIO,CAACL,EAAOE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAI,EAAE,CAEnCI,EAAKtB,EAAA,CACVuB,KAAMN,CAAI,EACNG,GAAQ,CAAEI,EAAG,CAAEC,IAAKL,CAAI,CAAE,GAGzBM,EAAetB,EAAiBuB,OAAO,CAACL,GAM9C,GAJII,GACHzB,EAAgB2B,aAAa,CAACF,EAAaF,CAAC,CAAEE,EAAcxB,EAAO2B,mBAAmB,IAGnFT,CAAAA,GAAQA,AAAsB,KAAtBA,EAAKU,OAAO,CAAC,KAGzB,GAAI,CACH,MAAMzB,EAAI0B,IAAI,CAAC,sBAAuBd,GACtC,IAAMS,EAAevB,EAAcwB,OAAO,CAACL,GAC3C,GAAI,CAACI,EACJ,OAEDzB,EAAgB2B,aAAa,CAACF,EAAaF,CAAC,CAAEE,EAAcxB,EAAO2B,mBAAmB,IACrF,MAAOG,EAAc,CACtB,CAEF,EACAC,QAAS,CACRC,YAAa,0CACblB,OAAQ,YACRmB,WAAY,CAAA,EACZC,WAAY,CAAC,cAAe,cAAe,cAAe,mBAAoB,WAAU"}