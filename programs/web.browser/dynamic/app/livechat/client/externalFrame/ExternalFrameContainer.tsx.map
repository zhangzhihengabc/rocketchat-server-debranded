)]}'
{"version":3,"sources":["meteor://ðŸ’»app/app/livechat/client/externalFrame/ExternalFrameContainer.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useSetting, useUserId } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport React, { useMemo } from 'react';\n\nimport { useRoom } from '../../../../client/views/room/contexts/RoomContext';\nimport { sdk } from '../../../utils/client/lib/SDKClient';\nimport { encrypt, getKeyFromString } from './crypto';\n\nconst ExternalFrameContainer = () => {\n\tconst uid = useUserId();\n\tconst room = useRoom();\n\tconst { 'X-Auth-Token': authToken } = sdk.rest.getCredentials() || {};\n\tconst keyStr = useSetting<string>('Omnichannel_External_Frame_Encryption_JWK');\n\tconst frameURLSetting = useSetting<string>('Omnichannel_External_Frame_URL');\n\n\tconst token = useQuery(['externalFrame', keyStr, authToken], async () => {\n\t\tif (!keyStr || !authToken) {\n\t\t\treturn '';\n\t\t}\n\t\treturn encrypt(authToken, await getKeyFromString(keyStr));\n\t});\n\n\tconst externalFrameUrl = useMemo(() => {\n\t\tif (!frameURLSetting || !uid || !room._id || !authToken || !token.data) {\n\t\t\treturn '';\n\t\t}\n\t\tconst frameURL = new URL(frameURLSetting);\n\n\t\tframeURL.searchParams.append('uid', uid);\n\t\tframeURL.searchParams.append('rid', room._id);\n\t\tframeURL.searchParams.append('t', authToken);\n\n\t\treturn frameURL.toString();\n\t}, [frameURLSetting, uid, room._id, authToken, token.data]);\n\n\tif (!externalFrameUrl) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div className='flex-nav'>\n\t\t\t<iframe className='external-frame' src={externalFrameUrl} />\n\t\t</div>\n\t);\n};\n\nexport default ExternalFrameContainer;\n",null],"names":["useSetting","useUserId","useQuery","React","useMemo","useRoom","sdk","encrypt","getKeyFromString","module","link","default","exportDefault","uid","room","authToken","rest","getCredentials","keyStr","frameURLSetting","token","externalFrameUrl","_id","data","frameURL","URL","searchParams","append","toString","createElement","className","src"],"mappings":"2BAAAA,EAASC,EAAwDC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA5CC,EAAWC,IAAAA,CAAAA,2BAAgC,CAACV,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAQ,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAP,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAO,EAAAA,IAAAA,CAAAA,QAAAA,CAAAE,QAAAA,CAAAA,EAAAR,EAAAA,CAAA,EAAAC,QAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,qDAAAA,CAAAJ,QAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,sCAAAA,CAAAH,IAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,WAAAA,CAAAF,QAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,iBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAjEC,EAAOG,aAAY,CAQY,KAC9B,IAAMC,EAAMZ,IACNa,EAAOT,IACP,CAAE,eAAgBU,CAAAA,CAAW,CAAGT,EAAIU,IAAI,CAACC,cAAc,IAAM,CAAA,EAC7DC,EAASlB,EAAmB,6CAC5BmB,EAAkBnB,EAAmB,kCAErCoB,EAAQlB,EAAS,CAAC,gBAAiBgB,EAAQH,EAAU,CAAE,SAC5D,AAAI,AAACG,GAAWH,EAGTR,EAAQQ,EAAW,MAAMP,EAAiBU,IAFzC,IAKHG,EAAmBjB,EAAQ,KAChC,GAAI,CAACe,GAAmB,CAACN,GAAO,CAACC,EAAKQ,GAAG,EAAI,CAACP,GAAa,CAACK,EAAMG,IAAI,CACrE,MAAO,GAER,IAAMC,EAAW,IAAIC,IAAIN,GAMzB,OAJAK,EAASE,YAAY,CAACC,MAAM,CAAC,MAAOd,GACpCW,EAASE,YAAY,CAACC,MAAM,CAAC,MAAOb,EAAKQ,GAAG,EAC5CE,EAASE,YAAY,CAACC,MAAM,CAAC,IAAKZ,GAE3BS,EAASI,QAAQ,EACzB,EAAG,CAACT,EAAiBN,EAAKC,EAAKQ,GAAG,CAAEP,EAAWK,EAAMG,IAAI,CAAC,SAE1D,AAAKF,EAKJlB,EAAA0B,aAAA,CAAA,MAAA,CAAKC,UAAU,UAAU,EACxB3B,EAAA0B,aAAA,CAAA,SAAA,CAAQC,UAAU,iBAAiBC,IAAKV,CAAiB,IALnD,IAQT"}