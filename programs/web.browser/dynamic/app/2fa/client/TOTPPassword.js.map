)]}'
{"version":3,"sources":["meteor://ðŸ’»app/app/2fa/client/TOTPPassword.js","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Accounts } from 'meteor/accounts-base';\nimport { Meteor } from 'meteor/meteor';\n\nimport { process2faReturn } from '../../../client/lib/2fa/process2faReturn';\nimport { isTotpInvalidError, isTotpMaxAttemptsError, reportError } from '../../../client/lib/2fa/utils';\nimport { dispatchToastMessage } from '../../../client/lib/toast';\nimport { t } from '../../utils/lib/i18n';\n\nMeteor.loginWithPasswordAndTOTP = function (selector, password, code, callback) {\n\tif (typeof selector === 'string') {\n\t\tif (selector.indexOf('@') === -1) {\n\t\t\tselector = { username: selector };\n\t\t} else {\n\t\t\tselector = { email: selector };\n\t\t}\n\t}\n\n\tAccounts.callLoginMethod({\n\t\tmethodArguments: [\n\t\t\t{\n\t\t\t\ttotp: {\n\t\t\t\t\tlogin: {\n\t\t\t\t\t\tuser: selector,\n\t\t\t\t\t\tpassword: Accounts._hashPassword(password),\n\t\t\t\t\t},\n\t\t\t\t\tcode,\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuserCallback(error) {\n\t\t\tif (error) {\n\t\t\t\treportError(error, callback);\n\t\t\t} else {\n\t\t\t\tcallback && callback();\n\t\t\t}\n\t\t},\n\t});\n};\n\nconst { loginWithPassword } = Meteor;\n\nMeteor.loginWithPassword = function (email, password, cb) {\n\tloginWithPassword(email, password, async (error) => {\n\t\tawait process2faReturn({\n\t\t\terror,\n\t\t\toriginalCallback: cb,\n\t\t\temailOrUsername: email,\n\t\t\tonCode: (code) => {\n\t\t\t\tMeteor.loginWithPasswordAndTOTP(email, password, code, (error) => {\n\t\t\t\t\tif (isTotpMaxAttemptsError(error)) {\n\t\t\t\t\t\tdispatchToastMessage({\n\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\tmessage: t('totp-max-attempts'),\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcb();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (isTotpInvalidError(error)) {\n\t\t\t\t\t\tdispatchToastMessage({\n\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\tmessage: t('Invalid_two_factor_code'),\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcb();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcb(error);\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t});\n};\n",null],"names":["Accounts","Meteor","process2faReturn","isTotpInvalidError","isTotpMaxAttemptsError","reportError","dispatchToastMessage","t","module","link","v","loginWithPasswordAndTOTP","selector","password","code","callback","indexOf","username","email","callLoginMethod","methodArguments","totp","login","user","_hashPassword","userCallback","error","loginWithPassword","cb","originalCallback","emailOrUsername","onCode","type","message"],"mappings":"2BAAIA,EAA6EC,EAAgEC,EAAyHC,EAAmBC,EAAuBC,EAA+LC,EAAsHC,EAA5lBC,EAAOC,IAAI,CAAC,uBAAuB,CAACT,SAASU,CAAC,EAAEV,EAASU,CAAC,CAAC,EAAE,GAAcF,EAAOC,IAAI,CAAC,gBAAgB,CAACR,OAAOS,CAAC,EAAET,EAAOS,CAAC,CAAC,EAAE,GAAwBF,EAAOC,IAAI,CAAC,2CAA2C,CAACP,iBAAiBQ,CAAC,EAAER,EAAiBQ,CAAC,CAAC,EAAE,GAA6DF,EAAOC,IAAI,CAAC,gCAAgC,CAACN,mBAAmBO,CAAC,EAAEP,EAAmBO,CAAC,EAAEN,uBAAuBM,CAAC,EAAEN,EAAuBM,CAAC,EAAEL,YAAYK,CAAC,EAAEL,EAAYK,CAAC,CAAC,EAAE,GAA4BF,EAAOC,IAAI,CAAC,4BAA4B,CAACH,qBAAqBI,CAAC,EAAEJ,EAAqBI,CAAC,CAAC,EAAE,GAASF,EAAOC,IAAI,CAAC,uBAAuB,CAACF,EAAEG,CAAC,EAAEH,EAAEG,CAAC,CAAC,EAAE,GAQ1pBT,EAAOU,wBAAwB,CAAG,SAAUC,CAAQ,CAAEC,CAAQ,CAAEC,CAAI,CAAEC,CAAQ,EACrD,UAApB,OAAOH,IAETA,EADGA,AAA0B,KAA1BA,EAASI,OAAO,CAAC,KACT,CAAEC,SAAUL,CAAS,EAErB,CAAEM,MAAON,CAAS,GAI/BZ,EAASmB,eAAe,CAAC,CACxBC,gBAAiB,CAChB,CACCC,KAAM,CACLC,MAAO,CACNC,KAAMX,EACNC,SAAUb,EAASwB,aAAa,CAACX,EAClC,EACAC,KAAAA,CACD,CACD,EACA,CACDW,aAAaC,CAAK,EACbA,EACHrB,EAAYqB,EAAOX,GAEnBA,GAAYA,GAEd,CACD,EACD,EAEA,GAAM,CAAEY,kBAAAA,CAAAA,CAAmB,CAAG1B,CAE9BA,CAAAA,EAAO0B,iBAAiB,CAAG,SAAUT,CAAK,CAAEL,CAAQ,CAAEe,CAAE,EACvDD,EAAkBT,EAAOL,EAAU,MAAOa,IACzC,MAAMxB,EAAiB,CACtBwB,MAAAA,EACAG,iBAAkBD,EAClBE,gBAAiBZ,EACjBa,OAASjB,IACRb,EAAOU,wBAAwB,CAACO,EAAOL,EAAUC,EAAOY,IACvD,GAAItB,EAAuBsB,GAAQ,CAClCpB,EAAqB,CACpB0B,KAAM,QACNC,QAAS1B,EAAE,oBACZ,GACAqB,IACA,MACD,CACA,GAAIzB,EAAmBuB,GAAQ,CAC9BpB,EAAqB,CACpB0B,KAAM,QACNC,QAAS1B,EAAE,0BACZ,GACAqB,IACA,MACD,CACAA,EAAGF,EACJ,EACD,CACD,EACD,EACD"}