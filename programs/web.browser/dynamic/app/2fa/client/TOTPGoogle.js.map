)]}'
{"version":3,"sources":["meteor://ðŸ’»app/app/2fa/client/TOTPGoogle.js","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Accounts } from 'meteor/accounts-base';\nimport { Google } from 'meteor/google-oauth';\nimport { Meteor } from 'meteor/meteor';\n\nimport { overrideLoginMethod } from '../../../client/lib/2fa/overrideLoginMethod';\n\nconst loginWithGoogleAndTOTP = function (options, code, callback) {\n\t// support a callback without options\n\tif (!callback && typeof options === 'function') {\n\t\tcallback = options;\n\t\toptions = null;\n\t}\n\n\tif (Meteor.isCordova && Google.signIn) {\n\t\t// After 20 April 2017, Google OAuth login will no longer work from\n\t\t// a WebView, so Cordova apps must use Google Sign-In instead.\n\t\t// https://github.com/meteor/meteor/issues/8253\n\t\tGoogle.signIn(options, callback);\n\t\treturn;\n\t} // Use Google's domain-specific login page if we want to restrict creation to\n\t// a particular email domain. (Don't use it if restrictCreationByEmailDomain\n\t// is a function.) Note that all this does is change Google's UI ---\n\t// accounts-base/accounts_server.js still checks server-side that the server\n\t// has the proper email address after the OAuth conversation.\n\n\tif (typeof Accounts._options.restrictCreationByEmailDomain === 'string') {\n\t\toptions = Object.assign({}, options || {});\n\t\toptions.loginUrlParameters = Object.assign({}, options.loginUrlParameters || {});\n\t\toptions.loginUrlParameters.hd = Accounts._options.restrictCreationByEmailDomain;\n\t}\n\n\tconst credentialRequestCompleteCallback = Accounts.oauth.credentialRequestCompleteHandler(callback, code);\n\tGoogle.requestCredential(options, credentialRequestCompleteCallback);\n};\n\nconst { loginWithGoogle } = Meteor;\nMeteor.loginWithGoogle = function (options, cb) {\n\toverrideLoginMethod(loginWithGoogle, [options], cb, loginWithGoogleAndTOTP);\n};\n",null],"names":["Accounts","Google","Meteor","overrideLoginMethod","module","link","v","loginWithGoogleAndTOTP","options","code","callback","isCordova","signIn","_options","restrictCreationByEmailDomain","Object","assign","loginUrlParameters","hd","credentialRequestCompleteCallback","oauth","credentialRequestCompleteHandler","requestCredential","loginWithGoogle","cb"],"mappings":"2BAAIA,EAA6EC,EAAsEC,EAAgEC,EAA1MC,EAAOC,IAAI,CAAC,uBAAuB,CAACL,SAASM,CAAC,EAAEN,EAASM,CAAC,CAAC,EAAE,GAAcF,EAAOC,IAAI,CAAC,sBAAsB,CAACJ,OAAOK,CAAC,EAAEL,EAAOK,CAAC,CAAC,EAAE,GAAcF,EAAOC,IAAI,CAAC,gBAAgB,CAACH,OAAOI,CAAC,EAAEJ,EAAOI,CAAC,CAAC,EAAE,GAA2BF,EAAOC,IAAI,CAAC,8CAA8C,CAACF,oBAAoBG,CAAC,EAAEH,EAAoBG,CAAC,CAAC,EAAE,GAMrV,IAAMC,EAAyB,SAAUC,CAAO,CAAEC,CAAI,CAAEC,CAAQ,EAO/D,GALKA,GAAY,AAAmB,YAAnB,OAAOF,IACvBE,EAAWF,EACXA,EAAU,MAGPN,EAAOS,SAAS,EAAIV,EAAOW,MAAM,CAAE,CAItCX,EAAOW,MAAM,CAACJ,EAASE,GACvB,MACD,CAM+D,UAA3D,OAAOV,EAASa,QAAQ,CAACC,6BAA6B,GAEzDN,AADAA,CAAAA,EAAUO,OAAOC,MAAM,CAAC,CAAC,EAAGR,GAAW,CAAC,EAAC,EACjCS,kBAAkB,CAAGF,OAAOC,MAAM,CAAC,CAAC,EAAGR,EAAQS,kBAAkB,EAAI,CAAC,GAC9ET,EAAQS,kBAAkB,CAACC,EAAE,CAAGlB,EAASa,QAAQ,CAACC,6BAA6B,EAGhF,IAAMK,EAAoCnB,EAASoB,KAAK,CAACC,gCAAgC,CAACX,EAAUD,GACpGR,EAAOqB,iBAAiB,CAACd,EAASW,EACnC,EAEM,CAAEI,gBAAAA,CAAAA,CAAiB,CAAGrB,CAC5BA,CAAAA,EAAOqB,eAAe,CAAG,SAAUf,CAAO,CAAEgB,CAAE,EAC7CrB,EAAoBoB,EAAiB,CAACf,EAAQ,CAAEgB,EAAIjB,EACrD"}