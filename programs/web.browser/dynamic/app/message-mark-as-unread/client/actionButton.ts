function module(e,t,i){let n,r,o,a,s,l,c,d,m;i.link("meteor/meteor",{Meteor(e){n=e}},0),i.link("../../../client/lib/rooms/roomCoordinator",{roomCoordinator(e){r=e}},1),i.link("../../../client/lib/toast",{dispatchToastMessage(e){o=e}},2),i.link("../../../client/lib/utils/messageArgs",{messageArgs(e){a=e}},3),i.link("../../../client/providers/RouterProvider",{router(e){s=e}},4),i.link("../../models/client",{ChatSubscription(e){l=e}},5),i.link("../../ui-utils/client",{LegacyRoomManager(e){c=e},MessageAction(e){d=e}},6),i.link("../../utils/client/lib/SDKClient",{sdk(e){m=e}},7),n.startup(()=>{d.addButton({id:"mark-message-as-unread",icon:"flag",label:"Mark_unread",context:["message","message-mobile","threads"],type:"interaction",async action(e,t){let{message:i=a(this).msg}=t;try{await m.call("unreadMessages",i);let e=l.findOne({rid:i.rid});if(null==e)return;return await c.close(e.t+e.name),s.navigate("/home")}catch(e){o({type:"error",message:e})}},condition(e){let{message:t,user:i,room:n}=e,o=r.isLivechatRoom(n.t);return!o&&!!i&&t.u._id!==i._id},order:4,group:"menu"})})}
//# sourceMappingURL=/dynamic/app/message-mark-as-unread/client/8b4897df40f1e95e391bb416a70836b5162cc54a.map
