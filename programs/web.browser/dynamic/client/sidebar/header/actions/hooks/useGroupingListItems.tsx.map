)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/sidebar/header/actions/hooks/useGroupingListItems.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { CheckBox } from '@rocket.chat/fuselage';\nimport { useEndpoint, useUserPreference, useTranslation } from '@rocket.chat/ui-contexts';\nimport React, { useCallback } from 'react';\n\nimport type { GenericMenuItemProps } from '../../../../components/GenericMenu/GenericMenuItem';\n\nexport const useGroupingListItems = (): GenericMenuItemProps[] => {\n\tconst t = useTranslation();\n\n\tconst sidebarGroupByType = useUserPreference<boolean>('sidebarGroupByType');\n\tconst sidebarShowFavorites = useUserPreference<boolean>('sidebarShowFavorites');\n\tconst sidebarShowUnread = useUserPreference<boolean>('sidebarShowUnread');\n\n\tconst saveUserPreferences = useEndpoint('POST', '/v1/users.setPreferences');\n\n\tconst useHandleChange = (key: 'sidebarGroupByType' | 'sidebarShowFavorites' | 'sidebarShowUnread', value: boolean): (() => void) =>\n\t\tuseCallback(() => saveUserPreferences({ data: { [key]: value } }), [key, value]);\n\n\tconst handleChangeGroupByType = useHandleChange('sidebarGroupByType', !sidebarGroupByType);\n\tconst handleChangeShoFavorite = useHandleChange('sidebarShowFavorites', !sidebarShowFavorites);\n\tconst handleChangeShowUnread = useHandleChange('sidebarShowUnread', !sidebarShowUnread);\n\n\treturn [\n\t\t{\n\t\t\tid: 'unread',\n\t\t\tcontent: t('Unread'),\n\t\t\ticon: 'flag',\n\t\t\taddon: <CheckBox onChange={handleChangeShowUnread} checked={sidebarShowUnread} />,\n\t\t},\n\t\t{\n\t\t\tid: 'favorites',\n\t\t\tcontent: t('Favorites'),\n\t\t\ticon: 'star',\n\t\t\taddon: <CheckBox onChange={handleChangeShoFavorite} checked={sidebarShowFavorites} />,\n\t\t},\n\t\t{\n\t\t\tid: 'types',\n\t\t\tcontent: t('Types'),\n\t\t\ticon: 'group-by-type',\n\t\t\taddon: <CheckBox onChange={handleChangeGroupByType} checked={sidebarGroupByType} />,\n\t\t},\n\t];\n};\n",null],"names":["CheckBox","useEndpoint","useUserPreference","useTranslation","React","useCallback","module","export","useGroupingListItems","default","t","sidebarGroupByType","sidebarShowFavorites","sidebarShowUnread","saveUserPreferences","useHandleChange","key","value","data","handleChangeGroupByType","handleChangeShoFavorite","handleChangeShowUnread","id","content","icon","addon","createElement","onChange","checked"],"mappings":"2BAAiDA,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAjDC,EAAOC,MAAE,CAAA,CAAAC,qBAAgB,IAAAA,CAAwB,GAAAF,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAN,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAM,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAL,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,kBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,QAAAA,CAAAG,QAAAA,CAAAA,EAAAL,EAAAA,CAAA,EAAAC,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAM1C,IAAMG,EAAuB,KACnC,IAAME,EAAIP,IAEJQ,EAAqBT,EAA2B,sBAChDU,EAAuBV,EAA2B,wBAClDW,EAAoBX,EAA2B,qBAE/CY,EAAsBb,EAAY,OAAQ,4BAE1Cc,EAAkB,CAACC,EAA0EC,IAClGZ,EAAY,IAAMS,EAAoB,CAAEI,KAAM,CAAE,CAACF,EAAG,CAAGC,CAAK,CAAE,GAAK,CAACD,EAAKC,EAAM,EAE1EE,EAA0BJ,EAAgB,qBAAsB,CAACJ,GACjES,EAA0BL,EAAgB,uBAAwB,CAACH,GACnES,EAAyBN,EAAgB,oBAAqB,CAACF,GAErE,MAAO,CACN,CACCS,GAAI,SACJC,QAASb,EAAE,UACXc,KAAM,OACNC,MAAOrB,EAAAsB,aAAA,CAAC1B,EAAQ,CAAC2B,SAAUN,EAAwBO,QAASf,CAAkB,IAE/E,CACCS,GAAI,YACJC,QAASb,EAAE,aACXc,KAAM,OACNC,MAAOrB,EAAAsB,aAAA,CAAC1B,EAAQ,CAAC2B,SAAUP,EAAyBQ,QAAShB,CAAqB,IAEnF,CACCU,GAAI,QACJC,QAASb,EAAE,SACXc,KAAM,gBACNC,MAAOrB,EAAAsB,aAAA,CAAC1B,EAAQ,CAAC2B,SAAUR,EAAyBS,QAASjB,CAAmB,IAEjF,AACF"}