)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/sidebar/header/actions/hooks/useSortModeItems.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { RadioButton } from '@rocket.chat/fuselage';\nimport { useEndpoint, useUserPreference, useTranslation } from '@rocket.chat/ui-contexts';\nimport React, { useCallback } from 'react';\n\nimport type { GenericMenuItemProps } from '../../../../components/GenericMenu/GenericMenuItem';\nimport {\n\tOmnichannelSortingDisclaimer,\n\tuseOmnichannelSortingDisclaimer,\n} from '../../../../components/Omnichannel/OmnichannelSortingDisclaimer';\n\nexport const useSortModeItems = (): GenericMenuItemProps[] => {\n\tconst t = useTranslation();\n\n\tconst saveUserPreferences = useEndpoint('POST', '/v1/users.setPreferences');\n\tconst sidebarSortBy = useUserPreference<'activity' | 'alphabetical'>('sidebarSortby', 'activity');\n\tconst isOmnichannelEnabled = useOmnichannelSortingDisclaimer();\n\n\tconst useHandleChange = (value: 'alphabetical' | 'activity'): (() => void) =>\n\t\tuseCallback(() => saveUserPreferences({ data: { sidebarSortby: value } }), [value]);\n\n\tconst setToAlphabetical = useHandleChange('alphabetical');\n\tconst setToActivity = useHandleChange('activity');\n\n\treturn [\n\t\t{\n\t\t\tid: 'activity',\n\t\t\tcontent: t('Activity'),\n\t\t\ticon: 'clock',\n\t\t\taddon: <RadioButton onChange={setToActivity} checked={sidebarSortBy === 'activity'} />,\n\t\t\tdescription: sidebarSortBy === 'activity' && isOmnichannelEnabled && <OmnichannelSortingDisclaimer />,\n\t\t},\n\t\t{\n\t\t\tid: 'name',\n\t\t\tcontent: t('Name'),\n\t\t\ticon: 'sort-az',\n\t\t\taddon: <RadioButton onChange={setToAlphabetical} checked={sidebarSortBy === 'alphabetical'} />,\n\t\t\tdescription: sidebarSortBy === 'alphabetical' && isOmnichannelEnabled && <OmnichannelSortingDisclaimer />,\n\t\t},\n\t];\n};\n",null],"names":["RadioButton","useEndpoint","useUserPreference","useTranslation","React","useCallback","OmnichannelSortingDisclaimer","useOmnichannelSortingDisclaimer","module","export","useSortModeItems","default","t","saveUserPreferences","sidebarSortBy","isOmnichannelEnabled","useHandleChange","value","data","sidebarSortby","setToAlphabetical","setToActivity","id","content","icon","addon","createElement","onChange","checked","description"],"mappings":"2BAAoDA,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAApDC,EAAOC,MAAE,CAAA,CAAAC,iBAAmB,IAAAA,CAAwB,GAAAF,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAR,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAQ,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAP,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,kBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,QAAAA,CAAAG,QAAAA,CAAAA,EAAAP,EAAAA,CAAA,EAAAC,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,kEAAAA,CAAAF,6BAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,gCAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAU7C,IAAMG,EAAmB,KAC/B,IAAME,EAAIT,IAEJU,EAAsBZ,EAAY,OAAQ,4BAC1Ca,EAAgBZ,EAA+C,gBAAiB,YAChFa,EAAuBR,IAEvBS,EAAmBC,GACxBZ,EAAY,IAAMQ,EAAoB,CAAEK,KAAM,CAAEC,cAAeF,CAAK,CAAE,GAAK,CAACA,EAAM,EAE7EG,EAAoBJ,EAAgB,gBACpCK,EAAgBL,EAAgB,YAEtC,MAAO,CACN,CACCM,GAAI,WACJC,QAASX,EAAE,YACXY,KAAM,QACNC,MAAOrB,EAAAsB,aAAA,CAAC1B,EAAW,CAAC2B,SAAUN,EAAeO,QAASd,AAAkB,aAAlBA,CAA6B,GACnFe,YAAaf,AAAkB,aAAlBA,GAAgCC,GAAwBX,EAAAsB,aAAA,CAACpB,EAA4B,OAEnG,CACCgB,GAAI,OACJC,QAASX,EAAE,QACXY,KAAM,UACNC,MAAOrB,EAAAsB,aAAA,CAAC1B,EAAW,CAAC2B,SAAUP,EAAmBQ,QAASd,AAAkB,iBAAlBA,CAAiC,GAC3Fe,YAAaf,AAAkB,iBAAlBA,GAAoCC,GAAwBX,EAAAsB,aAAA,CAACpB,EAA4B,OAEvG,AACF"}