)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/sidebar/header/actions/hooks/useViewModeItems.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { RadioButton, ToggleSwitch } from '@rocket.chat/fuselage';\nimport { useEndpoint, useUserPreference, useTranslation } from '@rocket.chat/ui-contexts';\nimport React, { useCallback } from 'react';\n\nimport type { GenericMenuItemProps } from '../../../../components/GenericMenu/GenericMenuItem';\n\nexport const useViewModeItems = (): GenericMenuItemProps[] => {\n\tconst t = useTranslation();\n\n\tconst saveUserPreferences = useEndpoint('POST', '/v1/users.setPreferences');\n\n\tconst useHandleChange = (value: 'medium' | 'extended' | 'condensed'): (() => void) =>\n\t\tuseCallback(() => saveUserPreferences({ data: { sidebarViewMode: value } }), [value]);\n\n\tconst sidebarViewMode = useUserPreference<'medium' | 'extended' | 'condensed'>('sidebarViewMode', 'extended');\n\tconst sidebarDisplayAvatar = useUserPreference('sidebarDisplayAvatar', false);\n\n\tconst setToExtended = useHandleChange('extended');\n\tconst setToMedium = useHandleChange('medium');\n\tconst setToCondensed = useHandleChange('condensed');\n\n\tconst handleChangeSidebarDisplayAvatar = useCallback(\n\t\t() => saveUserPreferences({ data: { sidebarDisplayAvatar: !sidebarDisplayAvatar } }),\n\t\t[saveUserPreferences, sidebarDisplayAvatar],\n\t);\n\n\treturn [\n\t\t{\n\t\t\tid: 'extended',\n\t\t\tcontent: t('Extended'),\n\t\t\ticon: 'extended-view',\n\t\t\taddon: <RadioButton onChange={setToExtended} checked={sidebarViewMode === 'extended'} />,\n\t\t},\n\t\t{\n\t\t\tid: 'medium',\n\t\t\tcontent: t('Medium'),\n\t\t\ticon: 'medium-view',\n\t\t\taddon: <RadioButton onChange={setToMedium} checked={sidebarViewMode === 'medium'} />,\n\t\t},\n\t\t{\n\t\t\tid: 'condensed',\n\t\t\tcontent: t('Condensed'),\n\t\t\ticon: 'condensed-view',\n\t\t\taddon: <RadioButton onChange={setToCondensed} checked={sidebarViewMode === 'condensed'} />,\n\t\t},\n\t\t{\n\t\t\tid: 'avatars',\n\t\t\tcontent: t('Avatars'),\n\t\t\ticon: 'user-rounded',\n\t\t\taddon: <ToggleSwitch onChange={handleChangeSidebarDisplayAvatar} checked={sidebarDisplayAvatar} />,\n\t\t},\n\t];\n};\n",null],"names":["RadioButton","ToggleSwitch","useEndpoint","useUserPreference","useTranslation","React","useCallback","module","export","useViewModeItems","default","t","saveUserPreferences","useHandleChange","value","data","sidebarViewMode","sidebarDisplayAvatar","setToExtended","setToMedium","setToCondensed","handleChangeSidebarDisplayAvatar","id","content","icon","addon","createElement","onChange","checked"],"mappings":"2BAA0CA,EAAwBC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAlEC,EAAOC,MAAE,CAAA,CAAAC,iBAAa,IAAcA,CAAM,GAAwBF,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAP,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,aAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAM,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAL,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,kBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,QAAAA,CAAAG,QAAAA,CAAAA,EAAAL,EAAAA,CAAA,EAAAC,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAM3D,IAAMG,EAAmB,KAC/B,IAAME,EAAIP,IAEJQ,EAAsBV,EAAY,OAAQ,4BAE1CW,EAAmBC,GACxBR,EAAY,IAAMM,EAAoB,CAAEG,KAAM,CAAEC,gBAAiBF,CAAK,CAAE,GAAK,CAACA,EAAM,EAE/EE,EAAkBb,EAAuD,kBAAmB,YAC5Fc,EAAuBd,EAAkB,uBAAwB,CAAA,GAEjEe,EAAgBL,EAAgB,YAChCM,EAAcN,EAAgB,UAC9BO,EAAiBP,EAAgB,aAEjCQ,EAAmCf,EACxC,IAAMM,EAAoB,CAAEG,KAAM,CAAEE,qBAAsB,CAACA,CAAoB,CAAE,GACjF,CAACL,EAAqBK,EAAqB,EAG5C,MAAO,CACN,CACCK,GAAI,WACJC,QAASZ,EAAE,YACXa,KAAM,gBACNC,MAAOpB,EAAAqB,aAAA,CAAC1B,EAAW,CAAC2B,SAAUT,EAAeU,QAASZ,AAAoB,aAApBA,CAA+B,IAEtF,CACCM,GAAI,SACJC,QAASZ,EAAE,UACXa,KAAM,cACNC,MAAOpB,EAAAqB,aAAA,CAAC1B,EAAW,CAAC2B,SAAUR,EAAaS,QAASZ,AAAoB,WAApBA,CAA6B,IAElF,CACCM,GAAI,YACJC,QAASZ,EAAE,aACXa,KAAM,iBACNC,MAAOpB,EAAAqB,aAAA,CAAC1B,EAAW,CAAC2B,SAAUP,EAAgBQ,QAASZ,AAAoB,cAApBA,CAAgC,IAExF,CACCM,GAAI,UACJC,QAASZ,EAAE,WACXa,KAAM,eACNC,MAAOpB,EAAAqB,aAAA,CAACzB,EAAY,CAAC0B,SAAUN,EAAkCO,QAASX,CAAqB,IAEhG,AACF"}