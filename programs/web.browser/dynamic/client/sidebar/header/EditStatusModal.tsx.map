)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/sidebar/header/EditStatusModal.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { Field, TextInput, FieldGroup, Modal, Button, Box, FieldLabel, FieldRow, FieldError, FieldHint } from '@rocket.chat/fuselage';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useToastMessageDispatch, useSetting, useTranslation, useEndpoint } from '@rocket.chat/ui-contexts';\nimport type { ReactElement, ChangeEvent, ComponentProps, FormEvent } from 'react';\nimport React, { useState, useCallback } from 'react';\n\nimport UserStatusMenu from '../../components/UserStatusMenu';\nimport { USER_STATUS_TEXT_MAX_LENGTH } from '../../lib/constants';\n\ntype EditStatusModalProps = {\n\tonClose: () => void;\n\tuserStatus: IUser['status'];\n\tuserStatusText: IUser['statusText'];\n};\n\nconst EditStatusModal = ({ onClose, userStatus, userStatusText }: EditStatusModalProps): ReactElement => {\n\tconst allowUserStatusMessageChange = useSetting('Accounts_AllowUserStatusMessageChange');\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst t = useTranslation();\n\tconst [statusText, setStatusText] = useState(userStatusText);\n\tconst [statusType, setStatusType] = useState(userStatus);\n\tconst [statusTextError, setStatusTextError] = useState<string | undefined>();\n\n\tconst setUserStatus = useEndpoint('POST', '/v1/users.setStatus');\n\n\tconst handleStatusText = useMutableCallback((e: ChangeEvent<HTMLInputElement>): void => {\n\t\tsetStatusText(e.currentTarget.value);\n\n\t\tif (statusText && statusText.length > USER_STATUS_TEXT_MAX_LENGTH) {\n\t\t\treturn setStatusTextError(t('Max_length_is', USER_STATUS_TEXT_MAX_LENGTH));\n\t\t}\n\n\t\treturn setStatusTextError(undefined);\n\t});\n\n\tconst handleStatusType = (type: IUser['status']): void => setStatusType(type);\n\n\tconst handleSaveStatus = useCallback(async () => {\n\t\ttry {\n\t\t\tawait setUserStatus({ message: statusText, status: statusType });\n\t\t\tdispatchToastMessage({ type: 'success', message: t('StatusMessage_Changed_Successfully') });\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\n\t\tonClose();\n\t}, [dispatchToastMessage, setUserStatus, statusText, statusType, onClose, t]);\n\n\treturn (\n\t\t<Modal\n\t\t\twrapperFunction={(props: ComponentProps<typeof Box>) => (\n\t\t\t\t<Box\n\t\t\t\t\tis='form'\n\t\t\t\t\tonSubmit={(e: FormEvent) => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\thandleSaveStatus();\n\t\t\t\t\t}}\n\t\t\t\t\t{...props}\n\t\t\t\t/>\n\t\t\t)}\n\t\t>\n\t\t\t<Modal.Header>\n\t\t\t\t<Modal.Icon name='info' />\n\t\t\t\t<Modal.Title>{t('Edit_Status')}</Modal.Title>\n\t\t\t\t<Modal.Close onClick={onClose} />\n\t\t\t</Modal.Header>\n\t\t\t<Modal.Content fontScale='p2'>\n\t\t\t\t<FieldGroup>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<FieldLabel>{t('StatusMessage')}</FieldLabel>\n\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\terror={statusTextError}\n\t\t\t\t\t\t\t\tdisabled={!allowUserStatusMessageChange}\n\t\t\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\t\t\tvalue={statusText}\n\t\t\t\t\t\t\t\tonChange={handleStatusText}\n\t\t\t\t\t\t\t\tplaceholder={t('StatusMessage_Placeholder')}\n\t\t\t\t\t\t\t\taddon={<UserStatusMenu margin='neg-x2' onChange={handleStatusType} initialStatus={statusType} />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t{!allowUserStatusMessageChange && <FieldHint>{t('StatusMessage_Change_Disabled')}</FieldHint>}\n\t\t\t\t\t\t<FieldError>{statusTextError}</FieldError>\n\t\t\t\t\t</Field>\n\t\t\t\t</FieldGroup>\n\t\t\t</Modal.Content>\n\t\t\t<Modal.Footer>\n\t\t\t\t<Modal.FooterControllers>\n\t\t\t\t\t<Button secondary onClick={onClose}>\n\t\t\t\t\t\t{t('Cancel')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button primary type='submit' disabled={!!statusTextError}>\n\t\t\t\t\t\t{t('Save')}\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.FooterControllers>\n\t\t\t</Modal.Footer>\n\t\t</Modal>\n\t);\n};\n\nexport default EditStatusModal;\n",null],"names":["_extends","Field","TextInput","FieldGroup","Modal","Button","Box","FieldLabel","FieldRow","FieldHint","useMutableCallback","useToastMessageDispatch","useSetting","useTranslation","useEndpoint","React","useState","useCallback","UserStatusMenu","USER_STATUS_TEXT_MAX_LENGTH","module","link","default","v","FieldError","exportDefault","_ref","onClose","userStatus","userStatusText","allowUserStatusMessageChange","dispatchToastMessage","t","statusText","setStatusText","statusType","setStatusType","statusTextError","setStatusTextError","setUserStatus","handleStatusText","e","currentTarget","value","length","undefined","handleSaveStatus","message","status","type","error","createElement","wrapperFunction","props","is","onSubmit","preventDefault","Header","Icon","name","Title","Close","onClick","Content","fontScale","disabled","flexGrow","onChange","placeholder","addon","margin","initialStatus","Footer","FooterControllers","secondary","primary"],"mappings":"2BACAA,EAAAC,EAASC,EAAOC,EAAWC,EAAUC,EAAOC,EAAEC,EAAaC,EAAAA,EAAoBC,EAAuDC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA7HC,EAAOC,IAAA,CAAS,iCAAgC,CAAEC,QAAAA,CAAAA,EAAUtB,EAAUuB,CAAA,CAAE,EAAA,GAAAH,EAAYC,IAAA,CAAA,wBAAiB,CAAApB,MAAAA,CAAuB,EAACA,EAAAA,CAAA,EAAAC,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,MAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,OAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,IAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAgB,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAf,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAW,EAAAA,IAAAA,CAAAA,8BAAAA,CAAAV,mBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAU,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAT,wBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAM,EAAAA,IAAAA,CAAAA,QAAAA,CAAAE,QAAAA,CAAAA,EAAAP,EAAAA,CAAA,EAAAC,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,kCAAAA,CAAAE,QAAAA,CAAAA,EAAAJ,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,sBAAAA,CAAAD,4BAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAtIC,EAAOK,aAAS,CAeQC,IAAgF,GAA/E,CAAEC,QAAAA,CAAO,CAAEC,WAAAA,CAAU,CAAEC,eAAAA,CAAAA,CAAsC,CAAAH,EAC/EI,EAA+BlB,EAAW,yCAC1CmB,EAAuBpB,IAEvBqB,EAAInB,IACJ,CAACoB,EAAYC,EAAc,CAAGlB,EAASa,GACvC,CAACM,EAAYC,EAAc,CAAGpB,EAASY,GACvC,CAACS,EAAiBC,EAAmB,CAAGtB,IAExCuB,EAAgBzB,EAAY,OAAQ,uBAEpC0B,EAAmB9B,EAAoB+B,GAG5C,CAFAP,EAAcO,EAAEC,aAAa,CAACC,KAAK,EAE/BV,GAAcA,EAAWW,MAAM,CAAGzB,GAC9BmB,EAAmBN,EAAE,gBAAiBb,IAGvCmB,EAAmBO,KAAAA,IAKrBC,EAAmB7B,EAAY,UACpC,GAAI,CACH,MAAMsB,EAAc,CAAEQ,QAASd,EAAYe,OAAQb,CAAU,GAC7DJ,EAAqB,CAAEkB,KAAM,UAAWF,QAASf,EAAE,qCAAqC,GACvF,MAAOkB,EAAO,CACfnB,EAAqB,CAAEkB,KAAM,QAASF,QAASG,CAAK,GAGrDvB,GACD,EAAG,CAACI,EAAsBQ,EAAeN,EAAYE,EAAYR,EAASK,EAAE,EAE5E,OACCjB,EAAAoC,aAAA,CAAC/C,EAAK,CACLgD,gBAAkBC,GACjBtC,EAAAoC,aAAA,CAAC7C,EAAGN,EAAA,CACHsD,GAAG,OACHC,SAAWd,IACVA,EAAEe,cAAc,GAChBV,GACD,CAAE,EACEO,GAEJ,EAEFtC,EAAAoC,aAAA,CAAC/C,EAAMqD,MAAM,CAAA,KACZ1C,EAAAoC,aAAA,CAAC/C,EAAMsD,IAAI,CAAA,CAACC,KAAK,MAAM,GACvB5C,EAAAoC,aAAA,CAAC/C,EAAMwD,KAAK,CAAA,KAAE5B,EAAE,gBAChBjB,EAAAoC,aAAA,CAAC/C,EAAMyD,KAAK,CAAA,CAACC,QAASnC,CAAQ,IAE/BZ,EAAAoC,aAAA,CAAC/C,EAAM2D,OAAO,CAAA,CAACC,UAAU,IAAI,EAC5BjD,EAAAoC,aAAA,CAAChD,EAAU,KACVY,EAAAoC,aAAA,CAAClD,EAAK,KACLc,EAAAoC,aAAA,CAAC5C,EAAU,KAAEyB,EAAE,kBACfjB,EAAAoC,aAAA,CAAC3C,EAAQ,KACRO,EAAAoC,aAAA,CAACjD,EAAS,CACTgD,MAAOb,EACP4B,SAAU,CAACnC,EACXoC,SAAU,EACVvB,MAAOV,EACPkC,SAAU3B,EACV4B,YAAapC,EAAE,6BACfqC,MAAOtD,EAAAoC,aAAA,CAACjC,EAAc,CAACoD,OAAO,SAASH,SA3CpBlB,GAAgCb,EAAca,GA2CEsB,cAAepC,CAAW,EAAI,IAGlG,CAACL,GAAgCf,EAAAoC,aAAA,CAAC1C,EAAS,KAAEuB,EAAE,kCAChDjB,EAAAoC,aAAA,CAAC3B,EAAU,KAAEa,MAIhBtB,EAAAoC,aAAA,CAAC/C,EAAMoE,MAAM,CAAA,KACZzD,EAAAoC,aAAA,CAAC/C,EAAMqE,iBAAiB,CAAA,KACvB1D,EAAAoC,aAAA,CAAC9C,EAAM,CAACqE,UAAS,CAAA,EAACZ,QAASnC,CAAQ,EACjCK,EAAE,WAEJjB,EAAAoC,aAAA,CAAC9C,EAAM,CAACsE,QAAO,CAAA,EAAC1B,KAAK,SAASgB,SAAU,CAAC,CAAC5B,CAAgB,EACxDL,EAAE,WAMT"}