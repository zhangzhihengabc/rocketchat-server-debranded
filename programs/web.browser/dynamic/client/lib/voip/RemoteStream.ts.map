)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/lib/voip/RemoteStream.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["/**\n * This class is used for local stream manipulation.\n * @remarks\n * This class wraps up browser media stream and HTMLMedia element\n * and takes care of rendering the media on a given element.\n * This provides enough abstraction so that the higher level\n * classes do not need to know about the browser specificities for\n * media.\n * This will also provide stream related functionalities such as\n * mixing of 2 streams in to 2, adding/removing tracks, getting a track information\n * detecting voice energy etc. Which will be implemented as when needed\n */\n\nimport Stream from './Stream';\n\nexport default class RemoteStream extends Stream {\n\tprivate renderingMediaElement: HTMLMediaElement | undefined;\n\n\tconstructor(mediaStream: MediaStream) {\n\t\tsuper(mediaStream);\n\t}\n\n\t/**\n\t * Called for initializing the class\n\t * @remarks\n\t */\n\n\tinit(rmElement: HTMLMediaElement): void {\n\t\tif (this.renderingMediaElement) {\n\t\t\t// Someone already has setup the stream and initializing it once again\n\t\t\t// Clear the existing stream object\n\t\t\tthis.renderingMediaElement.pause();\n\t\t\tthis.renderingMediaElement.srcObject = null;\n\t\t}\n\t\tthis.renderingMediaElement = rmElement;\n\t}\n\n\t/**\n\t * Called for playing the stream\n\t * @remarks\n\t * Plays the stream on media element. Stream will be autoplayed and muted based on the settings.\n\t * throws and error if the play fails.\n\t */\n\n\tplay(autoPlay = true, muteAudio = false): void {\n\t\tif (this.renderingMediaElement && this.mediaStream) {\n\t\t\tthis.renderingMediaElement.autoplay = autoPlay;\n\t\t\tthis.renderingMediaElement.srcObject = this.mediaStream;\n\t\t\tif (autoPlay) {\n\t\t\t\tthis.renderingMediaElement.play().catch((error: Error) => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (muteAudio) {\n\t\t\t\tthis.renderingMediaElement.volume = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Called for pausing the stream\n\t * @remarks\n\t */\n\tpause(): void {\n\t\tthis.renderingMediaElement?.pause();\n\t}\n\n\tclear(): void {\n\t\tsuper.clear();\n\t\tif (this.renderingMediaElement) {\n\t\t\tthis.renderingMediaElement.pause();\n\t\t\tthis.renderingMediaElement.srcObject = null;\n\t\t}\n\t}\n}\n",null],"names":["Stream","module","default","RemoteStream","constructor","mediaStream","renderingMediaElement","init","rmElement","pause","srcObject","play","autoPlay","arguments","length","undefined","muteAudio","autoplay","catch","error","volume","_this$renderingMediaE","clear"],"mappings":"2BAAAA,EAAAC,EAAAA,MAAAA,CAAAA,CAAAC,QAAAA,IAAAA,CAAA,GAAAD,EAAAA,IAAAA,CAAAA,WAAAA,CAAAC,QAAAA,CAAAA,EAAAF,EAAAA,CAAA,CAAA,EAAA,EAec,OAAOG,UAAqBH,EAGzCI,YAAYC,CAAwB,CAAA,CACnC,KAAK,CAACA,GAAa,IAAA,CAHZC,qBAAqB,CAAA,KAAA,CAI7B,CAOAC,KAAKC,CAA2B,CAAA,CAC3B,IAAI,CAACF,qBAAqB,GAG7B,IAAI,CAACA,qBAAqB,CAACG,KAAK,GAChC,IAAI,CAACH,qBAAqB,CAACI,SAAS,CAAG,MAExC,IAAI,CAACJ,qBAAqB,CAAGE,CAC9B,CASAG,MAAuC,CAAA,IAAlCC,EAAQC,CAAAA,CAAAA,UAAAC,MAAA,CAAA,CAAA,GAAAD,AAAAE,KAAAA,IAAAF,SAAA,CAAA,EAAA,EAAAA,SAAA,CAAA,EAAA,CAASG,EAASH,UAAAC,MAAA,CAAA,GAAAD,AAAAE,KAAAA,IAAAF,SAAA,CAAA,EAAA,EAAAA,SAAA,CAAA,EAAA,AAC1B,CAAA,IAAI,CAACP,qBAAqB,EAAI,IAAI,CAACD,WAAW,GACjD,IAAI,CAACC,qBAAqB,CAACW,QAAQ,CAAGL,EACtC,IAAI,CAACN,qBAAqB,CAACI,SAAS,CAAG,IAAI,CAACL,WAAW,CACnDO,GACH,IAAI,CAACN,qBAAqB,CAACK,IAAI,GAAGO,KAAK,CAAEC,IACxC,MAAMA,CACP,GAEGH,GACH,CAAA,IAAI,CAACV,qBAAqB,CAACc,MAAM,CAAG,CAAA,EAGvC,CAMAX,OAAK,CAAA,IAAAY,CACJ,AAA0B,QAA1BA,CAAAA,EAAA,IAAI,CAACf,qBAAqB,AAArBA,GAAqBe,AAAA,KAAA,IAAAA,GAA1BA,EAA4BZ,KAAK,EAClC,CAEAa,OAAK,CACJ,KAAK,CAACA,QACF,IAAI,CAAChB,qBAAqB,GAC7B,IAAI,CAACA,qBAAqB,CAACG,KAAK,GAChC,IAAI,CAACH,qBAAqB,CAACI,SAAS,CAAG,KAEzC"}