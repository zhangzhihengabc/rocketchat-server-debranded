)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/lib/voip/Stream.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["/**\n * This class is used for stream manipulation.\n * @remarks\n * This class wraps up browser media stream and HTMLMedia element\n * and takes care of rendering the media on a given element.\n * This provides enough abstraction so that the higher level\n * classes do not need to know about the browser specificities for\n * media.\n * This will also provide stream related functionalities such as\n * mixing of 2 streams in to 2, adding/removing tracks, getting a track information\n * detecting voice energy etc. Which will be implemented as when needed\n */\nexport default class Stream {\n\tprotected mediaStream: MediaStream | undefined;\n\n\tconstructor(mediaStream: MediaStream) {\n\t\tthis.mediaStream = mediaStream;\n\t}\n\t/**\n\t * Called for stopping the tracks in a given stream.\n\t * @remarks\n\t * All the tracks from a given stream will be stopped.\n\t */\n\n\tprivate stopTracks(): void {\n\t\tconst tracks = this.mediaStream?.getTracks();\n\t\tif (tracks) {\n\t\t\tfor (let i = 0; i < tracks?.length; i++) {\n\t\t\t\ttracks[i].stop();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Called for setting the callback when the track gets added\n\t * @remarks\n\t */\n\n\tonTrackAdded(callBack: any): void {\n\t\tthis.mediaStream?.onaddtrack?.(callBack);\n\t}\n\n\t/**\n\t * Called for setting the callback when the track gets removed\n\t * @remarks\n\t */\n\n\tonTrackRemoved(callBack: any): void {\n\t\tthis.mediaStream?.onremovetrack?.(callBack);\n\t}\n\n\t/**\n\t * Called for clearing the streams and media element.\n\t * @remarks\n\t * This function stops the media element play, clears the srcObject\n\t * stops all the tracks in the stream and sets media stream to undefined.\n\t * This function ususally gets called when call ends or to clear the previous stream\n\t * when the stream is switched to another stream.\n\t */\n\n\tclear(): void {\n\t\tif (this.mediaStream) {\n\t\t\tthis.stopTracks();\n\t\t\tthis.mediaStream = undefined;\n\t\t}\n\t}\n}\n",null],"names":["module","default","Stream","constructor","mediaStream","stopTracks","_this$mediaStream","tracks","getTracks","i","length","stop","onTrackAdded","callBack","_this$mediaStream2","_this$mediaStream2$on","onaddtrack","call","onTrackRemoved","_this$mediaStream3","_this$mediaStream3$on","onremovetrack","clear","undefined"],"mappings":"uBAAAA,EAAAA,MAAAA,CAAAA,CAAAC,QAAAA,IAAAA,CAAA,EAYc,OAAOC,EAGpBC,YAAYC,CAAwB,CAAA,CAAA,IAAA,CAF1BA,WAAW,CAAA,KAAA,EAGpB,IAAI,CAACA,WAAW,CAAGA,CACpB,CAOQC,YAAU,CAAA,IAAAC,EACjB,IAAMC,EAAM,AAAmB,OAAnBD,CAAAA,EAAG,IAAI,CAACF,WAAW,AAAXA,GAAWE,AAAA,KAAA,IAAAA,EAAA,KAAA,EAAhBA,EAAkBE,SAAS,GAC1C,GAAID,EACH,IAAK,IAAIE,EAAI,EAAGA,EAAIF,CAAAA,MAAAA,EAAM,KAAA,EAANA,EAAQG,MAAM,AAANA,EAAQD,IACnCF,CAAM,CAACE,EAAE,CAACE,IAAI,EAGjB,CAOAC,aAAaC,CAAa,CAAA,CAAA,IAAAC,EAAAC,CACzB,AAAgB,QAAhBD,CAAAA,EAAA,IAAI,CAACV,WAAW,AAAXA,GAAWU,AAAA,KAAA,IAAAA,GAAA,AAAY,OAAZC,CAAAA,EAAhBD,EAAkBE,UAAU,AAAVA,GAAUD,AAAA,KAAA,IAAAA,GAA5BA,EAAAE,IAAA,CAAAH,EAA+BD,EAChC,CAOAK,eAAeL,CAAa,CAAA,CAAA,IAAAM,EAAAC,CAC3B,AAAgB,QAAhBD,CAAAA,EAAA,IAAI,CAACf,WAAW,AAAXA,GAAWe,AAAA,KAAA,IAAAA,GAAA,AAAe,OAAfC,CAAAA,EAAhBD,EAAkBE,aAAa,AAAbA,GAAaD,AAAA,KAAA,IAAAA,GAA/BA,EAAAH,IAAA,CAAAE,EAAkCN,EACnC,CAWAS,OAAK,CACA,IAAI,CAAClB,WAAW,GACnB,IAAI,CAACC,UAAU,GACf,IAAI,CAACD,WAAW,CAAGmB,KAAAA,EAErB"}