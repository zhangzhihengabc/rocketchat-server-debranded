function module(e,t,i){let s,n,o,r,a,h,l,c,d,u,g,m,E,R,S,p;i.export({VoIPUser:()=>v}),i.link("@rocket.chat/core-typings",{Operation(e){s=e},UserState(e){n=e},WorkflowTypes(e){o=e}},0),i.link("@rocket.chat/emitter",{Emitter(e){r=e}},1),i.link("sip.js",{UserAgent(e){a=e},Invitation(e){h=e},SessionState(e){l=e},Registerer(e){c=e},RequestPendingError(e){d=e},Inviter(e){u=e}},2),i.link("sip.js/lib/core",{URI(e){g=e}},3),i.link("sip.js/lib/platform/web",{SessionDescriptionHandler(e){m=e}},4),i.link("./Helper",{toggleMediaStreamTracks(e){E=e}},5),i.link("./LocalStream",{default(e){R=e}},6),i.link("./QueueAggregator",{QueueAggregator(e){S=e}},7),i.link("./RemoteStream",{default(e){p=e}},8);class v extends r{get operationInProgress(){return this._opInProgress}get userState(){return this._userState}constructor(e,t){super(),this.config=void 0,this.state={isReady:!1,enableVideo:!1},this.remoteStream=void 0,this.userAgentOptions={},this.userAgent=void 0,this.registerer=void 0,this.mediaStreamRendered=void 0,this._connectionState="INITIAL",this._held=!1,this.mode=void 0,this.queueInfo=void 0,this.connectionRetryCount=void 0,this.stop=void 0,this.networkEmitter=void 0,this.offlineNetworkHandler=void 0,this.onlineNetworkHandler=void 0,this.optionsKeepaliveInterval=5,this.optionsKeepAliveDebounceTimeInSec=5,this.attemptRegistration=!1,this.session=void 0,this._callState="INITIAL",this._callerInfo=void 0,this._userState=n.IDLE,this._opInProgress=s.OP_NONE,this.config=e,this.mediaStreamRendered=t,this.networkEmitter=new r,this.connectionRetryCount=this.config.connectionRetryCount,this.stop=!1,this.onlineNetworkHandler=this.onNetworkRestored.bind(this),this.offlineNetworkHandler=this.onNetworkLost.bind(this)}async init(){let e="sip:".concat(this.config.authUserName,"@").concat(this.config.sipRegistrarHostnameOrIP),t={server:this.config.webSocketURI,connectionTimeout:100,keepAliveInterval:20},i={iceGatheringTimeout:10,peerConnectionConfiguration:{iceServers:this.config.iceServers}};this.userAgentOptions={delegate:{onInvite:async e=>{await this.handleIncomingCall(e)}},authorizationPassword:this.config.authPassword,authorizationUsername:this.config.authUserName,uri:a.makeURI(e),transportOptions:t,sessionDescriptionHandlerFactoryOptions:i,logConfiguration:!1,logLevel:"error"},this.userAgent=new a(this.userAgentOptions),this.userAgent.transport.isConnected(),this._opInProgress=s.OP_CONNECT;try{this.registerer=new c(this.userAgent),this.userAgent.transport.onConnect=this.onConnected.bind(this),this.userAgent.transport.onDisconnect=this.onDisconnected.bind(this),window.addEventListener("online",this.onlineNetworkHandler),window.addEventListener("offline",this.offlineNetworkHandler),await this.userAgent.start(),this.config.enableKeepAliveUsingOptionsForUnstableNetworks&&this.startOptionsPingForUnstableNetworks()}catch(e){throw this._connectionState="ERROR",e}}async onConnected(){this._connectionState="SERVER_CONNECTED",this.state.isReady=!0,this.sendOptions(),this.networkEmitter.emit("connected"),this.registerer&&"INITIAL"!==this.callState&&(this.attemptRegistration=!0)}onDisconnected(e){this._connectionState="SERVER_DISCONNECTED",this._opInProgress=s.OP_NONE,this.networkEmitter.emit("disconnected"),e&&(this.networkEmitter.emit("connectionerror",e),this.state.isReady=!1,this.attemptReconnection(0,!1))}onNetworkRestored(){this.networkEmitter.emit("localnetworkonline"),"WAITING_FOR_NETWORK"===this._connectionState&&(this.attemptReconnection(),this.registerer&&"INITIAL"!==this.callState&&(this.attemptRegistration=!0))}onNetworkLost(){this.networkEmitter.emit("localnetworkoffline"),this._connectionState="WAITING_FOR_NETWORK"}get userConfig(){return this.config}get callState(){return this._callState}get connectionState(){return this._connectionState}get callerInfo(){if("IN_CALL"===this.callState||"OFFER_RECEIVED"===this.callState||"ON_HOLD"===this.callState||"OFFER_SENT"===this.callState){if(!this._callerInfo)throw Error("[VoIPUser callerInfo] invalid state");return{state:this.callState,caller:this._callerInfo,userState:this._userState}}return{state:this.callState,userState:this._userState}}get localMediaStream(){var e;let t=null===(e=this.session)||void 0===e?void 0:e.sessionDescriptionHandler;if(t){if(!(t instanceof m))throw Error("Session description handler not instance of web SessionDescriptionHandler");return t.localMediaStream}}onRegistrationRequestAccept(){this._opInProgress===s.OP_REGISTER&&(this._callState="REGISTERED",this.emit("registered"),this.emit("stateChanged")),this._opInProgress===s.OP_UNREGISTER&&(this._callState="UNREGISTERED",this.emit("unregistered"),this.emit("stateChanged"))}onRegistrationRequestReject(e){this._opInProgress===s.OP_REGISTER&&this.emit("registrationerror",e),this._opInProgress===s.OP_UNREGISTER&&this.emit("unregistrationerror",e)}async handleIncomingCall(e){if("REGISTERED"===this.callState){this._opInProgress=s.OP_PROCESS_INVITE,this._callState="OFFER_RECEIVED",this._userState=n.UAS,this.session=e,this.setupSessionEventHandlers(e);let t={callerId:e.remoteIdentity.uri.user?e.remoteIdentity.uri.user:"",callerName:e.remoteIdentity.displayName,host:e.remoteIdentity.uri.host};this._callerInfo=t,this.emit("incomingcall",t),this.emit("stateChanged");return}await e.reject()}setupSessionEventHandlers(e){var t;null===(t=this.session)||void 0===t||t.stateChange.addListener(t=>{var i;if(this.session===e)switch(t){case l.Initial:break;case l.Establishing:this.emit("ringing",{userState:this._userState,callInfo:this._callerInfo});break;case l.Established:this._userState===n.UAC&&(this._callState="ANSWER_RECEIVED"),this._opInProgress=s.OP_NONE,this.setupRemoteMedia(),this._callState="IN_CALL",this.emit("callestablished",{userState:this._userState,callInfo:this._callerInfo}),this.emit("stateChanged");break;case l.Terminating:case l.Terminated:this.session=void 0,this._callState="REGISTERED",this._opInProgress=s.OP_NONE,this._userState=n.IDLE,this.emit("callterminated"),null===(i=this.remoteStream)||void 0===i||i.clear(),this.emit("stateChanged");break;default:throw Error("Unknown session state.")}})}onTrackAdded(e){console.log("onTrackAdded")}onTrackRemoved(e){console.log("onTrackRemoved")}setupRemoteMedia(){var e,t;if(!this.session)throw Error("Session does not exist.");let i=null===(e=this.session)||void 0===e?void 0:e.sessionDescriptionHandler;if(!i)return;if(!(i instanceof m))throw Error("Session description handler not instance of web SessionDescriptionHandler");let s=i.remoteMediaStream;if(!s)throw Error("Remote media stream is undefined.");this.remoteStream=new p(s);let n=null===(t=this.mediaStreamRendered)||void 0===t?void 0:t.remoteMediaElement;n&&(this.remoteStream.init(n),this.remoteStream.onTrackAdded(this.onTrackAdded.bind(this)),this.remoteStream.onTrackRemoved(this.onTrackRemoved.bind(this)),this.remoteStream.play())}async handleMuteUnmute(e){var t,i;let{session:s}=this;if(this._held===e)return Promise.resolve();if(!s)throw Error("Session not found");let n=null===(t=this.session)||void 0===t?void 0:t.sessionDescriptionHandler;if(!(n instanceof m))throw Error("Session's session description handler not instance of SessionDescriptionHandler.");let{peerConnection:o}=n;if(!o)throw Error("Peer connection closed.");return null===(i=this.session)||void 0===i?void 0:i.invite({requestDelegate:{onAccept:()=>{this._held=e,E(!this._held,s,"receiver"),E(!this._held,s,"sender")},onReject:()=>{this.emit("muteerror")}}}).then(()=>{E(!this._held,s,"receiver"),E(!this._held,s,"sender")}).catch(e=>{if(e instanceof d){var t;console.error("[".concat(null===(t=this.session)||void 0===t?void 0:t.id,"] A mute request is already in progress."))}throw this.emit("muteerror"),e})}async handleHoldUnhold(e){var t,i;let{session:s}=this;if(this._held===e)return Promise.resolve();if(!s)throw Error("Session not found");let n=null===(t=this.session)||void 0===t?void 0:t.sessionDescriptionHandler;if(!(n instanceof m))throw Error("Session's session description handler not instance of SessionDescriptionHandler.");let o=s.sessionDescriptionHandlerOptionsReInvite;o.hold=e,s.sessionDescriptionHandlerOptionsReInvite=o;let{peerConnection:r}=n;if(!r)throw Error("Peer connection closed.");return null===(i=this.session)||void 0===i?void 0:i.invite({requestDelegate:{onAccept:()=>{this._held=e,this._callState=e?"ON_HOLD":"IN_CALL",E(!this._held,s,"receiver"),E(!this._held,s,"sender"),"ON_HOLD"===this._callState?this.emit("hold"):this.emit("unhold"),this.emit("stateChanged")},onReject:()=>{E(!this._held,s,"receiver"),E(!this._held,s,"sender"),this.emit("holderror")}}}).then(()=>{E(!this._held,s,"receiver"),E(!this._held,s,"sender")}).catch(e=>{if(e instanceof d){var t;console.error("[".concat(null===(t=this.session)||void 0===t?void 0:t.id,"] A hold request is already in progress."))}throw this.emit("holderror"),e})}static async create(e,t){let i=new v(e,t);return await i.init(),i}sendOptions(e){var t,i;let s=new g("sip",this.config.authUserName,this.config.sipRegistrarHostnameOrIP),n=null===(t=this.userAgent)||void 0===t?void 0:t.userAgentCore.makeOutgoingRequestMessage("OPTIONS",s,s,s,{});n&&(null===(i=this.userAgent)||void 0===i||i.userAgentCore.request(n,e))}register(){var e;this._opInProgress=s.OP_REGISTER,null===(e=this.registerer)||void 0===e||e.register({requestDelegate:{onAccept:this.onRegistrationRequestAccept.bind(this),onReject:this.onRegistrationRequestReject.bind(this)}})}unregister(){var e;this._opInProgress=s.OP_UNREGISTER,null===(e=this.registerer)||void 0===e||e.unregister({all:!0,requestDelegate:{onAccept:this.onRegistrationRequestAccept.bind(this),onReject:this.onRegistrationRequestReject.bind(this)}})}async acceptCall(e){if(e&&(this.mediaStreamRendered=e),"OFFER_RECEIVED"===this._callState&&this._opInProgress===s.OP_PROCESS_INVITE){if(this._callState="ANSWER_SENT",!(this.session instanceof h))throw Error("Session not instance of Invitation.");let e=!!this.config.enableVideo,{body:t}=this.session;t&&-1===t.indexOf("m=video")&&(e=!1);let i={sessionDescriptionHandlerOptions:{constraints:{audio:!0,video:!!this.config.enableVideo&&e}}};return this.session.accept(i)}throw Error("Something went wrong")}canRejectCall(){return["OFFER_RECEIVED","OFFER_SENT"].includes(this._callState)}canEndOrHoldCall(){return["ANSWER_SENT","ANSWER_RECEIVED","IN_CALL","ON_HOLD","OFFER_SENT"].includes(this._callState)}rejectCall(){if(!this.session)throw Error("Session does not exist.");if(!this.canRejectCall())throw Error("Incorrect call State = ".concat(this.callState));if(!(this.session instanceof h))throw Error("Session not instance of Invitation.");return this.session.reject()}async endCall(){if(!this.session)throw Error("Session does not exist.");if(!this.canEndOrHoldCall())throw Error("Incorrect call State = ".concat(this.callState));switch(this.emit("stateChanged"),this.session.state){case l.Initial:if(this.session instanceof h)return this.session.reject();throw Error("Session not instance of Invitation.");case l.Establishing:if(this.session instanceof h)return this.session.reject();if(this.session instanceof u)return this.session.cancel();throw Error("Session not instance of Invitation.");case l.Established:return this.session.bye();case l.Terminating:case l.Terminated:break;default:throw Error("Unknown state")}}async muteCall(e){if(!this.session)throw Error("Session does not exist.");if("IN_CALL"!==this._callState)throw Error("Incorrect call State = ".concat(this.callState));this.handleMuteUnmute(e)}async holdCall(e){if(!this.session)throw Error("Session does not exist.");if(!this.canEndOrHoldCall())throw Error("Incorrect call State = ".concat(this.callState));this.handleHoldUnhold(e)}isReady(){return this.state.isReady}switchMediaRenderer(e){this.remoteStream&&(this.mediaStreamRendered=e,this.remoteStream.init(e.remoteMediaElement),this.remoteStream.onTrackAdded(this.onTrackAdded.bind(this)),this.remoteStream.onTrackRemoved(this.onTrackRemoved.bind(this)),this.remoteStream.play())}setWorkflowMode(e){this.mode=e,e===o.CONTACT_CENTER_USER&&(this.queueInfo=new S)}setMembershipSubscription(e){var t;this.mode===o.CONTACT_CENTER_USER&&(null===(t=this.queueInfo)||void 0===t||t.setMembership(e))}getAggregator(){return this.queueInfo}getRegistrarState(){var e;return null===(e=this.registerer)||void 0===e?void 0:e.state.toString().toLocaleLowerCase()}clear(){var e,t;this._opInProgress=s.OP_CLEANUP,this.stop=!0,null===(e=this.userAgent)||void 0===e||e.stop(),null===(t=this.registerer)||void 0===t||t.dispose(),this._connectionState="STOP",this.userAgent&&(this.userAgent.transport.onConnect=void 0,this.userAgent.transport.onDisconnect=void 0,window.removeEventListener("online",this.onlineNetworkHandler),window.removeEventListener("offline",this.offlineNetworkHandler))}onNetworkEvent(e,t){this.networkEmitter.on(e,t)}offNetworkEvent(e,t){this.networkEmitter.off(e,t)}async attemptReconnection(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],i=this.connectionRetryCount;if(this._connectionState="SERVER_RECONNECTING",!this.userAgent||this.stop)return;if(-1!==i&&e>i){this._connectionState="ERROR";return}let s=Math.pow(2,e%4);console.error("Attempting to reconnect with backoff due to network loss. Backoff time [".concat(s,"]")),setTimeout(()=>{var i;this.stop||"SERVER_CONNECTED"===this._connectionState||null===(i=this.userAgent)||void 0===i||i.reconnect().then(()=>{this._connectionState="SERVER_CONNECTED"}).catch(()=>{this.attemptReconnection(++e,t)})},1e3*s)}async attemptPostRecoveryRoutine(){this.sendOptions({onAccept:()=>{this.attemptPostRecoveryRegistrationRoutine()},onReject:e=>{console.error("[".concat(e,"] Failed to do options in attemptPostRecoveryRoutine()"))}})}async sendKeepAliveAndWaitForResponse(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=new Promise((t,i)=>{let s=!1,n=this.optionsKeepaliveInterval/2;e&&(n+=this.optionsKeepAliveDebounceTimeInSec),this.sendOptions({onAccept:()=>{s=!0},onReject:e=>{console.error("Failed to do options.")}}),setTimeout(async()=>{s?(this.attemptRegistration&&(this.attemptPostRecoveryRoutine(),this.attemptRegistration=!1),t(!0)):i(!1)},1e3*n)});return t}async startOptionsPingForUnstableNetworks(){setTimeout(async()=>{if(this.userAgent&&!this.stop){if("SERVER_RECONNECTING"!==this._connectionState){let e=!1;try{await this.sendKeepAliveAndWaitForResponse(),e=!0}catch(e){console.error("[".concat(e,"] Failed to do options ping."))}finally{e||this.networkEmitter.emit("disconnected"),e&&this.networkEmitter.emit("connected")}}this.startOptionsPingForUnstableNetworks()}},1e3*this.optionsKeepaliveInterval)}async attemptPostRecoveryRegistrationRoutine(){var e;let t=new Promise((e,t)=>{var i;null===(i=this.registerer)||void 0===i||i.unregister({all:!0,requestDelegate:{onAccept:()=>{e()},onReject:e=>{console.error("[".concat(e,"] While unregistering after recovery")),this.emit("unregistrationerror",e),t("Error in Unregistering")}}})});try{await t}catch(e){console.error("[".concat(e,"] While waiting for unregister promise"))}null===(e=this.registerer)||void 0===e||e.register({requestDelegate:{onReject:e=>{this._callState="UNREGISTERED",this.emit("registrationerror",e),this.emit("stateChanged")}}})}async changeAudioInputDevice(e){var t;if(!this.session)return console.warn("changeAudioInputDevice() : No session. Returning"),!1;let i=await R.requestNewStream(e,this.session);if(!i)return console.warn("changeAudioInputDevice() : Unable to get local stream. Returning"),!1;let{peerConnection:s}=null===(t=this.session)||void 0===t?void 0:t.sessionDescriptionHandler;return s?(R.replaceTrack(s,i,"audio"),!0):(console.warn("changeAudioInputDevice() : No peer connection. Returning"),!1)}async makeCallURI(e,t){throw Error("Not implemented")}async makeCall(e){throw Error("Not implemented")}}}
//# sourceMappingURL=/dynamic/client/lib/voip/3310394cf4c594d13499f9048c4055c74b594f50.map
