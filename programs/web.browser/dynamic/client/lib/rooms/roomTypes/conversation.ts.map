)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/lib/rooms/roomTypes/conversation.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { getUserPreference } from '../../../../app/utils/client';\nimport { getConversationRoomType } from '../../../../lib/rooms/roomTypes/conversation';\nimport { roomCoordinator } from '../roomCoordinator';\n\nexport const ConversationRoomType = getConversationRoomType(roomCoordinator);\n\nroomCoordinator.add(\n\t{\n\t\t...ConversationRoomType,\n\t\tlabel: 'Conversations',\n\t},\n\t{\n\t\tcondition(): boolean {\n\t\t\t// returns true only if sidebarGroupByType is not set\n\t\t\treturn !getUserPreference(Meteor.userId(), 'sidebarGroupByType');\n\t\t},\n\t},\n);\n",null],"names":["_objectSpread","Meteor","getUserPreference","getConversationRoomType","roomCoordinator","module","link","default","export","ConversationRoomType","add","label","condition","userId"],"mappings":"2BAAAA,EAAuCC,EAAAC,EAAAC,EAAAC,EAAtBC,EAAMC,IAAA,CAAA,uCAAgB,CAAAC,QAAAA,CAAAA,EAAAP,EAAAA,CAAA,CAAA,EAAA,GAAvCK,EAAOG,MAAE,CAAA,CAAMC,qBAAQ,IAAgBA,CAAA,GAAAJ,EAAAA,IAAAA,CAAAA,gBAAAA,CAAAJ,OAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,+BAAAA,CAAAH,kBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,+CAAAA,CAAAF,wBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,qBAAAA,CAAAD,gBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAMhC,IAAMK,EAAuBN,EAAwBC,GAE5DA,EAAgBM,GAAG,CAAAV,EAAAA,EAAA,CAAA,EAEdS,GAAoB,CAAA,EAAA,CACvBE,MAAO,eAAe,GAEvB,CACCC,UAAAA,IAEQ,CAACV,EAAkBD,EAAOY,MAAM,GAAI"}