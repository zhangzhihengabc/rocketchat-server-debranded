)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/lib/rooms/roomTypes/direct.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { AtLeast, IRoom, ISubscription, IUser } from '@rocket.chat/core-typings';\nimport { isRoomFederated } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport type { Mongo } from 'meteor/mongo';\n\nimport { hasAtLeastOnePermission } from '../../../../app/authorization/client';\nimport { Subscriptions, Users, ChatRoom } from '../../../../app/models/client';\nimport { settings } from '../../../../app/settings/client';\nimport { getUserPreference } from '../../../../app/utils/client';\nimport { getAvatarURL } from '../../../../app/utils/client/getAvatarURL';\nimport { getUserAvatarURL } from '../../../../app/utils/client/getUserAvatarURL';\nimport type { IRoomTypeClientDirectives } from '../../../../definition/IRoomTypeConfig';\nimport { RoomSettingsEnum, RoomMemberActions, UiTextContext } from '../../../../definition/IRoomTypeConfig';\nimport { getDirectMessageRoomType } from '../../../../lib/rooms/roomTypes/direct';\nimport * as Federation from '../../federation/Federation';\nimport { roomCoordinator } from '../roomCoordinator';\n\nexport const DirectMessageRoomType = getDirectMessageRoomType(roomCoordinator);\n\nroomCoordinator.add(\n\t{\n\t\t...DirectMessageRoomType,\n\t\tlabel: 'Direct_Messages',\n\t},\n\t{\n\t\tallowRoomSettingChange(_room, setting) {\n\t\t\tif (isRoomFederated(_room as IRoom)) {\n\t\t\t\treturn Federation.isRoomSettingAllowed(_room, setting);\n\t\t\t}\n\t\t\tswitch (setting) {\n\t\t\t\tcase RoomSettingsEnum.TYPE:\n\t\t\t\tcase RoomSettingsEnum.NAME:\n\t\t\t\tcase RoomSettingsEnum.SYSTEM_MESSAGES:\n\t\t\t\tcase RoomSettingsEnum.DESCRIPTION:\n\t\t\t\tcase RoomSettingsEnum.READ_ONLY:\n\t\t\t\tcase RoomSettingsEnum.REACT_WHEN_READ_ONLY:\n\t\t\t\tcase RoomSettingsEnum.ARCHIVE_OR_UNARCHIVE:\n\t\t\t\tcase RoomSettingsEnum.JOIN_CODE:\n\t\t\t\t\treturn false;\n\t\t\t\tcase RoomSettingsEnum.E2E:\n\t\t\t\t\treturn settings.get('E2E_Enable') === true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\n\t\tallowMemberAction(room, action, showingUserId, userSubscription) {\n\t\t\tif (isRoomFederated(room as IRoom)) {\n\t\t\t\treturn Federation.actionAllowed(room, action, showingUserId, userSubscription);\n\t\t\t}\n\t\t\tswitch (action) {\n\t\t\t\tcase RoomMemberActions.BLOCK:\n\t\t\t\t\treturn !this.isGroupChat(room);\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\n\t\troomName(roomData) {\n\t\t\tconst subscription = ((): { fname?: string; name?: string } | undefined => {\n\t\t\t\tif (roomData.fname || roomData.name) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfname: roomData.fname,\n\t\t\t\t\t\tname: roomData.name,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (!roomData._id) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\treturn Subscriptions.findOne({ rid: roomData._id });\n\t\t\t})();\n\n\t\t\tif (!subscription) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (settings.get('UI_Use_Real_Name') && subscription.fname) {\n\t\t\t\treturn subscription.fname;\n\t\t\t}\n\n\t\t\treturn subscription.name;\n\t\t},\n\n\t\tisGroupChat(room) {\n\t\t\treturn (room?.uids?.length || 0) > 2;\n\t\t},\n\n\t\tgetUiText(context) {\n\t\t\tswitch (context) {\n\t\t\t\tcase UiTextContext.HIDE_WARNING:\n\t\t\t\t\treturn 'Hide_Private_Warning';\n\t\t\t\tcase UiTextContext.LEAVE_WARNING:\n\t\t\t\t\treturn 'Leave_Private_Warning';\n\t\t\t\tdefault:\n\t\t\t\t\treturn '';\n\t\t\t}\n\t\t},\n\n\t\tcondition() {\n\t\t\tconst groupByType = getUserPreference(Meteor.userId(), 'sidebarGroupByType');\n\t\t\treturn groupByType && hasAtLeastOnePermission(['view-d-room', 'view-joined-room']);\n\t\t},\n\n\t\tgetAvatarPath(room) {\n\t\t\tif (!room) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\t// if coming from sidenav search\n\t\t\tif (room.name && room.avatarETag) {\n\t\t\t\treturn getUserAvatarURL(room.name, room.avatarETag);\n\t\t\t}\n\n\t\t\tif (this.isGroupChat(room)) {\n\t\t\t\treturn getAvatarURL({\n\t\t\t\t\tusername: (room.uids || []).length + (room.usernames || []).join(),\n\t\t\t\t\tcache: room.avatarETag,\n\t\t\t\t}) as string;\n\t\t\t}\n\n\t\t\tconst sub = Subscriptions.findOne({ rid: room._id }, { fields: { name: 1 } });\n\t\t\tif (sub?.name) {\n\t\t\t\tconst user = Users.findOne({ username: sub.name }, { fields: { username: 1, avatarETag: 1 } }) as IUser | undefined;\n\t\t\t\treturn getUserAvatarURL(user?.username || sub.name, user?.avatarETag);\n\t\t\t}\n\n\t\t\treturn getUserAvatarURL(room.name || this.roomName(room) || '');\n\t\t},\n\n\t\tgetIcon(room) {\n\t\t\tif (isRoomFederated(room)) {\n\t\t\t\treturn 'globe';\n\t\t\t}\n\n\t\t\tif (this.isGroupChat(room)) {\n\t\t\t\treturn 'balloon';\n\t\t\t}\n\n\t\t\treturn 'at';\n\t\t},\n\n\t\textractOpenRoomParams({ rid }) {\n\t\t\treturn { type: 'd', reference: rid };\n\t\t},\n\n\t\tfindRoom(identifier) {\n\t\t\tconst query: Mongo.Selector<ISubscription> = {\n\t\t\t\tt: 'd',\n\t\t\t\t$or: [{ name: identifier }, { rid: identifier }],\n\t\t\t};\n\n\t\t\tconst subscription = Subscriptions.findOne(query);\n\t\t\tif (subscription?.rid) {\n\t\t\t\treturn ChatRoom.findOne(subscription.rid);\n\t\t\t}\n\t\t},\n\t} as AtLeast<IRoomTypeClientDirectives, 'isGroupChat' | 'roomName'>,\n);\n",null],"names":["_objectSpread","isRoomFederated","Meteor","hasAtLeastOnePermission","Subscriptions","Users","ChatRoom","settings","getUserPreference","getAvatarURL","getUserAvatarURL","RoomSettingsEnum","RoomMemberActions","UiTextContext","getDirectMessageRoomType","Federation","roomCoordinator","module","link","default","export","DirectMessageRoomType","v","add","label","allowRoomSettingChange","_room","setting","isRoomSettingAllowed","TYPE","NAME","SYSTEM_MESSAGES","DESCRIPTION","READ_ONLY","REACT_WHEN_READ_ONLY","ARCHIVE_OR_UNARCHIVE","JOIN_CODE","E2E","get","allowMemberAction","room","action","showingUserId","userSubscription","actionAllowed","BLOCK","isGroupChat","roomName","roomData","subscription","fname","name","_id","findOne","rid","_room$uids","uids","length","getUiText","context","HIDE_WARNING","LEAVE_WARNING","condition","groupByType","userId","getAvatarPath","avatarETag","username","usernames","join","cache","sub","fields","user","getIcon","extractOpenRoomParams","_ref","type","reference","findRoom","identifier","t","$or"],"mappings":"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"}