)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/lib/rooms/roomTypes/private.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { AtLeast, IRoom } from '@rocket.chat/core-typings';\nimport { isRoomFederated } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport type { Mongo } from 'meteor/mongo';\n\nimport { hasPermission } from '../../../../app/authorization/client';\nimport { ChatRoom } from '../../../../app/models/client';\nimport { settings } from '../../../../app/settings/client';\nimport { getUserPreference } from '../../../../app/utils/client';\nimport { getRoomAvatarURL } from '../../../../app/utils/client/getRoomAvatarURL';\nimport type { IRoomTypeClientDirectives } from '../../../../definition/IRoomTypeConfig';\nimport { RoomSettingsEnum, RoomMemberActions, UiTextContext } from '../../../../definition/IRoomTypeConfig';\nimport { getPrivateRoomType } from '../../../../lib/rooms/roomTypes/private';\nimport * as Federation from '../../federation/Federation';\nimport { roomCoordinator } from '../roomCoordinator';\n\nexport const PrivateRoomType = getPrivateRoomType(roomCoordinator);\n\nroomCoordinator.add(\n\t{\n\t\t...PrivateRoomType,\n\t\tlabel: 'Private_Groups',\n\t},\n\t{\n\t\tallowRoomSettingChange(room, setting) {\n\t\t\tif (isRoomFederated(room as IRoom)) {\n\t\t\t\treturn Federation.isRoomSettingAllowed(room, setting);\n\t\t\t}\n\t\t\tswitch (setting) {\n\t\t\t\tcase RoomSettingsEnum.JOIN_CODE:\n\t\t\t\t\treturn false;\n\t\t\t\tcase RoomSettingsEnum.BROADCAST:\n\t\t\t\t\treturn Boolean(room.broadcast);\n\t\t\t\tcase RoomSettingsEnum.READ_ONLY:\n\t\t\t\t\treturn !room.broadcast;\n\t\t\t\tcase RoomSettingsEnum.REACT_WHEN_READ_ONLY:\n\t\t\t\t\treturn Boolean(!room.broadcast && room.ro);\n\t\t\t\tcase RoomSettingsEnum.E2E:\n\t\t\t\t\treturn settings.get('E2E_Enable') === true;\n\t\t\t\tcase RoomSettingsEnum.SYSTEM_MESSAGES:\n\t\t\t\tdefault:\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\n\t\tallowMemberAction(_room, action, showingUserId, userSubscription) {\n\t\t\tif (isRoomFederated(_room as IRoom)) {\n\t\t\t\treturn Federation.actionAllowed(_room, action, showingUserId, userSubscription);\n\t\t\t}\n\t\t\tswitch (action) {\n\t\t\t\tcase RoomMemberActions.BLOCK:\n\t\t\t\t\treturn false;\n\t\t\t\tdefault:\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\n\t\troomName(roomData) {\n\t\t\tif (roomData.prid || isRoomFederated(roomData)) {\n\t\t\t\treturn roomData.fname;\n\t\t\t}\n\t\t\tif (settings.get('UI_Allow_room_names_with_special_chars')) {\n\t\t\t\treturn roomData.fname || roomData.name;\n\t\t\t}\n\n\t\t\treturn roomData.name;\n\t\t},\n\n\t\tisGroupChat(_room) {\n\t\t\treturn true;\n\t\t},\n\n\t\tgetUiText(context) {\n\t\t\tswitch (context) {\n\t\t\t\tcase UiTextContext.HIDE_WARNING:\n\t\t\t\t\treturn 'Hide_Group_Warning';\n\t\t\t\tcase UiTextContext.LEAVE_WARNING:\n\t\t\t\t\treturn 'Leave_Group_Warning';\n\t\t\t\tdefault:\n\t\t\t\t\treturn '';\n\t\t\t}\n\t\t},\n\n\t\tcondition() {\n\t\t\tconst groupByType = getUserPreference(Meteor.userId(), 'sidebarGroupByType');\n\t\t\treturn groupByType && hasPermission('view-p-room');\n\t\t},\n\n\t\tgetAvatarPath(room) {\n\t\t\treturn getRoomAvatarURL({ roomId: room._id, cache: room.avatarETag });\n\t\t},\n\n\t\tgetIcon(room) {\n\t\t\tif (room.prid) {\n\t\t\t\treturn 'discussion';\n\t\t\t}\n\t\t\tif (room.teamMain) {\n\t\t\t\treturn 'team-lock';\n\t\t\t}\n\n\t\t\tif (isRoomFederated(room)) {\n\t\t\t\treturn 'globe';\n\t\t\t}\n\n\t\t\treturn 'hashtag-lock';\n\t\t},\n\n\t\textractOpenRoomParams({ name }) {\n\t\t\treturn { type: 'p', reference: name };\n\t\t},\n\n\t\tfindRoom(identifier) {\n\t\t\tconst query: Mongo.Selector<IRoom> = {\n\t\t\t\tt: 'p',\n\t\t\t\tname: identifier,\n\t\t\t};\n\n\t\t\treturn ChatRoom.findOne(query);\n\t\t},\n\t} as AtLeast<IRoomTypeClientDirectives, 'isGroupChat' | 'roomName'>,\n);\n",null],"names":["_objectSpread","isRoomFederated","Meteor","hasPermission","ChatRoom","settings","getUserPreference","getRoomAvatarURL","RoomSettingsEnum","RoomMemberActions","UiTextContext","getPrivateRoomType","Federation","roomCoordinator","module","link","default","export","PrivateRoomType","v","add","label","allowRoomSettingChange","room","setting","isRoomSettingAllowed","JOIN_CODE","BROADCAST","Boolean","broadcast","READ_ONLY","REACT_WHEN_READ_ONLY","ro","E2E","get","SYSTEM_MESSAGES","allowMemberAction","_room","action","showingUserId","userSubscription","actionAllowed","BLOCK","roomName","roomData","prid","fname","name","isGroupChat","getUiText","context","HIDE_WARNING","LEAVE_WARNING","condition","groupByType","userId","getAvatarPath","roomId","_id","cache","avatarETag","getIcon","teamMain","extractOpenRoomParams","_ref","type","reference","findRoom","identifier","findOne","t"],"mappings":"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"}