)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/lib/createRouteGroup.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { type IRouterPaths, type RouteName, type RouterPathPattern } from '@rocket.chat/ui-contexts';\nimport React, { type ElementType, type ReactNode } from 'react';\n\nimport { router } from '../providers/RouterProvider';\nimport MainLayout from '../views/root/MainLayout';\nimport { appLayout } from './appLayout';\n\ntype GroupName = 'omnichannel' | 'marketplace' | 'account' | 'admin';\n\ntype GroupPrefix<TGroupName extends GroupName> = IRouterPaths[`${TGroupName}-index`]['pattern'];\n\ntype RouteNamesOf<TGroupName extends GroupName> = Extract<\n\t| keyof {\n\t\t\t[TRouteName in RouteName as IRouterPaths[TRouteName]['pattern'] extends `${GroupPrefix<TGroupName>}/${string}`\n\t\t\t\t? TRouteName\n\t\t\t\t: never]: never;\n\t  }\n\t| `${GroupName}-index`,\n\tRouteName\n>;\n\ntype TrimPrefix<T extends string, P extends string> = T extends `${P}${infer U}` ? U : T;\n\nexport const createRouteGroup = <TGroupName extends GroupName>(\n\tname: TGroupName,\n\tprefix: GroupPrefix<TGroupName>,\n\tRouterComponent: ElementType<{\n\t\tchildren?: ReactNode;\n\t}>,\n) => {\n\trouter.defineRoutes([\n\t\t{\n\t\t\tpath: prefix,\n\t\t\tid: `${name}-index`,\n\t\t\telement: appLayout.wrap(\n\t\t\t\t<MainLayout>\n\t\t\t\t\t<RouterComponent />\n\t\t\t\t</MainLayout>,\n\t\t\t),\n\t\t},\n\t]);\n\n\treturn <TRouteName extends RouteNamesOf<TGroupName>>(\n\t\tpath: TrimPrefix<IRouterPaths[TRouteName]['pattern'], GroupPrefix<TGroupName>>,\n\t\t{\n\t\t\tname,\n\t\t\tcomponent: RouteComponent,\n\t\t\tprops,\n\t\t\tready = true,\n\t\t}: {\n\t\t\tname: TRouteName;\n\t\t\tcomponent: ElementType;\n\t\t\tprops?: Record<string, unknown>;\n\t\t\tready?: boolean;\n\t\t},\n\t): [register: () => void, unregister: () => void] => {\n\t\tlet unregister: (() => void) | undefined;\n\n\t\tconst register = () => {\n\t\t\tunregister = router.defineRoutes([\n\t\t\t\t{\n\t\t\t\t\tpath: `${prefix}${path}` as RouterPathPattern,\n\t\t\t\t\tid: name,\n\t\t\t\t\telement: appLayout.wrap(\n\t\t\t\t\t\t<MainLayout>\n\t\t\t\t\t\t\t<RouterComponent>\n\t\t\t\t\t\t\t\t<RouteComponent {...props} />\n\t\t\t\t\t\t\t</RouterComponent>\n\t\t\t\t\t\t</MainLayout>,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t]);\n\t\t};\n\n\t\tif (ready) {\n\t\t\tregister();\n\t\t}\n\n\t\treturn [register, () => unregister?.()];\n\t};\n};\n",null],"names":["React","router","MainLayout","appLayout","module","export","createRouteGroup","default","name","prefix","RouterComponent","defineRoutes","path","id","concat","element","wrap","createElement","_ref","unregister","component","RouteComponent","props","ready","register","_unregister"],"mappings":"2BACgEA,EAAAC,EAAAC,EAAAC,EAAhEC,EAAOC,MAA2C,CAAA,CAAAC,iBAAc,IAAAA,CAAA,GAAAF,EAAAA,IAAAA,CAAAA,QAAAA,CAAAG,QAAAA,CAAAA,EAAAP,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,8BAAAA,CAAAH,OAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAG,QAAAA,CAAAA,EAAAL,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,cAAAA,CAAAD,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAsBzD,IAAMG,EAAmB,CAC/BE,EACAC,EACAC,KAIAT,EAAOU,YAAY,CAAC,CACnB,CACCC,KAAMH,EACNI,GAAE,GAAAC,MAAA,CAAKN,EAAI,UACXO,QAASZ,EAAUa,IAAI,CACtBhB,EAAAiB,aAAA,CAACf,EAAU,KACVF,EAAAiB,aAAA,CAACP,EAAe,SAInB,EAEM,CACNE,EAA8EM,KAY3B,IAC/CC,EAZJ,CACCX,KAAAA,CAAI,CACJY,UAAWC,CAAc,CACzBC,MAAAA,CAAK,CACLC,MAAAA,EAAQ,CAAA,CAAA,CAMR,CAAAL,EAIKM,EAAW,KAChBL,EAAalB,EAAOU,YAAY,CAAC,CAChC,CACCC,KAAI,GAAAE,MAAA,CAAKL,GAAMK,MAAA,CAAGF,GAClBC,GAAIL,EACJO,QAASZ,EAAUa,IAAI,CACtBhB,EAAAiB,aAAA,CAACf,EAAU,KACVF,EAAAiB,aAAA,CAACP,EAAe,KACfV,EAAAiB,aAAA,CAACI,EAAmBC,OAKxB,CACF,EAMA,OAJIC,GACHC,IAGM,CAACA,EAAU,KAAA,IAAAC,EAAA,OAAA,AAAgB,OAAhBA,CAAAA,EAAMN,CAAAA,GAAUM,AAAA,KAAA,IAAAA,EAAA,KAAA,EAAVA,GAAc,EAAC,AACxC"}