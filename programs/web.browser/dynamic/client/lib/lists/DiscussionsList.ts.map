)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/lib/lists/DiscussionsList.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IDiscussionMessage, IMessage } from '@rocket.chat/core-typings';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\n\nimport { MessageList } from './MessageList';\n\ntype DiscussionMessage = Omit<IMessage, 'drid'> & Required<Pick<IMessage, 'drid'>>;\n\nexport type DiscussionsListOptions = {\n\trid: IMessage['rid'];\n\ttext?: string;\n};\n\nconst isDiscussionMessageInRoom = (message: IMessage, rid: IMessage['rid']): message is DiscussionMessage =>\n\tmessage.rid === rid && 'drid' in message;\n\nconst isDiscussionTextMatching = (discussionMessage: DiscussionMessage, regex: RegExp): boolean => regex.test(discussionMessage.msg);\n\nexport class DiscussionsList extends MessageList<IDiscussionMessage> {\n\tpublic constructor(private _options: DiscussionsListOptions) {\n\t\tsuper();\n\t}\n\n\tpublic get options(): DiscussionsListOptions {\n\t\treturn this._options;\n\t}\n\n\tpublic updateFilters(options: DiscussionsListOptions): void {\n\t\tthis._options = options;\n\t\tthis.clear();\n\t}\n\n\tprotected filter(message: IMessage): boolean {\n\t\tconst { rid } = this._options;\n\n\t\tif (!isDiscussionMessageInRoom(message, rid)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this._options.text) {\n\t\t\tconst regex = new RegExp(escapeRegExp(this._options.text), 'i');\n\t\t\tif (!isDiscussionTextMatching(message, regex)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprotected compare(a: IMessage, b: IMessage): number {\n\t\treturn (b.tlm ?? b.ts).getTime() - (a.tlm ?? a.ts).getTime();\n\t}\n}\n",null],"names":["escapeRegExp","MessageList","module","export","DiscussionsList","isDiscussionMessageInRoom","message","rid","isDiscussionTextMatching","discussionMessage","regex","test","msg","constructor","_options","options","updateFilters","clear","filter","text","RegExp","compare","a","b","_b$tlm","_a$tlm","tlm","ts","getTime"],"mappings":"2BAC6BA,EAA8BC,EAA3DC,EAAOC,MAAE,CAAA,CAAAC,gBAAoB,IAAAA,CAAA,GAA8BF,EAAAA,IAAAA,CAAAA,8BAAAA,CAAAF,aAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,gBAAAA,CAAAD,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAW3D,IAAMI,EAA4B,CAACC,EAAmBC,IACrDD,EAAQC,GAAG,GAAKA,GAAO,SAAUD,EAE5BE,EAA2B,CAACC,EAAsCC,IAA2BA,EAAMC,IAAI,CAACF,EAAkBG,GAAG,CAE7H,OAAOR,UAAwBH,EACpCY,YAA2BC,CAAgC,CAAA,CAC1D,KAAK,GAAG,IAAA,CADkBA,QAAAA,CAAAA,KAAAA,EAAA,IAAA,CAAAA,QAAQ,CAARA,CAE3B,CAEA,IAAWC,SAAO,CACjB,OAAO,IAAI,CAACD,QAAQ,AACrB,CAEOE,cAAcD,CAA+B,CAAA,CACnD,IAAI,CAACD,QAAQ,CAAGC,EAChB,IAAI,CAACE,KAAK,EACX,CAEUC,OAAOZ,CAAiB,CAAA,CACjC,GAAM,CAAEC,IAAAA,CAAAA,CAAK,CAAG,IAAI,CAACO,QAAQ,CAE7B,GAAI,CAACT,EAA0BC,EAASC,GACvC,MAAO,CAAA,EAGR,GAAI,IAAI,CAACO,QAAQ,CAACK,IAAI,CAAE,CACvB,IAAMT,EAAQ,AAAIU,OAAOpB,EAAa,IAAI,CAACc,QAAQ,CAACK,IAAI,EAAG,KAC3D,GAAI,CAACX,EAAyBF,EAASI,GACtC,MAAO,CAAA,EAIT,MAAO,CAAA,CACR,CAEUW,QAAQC,CAAW,CAAEC,CAAW,CAAA,CAAA,IAAAC,EAAAC,EACzC,MAAO,CAAA,AAAM,OAAND,CAAAA,EAACD,EAAEG,GAAG,AAAHA,GAAGF,AAAA,KAAA,IAAAA,EAAAA,EAAID,EAAEI,EAAE,AAAFA,EAAIC,OAAO,GAAK,CAAA,AAAM,OAANH,CAAAA,EAACH,EAAEI,GAAG,AAAHA,GAAGD,AAAA,KAAA,IAAAA,EAAAA,EAAIH,EAAEK,EAAE,AAAFA,EAAIC,OAAO,EAC3D"}