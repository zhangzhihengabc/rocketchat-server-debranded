function module(e,n,r){let o,t,l;r.export({compileSort:()=>c}),r.link("./bson",{compareBSONValues(e){o=e}},0),r.link("./comparisons",{isEmptyArray(e){t=e}},1),r.link("./lookups",{createLookupFunction(e){l=e}},2);let i=e=>Array.isArray(e)?e.map(e=>"string"==typeof e?{lookup:l(e),ascending:!0}:{lookup:l(e[0]),ascending:"desc"!==e[1]}):Object.entries(e).map(e=>{let[n,r]=e;return{lookup:l(n),ascending:r>=0}}),a=(e,n)=>[].concat(...e.map(e=>Array.isArray(e)?t(e)?[void 0]:e:[e])).reduce((e,r)=>{let t=o(e,r);return n&&t>0||!n&&t<0?r:e}),c=e=>{let n=i(e);return 0===n.length?()=>0:(e,r)=>{for(let t=0;t<n.length;++t){let l=n[t],i=a(l.lookup(e),l.ascending),c=a(l.lookup(r),l.ascending),s=o(i,c);if(0!==s)return l.ascending?s:-s}return 0}}}
//# sourceMappingURL=/dynamic/client/lib/minimongo/50bdf999799d863cf655e6fd4dccafdfdc0874a9.map
