)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/lib/utils/applyCustomTranslations.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { settings } from '../../../app/settings/client';\nimport { i18n } from '../../../app/utils/lib/i18n';\n\nconst parseToJSON = (customTranslations: string) => {\n\ttry {\n\t\treturn JSON.parse(customTranslations);\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\nexport const applyCustomTranslations = (): void => {\n\tconst customTranslations: string | undefined = settings.get('Custom_Translations');\n\n\tif (!customTranslations || !parseToJSON(customTranslations)) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tconst parsedCustomTranslations: Record<string, unknown> = JSON.parse(customTranslations);\n\n\t\tfor (const [lang, translations] of Object.entries(parsedCustomTranslations)) {\n\t\t\ti18n.addResourceBundle(lang, 'core', translations);\n\t\t}\n\t} catch (e) {\n\t\tconsole.error('Invalid setting Custom_Translations', e);\n\t}\n};\n",null],"names":["settings","i18n","module","export","applyCustomTranslations","parseToJSON","customTranslations","JSON","parse","e","get","parsedCustomTranslations","lang","translations","Object","entries","addResourceBundle","console","error"],"mappings":"2BAAwDA,EAAAC,EAAxDC,EAAOC,MAAE,CAAA,CAAAC,wBAAgB,IAAAA,CAA+B,GAAAF,EAAAA,IAAAA,CAAAA,+BAAAA,CAAAF,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,8BAAAA,CAAAD,KAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAGxD,IAAMI,EAAeC,IACpB,GAAI,CACH,OAAOC,KAAKC,KAAK,CAACF,GACjB,MAAOG,EAAG,CACX,MAAO,CAAA,EAET,EAEaL,EAA0B,KACtC,IAAME,EAAyCN,EAASU,GAAG,CAAC,uBAE5D,GAAI,AAACJ,GAAuBD,EAAYC,GAIxC,GAAI,CACH,IAAMK,EAAoDJ,KAAKC,KAAK,CAACF,GAErE,IAAK,GAAM,CAACM,EAAMC,EAAa,GAAIC,OAAOC,OAAO,CAACJ,GACjDV,EAAKe,iBAAiB,CAACJ,EAAM,OAAQC,GAErC,MAAOJ,EAAG,CACXQ,QAAQC,KAAK,CAAC,sCAAuCT,GAEvD"}