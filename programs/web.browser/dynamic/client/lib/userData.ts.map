)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/lib/userData.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { ILivechatAgent, IUser, Serialized } from '@rocket.chat/core-typings';\nimport { ReactiveVar } from 'meteor/reactive-var';\n\nimport { Users } from '../../app/models/client';\nimport { Notifications } from '../../app/notifications/client';\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\n\nexport const isSyncReady = new ReactiveVar(false);\n\ntype RawUserData = Serialized<\n\tPick<\n\t\tIUser,\n\t\t| '_id'\n\t\t| 'type'\n\t\t| 'name'\n\t\t| 'username'\n\t\t| 'emails'\n\t\t| 'status'\n\t\t| 'statusDefault'\n\t\t| 'statusText'\n\t\t| 'statusConnection'\n\t\t| 'avatarOrigin'\n\t\t| 'utcOffset'\n\t\t| 'language'\n\t\t| 'settings'\n\t\t| 'roles'\n\t\t| 'active'\n\t\t| 'defaultRoom'\n\t\t| 'customFields'\n\t\t| 'oauth'\n\t\t| 'createdAt'\n\t\t| '_updatedAt'\n\t\t| 'avatarETag'\n\t> & { statusLivechat?: ILivechatAgent['statusLivechat'] }\n>;\n\nconst updateUser = (userData: IUser): void => {\n\tconst user = Users.findOne({ _id: userData._id }) as IUser | undefined;\n\n\tif (!user?._updatedAt || user._updatedAt.getTime() < userData._updatedAt.getTime()) {\n\t\tUsers.upsert({ _id: userData._id }, userData);\n\t\treturn;\n\t}\n\n\t// delete data already on user's collection as those are newer\n\tObject.keys(user).forEach((key) => {\n\t\tdelete userData[key as keyof IUser];\n\t});\n\tUsers.update({ _id: user._id }, { $set: { ...userData } });\n};\n\nlet cancel: undefined | (() => void);\nexport const synchronizeUserData = async (uid: IUser['_id']): Promise<RawUserData | void> => {\n\tif (!uid) {\n\t\treturn;\n\t}\n\n\t// Remove data from any other user that we may have retained\n\tUsers.remove({ _id: { $ne: uid } });\n\n\tcancel?.();\n\n\tconst result = Notifications.onUser('userData', (data) => {\n\t\tswitch (data.type) {\n\t\t\tcase 'inserted':\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\t\t\tconst { type, id, ...user } = data;\n\t\t\t\tUsers.insert(user as unknown as IUser);\n\t\t\t\tbreak;\n\n\t\t\tcase 'updated':\n\t\t\t\tUsers.upsert({ _id: uid }, { $set: data.diff, $unset: data.unset as any });\n\t\t\t\tbreak;\n\n\t\t\tcase 'removed':\n\t\t\t\tUsers.remove({ _id: uid });\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\tcancel = result.stop;\n\tawait result.ready();\n\n\tconst { ldap, lastLogin, services: rawServices, ...userData } = await sdk.rest.get('/v1/me');\n\n\t// email?: {\n\t// \tverificationTokens?: IUserEmailVerificationToken[];\n\t// };\n\t// export interface IUserEmailVerificationToken {\n\t// \ttoken: string;\n\t// \taddress: string;\n\t// \twhen: Date;\n\t// }\n\n\tif (userData) {\n\t\tconst { email, cloud, resume, email2fa, emailCode, ...services } = rawServices || {};\n\n\t\tupdateUser({\n\t\t\t...userData,\n\t\t\t...(rawServices && {\n\t\t\t\tservices: {\n\t\t\t\t\t...(services ? { ...services } : {}),\n\t\t\t\t\t...(resume\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\tresume: {\n\t\t\t\t\t\t\t\t\t...(resume.loginTokens && {\n\t\t\t\t\t\t\t\t\t\tloginTokens: resume.loginTokens.map((token) => ({\n\t\t\t\t\t\t\t\t\t\t\t...token,\n\t\t\t\t\t\t\t\t\t\t\twhen: new Date('when' in token ? token.when : ''),\n\t\t\t\t\t\t\t\t\t\t\tcreatedAt: ('createdAt' in token ? new Date(token.createdAt) : undefined) as Date,\n\t\t\t\t\t\t\t\t\t\t\ttwoFactorAuthorizedUntil: token.twoFactorAuthorizedUntil ? new Date(token.twoFactorAuthorizedUntil) : undefined,\n\t\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: {}),\n\t\t\t\t\t...(cloud\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\tcloud: {\n\t\t\t\t\t\t\t\t\t...cloud,\n\t\t\t\t\t\t\t\t\texpiresAt: new Date(cloud.expiresAt),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: {}),\n\t\t\t\t\t...(emailCode ? { ...emailCode, expire: new Date(emailCode.expire) } : {}),\n\t\t\t\t\t...(email2fa ? { email2fa: { ...email2fa, changedAt: new Date(email2fa.changedAt) } } : {}),\n\t\t\t\t\t...(email?.verificationTokens && {\n\t\t\t\t\t\temail: {\n\t\t\t\t\t\t\tverificationTokens: email.verificationTokens.map((token) => ({\n\t\t\t\t\t\t\t\t...token,\n\t\t\t\t\t\t\t\twhen: new Date(token.when),\n\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t},\n\t\t\t}),\n\t\t\t...(lastLogin && {\n\t\t\t\tlastLogin: new Date(lastLogin),\n\t\t\t}),\n\t\t\tldap: Boolean(ldap),\n\t\t\tcreatedAt: new Date(userData.createdAt),\n\t\t\t_updatedAt: new Date(userData._updatedAt),\n\t\t});\n\t}\n\tisSyncReady.set(true);\n\n\treturn userData;\n};\n\nexport const removeLocalUserData = (): number => Users.remove({});\n",null],"names":["_objectWithoutProperties","_objectSpread","ReactiveVar","Users","Notifications","sdk","cancel","module","default","export","isSyncReady","synchronizeUserData","removeLocalUserData","updateUser","userData","user","findOne","_id","_updatedAt","getTime","upsert","Object","keys","forEach","key","update","$set","uid","_cancel","remove","$ne","result","onUser","data","type","id","_excluded","insert","diff","$unset","unset","stop","ready","_await$sdk$rest$get","rest","get","ldap","lastLogin","services","rawServices","_excluded2","_ref","email","cloud","resume","email2fa","emailCode","_excluded3","loginTokens","map","token","when","Date","createdAt","undefined","twoFactorAuthorizedUntil","expiresAt","expire","changedAt","verificationTokens","Boolean","set"],"mappings":"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"}