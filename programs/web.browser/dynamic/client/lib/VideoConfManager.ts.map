)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/lib/VideoConfManager.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { Emitter } from '@rocket.chat/emitter';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { Notifications } from '../../app/notifications/client';\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\nimport { getConfig } from './utils/getConfig';\n\nconst debug = !!(getConfig('debug') || getConfig('debug-VideoConf'));\n\n// The interval between attempts to call the remote user\nconst CALL_INTERVAL = 3000;\n// How many attempts to call we're gonna make\nconst CALL_ATTEMPT_LIMIT = 10;\n// The amount of time we'll assume an incoming call is still valid without any updates from the remote user\nconst CALL_TIMEOUT = 10000;\n// How long are we gonna wait for a link after accepting an incoming call\nconst ACCEPT_TIMEOUT = 5000;\n\ntype DirectCallParams = {\n\tuid: IUser['_id'];\n\trid: IRoom['_id'];\n\tcallId: string;\n};\n\nexport type DirectCallData = DirectCallParams & {\n\tdismissed: boolean;\n};\n\ntype IncomingDirectCall = DirectCallParams & {\n\ttimeout: ReturnType<typeof setTimeout> | undefined;\n\tacceptTimeout?: ReturnType<typeof setTimeout> | undefined;\n};\n\nexport type CallPreferences = {\n\tmic?: boolean;\n\tcam?: boolean;\n};\n\nexport type ProviderCapabilities = {\n\tmic?: boolean;\n\tcam?: boolean;\n\ttitle?: boolean;\n};\n\ntype CurrentCallParams = {\n\tcallId: string;\n\turl: string;\n\tproviderName?: string;\n};\n\ntype VideoConfEvents = {\n\t// We gave up on calling a remote user or they rejected our call\n\t'direct/cancel': DirectCallParams;\n\n\t// A remote user is calling us\n\t'direct/ringing': DirectCallParams;\n\n\t// An incoming call was lost, either by timeout or because the remote user canceled\n\t'direct/lost': DirectCallParams;\n\n\t// We tried to accept an incoming call but the process failed\n\t'direct/failed': DirectCallParams;\n\n\t// A remote user accepted our call\n\t'direct/accepted': DirectCallParams;\n\n\t// We stopped calling a remote user\n\t'direct/stopped': DirectCallParams;\n\n\t'preference/changed': { key: keyof CallPreferences; value: boolean };\n\n\t// The list of incoming calls has changed in some way\n\t'incoming/changed': void;\n\n\t// The list of ringing incoming calls may have changed\n\t'ringing/changed': void;\n\n\t// The value of `isCalling` may have changed\n\t'calling/changed': void;\n\n\t'calling/ended': void;\n\n\t// When join call\n\t'call/join': CurrentCallParams;\n\n\t'join/error': { error: string };\n\n\t'start/error': { error: string };\n\n\t'capabilities/changed': void;\n};\n\nexport const VideoConfManager = new (class VideoConfManager extends Emitter<VideoConfEvents> {\n\tprivate userId: string | undefined;\n\n\tprivate currentCallHandler: ReturnType<typeof setTimeout> | undefined;\n\n\tprivate currentCallData: (DirectCallParams & { joined?: boolean }) | undefined;\n\n\tprivate startingNewCall = false;\n\n\tprivate hooks: (() => void)[] = [];\n\n\tprivate incomingDirectCalls: Map<string, IncomingDirectCall>;\n\n\tprivate dismissedCalls: Set<string>;\n\n\tprivate _preferences: CallPreferences;\n\n\tprivate _capabilities: ProviderCapabilities;\n\n\tpublic get preferences(): CallPreferences {\n\t\treturn this._preferences;\n\t}\n\n\tpublic get capabilities(): ProviderCapabilities {\n\t\treturn this._capabilities;\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.incomingDirectCalls = new Map<string, IncomingDirectCall>();\n\t\tthis.dismissedCalls = new Set<string>();\n\t\tthis._preferences = { mic: true, cam: false };\n\t\tthis._capabilities = {};\n\t}\n\n\tpublic isBusy(): boolean {\n\t\tif (this.startingNewCall) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.isCalling();\n\t}\n\n\tpublic isRinging(): boolean {\n\t\treturn [...this.incomingDirectCalls.values()].some(({ callId }) => !this.isCallDismissed(callId));\n\t}\n\n\tpublic isCalling(): boolean {\n\t\tif (this.currentCallHandler || (this.currentCallData && !this.currentCallData.joined)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic getIncomingDirectCalls(): DirectCallData[] {\n\t\treturn (\n\t\t\t[...this.incomingDirectCalls.values()]\n\t\t\t\t// Filter out any calls that we're in the process of accepting, so they're already hidden from the UI\n\t\t\t\t.filter((call) => !call.acceptTimeout)\n\t\t\t\t.map(({ timeout: _, acceptTimeout: _t, ...call }) => ({ ...call, dismissed: this.isCallDismissed(call.callId) }))\n\t\t);\n\t}\n\n\tpublic async startCall(roomId: IRoom['_id'], title?: string): Promise<void> {\n\t\tif (!this.userId || this.isBusy()) {\n\t\t\tthrow new Error('Video manager is busy.');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Starting new call on room ${roomId}`);\n\t\tthis.startingNewCall = true;\n\t\tthis.emit('calling/changed');\n\n\t\tconst { data } = await sdk.rest.post('/v1/video-conference.start', { roomId, title, allowRinging: true }).catch((e: any) => {\n\t\t\tdebug && console.error(`[VideoConf] Failed to start new call on room ${roomId}`);\n\t\t\tthis.startingNewCall = false;\n\t\t\tthis.emit('calling/changed');\n\t\t\tthis.emit('start/error', { error: e?.xhr?.responseJSON?.error || 'unknown-error' });\n\n\t\t\treturn Promise.reject(e);\n\t\t});\n\n\t\tthis.startingNewCall = false;\n\t\tthis.emit('calling/changed');\n\n\t\tif (data.type !== 'direct') {\n\t\t\tthis.emit('calling/ended');\n\t\t}\n\n\t\tswitch (data.type) {\n\t\t\tcase 'direct':\n\t\t\t\treturn this.callUser({ uid: data.calleeId, rid: roomId, callId: data.callId });\n\t\t\tcase 'videoconference':\n\t\t\t\treturn this.joinCall(data.callId);\n\t\t\tcase 'livechat':\n\t\t\t\treturn this.joinCall(data.callId);\n\t\t}\n\t}\n\n\tpublic acceptIncomingCall(callId: string): void {\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (!callData) {\n\t\t\tthrow new Error('Unable to find accepted call information.');\n\t\t}\n\t\tif (callData.acceptTimeout) {\n\t\t\tdebug && console.log(`[VideoConf] We're already trying to accept call ${callId}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Accepting incoming call ${callId}.`);\n\n\t\tif (callData.timeout) {\n\t\t\tclearTimeout(callData.timeout);\n\t\t\tthis.setIncomingCallAttribute(callId, 'timeout', undefined);\n\t\t}\n\n\t\t// Mute this call Id so any lingering notifications don't trigger it again\n\t\tthis.dismissIncomingCall(callId);\n\n\t\tthis.setIncomingCallAttribute(\n\t\t\tcallId,\n\t\t\t'acceptTimeout',\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst updatedCallData = this.incomingDirectCalls.get(callId);\n\t\t\t\tif (!updatedCallData?.acceptTimeout) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdebug && console.log(`[VideoConf] Attempt to accept call has timed out.`);\n\t\t\t\tthis.removeIncomingCall(callId);\n\n\t\t\t\tthis.emit('direct/failed', { callId, uid: callData.uid, rid: callData.rid });\n\t\t\t}, ACCEPT_TIMEOUT),\n\t\t);\n\t\tthis.emit('incoming/changed');\n\n\t\tdebug && console.log(`[VideoConf] Notifying user ${callData.uid} that we accept their call.`);\n\t\tthis.userId && this.notifyUser(callData.uid, 'accepted', { callId, uid: this.userId, rid: callData.rid });\n\t}\n\n\tpublic rejectIncomingCall(callId: string): void {\n\t\tthis.dismissIncomingCall(callId);\n\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (!callData) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.userId && this.notifyUser(callData.uid, 'rejected', { callId, uid: this.userId, rid: callData.rid });\n\t\tthis.loseIncomingCall(callId);\n\t}\n\n\tpublic dismissedIncomingCalls(): void {\n\t\t// Mute all calls that are currently ringing\n\t\tif ([...this.incomingDirectCalls.keys()].some((callId) => this.dismissedIncomingCallHelper(callId))) {\n\t\t\tthis.emit('ringing/changed');\n\t\t\tthis.emit('incoming/changed');\n\t\t}\n\t}\n\n\tpublic async loadCapabilities(): Promise<void> {\n\t\tconst { capabilities } = await sdk.rest.get('/v1/video-conference.capabilities').catch((e: any) => {\n\t\t\tdebug && console.error(`[VideoConf] Failed to load video conference capabilities`);\n\n\t\t\treturn Promise.reject(e);\n\t\t});\n\n\t\tthis._capabilities = capabilities || {};\n\t\tthis.emit('capabilities/changed');\n\t}\n\n\tprivate setIncomingCallAttribute<T extends keyof IncomingDirectCall>(\n\t\tcallId: string,\n\t\tattributeName: T,\n\t\tvalue: IncomingDirectCall[T] | undefined,\n\t): void {\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (!callData) {\n\t\t\tdebug && console.error(`[VideoConf] Cannot change attribute \"${attributeName}\" of unknown call \"${callId}\".`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst newData: IncomingDirectCall = {\n\t\t\t...callData,\n\t\t};\n\n\t\tif (value === undefined) {\n\t\t\tdelete newData[attributeName];\n\t\t} else {\n\t\t\tnewData[attributeName] = value;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Updating attribute \"${attributeName}\" of call \"${callId}\".`);\n\t\tthis.incomingDirectCalls.set(callId, newData);\n\t}\n\n\tprivate dismissedIncomingCallHelper(callId: string): boolean {\n\t\t// Muting will stop a callId from ringing, but it doesn't affect any part of the existing workflow\n\t\tif (this.isCallDismissed(callId)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Dismissing call ${callId}`);\n\t\tthis.dismissedCalls.add(callId);\n\t\t// We don't need to hold on to the dismissed callIds forever because the server won't let anyone call us with it for very long\n\t\tsetTimeout(() => this.dismissedCalls.delete(callId), CALL_TIMEOUT * 20);\n\t\t// Only change the state if this call is actually in our list\n\t\treturn this.incomingDirectCalls.has(callId);\n\t}\n\n\tpublic dismissIncomingCall(callId: string): boolean {\n\t\tif (this.dismissedIncomingCallHelper(callId)) {\n\t\t\tthis.emit('ringing/changed');\n\t\t\tthis.emit('incoming/changed');\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic updateUser(): void {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (this.userId === userId) {\n\t\t\tdebug && console.log(`[VideoConf] Logged user has not changed, so we're not changing the hooks.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Logged user has changed.`);\n\n\t\tif (this.userId) {\n\t\t\tthis.disconnect();\n\t\t}\n\n\t\tif (userId) {\n\t\t\tthis.connectUser(userId);\n\t\t}\n\t}\n\n\tpublic changePreference(key: keyof CallPreferences, value: boolean): void {\n\t\tthis._preferences[key] = value;\n\t\tthis.emit('preference/changed', { key, value });\n\t}\n\n\tpublic setPreferences(prefs: Partial<CallPreferences>): void {\n\t\tfor (const key in prefs) {\n\t\t\tif (prefs.hasOwnProperty(key)) {\n\t\t\t\tconst prefKey = key as keyof CallPreferences;\n\t\t\t\tthis.changePreference(prefKey, prefs[prefKey] as boolean);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async joinCall(callId: string): Promise<void> {\n\t\tdebug && console.log(`[VideoConf] Joining call ${callId}.`);\n\n\t\tif (this.incomingDirectCalls.has(callId)) {\n\t\t\tconst data = this.incomingDirectCalls.get(callId);\n\t\t\tif (data?.acceptTimeout) {\n\t\t\t\tdebug && console.log('[VideoConf] Clearing acceptance timeout');\n\t\t\t\tclearTimeout(data.acceptTimeout);\n\t\t\t}\n\t\t\tthis.removeIncomingCall(callId);\n\t\t}\n\n\t\tconst params = {\n\t\t\tcallId,\n\t\t\tstate: {\n\t\t\t\t...(this._preferences.mic !== undefined ? { mic: this._preferences.mic } : {}),\n\t\t\t\t...(this._preferences.cam !== undefined ? { cam: this._preferences.cam } : {}),\n\t\t\t},\n\t\t};\n\n\t\tconst { url, providerName } = await sdk.rest.post('/v1/video-conference.join', params).catch((e) => {\n\t\t\tdebug && console.error(`[VideoConf] Failed to join call ${callId}`);\n\t\t\tthis.emit('join/error', { error: e?.xhr?.responseJSON?.error || 'unknown-error' });\n\n\t\t\treturn Promise.reject(e);\n\t\t});\n\n\t\tif (!url) {\n\t\t\tthrow new Error('Failed to get video conference URL.');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Opening ${url}.`);\n\t\tthis.emit('call/join', { url, callId, providerName });\n\t}\n\n\tpublic abortCall(): void {\n\t\tif (!this.currentCallData) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.giveUp(this.currentCallData);\n\t}\n\n\tprivate rejectIncomingCallsFromUser(userId: string): void {\n\t\tfor (const [, { callId, uid }] of this.incomingDirectCalls) {\n\t\t\tif (userId === uid) {\n\t\t\t\tdebug && console.log(`[VideoConf] Rejecting old incoming call from user ${userId}`);\n\t\t\t\tthis.rejectIncomingCall(callId);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async callUser({ uid, rid, callId }: DirectCallParams): Promise<void> {\n\t\tif (this.currentCallHandler || this.currentCallData) {\n\t\t\tthrow new Error('Video Conference State Error.');\n\t\t}\n\n\t\tlet attempt = 1;\n\t\tthis.currentCallData = { callId, rid, uid };\n\t\tthis.currentCallHandler = setInterval(() => {\n\t\t\tif (!this.currentCallHandler) {\n\t\t\t\tdebug && console.warn(`[VideoConf] Ringing interval was not properly cleared.`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tattempt++;\n\n\t\t\tif (attempt > CALL_ATTEMPT_LIMIT) {\n\t\t\t\tthis.giveUp({ uid, rid, callId });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdebug && console.log(`[VideoConf] Ringing user ${uid}, attempt number ${attempt}.`);\n\t\t\tthis.userId && this.notifyUser(uid, 'call', { uid: this.userId, rid, callId });\n\t\t}, CALL_INTERVAL);\n\t\tthis.emit('calling/changed');\n\n\t\tdebug && console.log(`[VideoConf] Ringing user ${uid} for the first time.`);\n\t\tthis.userId && this.notifyUser(uid, 'call', { uid: this.userId, rid, callId });\n\t}\n\n\tprivate async giveUp({ uid, rid, callId }: DirectCallParams): Promise<void> {\n\t\tconst joined = this.currentCallData?.joined;\n\n\t\tdebug && console.log(`[VideoConf] Stop ringing user ${uid}.`);\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t\tthis.currentCallData = undefined;\n\t\t\tthis.emit('calling/changed');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Notifying user ${uid} that we are no longer calling.`);\n\t\tthis.userId && this.notifyUser(uid, 'canceled', { uid: this.userId, rid, callId });\n\n\t\tthis.emit('direct/cancel', { uid, rid, callId });\n\t\tthis.emit('direct/stopped', { uid, rid, callId });\n\n\t\tif (joined) {\n\t\t\treturn;\n\t\t}\n\n\t\tsdk.rest.post('/v1/video-conference.cancel', { callId });\n\t}\n\n\tprivate disconnect(): void {\n\t\tdebug && console.log(`[VideoConf] disconnecting user ${this.userId}`);\n\t\tfor (const hook of this.hooks) {\n\t\t\thook();\n\t\t}\n\t\tthis.hooks = [];\n\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t}\n\n\t\tthis.incomingDirectCalls.forEach((call) => {\n\t\t\tif (call.timeout) {\n\t\t\t\tclearTimeout(call.timeout);\n\t\t\t}\n\t\t\tif (call.acceptTimeout) {\n\t\t\t\tclearTimeout(call.acceptTimeout);\n\t\t\t}\n\t\t});\n\t\tthis.incomingDirectCalls.clear();\n\t\tthis.dismissedCalls.clear();\n\t\tthis.currentCallData = undefined;\n\t\tthis._preferences = {};\n\t\tthis.emit('incoming/changed');\n\t\tthis.emit('ringing/changed');\n\t\tthis.emit('calling/changed');\n\t}\n\n\tprivate async onVideoConfNotification({ action, params }: { action: string; params: DirectCallParams }): Promise<void> {\n\t\tif (!action || typeof action !== 'string') {\n\t\t\tdebug && console.error('[VideoConf] Invalid action received.');\n\t\t\treturn;\n\t\t}\n\t\tif (!params || typeof params !== 'object' || !params.callId || !params.uid || !params.rid) {\n\t\t\tdebug && console.error('[VideoConf] Invalid params received.');\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (action) {\n\t\t\tcase 'call':\n\t\t\t\treturn this.onDirectCall(params);\n\t\t\tcase 'canceled':\n\t\t\t\treturn this.onDirectCallCanceled(params);\n\t\t\tcase 'accepted':\n\t\t\t\treturn this.onDirectCallAccepted(params);\n\t\t\tcase 'rejected':\n\t\t\t\treturn this.onDirectCallRejected(params);\n\t\t\tcase 'confirmed':\n\t\t\t\treturn this.onDirectCallConfirmed(params);\n\t\t\tcase 'join':\n\t\t\t\treturn this.onDirectCallJoined(params);\n\t\t\tcase 'end':\n\t\t\t\treturn this.onDirectCallEnded(params);\n\t\t}\n\t}\n\n\tprivate async notifyUser(uid: IUser['_id'], action: string, params: DirectCallParams): Promise<void> {\n\t\treturn Notifications.notifyUser(uid, 'video-conference', { action, params });\n\t}\n\n\tprivate async connectUser(userId: string): Promise<void> {\n\t\tdebug && console.log(`[VideoConf] connecting user ${userId}`);\n\t\tthis.userId = userId;\n\n\t\tconst { stop, ready } = Notifications.onUser('video-conference', (data) => this.onVideoConfNotification(data));\n\n\t\tawait ready();\n\n\t\tthis.hooks.push(stop);\n\t}\n\n\tprivate abortIncomingCall(callId: string): void {\n\t\t// If we just accepted this call, then ignore the timeout\n\t\tif (this.incomingDirectCalls.get(callId)?.acceptTimeout) {\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Canceling call ${callId} due to ringing timeout.`);\n\t\tthis.loseIncomingCall(callId);\n\t}\n\n\tprivate loseIncomingCall(callId: string): void {\n\t\tconst lostCall = this.incomingDirectCalls.get(callId);\n\t\tif (!lostCall) {\n\t\t\tdebug && console.warn(`[VideoConf] Unable to cancel ${callId} because we have no information about it.`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.removeIncomingCall(callId);\n\n\t\tdebug && console.log(`[VideoConf] Call ${callId} from ${lostCall.uid} was lost.`);\n\t\tthis.emit('direct/lost', { callId, uid: lostCall.uid, rid: lostCall.rid });\n\t}\n\n\tprivate removeIncomingCall(callId: string): void {\n\t\tdebug && console.log(`[VideoConf] Removing call with id \"${callId}\" from Incoming Calls list.`);\n\t\tif (!this.incomingDirectCalls.has(callId)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isRinging = this.isRinging();\n\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (callData?.timeout) {\n\t\t\tclearTimeout(callData.timeout);\n\t\t}\n\n\t\tthis.incomingDirectCalls.delete(callId);\n\t\tthis.emit('incoming/changed');\n\n\t\tif (isRinging !== this.isRinging()) {\n\t\t\tthis.emit('ringing/changed');\n\t\t}\n\t}\n\n\tprivate createAbortTimeout(callId: string): ReturnType<typeof setTimeout> {\n\t\treturn setTimeout(() => this.abortIncomingCall(callId), CALL_TIMEOUT);\n\t}\n\n\tprivate startNewIncomingCall({ callId, uid, rid }: DirectCallParams): void {\n\t\tif (this.isCallDismissed(callId)) {\n\t\t\tdebug && console.log(`[VideoConf] Ignoring dismissed call.`);\n\t\t\treturn;\n\t\t}\n\n\t\t// Reject any currently ringing call from the user before registering the new one.\n\t\tthis.rejectIncomingCallsFromUser(uid);\n\n\t\tdebug && console.log(`[VideoConf] Storing this new call information.`);\n\t\tthis.incomingDirectCalls.set(callId, {\n\t\t\tcallId,\n\t\t\tuid,\n\t\t\trid,\n\t\t\ttimeout: this.createAbortTimeout(callId),\n\t\t});\n\n\t\tthis.emit('incoming/changed');\n\t\tthis.emit('ringing/changed');\n\t\tthis.emit('direct/ringing', { callId, uid, rid });\n\t}\n\n\tprivate refreshExistingIncomingCall({ callId, uid, rid }: DirectCallParams): void {\n\t\tconst existingData = this.incomingDirectCalls.get(callId);\n\t\tif (!existingData) {\n\t\t\tthrow new Error('Video Conference Manager State Error');\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Resetting call timeout.`);\n\t\tif (existingData.timeout) {\n\t\t\tclearTimeout(existingData.timeout);\n\t\t}\n\t\texistingData.timeout = this.createAbortTimeout(callId);\n\n\t\tif (!this.isCallDismissed(callId)) {\n\t\t\tthis.emit('direct/ringing', { callId, uid, rid });\n\t\t}\n\t}\n\n\tprivate onDirectCall({ callId, uid, rid }: DirectCallParams): void {\n\t\t// If we already accepted this call, then don't ring again\n\t\tif (this.incomingDirectCalls.get(callId)?.acceptTimeout) {\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${uid} is ringing with call ${callId}.`);\n\t\tif (this.incomingDirectCalls.has(callId)) {\n\t\t\tthis.refreshExistingIncomingCall({ callId, uid, rid });\n\t\t} else {\n\t\t\tthis.startNewIncomingCall({ callId, uid, rid });\n\t\t}\n\t}\n\n\tprivate onDirectCallCanceled({ callId }: DirectCallParams): void {\n\t\tdebug && console.log(`[VideoConf] Call ${callId} was canceled by the remote user.`);\n\n\t\t// We had just accepted this call, but the remote user hang up before they got the notification, so cancel our acceptance\n\t\tconst callData = this.incomingDirectCalls.get(callId);\n\t\tif (callData?.acceptTimeout) {\n\t\t\tclearTimeout(callData.acceptTimeout);\n\t\t\tthis.setIncomingCallAttribute(callId, 'acceptTimeout', undefined);\n\t\t}\n\n\t\tthis.loseIncomingCall(callId);\n\t}\n\n\tprivate onDirectCallAccepted(params: DirectCallParams, skipConfirmation = false): void {\n\t\tif (!params.callId || params.callId !== this.currentCallData?.callId) {\n\t\t\tdebug && console.log(`[VideoConf] User ${params.uid} has accepted a call ${params.callId} from us, but we're not calling.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${params.uid} has accepted our call ${params.callId}.`);\n\n\t\t// Stop ringing\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t}\n\n\t\tconst callData = this.currentCallData;\n\n\t\tthis.emit('direct/accepted', params);\n\t\tthis.emit('direct/stopped', params);\n\t\tthis.currentCallData = undefined;\n\t\tthis.emit('calling/changed');\n\n\t\tif (!callData.joined) {\n\t\t\tthis.joinCall(params.callId);\n\t\t}\n\n\t\tif (skipConfirmation) {\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Notifying user ${callData.uid} that they can join the call now.`);\n\t\tthis.userId && this.notifyUser(callData.uid, 'confirmed', { callId: callData.callId, uid: this.userId, rid: callData.rid });\n\t}\n\n\tprivate onDirectCallConfirmed(params: DirectCallParams): void {\n\t\tif (!params.callId || !this.incomingDirectCalls.get(params.callId)?.acceptTimeout) {\n\t\t\tdebug && console.log(`[VideoConf] User ${params.uid} confirmed we can join ${params.callId} but we aren't trying to join it.`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.joinCall(params.callId);\n\t}\n\n\tprivate onDirectCallJoined(params: DirectCallParams): void {\n\t\tif (!params.callId) {\n\t\t\tdebug && console.log(`[VideoConf] Invalid 'video-conference.join' event received: ${params.callId}, ${params.uid}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tif (params.uid === this.userId) {\n\t\t\tif (this.currentCallData?.callId === params.callId) {\n\t\t\t\tdebug && console.log(`[VideoConf] We joined our own call (${this.userId}) from somewhere else. Flagging the call appropriatelly.`);\n\t\t\t\tthis.currentCallData.joined = true;\n\t\t\t\tthis.emit('calling/changed');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.incomingDirectCalls.has(params.callId)) {\n\t\t\t\tdebug && console.log(`[VideoConf] We joined the call ${params.callId} from somewhere else. Dismissing it.`);\n\t\t\t\tthis.dismissIncomingCall(params.callId);\n\t\t\t\tthis.loseIncomingCall(params.callId);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${params.uid} has joined a call we started ${params.callId}.`);\n\t\tthis.onDirectCallAccepted(params, true);\n\t}\n\n\tprivate onDirectCallEnded(params: DirectCallParams): void {\n\t\tif (!params.callId) {\n\t\t\tdebug && console.log(`[VideoConf] Invalid 'video-conference.end' event received: ${params.callId}, ${params.uid}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst callData = this.incomingDirectCalls.get(params.callId);\n\t\tif (callData) {\n\t\t\tdebug && console.log(`[VideoConf] Incoming call ended by the server: ${params.callId}.`);\n\t\t\tif (callData.acceptTimeout) {\n\t\t\t\tclearTimeout(callData.acceptTimeout);\n\t\t\t\tthis.setIncomingCallAttribute(params.callId, 'acceptTimeout', undefined);\n\t\t\t}\n\n\t\t\tthis.loseIncomingCall(params.callId);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.currentCallData?.callId !== params.callId) {\n\t\t\tdebug && console.log(`[VideoConf] Server sent a call ended event for a call we're not aware of: ${params.callId}.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] Outgoing call ended by the server: ${params.callId}.`);\n\n\t\t// Stop ringing\n\t\tthis.currentCallData = undefined;\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t\tthis.emit('calling/changed');\n\t\t\tthis.emit('direct/stopped', params);\n\t\t}\n\t}\n\n\tprivate onDirectCallRejected(params: DirectCallParams): void {\n\t\tif (!params.callId || params.callId !== this.currentCallData?.callId) {\n\t\t\tdebug && console.log(`[VideoConf] User ${params.uid} has rejected a call ${params.callId} from us, but we're not calling.`);\n\t\t\treturn;\n\t\t}\n\n\t\tdebug && console.log(`[VideoConf] User ${params.uid} has rejected our call ${params.callId}.`);\n\n\t\t// Stop ringing\n\t\tif (this.currentCallHandler) {\n\t\t\tclearInterval(this.currentCallHandler);\n\t\t\tthis.currentCallHandler = undefined;\n\t\t}\n\n\t\tconst { joined } = this.currentCallData;\n\n\t\tthis.emit('direct/cancel', params);\n\t\tthis.currentCallData = undefined;\n\t\tthis.emit('direct/stopped', params);\n\t\tthis.emit('calling/changed');\n\n\t\tif (!joined) {\n\t\t\tsdk.rest.post('/v1/video-conference.cancel', { callId: params.callId });\n\t\t}\n\t}\n\n\tprivate isCallDismissed(callId: string): boolean {\n\t\treturn this.dismissedCalls.has(callId);\n\t}\n})();\n\nMeteor.startup(() => Tracker.autorun(() => VideoConfManager.updateUser()));\n",null],"names":["_objectSpread","_objectWithoutProperties","Emitter","Meteor","Tracker","Notifications","sdk","getConfig","module","link","default","export","VideoConfManager","debug","preferences","_preferences","capabilities","_capabilities","constructor","userId","currentCallHandler","currentCallData","startingNewCall","hooks","incomingDirectCalls","dismissedCalls","Map","Set","mic","cam","isBusy","isCalling","isRinging","values","some","_ref","callId","isCallDismissed","joined","getIncomingDirectCalls","filter","call","acceptTimeout","map","_ref2","timeout","_","_t","_excluded","dismissed","startCall","roomId","title","Error","console","log","concat","emit","data","rest","post","allowRinging","catch","e","_e$xhr","_e$xhr$responseJSON","error","xhr","responseJSON","Promise","reject","type","callUser","uid","calleeId","rid","joinCall","acceptIncomingCall","callData","get","clearTimeout","setIncomingCallAttribute","undefined","dismissIncomingCall","setTimeout","updatedCallData","removeIncomingCall","notifyUser","rejectIncomingCall","loseIncomingCall","dismissedIncomingCalls","keys","dismissedIncomingCallHelper","loadCapabilities","attributeName","value","newData","set","add","delete","CALL_TIMEOUT","has","updateUser","disconnect","connectUser","changePreference","key","setPreferences","prefs","hasOwnProperty","params","state","url","providerName","_e$xhr2","_e$xhr2$responseJSON","abortCall","giveUp","rejectIncomingCallsFromUser","_ref3","attempt","setInterval","warn","_ref4","_this$currentCallData","clearInterval","hook","forEach","clear","onVideoConfNotification","_ref5","action","onDirectCall","onDirectCallCanceled","onDirectCallAccepted","onDirectCallRejected","onDirectCallConfirmed","onDirectCallJoined","onDirectCallEnded","stop","ready","onUser","push","abortIncomingCall","_this$incomingDirectC","lostCall","createAbortTimeout","startNewIncomingCall","_ref6","refreshExistingIncomingCall","_ref7","existingData","_ref8","_this$incomingDirectC2","_ref9","_this$currentCallData2","skipConfirmation","arguments","length","_this$incomingDirectC3","_this$currentCallData3","_this$currentCallData4","_this$currentCallData5","startup","autorun"],"mappings":"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"}