)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/lib/chats/readStateManager.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IMessage, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { Emitter } from '@rocket.chat/emitter';\nimport { Meteor } from 'meteor/meteor';\n\nimport { ChatMessage } from '../../../app/models/client';\nimport { LegacyRoomManager } from '../../../app/ui-utils/client/lib/LegacyRoomManager';\nimport { RoomHistoryManager } from '../../../app/ui-utils/client/lib/RoomHistoryManager';\nimport { sdk } from '../../../app/utils/client/lib/SDKClient';\nimport { withDebouncing } from '../../../lib/utils/highOrderFunctions';\n\nexport class ReadStateManager extends Emitter {\n\tprivate rid: IRoom['_id'];\n\n\tprivate firstUnreadRecordId?: IMessage['_id'];\n\n\tprivate subscription?: ISubscription;\n\n\tpublic constructor(rid: IRoom['_id']) {\n\t\tsuper();\n\t\tthis.rid = rid;\n\t}\n\n\tpublic getRid() {\n\t\treturn this.rid;\n\t}\n\n\t// TODO: Use ref to get unreadMark\n\t// private unreadMark?: HTMLElement;\n\tprivate get unreadMark() {\n\t\treturn document.querySelector<HTMLElement>('.rcx-message-divider--unread');\n\t}\n\n\tpublic onUnreadStateChange = (callback: () => void): (() => void) => {\n\t\treturn this.on('unread-state-change', callback);\n\t};\n\n\tpublic getFirstUnreadRecordId = () => {\n\t\treturn this.firstUnreadRecordId;\n\t};\n\n\tpublic updateSubscription(subscription?: ISubscription) {\n\t\tif (!subscription) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstUpdate = !this.subscription;\n\n\t\tthis.subscription = subscription;\n\t\tLegacyRoomManager.getOpenedRoomByRid(this.rid)?.unreadSince.set(this.subscription.ls);\n\n\t\tconst { unread, alert } = this.subscription;\n\t\tif (!unread && !alert) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstUpdate) {\n\t\t\tthis.updateFirstUnreadRecordId();\n\t\t\treturn;\n\t\t}\n\n\t\tif (document.hasFocus() && this.firstUnreadRecordId) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.updateFirstUnreadRecordId();\n\t}\n\n\tprivate updateFirstUnreadRecordId() {\n\t\tif (!this.subscription?.ls) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstUnreadRecord = ChatMessage.findOne(\n\t\t\t{\n\t\t\t\t'rid': this.subscription.rid,\n\t\t\t\t'ts': {\n\t\t\t\t\t$gt: this.subscription.ls,\n\t\t\t\t},\n\t\t\t\t'u._id': {\n\t\t\t\t\t$ne: Meteor.userId() ?? undefined,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tsort: {\n\t\t\t\t\tts: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tthis.setFirstUnreadRecordId(firstUnreadRecord?._id);\n\n\t\tRoomHistoryManager.once('loaded-messages', () => this.updateFirstUnreadRecordId());\n\t}\n\n\tprivate setFirstUnreadRecordId(firstUnreadRecordId: string | undefined) {\n\t\tthis.firstUnreadRecordId = firstUnreadRecordId;\n\t\tthis.emit('unread-state-change', this.firstUnreadRecordId);\n\t}\n\n\tpublic clearUnreadMark() {\n\t\tthis.setFirstUnreadRecordId(undefined);\n\t}\n\n\tpublic handleWindowEvents = (): (() => void) => {\n\t\tconst handleWindowFocus = () => {\n\t\t\tthis.attemptMarkAsRead();\n\t\t};\n\n\t\tconst handleWindowKeyUp = (event: KeyboardEvent) => {\n\t\t\tif (event.key === 'Escape') {\n\t\t\t\tthis.markAsRead();\n\t\t\t\tthis.updateFirstUnreadRecordId();\n\t\t\t}\n\t\t};\n\n\t\twindow.addEventListener('focus', handleWindowFocus);\n\t\twindow.addEventListener('keyup', handleWindowKeyUp);\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener('focus', handleWindowFocus);\n\t\t\twindow.removeEventListener('keyup', handleWindowKeyUp);\n\t\t};\n\t};\n\n\tprivate isUnreadMarkVisible(): boolean {\n\t\tif (!this.unreadMark) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.unreadMark.offsetTop > (this.unreadMark.offsetParent?.scrollTop || 0);\n\t}\n\n\t// This will only mark as read if the unread mark is visible\n\tpublic attemptMarkAsRead() {\n\t\tconst { alert, unread } = this.subscription || {};\n\t\tif (!alert && unread === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!document.hasFocus()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.unreadMark && !this.isUnreadMarkVisible()) {\n\t\t\treturn;\n\t\t}\n\t\t// if there are unloaded unread messages, don't mark as read\n\t\tif (RoomHistoryManager.getRoom(this.rid).unreadNotLoaded.get() > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.markAsRead();\n\t}\n\n\tpublic debouncedMarkAsRead = withDebouncing({ wait: 1000 })(() => {\n\t\ttry {\n\t\t\treturn this.markAsRead();\n\t\t} catch (e) {\n\t\t\tconsole.error(e);\n\t\t}\n\t});\n\n\t// this will always mark as read.\n\tpublic async markAsRead() {\n\t\tif (!this.rid) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn sdk.rest.post('/v1/subscriptions.read', { rid: this.rid }).then(() => {\n\t\t\tRoomHistoryManager.getRoom(this.rid).unreadNotLoaded.set(0);\n\t\t});\n\t}\n}\n",null],"names":["Emitter","Meteor","ChatMessage","LegacyRoomManager","RoomHistoryManager","sdk","withDebouncing","module","export","ReadStateManager","constructor","rid","firstUnreadRecordId","subscription","onUnreadStateChange","callback","on","getFirstUnreadRecordId","handleWindowEvents","handleWindowFocus","attemptMarkAsRead","handleWindowKeyUp","event","key","markAsRead","updateFirstUnreadRecordId","window","addEventListener","removeEventListener","debouncedMarkAsRead","wait","e","console","error","getRid","unreadMark","document","querySelector","updateSubscription","_LegacyRoomManager$ge","firstUpdate","getOpenedRoomByRid","unreadSince","set","ls","unread","alert","hasFocus","_this$subscription","_Meteor$userId","firstUnreadRecord","findOne","$gt","$ne","userId","undefined","sort","ts","setFirstUnreadRecordId","_id","once","emit","clearUnreadMark","isUnreadMarkVisible","_this$unreadMark$offs","offsetTop","offsetParent","scrollTop","getRoom","unreadNotLoaded","get","rest","post","then"],"mappings":"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"}