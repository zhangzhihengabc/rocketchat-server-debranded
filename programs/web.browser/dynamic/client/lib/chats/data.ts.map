)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/lib/chats/data.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IEditedMessage, IMessage, IRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { Random } from '@rocket.chat/random';\nimport moment from 'moment';\n\nimport { hasAtLeastOnePermission, hasPermission } from '../../../app/authorization/client';\nimport { Messages, ChatRoom, ChatSubscription } from '../../../app/models/client';\nimport { settings } from '../../../app/settings/client';\nimport { MessageTypes } from '../../../app/ui-utils/client';\nimport { sdk } from '../../../app/utils/client/lib/SDKClient';\nimport { onClientBeforeSendMessage } from '../onClientBeforeSendMessage';\nimport { prependReplies } from '../utils/prependReplies';\nimport type { DataAPI } from './ChatAPI';\n\nexport const createDataAPI = ({ rid, tmid }: { rid: IRoom['_id']; tmid: IMessage['_id'] | undefined }): DataAPI => {\n\tconst composeMessage = async (\n\t\ttext: string,\n\t\t{ sendToChannel, quotedMessages, originalMessage }: { sendToChannel?: boolean; quotedMessages: IMessage[]; originalMessage?: IMessage },\n\t): Promise<IMessage> => {\n\t\tconst msg = await prependReplies(text, quotedMessages);\n\n\t\tconst effectiveRID = originalMessage?.rid ?? rid;\n\t\tconst effectiveTMID = originalMessage ? originalMessage.tmid : tmid;\n\n\t\treturn (await onClientBeforeSendMessage({\n\t\t\t_id: originalMessage?._id ?? Random.id(),\n\t\t\trid: effectiveRID,\n\t\t\t...(effectiveTMID && {\n\t\t\t\ttmid: effectiveTMID,\n\t\t\t\t...(sendToChannel && { tshow: sendToChannel }),\n\t\t\t}),\n\t\t\tmsg,\n\t\t})) as IMessage;\n\t};\n\n\tconst findMessageByID = async (mid: IMessage['_id']): Promise<IMessage | null> =>\n\t\tMessages.findOne({ _id: mid, _hidden: { $ne: true } }, { reactive: false }) ?? sdk.call('getSingleMessage', mid);\n\n\tconst getMessageByID = async (mid: IMessage['_id']): Promise<IMessage> => {\n\t\tconst message = await findMessageByID(mid);\n\n\t\tif (!message) {\n\t\t\tthrow new Error('Message not found');\n\t\t}\n\n\t\treturn message;\n\t};\n\n\tconst findLastMessage = async (): Promise<IMessage | undefined> =>\n\t\tMessages.findOne({ rid, tmid: tmid ?? { $exists: false }, _hidden: { $ne: true } }, { sort: { ts: -1 }, reactive: false });\n\n\tconst getLastMessage = async (): Promise<IMessage> => {\n\t\tconst message = await findLastMessage();\n\n\t\tif (!message) {\n\t\t\tthrow new Error('Message not found');\n\t\t}\n\n\t\treturn message;\n\t};\n\n\tconst findLastOwnMessage = async (): Promise<IMessage | undefined> => {\n\t\tconst uid = Meteor.userId();\n\n\t\tif (!uid) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn Messages.findOne(\n\t\t\t{ rid, 'tmid': tmid ?? { $exists: false }, 'u._id': uid, '_hidden': { $ne: true } },\n\t\t\t{ sort: { ts: -1 }, reactive: false },\n\t\t);\n\t};\n\n\tconst getLastOwnMessage = async (): Promise<IMessage> => {\n\t\tconst message = await findLastOwnMessage();\n\n\t\tif (!message) {\n\t\t\tthrow new Error('Message not found');\n\t\t}\n\n\t\treturn message;\n\t};\n\n\tconst canUpdateMessage = async (message: IMessage): Promise<boolean> => {\n\t\tif (MessageTypes.isSystemMessage(message)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst canEditMessage = hasAtLeastOnePermission('edit-message', message.rid);\n\t\tconst editAllowed = (settings.get('Message_AllowEditing') as boolean | undefined) ?? false;\n\t\tconst editOwn = message?.u && message.u._id === Meteor.userId();\n\n\t\tif (!canEditMessage && (!editAllowed || !editOwn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst blockEditInMinutes = settings.get('Message_AllowEditing_BlockEditInMinutes') as number | undefined;\n\t\tconst bypassBlockTimeLimit = hasPermission('bypass-time-limit-edit-and-delete');\n\n\t\tconst elapsedMinutes = moment().diff(message.ts, 'minutes');\n\t\tif (!bypassBlockTimeLimit && elapsedMinutes && blockEditInMinutes && elapsedMinutes > blockEditInMinutes) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tconst findPreviousOwnMessage = async (message: IMessage): Promise<IMessage | undefined> => {\n\t\tconst uid = Meteor.userId();\n\n\t\tif (!uid) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst msg = Messages.findOne(\n\t\t\t{ rid, 'tmid': tmid ?? { $exists: false }, 'u._id': uid, '_hidden': { $ne: true }, 'ts': { $lt: message.ts } },\n\t\t\t{ sort: { ts: -1 }, reactive: false },\n\t\t);\n\n\t\tif (!msg) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (await canUpdateMessage(msg)) {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn findPreviousOwnMessage(msg);\n\t};\n\n\tconst getPreviousOwnMessage = async (message: IMessage): Promise<IMessage> => {\n\t\tconst previousMessage = await findPreviousOwnMessage(message);\n\n\t\tif (!previousMessage) {\n\t\t\tthrow new Error('Message not found');\n\t\t}\n\n\t\treturn previousMessage;\n\t};\n\n\tconst findNextOwnMessage = async (message: IMessage): Promise<IMessage | undefined> => {\n\t\tconst uid = Meteor.userId();\n\n\t\tif (!uid) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst msg = Messages.findOne(\n\t\t\t{ rid, 'tmid': tmid ?? { $exists: false }, 'u._id': uid, '_hidden': { $ne: true }, 'ts': { $gt: message.ts } },\n\t\t\t{ sort: { ts: 1 }, reactive: false },\n\t\t);\n\n\t\tif (!msg) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (await canUpdateMessage(msg)) {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn findNextOwnMessage(msg);\n\t};\n\n\tconst getNextOwnMessage = async (message: IMessage): Promise<IMessage> => {\n\t\tconst nextMessage = await findNextOwnMessage(message);\n\n\t\tif (!nextMessage) {\n\t\t\tthrow new Error('Message not found');\n\t\t}\n\n\t\treturn nextMessage;\n\t};\n\n\tconst pushEphemeralMessage = async (message: Omit<IMessage, 'rid' | 'tmid'>): Promise<void> => {\n\t\tMessages.upsert({ _id: message._id }, { $set: { ...message, rid, ...(tmid && { tmid }) } });\n\t};\n\n\tconst updateMessage = async (message: IEditedMessage, previewUrls?: string[]): Promise<void> =>\n\t\tsdk.call('updateMessage', message, previewUrls);\n\n\tconst canDeleteMessage = async (message: IMessage): Promise<boolean> => {\n\t\tconst uid = Meteor.userId();\n\n\t\tif (!uid) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (MessageTypes.isSystemMessage(message)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst forceDeleteAllowed = hasPermission('force-delete-message', message.rid);\n\t\tif (forceDeleteAllowed) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst deletionEnabled = settings.get('Message_AllowDeleting') as boolean | undefined;\n\t\tif (!deletionEnabled) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst deleteAnyAllowed = hasPermission('delete-message', rid);\n\t\tconst deleteOwnAllowed = hasPermission('delete-own-message');\n\t\tconst deleteAllowed = deleteAnyAllowed || (deleteOwnAllowed && message?.u && message.u._id === Meteor.userId());\n\n\t\tif (!deleteAllowed) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst blockDeleteInMinutes = settings.get('Message_AllowDeleting_BlockDeleteInMinutes') as number | undefined;\n\t\tconst bypassBlockTimeLimit = hasPermission('bypass-time-limit-edit-and-delete');\n\t\tconst elapsedMinutes = moment().diff(message.ts, 'minutes');\n\t\tconst onTimeForDelete = bypassBlockTimeLimit || !blockDeleteInMinutes || !elapsedMinutes || elapsedMinutes <= blockDeleteInMinutes;\n\n\t\treturn deleteAllowed && onTimeForDelete;\n\t};\n\n\tconst deleteMessage = async (mid: IMessage['_id']): Promise<void> => {\n\t\tawait sdk.call('deleteMessage', { _id: mid });\n\t};\n\n\tconst drafts = new Map<IMessage['_id'] | undefined, string>();\n\n\tconst getDraft = async (mid: IMessage['_id'] | undefined): Promise<string | undefined> => drafts.get(mid);\n\n\tconst discardDraft = async (mid: IMessage['_id'] | undefined): Promise<void> => {\n\t\tdrafts.delete(mid);\n\t};\n\n\tconst saveDraft = async (mid: IMessage['_id'] | undefined, draft: string): Promise<void> => {\n\t\tdrafts.set(mid, draft);\n\t};\n\n\tconst findRoom = async (): Promise<IRoom | undefined> => ChatRoom.findOne({ _id: rid }, { reactive: false });\n\n\tconst getRoom = async (): Promise<IRoom> => {\n\t\tconst room = await findRoom();\n\n\t\tif (!room) {\n\t\t\tthrow new Error('Room not found');\n\t\t}\n\n\t\treturn room;\n\t};\n\n\tconst isSubscribedToRoom = async (): Promise<boolean> => !!ChatSubscription.findOne({ rid }, { reactive: false });\n\n\tconst joinRoom = async (): Promise<void> => {\n\t\tawait sdk.call('joinRoom', rid);\n\t};\n\n\tconst findDiscussionByID = async (drid: IRoom['_id']): Promise<IRoom | undefined> =>\n\t\tChatRoom.findOne({ _id: drid, prid: { $exists: true } }, { reactive: false });\n\n\tconst getDiscussionByID = async (drid: IRoom['_id']): Promise<IRoom> => {\n\t\tconst discussion = await findDiscussionByID(drid);\n\n\t\tif (!discussion) {\n\t\t\tthrow new Error('Discussion not found');\n\t\t}\n\n\t\treturn discussion;\n\t};\n\n\tconst createStrictGetter = <TFind extends (...args: any[]) => Promise<any>>(\n\t\tfind: TFind,\n\t\terrorMessage: string,\n\t): ((...args: Parameters<TFind>) => Promise<Exclude<Awaited<ReturnType<TFind>>, undefined>>) => {\n\t\treturn async (...args) => {\n\t\t\tconst result = await find(...args);\n\n\t\t\tif (!result) {\n\t\t\t\tthrow new Error(errorMessage);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t};\n\n\tconst findSubscription = async (): Promise<ISubscription | undefined> => {\n\t\treturn ChatSubscription.findOne({ rid }, { reactive: false });\n\t};\n\n\tconst getSubscription = createStrictGetter(findSubscription, 'Subscription not found');\n\n\tconst findSubscriptionFromMessage = async (message: IMessage): Promise<ISubscription | undefined> => {\n\t\treturn ChatSubscription.findOne({ rid: message.rid }, { reactive: false });\n\t};\n\n\tconst getSubscriptionFromMessage = createStrictGetter(findSubscriptionFromMessage, 'Subscription not found');\n\n\treturn {\n\t\tcomposeMessage,\n\t\tfindMessageByID,\n\t\tgetMessageByID,\n\t\tfindLastMessage,\n\t\tgetLastMessage,\n\t\tfindLastOwnMessage,\n\t\tgetLastOwnMessage,\n\t\tfindPreviousOwnMessage,\n\t\tgetPreviousOwnMessage,\n\t\tfindNextOwnMessage,\n\t\tgetNextOwnMessage,\n\t\tpushEphemeralMessage,\n\t\tcanUpdateMessage,\n\t\tupdateMessage,\n\t\tcanDeleteMessage,\n\t\tdeleteMessage,\n\t\tgetDraft,\n\t\tsaveDraft,\n\t\tdiscardDraft,\n\t\tfindRoom,\n\t\tgetRoom,\n\t\tisSubscribedToRoom,\n\t\tjoinRoom,\n\t\tfindDiscussionByID,\n\t\tgetDiscussionByID,\n\t\tfindSubscription,\n\t\tgetSubscription,\n\t\tfindSubscriptionFromMessage,\n\t\tgetSubscriptionFromMessage,\n\t};\n};\n",null],"names":["_objectSpread","Random","moment","hasAtLeastOnePermission","hasPermission","Messages","ChatRoom","ChatSubscription","settings","MessageTypes","sdk","onClientBeforeSendMessage","prependReplies","module","link","default","export","createDataAPI","_ref","rid","tmid","composeMessage","text","_ref2","_originalMessage$rid","_originalMessage$_id","sendToChannel","quotedMessages","originalMessage","msg","effectiveRID","effectiveTMID","_id","id","tshow","findMessageByID","mid","_Messages$findOne","findOne","_hidden","$ne","reactive","call","getMessageByID","message","Error","findLastMessage","$exists","sort","ts","getLastMessage","findLastOwnMessage","uid","Meteor","userId","getLastOwnMessage","canUpdateMessage","_settings$get","isSystemMessage","canEditMessage","editAllowed","get","editOwn","u","blockEditInMinutes","bypassBlockTimeLimit","elapsedMinutes","diff","findPreviousOwnMessage","$lt","getPreviousOwnMessage","previousMessage","findNextOwnMessage","$gt","getNextOwnMessage","nextMessage","pushEphemeralMessage","upsert","$set","updateMessage","previewUrls","canDeleteMessage","forceDeleteAllowed","deletionEnabled","deleteAnyAllowed","deleteOwnAllowed","deleteAllowed","blockDeleteInMinutes","deleteMessage","drafts","Map","getDraft","discardDraft","delete","saveDraft","draft","set","findRoom","getRoom","room","isSubscribedToRoom","joinRoom","findDiscussionByID","drid","prid","getDiscussionByID","discussion","createStrictGetter","find","errorMessage","result","arguments","findSubscription","getSubscription","findSubscriptionFromMessage","getSubscriptionFromMessage"],"mappings":"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"}