function module(e,t,n){let o,l,i,r,c;n.link("@babel/runtime/helpers/objectSpread2",{default(e){o=e}},0),n.link("meteor/ddp-common",{DDPCommon(e){l=e}},0),n.link("meteor/meteor",{Meteor(e){i=e}},1),n.link("meteor/tracker",{Tracker(e){r=e}},2),n.link("../../app/utils/client/lib/SDKClient",{sdk(e){c=e}},3);let s=["setUserStatus","logout"];window.USE_REST_FOR_DDP_CALLS&&function(){let{_send:e}=i.connection;i.connection._send=function t(t){if("method"!==t.msg||function(e){var t;let{method:n,params:o}=e;return!!("login"===n&&null!==(t=o[0])&&void 0!==t&&t.resume||n.startsWith("UserPresence:")||s.includes(n)||n.startsWith("stream-"))}(t))return e.call(i.connection,t);let n=r.nonreactive(()=>i.userId()?"method.call":"method.callAnon"),a={message:l.stringifyDDP(o({},t))},d=e=>{i.connection._methodInvokers[t.id]&&(i.connection._livedata_data({msg:"updated",methods:[t.id]}),i.connection.onMessage(e))},m=encodeURIComponent(t.method.replace(/\//g,":"));c.rest.post("/v1/".concat(n,"/").concat(m),a).then(e=>{let{message:n}=e;if(d(n),"login"===t.method){var o;let e=l.parseDDP(n);null!==(o=e.result)&&void 0!==o&&o.token&&i.loginWithToken(e.result.token)}}).catch(e=>{console.error(e)})}}()}
//# sourceMappingURL=/dynamic/client/lib/957d7d94aed83a1e5197a76c68d9478772a31a82.map
