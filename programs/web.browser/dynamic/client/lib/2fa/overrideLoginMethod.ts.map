)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/lib/2fa/overrideLoginMethod.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { t } from '../../../app/utils/lib/i18n';\nimport { dispatchToastMessage } from '../toast';\nimport { process2faReturn } from './process2faReturn';\nimport { isTotpInvalidError, isTotpRequiredError } from './utils';\n\ntype LoginCallback = {\n\t(error: unknown): void;\n\t(error: unknown, result: unknown): void;\n};\n\ntype LoginMethod<A extends unknown[]> = (...args: [...args: A, cb: LoginCallback]) => void;\n\ntype LoginMethodWithTotp<A extends unknown[]> = (...args: [...args: A, code: string, cb: LoginCallback]) => void;\n\nexport const overrideLoginMethod = <A extends unknown[]>(\n\tloginMethod: LoginMethod<A>,\n\tloginArgs: A,\n\tcallback: LoginCallback,\n\tloginMethodTOTP: LoginMethodWithTotp<A>,\n\temailOrUsername: string,\n): void => {\n\tloginMethod.call(null, ...loginArgs, async (error: unknown, result?: unknown) => {\n\t\tif (!isTotpRequiredError(error)) {\n\t\t\tcallback(error);\n\t\t\treturn;\n\t\t}\n\n\t\tawait process2faReturn({\n\t\t\terror,\n\t\t\tresult,\n\t\t\temailOrUsername,\n\t\t\toriginalCallback: callback,\n\t\t\tonCode: (code: string) => {\n\t\t\t\tloginMethodTOTP?.call(null, ...loginArgs, code, (error: unknown) => {\n\t\t\t\t\tif (isTotpInvalidError(error)) {\n\t\t\t\t\t\tdispatchToastMessage({ type: 'error', message: t('Invalid_two_factor_code') });\n\t\t\t\t\t\tcallback(null);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback(error);\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t});\n};\n",null],"names":["t","dispatchToastMessage","process2faReturn","isTotpInvalidError","isTotpRequiredError","module","export","overrideLoginMethod","loginMethod","loginArgs","callback","loginMethodTOTP","emailOrUsername","call","error","result","originalCallback","onCode","code","type","message"],"mappings":"2BAAgDA,EAAAC,EAAAC,EAAAC,EAAAC,EAAhDC,EAAOC,MAAK,CAAA,CAAAC,oBAAM,IAAAA,CAA8B,GAAAF,EAAAA,IAAAA,CAAAA,8BAAAA,CAAAL,EAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,WAAAA,CAAAJ,qBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,qBAAAA,CAAAH,iBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,UAAAA,CAAAF,mBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,oBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAczC,IAAMG,EAAsB,CAClCC,EACAC,EACAC,EACAC,EACAC,KAEAJ,EAAYK,IAAI,CAAC,QAASJ,EAAW,MAAOK,EAAgBC,KAC3D,GAAI,CAACX,EAAoBU,GAAQ,CAChCJ,EAASI,GACT,OAGD,MAAMZ,EAAiB,CACtBY,MAAAA,EACAC,OAAAA,EACAH,gBAAAA,EACAI,iBAAkBN,EAClBO,OAASC,IACRP,MAAAA,GAAAA,EAAiBE,IAAI,CAAC,QAASJ,EAAWS,EAAOJ,IAChD,GAAIX,EAAmBW,GAAQ,CAC9Bb,EAAqB,CAAEkB,KAAM,QAASC,QAASpB,EAAE,0BAA0B,GAC3EU,EAAS,MACT,OAGDA,EAASI,EACV,EACD,GAEF,EACD"}