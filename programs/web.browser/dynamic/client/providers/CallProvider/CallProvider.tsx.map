)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/providers/CallProvider/CallProvider.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IVoipRoom, VoipEventDataSignature, ICallerInfo, ICallDetails, ILivechatVisitor, Serialized } from '@rocket.chat/core-typings';\nimport {\n\tVoipClientEvents,\n\tisVoipEventAgentCalled,\n\tisVoipEventAgentConnected,\n\tisVoipEventCallerJoined,\n\tisVoipEventQueueMemberAdded,\n\tisVoipEventQueueMemberRemoved,\n\tisVoipEventCallAbandoned,\n\tUserState,\n} from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { Random } from '@rocket.chat/random';\nimport type { Device, IExperimentalHTMLAudioElement } from '@rocket.chat/ui-contexts';\nimport {\n\tuseRouter,\n\tuseUser,\n\tuseSetting,\n\tuseEndpoint,\n\tuseStream,\n\tuseSetOutputMediaDevice,\n\tuseSetInputMediaDevice,\n\tuseSetModal,\n\tuseTranslation,\n} from '@rocket.chat/ui-contexts';\nimport type { FC } from 'react';\nimport React, { useMemo, useRef, useCallback, useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport type { OutgoingByeRequest } from 'sip.js/lib/core';\n\nimport { isOutboundClient, useVoipClient } from '../../../ee/client/hooks/useVoipClient';\nimport { parseOutboundPhoneNumber } from '../../../ee/client/lib/voip/parseOutboundPhoneNumber';\nimport { WrapUpCallModal } from '../../../ee/client/voip/components/modals/WrapUpCallModal';\nimport type { CallContextValue } from '../../contexts/CallContext';\nimport { CallContext, useIsVoipEnterprise } from '../../contexts/CallContext';\nimport { useDialModal } from '../../hooks/useDialModal';\nimport { roomCoordinator } from '../../lib/rooms/roomCoordinator';\nimport type { QueueAggregator } from '../../lib/voip/QueueAggregator';\nimport { useVoipSounds } from './hooks/useVoipSounds';\n\ntype NetworkState = 'online' | 'offline';\n\nexport const CallProvider: FC = ({ children }) => {\n\tconst [clientState, setClientState] = useState<'registered' | 'unregistered'>('unregistered');\n\n\tconst voipEnabled = useSetting('VoIP_Enabled');\n\tconst subscribeToNotifyUser = useStream('notify-user');\n\tconst dispatchEvent = useEndpoint('POST', '/v1/voip/events');\n\tconst visitorEndpoint = useEndpoint('POST', '/v1/livechat/visitor');\n\tconst voipEndpoint = useEndpoint('GET', '/v1/voip/room');\n\tconst voipCloseRoomEndpoint = useEndpoint('POST', '/v1/voip/room.close');\n\tconst getContactBy = useEndpoint('GET', '/v1/omnichannel/contact.search');\n\tconst setModal = useSetModal();\n\tconst t = useTranslation();\n\n\tconst result = useVoipClient();\n\tconst user = useUser();\n\tconst router = useRouter();\n\tconst setOutputMediaDevice = useSetOutputMediaDevice();\n\tconst setInputMediaDevice = useSetInputMediaDevice();\n\n\tconst hasVoIPEnterpriseLicense = useIsVoipEnterprise();\n\n\tconst remoteAudioMediaRef = useRef<IExperimentalHTMLAudioElement>(null); // TODO: Create a dedicated file for the AUDIO and make the controls accessible\n\n\tconst [queueCounter, setQueueCounter] = useState(0);\n\tconst [queueName, setQueueName] = useState('');\n\tconst [roomInfo, setRoomInfo] = useState<{ v: { token?: string }; rid: string }>({ v: {}, rid: '' });\n\n\tconst { openDialModal } = useDialModal();\n\n\tconst voipSounds = useVoipSounds();\n\n\tconst closeRoom = useCallback(\n\t\tasync (data = {}): Promise<void> => {\n\t\t\troomInfo &&\n\t\t\t\t(await voipCloseRoomEndpoint({\n\t\t\t\t\trid: roomInfo.rid,\n\t\t\t\t\ttoken: roomInfo.v.token || '',\n\t\t\t\t\toptions: { comment: data?.comment, tags: data?.tags },\n\t\t\t\t}));\n\t\t\trouter.navigate('/home');\n\n\t\t\tconst queueAggregator = result.voipClient?.getAggregator();\n\t\t\tif (queueAggregator) {\n\t\t\t\tqueueAggregator.callEnded();\n\t\t\t}\n\t\t},\n\t\t[router, result?.voipClient, roomInfo, voipCloseRoomEndpoint],\n\t);\n\n\tconst openWrapUpModal = useCallback((): void => {\n\t\tsetModal(() => <WrapUpCallModal closeRoom={closeRoom} />);\n\t}, [closeRoom, setModal]);\n\n\tconst changeAudioOutputDevice = useMutableCallback((selectedAudioDevice: Device): void => {\n\t\tremoteAudioMediaRef?.current &&\n\t\t\tsetOutputMediaDevice({ outputDevice: selectedAudioDevice, HTMLAudioElement: remoteAudioMediaRef.current });\n\t});\n\n\tconst changeAudioInputDevice = useMutableCallback((selectedAudioDevice: Device): void => {\n\t\tif (!result.voipClient) {\n\t\t\treturn;\n\t\t}\n\t\tconst constraints = { audio: { deviceId: { exact: selectedAudioDevice.id } } };\n\n\t\t// TODO: Migrate the classes that manage MediaStream to a more react based approach (using contexts/providers perhaps)\n\t\t// For now the MediaStream management is very coupled with the VoIP client,\n\t\t// decoupling it will make it usable by other areas of the project that needs to handle MediaStreams and avoid code duplication\n\t\tresult.voipClient.changeAudioInputDevice(constraints);\n\n\t\tsetInputMediaDevice(selectedAudioDevice);\n\t});\n\n\tconst [queueAggregator, setQueueAggregator] = useState<QueueAggregator>();\n\n\tconst [networkStatus, setNetworkStatus] = useState<NetworkState>('online');\n\n\tuseEffect(() => {\n\t\tconst { voipClient } = result || {};\n\n\t\tif (!voipClient) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetQueueAggregator(voipClient.getAggregator());\n\n\t\treturn (): void => {\n\t\t\tif (clientState === 'registered') {\n\t\t\t\treturn voipClient.unregister();\n\t\t\t}\n\t\t};\n\t}, [result, clientState]);\n\n\tconst openRoom = useCallback((rid: IVoipRoom['_id']): void => {\n\t\troomCoordinator.openRouteLink('v', { rid });\n\t}, []);\n\n\tconst findOrCreateVisitor = useCallback(\n\t\tasync (caller: ICallerInfo): Promise<Serialized<ILivechatVisitor>> => {\n\t\t\tconst phone = parseOutboundPhoneNumber(caller.callerId);\n\n\t\t\tconst { contact } = await getContactBy({ phone });\n\n\t\t\tif (contact) {\n\t\t\t\treturn contact;\n\t\t\t}\n\n\t\t\tconst { visitor } = await visitorEndpoint({\n\t\t\t\tvisitor: {\n\t\t\t\t\ttoken: Random.id(),\n\t\t\t\t\tphone,\n\t\t\t\t\tname: caller.callerName || phone,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn visitor;\n\t\t},\n\t\t[getContactBy, visitorEndpoint],\n\t);\n\n\tconst createRoom = useCallback(\n\t\tasync (caller: ICallerInfo, direction: IVoipRoom['direction'] = 'inbound'): Promise<IVoipRoom['_id']> => {\n\t\t\tif (!user) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst visitor = await findOrCreateVisitor(caller);\n\t\t\t\tconst voipRoom = await voipEndpoint({ token: visitor.token, agentId: user._id, direction });\n\t\t\t\topenRoom(voipRoom.room._id);\n\t\t\t\tvoipRoom.room && setRoomInfo({ v: { token: voipRoom.room.v.token }, rid: voipRoom.room._id });\n\t\t\t\tconst queueAggregator = result.voipClient?.getAggregator();\n\t\t\t\tif (queueAggregator) {\n\t\t\t\t\tqueueAggregator.callStarted();\n\t\t\t\t}\n\t\t\t\treturn voipRoom.room._id;\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(`Error while creating a visitor ${error}`);\n\t\t\t\treturn '';\n\t\t\t}\n\t\t},\n\t\t[openRoom, result.voipClient, user, voipEndpoint, findOrCreateVisitor],\n\t);\n\n\tuseEffect(() => {\n\t\tif (!voipEnabled || !user || !queueAggregator) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst handleEventReceived = async (event: VoipEventDataSignature): Promise<void> => {\n\t\t\tif (isVoipEventAgentCalled(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.callRinging({ queuename: data.queue, callerid: data.callerId });\n\t\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (isVoipEventAgentConnected(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.callPickedup({ queuename: data.queue, queuedcalls: data.queuedCalls, waittimeinqueue: data.waitTimeInQueue });\n\t\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (isVoipEventCallerJoined(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.queueJoined({ queuename: data.queue, callerid: data.callerId, queuedcalls: data.queuedCalls });\n\t\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (isVoipEventQueueMemberAdded(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.memberAdded({ queuename: data.queue, queuedcalls: data.queuedCalls });\n\t\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (isVoipEventQueueMemberRemoved(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.memberRemoved({ queuename: data.queue, queuedcalls: data.queuedCalls });\n\t\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (isVoipEventCallAbandoned(event)) {\n\t\t\t\tconst { data } = event;\n\t\t\t\tqueueAggregator.queueAbandoned({ queuename: data.queue, queuedcallafterabandon: data.queuedCallAfterAbandon });\n\t\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\t\t\t\tsetQueueCounter(queueAggregator.getCallWaitingCount());\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconsole.warn('Unknown event received');\n\t\t};\n\n\t\treturn subscribeToNotifyUser(`${user._id}/voip.events`, handleEventReceived);\n\t}, [subscribeToNotifyUser, user, queueAggregator, voipEnabled]);\n\n\t// This was causing event duplication before, so we'll leave this here for now\n\tuseEffect(() => {\n\t\tif (!voipEnabled || !user || !queueAggregator) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn subscribeToNotifyUser(`${user._id}/call.hangup`, (event): void => {\n\t\t\tsetQueueName(queueAggregator.getCurrentQueueName());\n\n\t\t\tif (hasVoIPEnterpriseLicense) {\n\t\t\t\topenWrapUpModal();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcloseRoom();\n\n\t\t\tdispatchEvent({ event: VoipClientEvents['VOIP-CALL-ENDED'], rid: event.roomId });\n\t\t});\n\t}, [openWrapUpModal, queueAggregator, subscribeToNotifyUser, user, voipEnabled, dispatchEvent, hasVoIPEnterpriseLicense, closeRoom]);\n\n\tuseEffect(() => {\n\t\tif (!result.voipClient) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst offRegistered = result.voipClient.on('registered', (): void => setClientState('registered'));\n\t\tconst offUnregistered = result.voipClient.on('unregistered', (): void => setClientState('unregistered'));\n\n\t\treturn (): void => {\n\t\t\toffRegistered();\n\t\t\toffUnregistered();\n\t\t};\n\t}, [result.voipClient]);\n\n\tuseEffect(() => {\n\t\tif (!result.voipClient) {\n\t\t\treturn;\n\t\t}\n\n\t\t/*\n\t\t * This code may need a revisit when we handle callinqueue differently.\n\t\t * Check clickup tasks for more details\n\t\t * https://app.clickup.com/t/22hy1k4\n\t\t * When customer called a queue (Either using skype or using internal number), call would get established\n\t\t * customer would hear agent's voice but agent would not hear anything from customer.\n\t\t * This issue was observed on unstable. It was found to be inconsistent to reproduce.\n\t\t * On some developer env, it would happen randomly. On Safari it did not happen if\n\t\t * user refreshes before taking every call.\n\t\t *\n\t\t * The reason behind this was as soon as agent accepts a call, queueCounter would change.\n\t\t * This change will trigger re-rendering of media and creation of audio element.\n\t\t * This audio element gets used by voipClient to render the remote audio.\n\t\t * Because the re-render happened, it would hold a stale reference.\n\t\t *\n\t\t * If the dom is inspected, audio element just before body is usually created by this class.\n\t\t * this audio element.srcObject contains null value. In working case, it should display\n\t\t * valid stream object.\n\t\t *\n\t\t * Reason for inconsistencies :\n\t\t * This element is utilized in VoIPUser::setupRemoteMedia\n\t\t * This function is called when webRTC receives a remote track event. i.e when the webrtc's peer connection\n\t\t * starts receiving media. This event call back depends on several factors. How does asterisk setup streams.\n\t\t * How does it creates a bridge which patches up the agent and customer (Media is flowing thru asterisk).\n\t\t * When it works in de-environment, it was observed that the audio element in dom and the audio element hold\n\t\t * by VoIPUser is different. Nonetheless, this stale audio element holds valid media stream, which is being played.\n\t\t * Hence sometimes the audio is heard.\n\t\t *\n\t\t * Ideally call component once gets stable, should not get rerendered. Queue, Room creation are the parameters\n\t\t * which should be independent and should not control the call component.\n\t\t *\n\t\t * Solution :\n\t\t * Either make the audio elemenent rendered independent of rest of the DOM.\n\t\t * or implement useEffect. This useEffect will reset the rendering elements with the latest audio tag.\n\t\t *\n\t\t * Note : If this code gets refactor, revisit the line below to check if this call is needed.\n\t\t *\n\t\t */\n\t\tremoteAudioMediaRef.current && result.voipClient.switchMediaRenderer({ remoteMediaElement: remoteAudioMediaRef.current });\n\t}, [result.voipClient]);\n\n\tuseEffect(() => {\n\t\tif (!result.voipClient) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!user) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst onCallEstablished = async (callDetails: ICallDetails): Promise<undefined> => {\n\t\t\tif (!callDetails.callInfo) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvoipSounds.stopAll();\n\t\t\tif (callDetails.userState !== UserState.UAC) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Agent has sent Invite. So it must create a room.\n\t\t\tconst { callInfo } = callDetails;\n\t\t\t// While making the call, there is no remote media element available.\n\t\t\t// When the call is ringing we have that element created. But we still\n\t\t\t// do not want it to be attached.\n\t\t\t// When call gets established, then switch the media renderer.\n\t\t\tremoteAudioMediaRef.current && result.voipClient?.switchMediaRenderer({ remoteMediaElement: remoteAudioMediaRef.current });\n\t\t\tconst roomId = await createRoom(callInfo, 'outbound');\n\t\t\tdispatchEvent({ event: VoipClientEvents['VOIP-CALL-STARTED'], rid: roomId });\n\t\t};\n\n\t\tconst onNetworkConnected = (): void => {\n\t\t\tif (networkStatus === 'offline') {\n\t\t\t\tsetNetworkStatus('online');\n\t\t\t}\n\t\t};\n\n\t\tconst onNetworkDisconnected = (): void => {\n\t\t\t// Transitioning from online -> offline\n\t\t\t// If there is ongoing call, terminate it or if we are processing an incoming/outgoing call\n\t\t\t// reject it.\n\t\t\tif (networkStatus === 'online') {\n\t\t\t\tsetNetworkStatus('offline');\n\t\t\t\tswitch (result.voipClient?.callerInfo.state) {\n\t\t\t\t\tcase 'IN_CALL':\n\t\t\t\t\tcase 'ON_HOLD':\n\t\t\t\t\t\tresult.voipClient?.endCall();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'OFFER_RECEIVED':\n\t\t\t\t\tcase 'ANSWER_SENT':\n\t\t\t\t\t\tresult.voipClient?.rejectCall();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst onRinging = (): void => {\n\t\t\tvoipSounds.play('outbound-call-ringing');\n\t\t};\n\n\t\tconst onIncomingCallRinging = (): void => {\n\t\t\tvoipSounds.play('telephone');\n\t\t};\n\n\t\tconst onCallTerminated = (): void => {\n\t\t\tvoipSounds.play('call-ended', false);\n\t\t\tvoipSounds.stopAll();\n\t\t};\n\n\t\tconst onCallFailed = (reason: 'Not Found' | 'Address Incomplete' | 'Request Terminated' | string): void => {\n\t\t\tswitch (reason) {\n\t\t\t\tcase 'Not Found':\n\t\t\t\t\t// This happens when the call matches dialplan and goes to the world, but the trunk doesnt find the number.\n\t\t\t\t\topenDialModal({ errorMessage: t('Dialed_number_doesnt_exist') });\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Address Incomplete':\n\t\t\t\t\t// This happens when the dialed number doesnt match a valid asterisk dialplan pattern or the number is invalid.\n\t\t\t\t\topenDialModal({ errorMessage: t('Dialed_number_is_incomplete') });\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Request Terminated':\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\topenDialModal({ errorMessage: t('Something_went_wrong_try_again_later') });\n\t\t\t}\n\t\t};\n\n\t\tresult.voipClient.onNetworkEvent('connected', onNetworkConnected);\n\t\tresult.voipClient.onNetworkEvent('disconnected', onNetworkDisconnected);\n\t\tresult.voipClient.onNetworkEvent('connectionerror', onNetworkDisconnected);\n\t\tresult.voipClient.onNetworkEvent('localnetworkonline', onNetworkConnected);\n\t\tresult.voipClient.onNetworkEvent('localnetworkoffline', onNetworkDisconnected);\n\t\tresult.voipClient.on('callestablished', onCallEstablished);\n\t\tresult.voipClient.on('ringing', onRinging); // not called for incoming call\n\t\tresult.voipClient.on('incomingcall', onIncomingCallRinging);\n\t\tresult.voipClient.on('callterminated', onCallTerminated);\n\n\t\tif (isOutboundClient(result.voipClient)) {\n\t\t\tresult.voipClient.on('callfailed', onCallFailed);\n\t\t}\n\n\t\treturn (): void => {\n\t\t\tresult.voipClient?.offNetworkEvent('connected', onNetworkConnected);\n\t\t\tresult.voipClient?.offNetworkEvent('disconnected', onNetworkDisconnected);\n\t\t\tresult.voipClient?.offNetworkEvent('connectionerror', onNetworkDisconnected);\n\t\t\tresult.voipClient?.offNetworkEvent('localnetworkonline', onNetworkConnected);\n\t\t\tresult.voipClient?.offNetworkEvent('localnetworkoffline', onNetworkDisconnected);\n\t\t\tresult.voipClient?.off('incomingcall', onIncomingCallRinging);\n\t\t\tresult.voipClient?.off('ringing', onRinging);\n\t\t\tresult.voipClient?.off('callestablished', onCallEstablished);\n\t\t\tresult.voipClient?.off('callterminated', onCallTerminated);\n\n\t\t\tif (isOutboundClient(result.voipClient)) {\n\t\t\t\tresult.voipClient?.off('callfailed', onCallFailed);\n\t\t\t}\n\t\t};\n\t}, [createRoom, dispatchEvent, networkStatus, openDialModal, result.voipClient, voipSounds, t, user]);\n\n\tconst contextValue: CallContextValue = useMemo(() => {\n\t\tif (!voipEnabled) {\n\t\t\treturn {\n\t\t\t\tenabled: false,\n\t\t\t\tready: false,\n\t\t\t\toutBoundCallsAllowed: undefined, // set to true only if enterprise license is present.\n\t\t\t\toutBoundCallsEnabled: undefined, // set to true even if enterprise license is not present.\n\t\t\t\toutBoundCallsEnabledForUser: undefined, // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n\t\t\t};\n\t\t}\n\n\t\tif (!user?.extension) {\n\t\t\treturn {\n\t\t\t\tenabled: false,\n\t\t\t\tready: false,\n\t\t\t\toutBoundCallsAllowed: undefined, // set to true only if enterprise license is present.\n\t\t\t\toutBoundCallsEnabled: undefined, // set to true even if enterprise license is not present.\n\t\t\t\toutBoundCallsEnabledForUser: undefined, // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n\t\t\t};\n\t\t}\n\n\t\tif (result.error) {\n\t\t\treturn {\n\t\t\t\tenabled: true,\n\t\t\t\tready: false,\n\t\t\t\terror: result.error,\n\t\t\t\toutBoundCallsAllowed: undefined, // set to true only if enterprise license is present.\n\t\t\t\toutBoundCallsEnabled: undefined, // set to true even if enterprise license is not present.\n\t\t\t\toutBoundCallsEnabledForUser: undefined, // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n\t\t\t};\n\t\t}\n\n\t\tif (!result.voipClient) {\n\t\t\treturn {\n\t\t\t\tenabled: true,\n\t\t\t\tready: false,\n\t\t\t\toutBoundCallsAllowed: undefined, // set to true only if enterprise license is present.\n\t\t\t\toutBoundCallsEnabled: undefined, // set to true even if enterprise license is not present.\n\t\t\t\toutBoundCallsEnabledForUser: undefined, // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n\t\t\t};\n\t\t}\n\n\t\tconst { registrationInfo, voipClient } = result;\n\n\t\treturn {\n\t\t\toutBoundCallsAllowed: hasVoIPEnterpriseLicense, // set to true only if enterprise license is present.\n\t\t\toutBoundCallsEnabled: hasVoIPEnterpriseLicense, // set to true even if enterprise license is not present.\n\t\t\toutBoundCallsEnabledForUser:\n\t\t\t\thasVoIPEnterpriseLicense && clientState === 'registered' && !['IN_CALL', 'ON_HOLD'].includes(voipClient.callerInfo.state), // set to true if the user has enterprise license, but is not able to make outbound calls. (busy, or disabled)\n\n\t\t\tenabled: true,\n\t\t\tready: true,\n\t\t\topenedRoomInfo: roomInfo,\n\t\t\tvoipClient,\n\t\t\tregistrationInfo,\n\t\t\tqueueCounter,\n\t\t\tqueueName,\n\t\t\tactions: {\n\t\t\t\tmute: (): Promise<void> => voipClient.muteCall(true), // voipClient.mute(),\n\t\t\t\tunmute: (): Promise<void> => voipClient.muteCall(false), // voipClient.unmute()\n\t\t\t\tpause: (): Promise<void> => voipClient.holdCall(true), // voipClient.pause()\n\t\t\t\tresume: (): Promise<void> => voipClient.holdCall(false), // voipClient.resume()\n\t\t\t\tend: (): Promise<OutgoingByeRequest | void> => voipClient.endCall(),\n\t\t\t\tpickUp: async (): Promise<void | null> =>\n\t\t\t\t\tremoteAudioMediaRef.current && voipClient.acceptCall({ remoteMediaElement: remoteAudioMediaRef.current }),\n\t\t\t\treject: (): Promise<void> => voipClient.rejectCall(),\n\t\t\t},\n\t\t\topenRoom,\n\t\t\tcreateRoom,\n\t\t\tcloseRoom,\n\t\t\tnetworkStatus,\n\t\t\topenWrapUpModal,\n\t\t\tchangeAudioOutputDevice,\n\t\t\tchangeAudioInputDevice,\n\t\t\tregister: (): void => voipClient.register(),\n\t\t\tunregister: (): void => voipClient.unregister(),\n\t\t};\n\t}, [\n\t\tvoipEnabled,\n\t\tuser?.extension,\n\t\tresult,\n\t\thasVoIPEnterpriseLicense,\n\t\tclientState,\n\t\troomInfo,\n\t\tqueueCounter,\n\t\tqueueName,\n\t\topenRoom,\n\t\tcreateRoom,\n\t\tcloseRoom,\n\t\topenWrapUpModal,\n\t\tchangeAudioOutputDevice,\n\t\tchangeAudioInputDevice,\n\t\tnetworkStatus,\n\t]);\n\n\treturn (\n\t\t<CallContext.Provider value={contextValue}>\n\t\t\t{children}\n\t\t\t{contextValue.enabled && createPortal(<audio ref={remoteAudioMediaRef} />, document.body)}\n\t\t</CallContext.Provider>\n\t);\n};\n",null],"names":["VoipClientEvents","isVoipEventAgentConnected","isVoipEventCallerJoined","isVoipEventQueueMemberAdded","isVoipEventQueueMemberRemoved","isVoipEventCallAbandoned","UserState","useMutableCallback","Random","useRouter","useUser","useSetting","useEndpoint","useStream","useSetOutputMediaDevice","useSetInputMediaDevice","useSetModal","useTranslation","React","useMemo","useRef","useCallback","useEffect","useState","createPortal","isOutboundClient","useVoipClient","parseOutboundPhoneNumber","WrapUpCallModal","CallContext","useIsVoipEnterprise","useDialModal","roomCoordinator","useVoipSounds","module","export","CallProvider","link","isVoipEventAgentCalled","default","_ref","children","clientState","setClientState","voipEnabled","subscribeToNotifyUser","dispatchEvent","visitorEndpoint","voipEndpoint","voipCloseRoomEndpoint","getContactBy","setModal","t","result","user","router","setOutputMediaDevice","setInputMediaDevice","hasVoIPEnterpriseLicense","remoteAudioMediaRef","queueCounter","setQueueCounter","queueName","setQueueName","roomInfo","setRoomInfo","v","rid","openDialModal","voipSounds","closeRoom","_result$voipClient","data","arguments","length","undefined","token","options","comment","tags","navigate","queueAggregator","voipClient","getAggregator","callEnded","openWrapUpModal","createElement","changeAudioOutputDevice","selectedAudioDevice","current","outputDevice","HTMLAudioElement","changeAudioInputDevice","constraints","audio","deviceId","exact","id","setQueueAggregator","networkStatus","setNetworkStatus","unregister","openRoom","openRouteLink","findOrCreateVisitor","caller","phone","callerId","contact","visitor","name","callerName","createRoom","direction","_result$voipClient2","voipRoom","agentId","_id","room","callStarted","error","console","concat","handleEventReceived","event","callRinging","queuename","queue","callerid","getCurrentQueueName","callPickedup","queuedcalls","queuedCalls","waittimeinqueue","waitTimeInQueue","getCallWaitingCount","queueJoined","memberAdded","memberRemoved","queueAbandoned","queuedcallafterabandon","queuedCallAfterAbandon","warn","roomId","offRegistered","on","offUnregistered","switchMediaRenderer","remoteMediaElement","onCallEstablished","callDetails","_result$voipClient3","callInfo","stopAll","userState","UAC","onNetworkConnected","onNetworkDisconnected","_result$voipClient5","_result$voipClient6","_result$voipClient4","callerInfo","state","endCall","rejectCall","onRinging","play","onIncomingCallRinging","onCallTerminated","onCallFailed","reason","errorMessage","onNetworkEvent","_result$voipClient7","_result$voipClient8","_result$voipClient9","_result$voipClient10","_result$voipClient11","_result$voipClient12","_result$voipClient13","_result$voipClient14","_result$voipClient15","_result$voipClient16","offNetworkEvent","off","contextValue","extension","enabled","ready","outBoundCallsAllowed","outBoundCallsEnabled","outBoundCallsEnabledForUser","registrationInfo","includes","openedRoomInfo","actions","mute","muteCall","unmute","pause","holdCall","resume","end","pickUp","acceptCall","reject","register","Provider","value","ref","document","body"],"mappings":"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"}