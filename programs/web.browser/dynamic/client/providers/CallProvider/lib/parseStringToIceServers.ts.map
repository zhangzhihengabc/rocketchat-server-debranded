)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/providers/CallProvider/lib/parseStringToIceServers.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IceServer } from '../definitions/IceServer';\n\nexport const parseStringToIceServer = (server: string): IceServer => {\n\tconst credentials = server.trim().split('@');\n\tconst urls = credentials.pop() as string;\n\tconst [username, credential] = credentials.length === 1 ? credentials[0].split(':') : [];\n\n\treturn {\n\t\turls,\n\t\t...(username &&\n\t\t\tcredential && {\n\t\t\t\tusername: decodeURIComponent(username),\n\t\t\t\tcredential: decodeURIComponent(credential),\n\t\t\t}),\n\t};\n};\n\nexport const parseStringToIceServers = (string: string): IceServer[] => {\n\tconst lines = string.trim() ? string.split(',') : [];\n\treturn lines.map((line) => parseStringToIceServer(line));\n};\n",null],"names":["_objectSpread","module","default","export","parseStringToIceServer","parseStringToIceServers","server","credentials","trim","split","urls","pop","username","credential","length","decodeURIComponent","string","lines","map","line"],"mappings":"2BAEAA,EAAaC,EAAAA,IAAAA,CAAAA,uCAAuD,CAAAC,QAAAA,CAAAA,EAAAF,EAAAA,CAAA,CAAA,EAAA,GAApEC,EAAOE,MAAM,CAAA,CAAAC,uBAAyB,IAACA,EAA6BC,wBAAAA,IAAAA,CAAA,GAA7D,IAAMD,EAA0BE,IACtC,IAAMC,EAAcD,EAAOE,IAAI,GAAGC,KAAK,CAAC,KAClCC,EAAOH,EAAYI,GAAG,GACtB,CAACC,EAAUC,EAAW,CAAGN,AAAuB,IAAvBA,EAAYO,MAAM,CAASP,CAAW,CAAC,EAAE,CAACE,KAAK,CAAC,KAAO,EAAE,CAExF,OAAAT,EAAA,CACCU,KAAAA,CAAI,EACAE,GACHC,GAAc,CACbD,SAAUG,mBAAmBH,GAC7BC,WAAYE,mBAAmBF,IAGnC,EAEaR,EAA2BW,IACvC,IAAMC,EAAQD,EAAOR,IAAI,GAAKQ,EAAOP,KAAK,CAAC,KAAO,EAAE,CACpD,OAAOQ,EAAMC,GAAG,CAAEC,GAASf,EAAuBe,GACnD"}