)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/providers/OmnichannelProvider.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type {\n\tIOmnichannelAgent,\n\tOmichannelRoutingConfig,\n\tOmnichannelSortingMechanismSettingType,\n\tILivechatInquiryRecord,\n} from '@rocket.chat/core-typings';\nimport { useSafely } from '@rocket.chat/fuselage-hooks';\nimport { useUser, useSetting, usePermission, useMethod, useEndpoint, useStream } from '@rocket.chat/ui-contexts';\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\nimport type { FC } from 'react';\nimport React, { useState, useEffect, useMemo, useCallback, memo, useRef } from 'react';\n\nimport { LivechatInquiry } from '../../app/livechat/client/collections/LivechatInquiry';\nimport { initializeLivechatInquiryStream } from '../../app/livechat/client/lib/stream/queueManager';\nimport { getOmniChatSortQuery } from '../../app/livechat/lib/inquiries';\nimport { Notifications } from '../../app/notifications/client';\nimport { KonchatNotification } from '../../app/ui/client/lib/KonchatNotification';\nimport { useHasLicenseModule } from '../../ee/client/hooks/useHasLicenseModule';\nimport { ClientLogger } from '../../lib/ClientLogger';\nimport type { OmnichannelContextValue } from '../contexts/OmnichannelContext';\nimport { OmnichannelContext } from '../contexts/OmnichannelContext';\nimport { useReactiveValue } from '../hooks/useReactiveValue';\nimport { useShouldPreventAction } from '../hooks/useShouldPreventAction';\n\nconst emptyContextValue: OmnichannelContextValue = {\n\tinquiries: { enabled: false },\n\tenabled: false,\n\tisEnterprise: false,\n\tagentAvailable: false,\n\tshowOmnichannelQueueLink: false,\n\tisOverMacLimit: false,\n\tlivechatPriorities: {\n\t\tenabled: false,\n\t\tdata: [],\n\t\tisLoading: false,\n\t\tisError: false,\n\t},\n};\n\nconst OmnichannelProvider: FC = ({ children }) => {\n\tconst omniChannelEnabled = useSetting('Livechat_enabled') as boolean;\n\tconst omnichannelRouting = useSetting('Livechat_Routing_Method');\n\tconst showOmnichannelQueueLink = useSetting('Livechat_show_queue_list_link') as boolean;\n\tconst omnichannelPoolMaxIncoming = useSetting<number>('Livechat_guest_pool_max_number_incoming_livechats_displayed') ?? 0;\n\tconst omnichannelSortingMechanism = useSetting('Omnichannel_sorting_mechanism') as OmnichannelSortingMechanismSettingType;\n\n\tconst loggerRef = useRef(new ClientLogger('OmnichannelProvider'));\n\tconst hasAccess = usePermission('view-l-room');\n\tconst canViewOmnichannelQueue = usePermission('view-livechat-queue');\n\tconst user = useUser() as IOmnichannelAgent;\n\n\tconst agentAvailable = user?.statusLivechat === 'available';\n\tconst voipCallAvailable = true; // TODO: use backend check;\n\n\tconst getRoutingConfig = useMethod('livechat:getRoutingConfig');\n\n\tconst [routeConfig, setRouteConfig] = useSafely(useState<OmichannelRoutingConfig | undefined>(undefined));\n\tconst [queueNotification, setQueueNotification] = useState(new Set());\n\n\tconst accessible = hasAccess && omniChannelEnabled;\n\tconst iceServersSetting: any = useSetting('WebRTC_Servers');\n\tconst isEnterprise = useHasLicenseModule('livechat-enterprise') === true;\n\n\tconst getPriorities = useEndpoint('GET', '/v1/livechat/priorities');\n\tconst subscribe = useStream('notify-logged');\n\tconst queryClient = useQueryClient();\n\tconst isPrioritiesEnabled = isEnterprise && accessible;\n\tconst enabled = accessible && !!user && !!routeConfig;\n\n\tconst {\n\t\tdata: { priorities = [] } = {},\n\t\tisInitialLoading: isLoadingPriorities,\n\t\tisError: isErrorPriorities,\n\t} = useQuery(['/v1/livechat/priorities'], () => getPriorities({ sort: JSON.stringify({ sortItem: 1 }) }), {\n\t\tstaleTime: Infinity,\n\t\tenabled: isPrioritiesEnabled,\n\t});\n\n\tconst isOverMacLimit = useShouldPreventAction('monthlyActiveContacts');\n\n\tuseEffect(() => {\n\t\tif (!isPrioritiesEnabled) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn subscribe('omnichannel.priority-changed', () => {\n\t\t\tqueryClient.invalidateQueries(['/v1/livechat/priorities']);\n\t\t});\n\t}, [isPrioritiesEnabled, queryClient, subscribe]);\n\n\tuseEffect(() => {\n\t\tif (!accessible) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst update = async (): Promise<void> => {\n\t\t\ttry {\n\t\t\t\tconst routeConfig = await getRoutingConfig();\n\t\t\t\tsetRouteConfig(routeConfig);\n\t\t\t} catch (error) {\n\t\t\t\tloggerRef.current.error(`update() error in routeConfig ${error}`);\n\t\t\t}\n\t\t};\n\n\t\tif (omnichannelRouting || !omnichannelRouting) {\n\t\t\tupdate();\n\t\t}\n\t}, [accessible, getRoutingConfig, iceServersSetting, omnichannelRouting, setRouteConfig, voipCallAvailable]);\n\n\tconst manuallySelected =\n\t\tenabled && canViewOmnichannelQueue && !!routeConfig && routeConfig.showQueue && !routeConfig.autoAssignAgent && agentAvailable;\n\n\tuseEffect(() => {\n\t\tif (!manuallySelected) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst handleDepartmentAgentData = (): void => {\n\t\t\tinitializeLivechatInquiryStream(user?._id);\n\t\t};\n\n\t\tinitializeLivechatInquiryStream(user?._id);\n\t\treturn Notifications.onUser('departmentAgentData', handleDepartmentAgentData).stop;\n\t}, [manuallySelected, user?._id]);\n\n\tconst queue = useReactiveValue<ILivechatInquiryRecord[] | undefined>(\n\t\tuseCallback(() => {\n\t\t\tif (!manuallySelected) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn LivechatInquiry.find(\n\t\t\t\t{ status: 'queued' },\n\t\t\t\t{\n\t\t\t\t\tsort: getOmniChatSortQuery(omnichannelSortingMechanism),\n\t\t\t\t\tlimit: omnichannelPoolMaxIncoming,\n\t\t\t\t},\n\t\t\t).fetch();\n\t\t}, [manuallySelected, omnichannelPoolMaxIncoming, omnichannelSortingMechanism]),\n\t);\n\n\tqueue?.map(({ rid }) => {\n\t\tif (queueNotification.has(rid)) {\n\t\t\treturn;\n\t\t}\n\t\tsetQueueNotification((prev) => new Set([...prev, rid]));\n\t\treturn KonchatNotification.newRoom(rid);\n\t});\n\n\tconst contextValue = useMemo<OmnichannelContextValue>(() => {\n\t\tif (!enabled) {\n\t\t\treturn emptyContextValue;\n\t\t}\n\n\t\tconst livechatPriorities = {\n\t\t\tenabled: isPrioritiesEnabled,\n\t\t\tdata: priorities,\n\t\t\tisLoading: isLoadingPriorities,\n\t\t\tisError: isErrorPriorities,\n\t\t};\n\n\t\tif (!manuallySelected) {\n\t\t\treturn {\n\t\t\t\t...emptyContextValue,\n\t\t\t\tenabled: true,\n\t\t\t\tisEnterprise,\n\t\t\t\tagentAvailable,\n\t\t\t\tvoipCallAvailable,\n\t\t\t\trouteConfig,\n\t\t\t\tlivechatPriorities,\n\t\t\t\tisOverMacLimit,\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t...emptyContextValue,\n\t\t\tenabled: true,\n\t\t\tisEnterprise,\n\t\t\tagentAvailable,\n\t\t\tvoipCallAvailable,\n\t\t\trouteConfig,\n\t\t\tinquiries: queue\n\t\t\t\t? {\n\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\tqueue,\n\t\t\t\t  }\n\t\t\t\t: { enabled: false },\n\t\t\tshowOmnichannelQueueLink: showOmnichannelQueueLink && !!agentAvailable,\n\t\t\tlivechatPriorities,\n\t\t\tisOverMacLimit,\n\t\t};\n\t}, [\n\t\tenabled,\n\t\tisPrioritiesEnabled,\n\t\tpriorities,\n\t\tisLoadingPriorities,\n\t\tisErrorPriorities,\n\t\tmanuallySelected,\n\t\tisEnterprise,\n\t\tagentAvailable,\n\t\tvoipCallAvailable,\n\t\trouteConfig,\n\t\tqueue,\n\t\tshowOmnichannelQueueLink,\n\t\tisOverMacLimit,\n\t]);\n\n\treturn <OmnichannelContext.Provider children={children} value={contextValue} />;\n};\n\nexport default memo<typeof OmnichannelProvider>(OmnichannelProvider);\n",null],"names":["_objectSpread","useSafely","useUser","useSetting","usePermission","useMethod","useEndpoint","useStream","useQuery","useQueryClient","React","useState","useEffect","useMemo","useCallback","memo","useRef","LivechatInquiry","initializeLivechatInquiryStream","getOmniChatSortQuery","Notifications","KonchatNotification","useHasLicenseModule","ClientLogger","OmnichannelContext","useReactiveValue","useShouldPreventAction","module","link","default","emptyContextValue","inquiries","enabled","isEnterprise","agentAvailable","showOmnichannelQueueLink","isOverMacLimit","livechatPriorities","data","isLoading","isError","exportDefault","_ref","_useSetting","children","omniChannelEnabled","omnichannelRouting","omnichannelPoolMaxIncoming","omnichannelSortingMechanism","loggerRef","hasAccess","canViewOmnichannelQueue","user","statusLivechat","getRoutingConfig","routeConfig","setRouteConfig","undefined","queueNotification","setQueueNotification","Set","accessible","iceServersSetting","getPriorities","subscribe","queryClient","isPrioritiesEnabled","priorities","isInitialLoading","isLoadingPriorities","isErrorPriorities","sort","JSON","stringify","sortItem","staleTime","Infinity","invalidateQueries","update","error","current","concat","manuallySelected","showQueue","autoAssignAgent","_id","onUser","stop","queue","find","status","limit","fetch","map","_ref2","rid","has","prev","newRoom","contextValue","voipCallAvailable","createElement","Provider","value"],"mappings":"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"}