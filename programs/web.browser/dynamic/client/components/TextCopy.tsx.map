)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/components/TextCopy.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Box, Button, Scrollable } from '@rocket.chat/fuselage';\nimport { useToastMessageDispatch, useTranslation } from '@rocket.chat/ui-contexts';\nimport type { ComponentProps, ReactElement } from 'react';\nimport React, { useCallback } from 'react';\n\nconst defaultWrapperRenderer = (text: string): ReactElement => (\n\t<Box fontFamily='mono' alignSelf='center' fontScale='p2' style={{ wordBreak: 'break-all' }} mie={4} flexGrow={1} maxHeight='x108'>\n\t\t{text}\n\t</Box>\n);\n\ntype TextCopyProps = {\n\ttext: string;\n\twrapper?: (text: string) => ReactElement;\n} & ComponentProps<typeof Box>;\n\n// TODO: useClipboard instead of navigator API.\nconst TextCopy = ({ text, wrapper = defaultWrapperRenderer, ...props }: TextCopyProps): ReactElement => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst onClick = useCallback(() => {\n\t\ttry {\n\t\t\tnavigator.clipboard.writeText(text);\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Copied') });\n\t\t} catch (e) {\n\t\t\tdispatchToastMessage({ type: 'error', message: e });\n\t\t}\n\t}, [dispatchToastMessage, t, text]);\n\n\treturn (\n\t\t<Box\n\t\t\tdisplay='flex'\n\t\t\tflexDirection='row'\n\t\t\tjustifyContent='stretch'\n\t\t\talignItems='flex-start'\n\t\t\tflexGrow={1}\n\t\t\tpadding={16}\n\t\t\tbackgroundColor='surface'\n\t\t\twidth='full'\n\t\t\t{...props}\n\t\t>\n\t\t\t<Scrollable vertical>{wrapper(text)}</Scrollable>\n\t\t\t<Button icon='copy' secondary square small flexShrink={0} onClick={onClick} title={t('Copy')} />\n\t\t</Box>\n\t);\n};\n\nexport default TextCopy;\n",null],"names":["_extends","_objectWithoutProperties","Box","Button","Scrollable","useToastMessageDispatch","useTranslation","React","useCallback","module","link","default","v","defaultWrapperRenderer","text","createElement","fontFamily","alignSelf","fontScale","style","wordBreak","mie","flexGrow","maxHeight","exportDefault","_ref","wrapper","props","_excluded","t","dispatchToastMessage","onClick","navigator","clipboard","writeText","type","message","e","display","flexDirection","justifyContent","alignItems","padding","backgroundColor","width","vertical","icon","secondary","square","small","flexShrink","title"],"mappings":"2BAAAA,EAAgEC,EAAhEC,EAAOC,EAAOC,EAAkDC,EAAAC,EAAAC,EAAAC,2BAApDC,EAAQC,IAAE,CAAA,iCAAkB,CAAAC,QAAwBC,CAAA,EAAAZ,EAAAA,CAAA,CAAA,EAAA,GAAAS,EAAAA,IAAAA,CAAAA,iDAAAA,CAAAE,QAAAA,CAAAA,EAAAV,EAAAA,CAAA,CAAA,EAAA,GAA1CQ,EAAUC,IAAE,CAAA,wBAAM,CAAuBR,IAACU,CAAA,EAAAV,EAAAA,CAAA,EAAAC,OAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAJ,wBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,QAAAA,CAAAE,QAAAA,CAAAA,EAAAJ,EAAAA,CAAA,EAAAC,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAKhE,IAAMK,EAA0BC,GAC/BP,EAAAQ,aAAA,CAACb,EAAG,CAACc,WAAW,OAAOC,UAAU,SAASC,UAAU,KAAKC,MAAO,CAAEC,UAAW,WAAW,EAAIC,IAAK,EAAGC,SAAU,EAAGC,UAAU,MAAM,EAC/HT,GAPHL,EAAOe,aAAa,CAiBHC,IAAsF,GAArF,CAAEX,KAAAA,CAAI,CAAEY,QAAAA,EAAUb,CAAAA,CAAiD,CAAAY,EAAtBE,EAAK1B,EAAAwB,EAAAG,GAC7DC,EAAIvB,IACJwB,EAAuBzB,IAEvB0B,EAAUvB,EAAY,KAC3B,GAAI,CACHwB,UAAUC,SAAS,CAACC,SAAS,CAACpB,GAC9BgB,EAAqB,CAAEK,KAAM,UAAWC,QAASP,EAAE,SAAS,GAC3D,MAAOQ,EAAG,CACXP,EAAqB,CAAEK,KAAM,QAASC,QAASC,CAAC,GAElD,EAAG,CAACP,EAAsBD,EAAGf,EAAK,EAElC,OACCP,EAAAQ,aAAA,CAACb,EAAGF,EAAA,CACHsC,QAAQ,OACRC,cAAc,MACdC,eAAe,UACfC,WAAW,aACXnB,SAAU,EACVoB,QAAS,GACTC,gBAAgB,UAChBC,MAAM,MAAM,EACRjB,GAEJpB,EAAAQ,aAAA,CAACX,EAAU,CAACyC,SAAQ,CAAA,CAAA,EAAEnB,EAAQZ,IAC9BP,EAAAQ,aAAA,CAACZ,EAAM,CAAC2C,KAAK,OAAOC,UAAS,CAAA,EAACC,OAAM,CAAA,EAACC,MAAK,CAAA,EAACC,WAAY,EAAGnB,QAASA,EAASoB,MAAOtB,EAAE,OAAQ,GAGhG"}