)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/components/message/variants/SystemMessage.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport {\n\tMessageSystem,\n\tMessageSystemBody,\n\tMessageSystemContainer,\n\tMessageSystemLeftContainer,\n\tMessageSystemName,\n\tMessageSystemTimestamp,\n\tMessageSystemBlock,\n\tCheckBox,\n\tMessageUsername,\n\tMessageNameContainer,\n} from '@rocket.chat/fuselage';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\nimport { useTranslation } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React, { memo } from 'react';\n\nimport { MessageTypes } from '../../../../app/ui-utils/client';\nimport { getUserDisplayName } from '../../../../lib/getUserDisplayName';\nimport { useFormatDateAndTime } from '../../../hooks/useFormatDateAndTime';\nimport { useFormatTime } from '../../../hooks/useFormatTime';\nimport { useUserData } from '../../../hooks/useUserData';\nimport type { UserPresence } from '../../../lib/presence';\nimport {\n\tuseIsSelecting,\n\tuseToggleSelect,\n\tuseIsSelectedMessage,\n\tuseCountSelected,\n} from '../../../views/room/MessageList/contexts/SelectedMessagesContext';\nimport { useChat } from '../../../views/room/contexts/ChatContext';\nimport UserAvatar from '../../avatar/UserAvatar';\nimport Attachments from '../content/Attachments';\nimport MessageActions from '../content/MessageActions';\nimport { useMessageListShowRealName, useMessageListShowUsername } from '../list/MessageListContext';\n\ntype SystemMessageProps = {\n\tmessage: IMessage;\n\tshowUserAvatar: boolean;\n};\n\nconst SystemMessage = ({ message, showUserAvatar }: SystemMessageProps): ReactElement => {\n\tconst t = useTranslation();\n\tconst formatTime = useFormatTime();\n\tconst formatDateAndTime = useFormatDateAndTime();\n\tconst chat = useChat();\n\n\tconst showRealName = useMessageListShowRealName();\n\tconst user: UserPresence = { ...message.u, roles: [], ...useUserData(message.u._id) };\n\tconst usernameAndRealNameAreSame = !user.name || user.username === user.name;\n\tconst showUsername = useMessageListShowUsername() && showRealName && !usernameAndRealNameAreSame;\n\n\tconst messageType = MessageTypes.getType(message);\n\n\tconst isSelecting = useIsSelecting();\n\tconst toggleSelected = useToggleSelect(message._id);\n\tconst isSelected = useIsSelectedMessage(message._id);\n\tuseCountSelected();\n\n\treturn (\n\t\t<MessageSystem\n\t\t\tonClick={isSelecting ? toggleSelected : undefined}\n\t\t\tisSelected={isSelected}\n\t\t\tdata-qa-selected={isSelected}\n\t\t\tdata-qa='system-message'\n\t\t\tdata-system-message-type={message.t}\n\t\t>\n\t\t\t<MessageSystemLeftContainer>\n\t\t\t\t{!isSelecting && showUserAvatar && <UserAvatar username={message.u.username} size='x18' />}\n\t\t\t\t{isSelecting && <CheckBox checked={isSelected} onChange={toggleSelected} />}\n\t\t\t</MessageSystemLeftContainer>\n\t\t\t<MessageSystemContainer>\n\t\t\t\t<MessageSystemBlock>\n\t\t\t\t\t<MessageNameContainer>\n\t\t\t\t\t\t<MessageSystemName\n\t\t\t\t\t\t\t{...(user.username !== undefined &&\n\t\t\t\t\t\t\t\tchat?.userCard && {\n\t\t\t\t\t\t\t\t\tonClick: chat?.userCard.open(user.username),\n\t\t\t\t\t\t\t\t\tstyle: { cursor: 'pointer' },\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{getUserDisplayName(user.name, user.username, showRealName)}\n\t\t\t\t\t\t</MessageSystemName>\n\t\t\t\t\t\t{showUsername && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t<MessageUsername\n\t\t\t\t\t\t\t\t\tdata-username={user.username}\n\t\t\t\t\t\t\t\t\t{...(user.username !== undefined &&\n\t\t\t\t\t\t\t\t\t\tchat?.userCard && {\n\t\t\t\t\t\t\t\t\t\t\tonClick: chat?.userCard.open(user.username),\n\t\t\t\t\t\t\t\t\t\t\tstyle: { cursor: 'pointer' },\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t@{user.username}\n\t\t\t\t\t\t\t\t</MessageUsername>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</MessageNameContainer>\n\t\t\t\t\t{messageType && (\n\t\t\t\t\t\t<MessageSystemBody\n\t\t\t\t\t\t\tdata-qa-type='system-message-body'\n\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t__html: messageType.render\n\t\t\t\t\t\t\t\t\t? messageType.render(message)\n\t\t\t\t\t\t\t\t\t: t(messageType.message, messageType.data ? messageType.data(message) : {}),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<MessageSystemTimestamp title={formatDateAndTime(message.ts)}>{formatTime(message.ts)}</MessageSystemTimestamp>\n\t\t\t\t</MessageSystemBlock>\n\t\t\t\t{message.attachments && (\n\t\t\t\t\t<MessageSystemBlock>\n\t\t\t\t\t\t<Attachments attachments={message.attachments} />\n\t\t\t\t\t</MessageSystemBlock>\n\t\t\t\t)}\n\t\t\t\t{message.actionLinks?.length && (\n\t\t\t\t\t<MessageActions\n\t\t\t\t\t\tmessage={message}\n\t\t\t\t\t\tactions={message.actionLinks.map(({ method_id: methodId, i18nLabel, ...action }) => ({\n\t\t\t\t\t\t\tmethodId,\n\t\t\t\t\t\t\ti18nLabel: i18nLabel as TranslationKey,\n\t\t\t\t\t\t\t...action,\n\t\t\t\t\t\t}))}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</MessageSystemContainer>\n\t\t</MessageSystem>\n\t);\n};\n\nexport default memo(SystemMessage);\n",null],"names":["_objectWithoutProperties","_extends","_objectSpread","MessageSystem","MessageSystemBody","MessageSystemContainer","MessageSystemLeftContainer","MessageSystemName","MessageSystemTimestamp","MessageSystemBlock","CheckBox","MessageUsername","MessageNameContainer","useTranslation","React","memo","MessageTypes","getUserDisplayName","useFormatDateAndTime","useFormatTime","useUserData","useIsSelecting","useToggleSelect","useIsSelectedMessage","useCountSelected","useChat","UserAvatar","Attachments","MessageActions","useMessageListShowRealName","useMessageListShowUsername","module","default","v","exportDefault","_ref","_message$actionLinks","message","showUserAvatar","t","formatTime","formatDateAndTime","chat","showRealName","user","u","roles","_id","usernameAndRealNameAreSame","name","username","showUsername","messageType","getType","isSelecting","toggleSelected","isSelected","createElement","onClick","undefined","size","checked","onChange","userCard","open","style","cursor","Fragment","dangerouslySetInnerHTML","__html","render","data","title","ts","attachments","actionLinks","length","actions","map","_ref2","method_id","methodId","i18nLabel","_excluded"],"mappings":"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"}