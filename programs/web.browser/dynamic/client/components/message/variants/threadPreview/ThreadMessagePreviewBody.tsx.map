)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/components/message/variants/threadPreview/ThreadMessagePreviewBody.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport { isQuoteAttachment, isE2EEMessage } from '@rocket.chat/core-typings';\nimport { PreviewMarkup } from '@rocket.chat/gazzodown';\nimport type { Root } from '@rocket.chat/message-parser';\nimport { useTranslation } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React, { memo } from 'react';\n\nimport GazzodownText from '../../../GazzodownText';\n\ntype ThreadMessagePreviewBodyProps = {\n\tmessage: IMessage;\n};\n\nconst ThreadMessagePreviewBody = ({ message }: ThreadMessagePreviewBodyProps): ReactElement => {\n\tconst t = useTranslation();\n\tconst isEncryptedMessage = isE2EEMessage(message);\n\n\tconst getMessage = () => {\n\t\tconst mdTokens: Root | undefined = message.md && [...message.md];\n\t\tif (\n\t\t\tmessage.attachments &&\n\t\t\tArray.isArray(message.attachments) &&\n\t\t\tmessage.attachments.length > 0 &&\n\t\t\tisQuoteAttachment(message.attachments[0])\n\t\t) {\n\t\t\tmdTokens?.shift();\n\t\t}\n\t\tif (message.attachments && message.msg === '') {\n\t\t\treturn <>{t('Message_with_attachment')}</>;\n\t\t}\n\t\tif (!isEncryptedMessage || message.e2e === 'done') {\n\t\t\treturn mdTokens ? (\n\t\t\t\t<GazzodownText>\n\t\t\t\t\t<PreviewMarkup tokens={mdTokens} />\n\t\t\t\t</GazzodownText>\n\t\t\t) : (\n\t\t\t\t<>{message.msg}</>\n\t\t\t);\n\t\t}\n\t\tif (isEncryptedMessage && message.e2e === 'pending') {\n\t\t\treturn <>{t('E2E_message_encrypted_placeholder')}</>;\n\t\t}\n\t\treturn <>{message.msg}</>;\n\t};\n\n\treturn getMessage();\n};\n\nexport default memo(ThreadMessagePreviewBody);\n",null],"names":["isQuoteAttachment","isE2EEMessage","PreviewMarkup","useTranslation","React","memo","GazzodownText","module","link","default","exportDefault","_ref","message","t","isEncryptedMessage","getMessage","mdTokens","md","attachments","Array","isArray","length","shift","msg","createElement","Fragment","e2e","tokens"],"mappings":"2BACAA,EAASC,EAAoEC,EAAAC,EAAAC,EAAAC,EAAAC,EAAjDC,EAAeC,IAAAA,CAAAA,4BAAiC,CAACR,kBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,cAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAM,EAAAA,IAAAA,CAAAA,yBAAAA,CAAAL,cAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAJ,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,QAAAA,CAAAE,QAAAA,CAAAA,EAAAL,EAAAA,CAAA,EAAAC,KAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,yBAAAA,CAAAE,QAAAA,CAAAA,EAAAH,EAAAA,CAAA,CAAA,EAAA,GAA7EC,EAAOG,aAAE,CAgDML,EAnCkBM,IAA6D,GAA5D,CAAEC,QAAAA,CAAAA,CAAwC,CAAAD,EACrEE,EAAIV,IACJW,EAAqBb,EAAcW,GA8BzC,MAAOG,AA5BY,CAAA,KAClB,IAAMC,EAA6BJ,EAAQK,EAAE,EAAI,IAAIL,EAAQK,EAAE,CAAC,OAShE,CAPCL,EAAQM,WAAW,EACnBC,MAAMC,OAAO,CAACR,EAAQM,WAAW,GACjCN,EAAQM,WAAW,CAACG,MAAM,CAAG,GAC7BrB,EAAkBY,EAAQM,WAAW,CAAC,EAAE,GAExCF,CAAAA,MAAAA,GAAAA,EAAUM,KAAK,EAAA,EAEZV,EAAQM,WAAW,EAAIN,AAAgB,KAAhBA,EAAQW,GAAG,EAC9BnB,EAAAoB,aAAA,CAAApB,EAAAqB,QAAA,CAAA,KAAGZ,EAAE,4BAET,AAACC,GAAsBF,AAAgB,SAAhBA,EAAQc,GAAG,CASlCZ,GAAsBF,AAAgB,YAAhBA,EAAQc,GAAG,CAC7BtB,EAAAoB,aAAA,CAAApB,EAAAqB,QAAA,CAAA,KAAGZ,EAAE,sCAENT,EAAAoB,aAAA,CAAApB,EAAAqB,QAAA,CAAA,KAAGb,EAAQW,GAAG,EAXbP,EACNZ,EAAAoB,aAAA,CAAClB,EAAa,KACbF,EAAAoB,aAAA,CAACtB,EAAa,CAACyB,OAAQX,CAAS,IAGjCZ,EAAAoB,aAAA,CAAApB,EAAAqB,QAAA,CAAA,KAAGb,EAAQW,GAAG,CAOjB,CAAA,GAGD"}