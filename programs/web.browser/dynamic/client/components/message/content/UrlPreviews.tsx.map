)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/components/message/content/UrlPreviews.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport { MessageBlock } from '@rocket.chat/fuselage';\nimport type { ReactElement } from 'react';\nimport React from 'react';\n\nimport { useOembedLayout } from '../hooks/useOembedLayout';\nimport type { OEmbedPreviewMetadata } from './urlPreviews/OEmbedPreviewMetadata';\nimport OEmbedResolver from './urlPreviews/OEmbedResolver';\nimport UrlPreview from './urlPreviews/UrlPreview';\nimport type { UrlPreviewMetadata } from './urlPreviews/UrlPreviewMetadata';\nimport { buildImageURL } from './urlPreviews/buildImageURL';\n\ntype OembedUrlLegacy = Required<IMessage>['urls'][0];\n\ntype PreviewTypes = 'headers' | 'oembed';\n\ntype PreviewData = {\n\ttype: PreviewTypes;\n\tdata: OEmbedPreviewMetadata | UrlPreviewMetadata;\n};\n\nconst normalizeMeta = ({ url, meta }: { url: string; meta: Record<string, string> }): OEmbedPreviewMetadata => {\n\tconst image = meta.ogImage || meta.twitterImage || meta.msapplicationTileImage || meta.oembedThumbnailUrl || meta.oembedThumbnailUrl;\n\n\tconst imageHeight = meta.ogImageHeight || meta.oembedHeight || meta.oembedThumbnailHeight;\n\tconst imageWidth = meta.ogImageWidth || meta.oembedWidth || meta.oembedThumbnailWidth;\n\n\treturn Object.fromEntries(\n\t\tObject.entries({\n\t\t\tsiteName: meta.ogSiteName || meta.oembedProviderName,\n\t\t\tsiteUrl: meta.ogUrl || meta.oembedProviderUrl,\n\t\t\ttitle: meta.ogTitle || meta.twitterTitle || meta.title || meta.pageTitle || meta.oembedTitle,\n\t\t\tdescription: meta.ogDescription || meta.twitterDescription || meta.description,\n\t\t\tauthorName: meta.oembedAuthorName,\n\t\t\tauthorUrl: meta.oembedAuthorUrl,\n\t\t\t...(image && {\n\t\t\t\timage: {\n\t\t\t\t\turl: buildImageURL(url, image),\n\t\t\t\t\tdimensions: {\n\t\t\t\t\t\t...(imageHeight && { height: imageHeight }),\n\t\t\t\t\t\t...(imageWidth && { width: imageWidth }),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}),\n\t\t\turl: meta.oembedUrl || url,\n\t\t\ttype: meta.ogType || meta.oembedType,\n\t\t\t...(meta.oembedHtml && { html: meta.oembedHtml }),\n\t\t}).filter(([, value]) => value),\n\t);\n};\n\nconst hasContentType = (headers: OembedUrlLegacy['headers']): headers is { contentType: string } =>\n\theaders ? 'contentType' in headers : false;\n\nconst getHeaderType = (headers: OembedUrlLegacy['headers']): UrlPreviewMetadata['type'] | undefined => {\n\tif (!hasContentType(headers)) {\n\t\treturn;\n\t}\n\tif (headers.contentType.match(/image\\/.*/)) {\n\t\treturn 'image';\n\t}\n\tif (headers.contentType.match(/audio\\/.*/)) {\n\t\treturn 'audio';\n\t}\n\tif (headers.contentType.match(/video\\/.*/)) {\n\t\treturn 'video';\n\t}\n};\n\nconst isValidPreviewMeta = ({\n\tsiteName,\n\tsiteUrl,\n\tauthorName,\n\tauthorUrl,\n\ttitle,\n\tdescription,\n\timage,\n\thtml,\n}: OEmbedPreviewMetadata): boolean =>\n\t!((!siteName || !siteUrl) && (!authorName || !authorUrl) && !title && !description && !image && !html);\n\nconst hasMeta = (url: OembedUrlLegacy): url is { url: string; meta: Record<string, string> } => !!url.meta && !!Object.values(url.meta);\n\nconst processMetaAndHeaders = (url: OembedUrlLegacy): PreviewData | false => {\n\tif (!url.headers && !url.meta) {\n\t\treturn false;\n\t}\n\n\tconst data = hasMeta(url) ? normalizeMeta(url) : undefined;\n\tif (data && isValidPreviewMeta(data)) {\n\t\treturn { type: 'oembed', data };\n\t}\n\n\tconst type = getHeaderType(url.headers);\n\tif (!type) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\ttype: 'headers',\n\t\tdata: { url: url.url, type, originalType: hasContentType(url.headers) ? url.headers?.contentType : '' },\n\t};\n};\n\nconst isPreviewData = (data: PreviewData | false): data is PreviewData => !!data;\n\nconst isMetaPreview = (_data: PreviewData['data'], type: PreviewTypes): _data is OEmbedPreviewMetadata => type === 'oembed';\n\ntype UrlPreviewsProps = { urls: OembedUrlLegacy[] };\n\nconst UrlPreviews = ({ urls }: UrlPreviewsProps): ReactElement | null => {\n\tconst { maxWidth: oembedMaxWidth } = useOembedLayout();\n\tconst metaAndHeaders = urls.map(processMetaAndHeaders).filter(isPreviewData);\n\n\treturn (\n\t\t<>\n\t\t\t{metaAndHeaders.map(({ type, data }, index) => {\n\t\t\t\tif (isMetaPreview(data, type)) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<MessageBlock width='100%' maxWidth={oembedMaxWidth} key={index}>\n\t\t\t\t\t\t\t<OEmbedResolver meta={data} />\n\t\t\t\t\t\t</MessageBlock>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t<MessageBlock width='100%' maxWidth={oembedMaxWidth} key={index}>\n\t\t\t\t\t\t<UrlPreview {...data} />\n\t\t\t\t\t</MessageBlock>\n\t\t\t\t);\n\t\t\t})}\n\t\t</>\n\t);\n};\n\nexport default UrlPreviews;\n",null],"names":["_objectSpread","MessageBlock","React","useOembedLayout","OEmbedResolver","UrlPreview","buildImageURL","module","link","default","normalizeMeta","_ref","url","meta","image","ogImage","twitterImage","msapplicationTileImage","oembedThumbnailUrl","imageHeight","ogImageHeight","oembedHeight","oembedThumbnailHeight","imageWidth","ogImageWidth","oembedWidth","oembedThumbnailWidth","Object","fromEntries","entries","siteName","ogSiteName","oembedProviderName","siteUrl","ogUrl","oembedProviderUrl","title","ogTitle","twitterTitle","pageTitle","oembedTitle","description","ogDescription","twitterDescription","authorName","oembedAuthorName","authorUrl","oembedAuthorUrl","dimensions","height","width","oembedUrl","type","ogType","oembedType","oembedHtml","html","filter","_ref2","value","hasContentType","headers","getHeaderType","contentType","match","isValidPreviewMeta","_ref3","hasMeta","values","processMetaAndHeaders","_url$headers","data","undefined","originalType","isPreviewData","isMetaPreview","_data","exportDefault","_ref4","urls","maxWidth","oembedMaxWidth","metaAndHeaders","map","createElement","Fragment","_ref5","index","key"],"mappings":"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"}