)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/components/UserAutoCompleteMultiple/UserAutoCompleteMultipleFederated.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { MultiSelectFiltered, Icon, Box, Chip } from '@rocket.chat/fuselage';\nimport { useDebouncedValue } from '@rocket.chat/fuselage-hooks';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport type { ReactElement, AllHTMLAttributes } from 'react';\nimport React, { memo, useState, useCallback, useMemo } from 'react';\n\nimport UserAvatar from '../avatar/UserAvatar';\nimport AutocompleteOptions, { OptionsContext } from './UserAutoCompleteMultipleOptions';\n\ntype UserAutoCompleteMultipleFederatedProps = {\n\tonChange: (value: Array<string>) => void;\n\tvalue: Array<string>;\n\tplaceholder?: string;\n} & Omit<AllHTMLAttributes<HTMLElement>, 'is' | 'onChange'>;\n\ntype UserAutoCompleteOptionType = {\n\tname: string;\n\tusername: string;\n\t_federated?: boolean;\n};\n\ntype UserAutoCompleteOptions = {\n\t[k: string]: UserAutoCompleteOptionType;\n};\n\nconst matrixRegex = new RegExp('@(.*:.*)');\n\nconst UserAutoCompleteMultipleFederated = ({\n\tonChange,\n\tvalue,\n\tplaceholder,\n\t...props\n}: UserAutoCompleteMultipleFederatedProps): ReactElement => {\n\tconst [filter, setFilter] = useState('');\n\tconst [selectedCache, setSelectedCache] = useState<UserAutoCompleteOptions>({});\n\n\tconst debouncedFilter = useDebouncedValue(filter, 500);\n\tconst getUsers = useEndpoint('GET', '/v1/users.autocomplete');\n\n\tconst { data } = useQuery(\n\t\t['users.autocomplete', debouncedFilter],\n\t\tasync () => {\n\t\t\tconst users = await getUsers({ selector: JSON.stringify({ term: debouncedFilter }) });\n\t\t\tconst options = users.items.map((item): [string, UserAutoCompleteOptionType] => [item.username, item]);\n\n\t\t\t// Add extra option if filter text matches `username:server`\n\t\t\t// Used to add federated users that do not exist yet\n\t\t\tif (matrixRegex.test(debouncedFilter)) {\n\t\t\t\toptions.unshift([debouncedFilter, { name: debouncedFilter, username: debouncedFilter, _federated: true }]);\n\t\t\t}\n\n\t\t\treturn options;\n\t\t},\n\t\t{ keepPreviousData: true },\n\t);\n\n\tconst options = useMemo(() => data || [], [data]);\n\n\tconst onAddUser = useCallback(\n\t\t(username: string): void => {\n\t\t\tconst user = options.find(([val]) => val === username)?.[1];\n\t\t\tif (!user) {\n\t\t\t\tthrow new Error('UserAutoCompleteMultiple - onAddSelected - failed to cache option');\n\t\t\t}\n\t\t\tsetSelectedCache((selectedCache) => ({ ...selectedCache, [username]: user }));\n\t\t},\n\t\t[setSelectedCache, options],\n\t);\n\n\tconst onRemoveUser = useCallback(\n\t\t(username: string): void =>\n\t\t\tsetSelectedCache((selectedCache) => {\n\t\t\t\tconst users = { ...selectedCache };\n\t\t\t\tdelete users[username];\n\t\t\t\treturn users;\n\t\t\t}),\n\t\t[setSelectedCache],\n\t);\n\n\tconst handleOnChange = useCallback(\n\t\t(usernames: string[]) => {\n\t\t\tonChange(usernames);\n\t\t\tconst newAddedUsername = usernames.filter((username) => !value.includes(username))[0];\n\t\t\tconst removedUsername = value.filter((username) => !usernames.includes(username))[0];\n\t\t\tsetFilter('');\n\t\t\tnewAddedUsername && onAddUser(newAddedUsername);\n\t\t\tremovedUsername && onRemoveUser(removedUsername);\n\t\t},\n\t\t[onChange, setFilter, onAddUser, onRemoveUser, value],\n\t);\n\n\treturn (\n\t\t<OptionsContext.Provider value={{ options }}>\n\t\t\t<MultiSelectFiltered\n\t\t\t\t{...props}\n\t\t\t\tdata-qa-type='user-auto-complete-input'\n\t\t\t\tplaceholder={placeholder}\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={handleOnChange}\n\t\t\t\tfilter={filter}\n\t\t\t\tsetFilter={setFilter}\n\t\t\t\trenderSelected={({ value, onMouseDown }: { value: string; onMouseDown: () => void }) => {\n\t\t\t\t\tconst currentCachedOption = selectedCache[value] || {};\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Chip key={value} height='x20' onMouseDown={onMouseDown} mie={4} mb={2}>\n\t\t\t\t\t\t\t{currentCachedOption._federated ? <Icon size='x20' name='globe' /> : <UserAvatar size='x20' username={value} />}\n\t\t\t\t\t\t\t<Box is='span' margin='none' mis={4}>\n\t\t\t\t\t\t\t\t{currentCachedOption.name || currentCachedOption.username || value}\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Chip>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t\trenderOptions={AutocompleteOptions}\n\t\t\t\toptions={options.concat(Object.entries(selectedCache)).map(([, item]) => [item.username, item.name || item.username])}\n\t\t\t\tdata-qa='create-channel-users-autocomplete'\n\t\t\t/>\n\t\t</OptionsContext.Provider>\n\t);\n};\n\nexport default memo(UserAutoCompleteMultipleFederated);\n",null],"names":["_extends","_objectSpread","_objectWithoutProperties","MultiSelectFiltered","Icon","Box","Chip","useDebouncedValue","useEndpoint","useQuery","React","memo","useState","useCallback","useMemo","UserAvatar","AutocompleteOptions","OptionsContext","module","default","v","link","matrixRegex","RegExp","exportDefault","_ref","onChange","value","placeholder","props","_excluded","filter","setFilter","selectedCache","setSelectedCache","debouncedFilter","getUsers","data","users","selector","JSON","stringify","term","options","items","map","item","username","test","unshift","name","_federated","keepPreviousData","onAddUser","_options$find","user","find","_ref2","val","Error","onRemoveUser","handleOnChange","usernames","newAddedUsername","includes","removedUsername","createElement","Provider","renderSelected","_ref3","onMouseDown","currentCachedOption","key","height","mie","mb","size","is","margin","mis","renderOptions","concat","Object","entries","_ref4"],"mappings":"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"}