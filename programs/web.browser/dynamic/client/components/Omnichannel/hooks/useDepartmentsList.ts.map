)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/components/Omnichannel/hooks/useDepartmentsList.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useCallback, useState } from 'react';\n\nimport { useScrollableRecordList } from '../../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../../lib/lists/RecordList';\n\ntype DepartmentsListOptions = {\n\tfilter: string;\n\tdepartmentId?: string;\n\tonlyMyDepartments?: boolean;\n\thaveAll?: boolean;\n\thaveNone?: boolean;\n\texcludeDepartmentId?: string;\n\tenabled?: boolean;\n\tshowArchived?: boolean;\n};\n\ntype DepartmentListItem = {\n\t_id: string;\n\tlabel: string;\n\tvalue: string;\n};\n\nexport const useDepartmentsList = (\n\toptions: DepartmentsListOptions,\n): {\n\titemsList: RecordList<DepartmentListItem>;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst t = useTranslation();\n\tconst [itemsList, setItemsList] = useState(() => new RecordList<DepartmentListItem>());\n\tconst reload = useCallback(() => setItemsList(new RecordList<DepartmentListItem>()), []);\n\n\tconst getDepartments = useEndpoint('GET', '/v1/livechat/department');\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { departments, total } = await getDepartments({\n\t\t\t\tonlyMyDepartments: `${!!options.onlyMyDepartments}`,\n\t\t\t\ttext: options.filter,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end + start,\n\t\t\t\tsort: `{ \"name\": 1 }`,\n\t\t\t\texcludeDepartmentId: options.excludeDepartmentId,\n\t\t\t\tenabled: options.enabled ? 'true' : 'false',\n\t\t\t\tshowArchived: options.showArchived ? 'true' : 'false',\n\t\t\t});\n\n\t\t\tconst items = departments\n\t\t\t\t.filter((department) => {\n\t\t\t\t\tif (options.departmentId && department._id === options.departmentId) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t})\n\t\t\t\t.map(({ _id, name, _updatedAt, ...department }): DepartmentListItem => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t_id,\n\t\t\t\t\t\tlabel: department.archived ? `${name} [${t('Archived')}]` : name,\n\t\t\t\t\t\tvalue: _id,\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\toptions.haveAll &&\n\t\t\t\titems.unshift({\n\t\t\t\t\t_id: '',\n\t\t\t\t\tlabel: t('All'),\n\t\t\t\t\tvalue: 'all',\n\t\t\t\t});\n\n\t\t\toptions.haveNone &&\n\t\t\t\titems.unshift({\n\t\t\t\t\t_id: '',\n\t\t\t\t\tlabel: t('None'),\n\t\t\t\t\tvalue: '',\n\t\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems,\n\t\t\t\titemCount: options.departmentId ? total - 1 : total,\n\t\t\t};\n\t\t},\n\t\t[\n\t\t\tgetDepartments,\n\t\t\toptions.onlyMyDepartments,\n\t\t\toptions.filter,\n\t\t\toptions.excludeDepartmentId,\n\t\t\toptions.enabled,\n\t\t\toptions.showArchived,\n\t\t\toptions.haveAll,\n\t\t\toptions.haveNone,\n\t\t\toptions.departmentId,\n\t\t\tt,\n\t\t],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(itemsList, fetchData, 25);\n\n\treturn {\n\t\treload,\n\t\titemsList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n",null],"names":["_objectWithoutProperties","useEndpoint","useTranslation","useCallback","useState","useScrollableRecordList","useComponentDidUpdate","RecordList","module","link","default","export","useDepartmentsList","options","t","itemsList","setItemsList","reload","getDepartments","fetchData","start","end","departments","total","onlyMyDepartments","concat","text","filter","offset","count","sort","excludeDepartmentId","enabled","showArchived","items","department","departmentId","_id","map","_ref","name","_updatedAt","label","_excluded","archived","value","haveAll","unshift","haveNone","itemCount","loadMoreItems","initialItemCount"],"mappings":"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"}