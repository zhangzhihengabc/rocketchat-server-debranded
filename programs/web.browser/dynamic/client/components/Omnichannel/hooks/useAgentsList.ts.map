)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/components/Omnichannel/hooks/useAgentsList.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useCallback, useState } from 'react';\n\nimport { useScrollableRecordList } from '../../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../hooks/useComponentDidUpdate';\nimport { RecordList } from '../../../lib/lists/RecordList';\n\ntype AgentsListOptions = {\n\ttext: string;\n\thaveAll: boolean;\n\thaveNoAgentsSelectedOption: boolean;\n\texcludeId?: string;\n\tshowIdleAgents?: boolean;\n\tonlyAvailable?: boolean;\n};\n\ntype AgentOption = { value: string; label: string; _updatedAt: Date; _id: string };\n\nexport const useAgentsList = (\n\toptions: AgentsListOptions,\n): {\n\titemsList: RecordList<AgentOption>;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst t = useTranslation();\n\tconst [itemsList, setItemsList] = useState(() => new RecordList<AgentOption>());\n\tconst reload = useCallback(() => setItemsList(new RecordList<AgentOption>()), []);\n\n\tconst getAgents = useEndpoint('GET', '/v1/livechat/users/agent');\n\tconst { text, onlyAvailable = false, showIdleAgents = true, excludeId, haveAll, haveNoAgentsSelectedOption } = options;\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { users: agents, total } = await getAgents({\n\t\t\t\t...(text && { text }),\n\t\t\t\t...(excludeId && { excludeId }),\n\t\t\t\tshowIdleAgents,\n\t\t\t\tonlyAvailable,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end + start,\n\t\t\t\tsort: `{ \"name\": 1 }`,\n\t\t\t});\n\n\t\t\tconst items = agents.map<AgentOption>((agent) => {\n\t\t\t\tconst agentOption = {\n\t\t\t\t\t_updatedAt: new Date(agent._updatedAt),\n\t\t\t\t\tlabel: `${agent.name || agent._id} (@${agent.username})`,\n\t\t\t\t\tvalue: agent._id,\n\t\t\t\t\t_id: agent._id,\n\t\t\t\t};\n\t\t\t\treturn agentOption;\n\t\t\t});\n\n\t\t\thaveAll &&\n\t\t\t\titems.unshift({\n\t\t\t\t\tlabel: t('All'),\n\t\t\t\t\tvalue: 'all',\n\t\t\t\t\t_updatedAt: new Date(),\n\t\t\t\t\t_id: 'all',\n\t\t\t\t});\n\n\t\t\thaveNoAgentsSelectedOption &&\n\t\t\t\titems.unshift({\n\t\t\t\t\tlabel: t('Empty_no_agent_selected'),\n\t\t\t\t\tvalue: 'no-agent-selected',\n\t\t\t\t\t_updatedAt: new Date(),\n\t\t\t\t\t_id: 'no-agent-selected',\n\t\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems,\n\t\t\t\titemCount: total + 1,\n\t\t\t};\n\t\t},\n\t\t[excludeId, getAgents, haveAll, haveNoAgentsSelectedOption, onlyAvailable, showIdleAgents, t, text],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(itemsList, fetchData, 25);\n\n\treturn {\n\t\treload,\n\t\titemsList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n",null],"names":["_objectSpread","useEndpoint","useTranslation","useCallback","useState","useScrollableRecordList","useComponentDidUpdate","RecordList","module","link","default","v","export","useAgentsList","options","t","itemsList","setItemsList","reload","getAgents","text","onlyAvailable","showIdleAgents","excludeId","haveAll","haveNoAgentsSelectedOption","fetchData","start","end","users","agents","total","offset","count","sort","items","map","agent","agentOption","_updatedAt","Date","label","concat","name","_id","username","value","unshift","itemCount","loadMoreItems","initialItemCount"],"mappings":"2BAAAA,EAA4CC,EAAAC,EAA2BC,EAAAC,EAAAC,EAAAC,EAAAC,EAA9DC,EAAaC,IAAA,CAAA,uCAAsB,CAA0BC,QAACC,CAAA,EAAAX,EAAAA,CAAA,CAAA,EAAA,GAAvEQ,EAAOI,MAAE,CAAA,CAAAC,cAAa,IAAAA,CAAsB,GAA2BL,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAP,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAM,EAAAA,IAAAA,CAAAA,QAAAA,CAAAL,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,+CAAAA,CAAAH,wBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,uCAAAA,CAAAF,sBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,gCAAAA,CAAAD,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAkBhE,IAAMM,EACZC,IAOA,IAAMC,EAAIb,IACJ,CAACc,EAAWC,EAAa,CAAGb,EAAS,IAAM,IAAIG,GAC/CW,EAASf,EAAY,IAAMc,EAAa,IAAIV,GAA4B,EAAE,EAE1EY,EAAYlB,EAAY,MAAO,4BAC/B,CAAEmB,KAAAA,CAAI,CAAEC,cAAAA,EAAgB,CAAA,CAAK,CAAEC,eAAAA,EAAiB,CAAA,CAAI,CAAEC,UAAAA,CAAS,CAAEC,QAAAA,CAAO,CAAEC,2BAAAA,CAAAA,CAA4B,CAAGX,EAE/GR,EAAsB,KACrBQ,GAAWI,GACZ,EAAG,CAACJ,EAASI,EAAO,EAEpB,IAAMQ,EAAYvB,EACjB,MAAOwB,EAAOC,KACb,GAAM,CAAEC,MAAOC,CAAM,CAAEC,MAAAA,CAAAA,CAAO,CAAG,MAAMZ,EAASnB,EAAAA,EAAAA,EAAA,CAAA,EAC3CoB,GAAQ,CAAEA,KAAAA,CAAI,GACdG,GAAa,CAAEA,UAAAA,CAAS,GAAE,CAAA,EAAA,CAC9BD,eAAAA,EACAD,cAAAA,EACAW,OAAQL,EACRM,MAAOL,EAAMD,EACbO,KAAI,eAAiB,IAGhBC,EAAQL,EAAOM,GAAG,CAAeC,IACtC,IAAMC,EAAc,CACnBC,WAAY,IAAIC,KAAKH,EAAME,UAAU,EACrCE,MAAK,GAAAC,MAAA,CAAKL,EAAMM,IAAI,EAAIN,EAAMO,GAAG,CAAA,OAAAF,MAAA,CAAML,EAAMQ,QAAQ,CAAA,KACrDC,MAAOT,EAAMO,GAAG,CAChBA,IAAKP,EAAMO,GAAAA,EAEZ,OAAON,CACR,GAkBA,OAhBAd,GACCW,EAAMY,OAAO,CAAC,CACbN,MAAO1B,EAAE,OACT+B,MAAO,MACPP,WAAY,IAAIC,KAChBI,IAAK,QAGPnB,GACCU,EAAMY,OAAO,CAAC,CACbN,MAAO1B,EAAE,2BACT+B,MAAO,oBACPP,WAAY,IAAIC,KAChBI,IAAK,sBAGA,CACNT,MAAAA,EACAa,UAAWjB,EAAQ,EAErB,EACA,CAACR,EAAWJ,EAAWK,EAASC,EAA4BJ,EAAeC,EAAgBP,EAAGK,EAAK,EAG9F,CAAE6B,cAAAA,CAAa,CAAEC,iBAAAA,CAAAA,CAAkB,CAAG7C,EAAwBW,EAAWU,EAAW,IAE1F,MAAO,CACNR,OAAAA,EACAF,UAAAA,EACAiC,cAAAA,EACAC,iBAAAA,EAEF"}