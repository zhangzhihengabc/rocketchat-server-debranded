function module(e,n,o){let i,t,s;o.export({VideoConfContext:()=>l,useVideoConfDispatchOutgoing:()=>u,useVideoConfDismissOutgoing:()=>C,useVideoConfStartCall:()=>a,useVideoConfAcceptCall:()=>d,useVideoConfJoinCall:()=>f,useVideoConfDismissCall:()=>c,useVideoConfAbortCall:()=>g,useVideoConfRejectIncomingCall:()=>V,useVideoConfIncomingCalls:()=>m,useVideoConfSetPreferences:()=>p,useVideoConfIsRinging:()=>b,useVideoConfIsCalling:()=>x,useVideoConfCapabilities:()=>I,useVideoConfPreferences:()=>v,useVideoConfManager:()=>O}),o.link("react",{createContext(e){i=e},useContext(e){t=e}},0),o.link("use-subscription",{useSubscription(e){s=e}},1);let l=i(void 0),r=()=>{let e=t(l);if(!e)throw Error("Must be running in VideoConf Context");return e},u=()=>r().dispatchOutgoing,C=()=>r().dismissOutgoing,a=()=>r().startCall,d=()=>r().acceptCall,f=()=>r().joinCall,c=()=>r().dismissCall,g=()=>r().abortCall,V=()=>r().rejectIncomingCall,m=()=>{let{queryIncomingCalls:e}=r();return s(e)},p=()=>r().setPreferences,b=()=>{let{queryRinging:e}=r();return s(e)},x=()=>{let{queryCalling:e}=r();return s(e)},I=()=>{let{queryCapabilities:e}=r();return s(e)},v=()=>{let{queryPreferences:e}=r();return s(e)},O=()=>{var e;return null===(e=t(l))||void 0===e?void 0:e.manager}}
//# sourceMappingURL=/dynamic/client/contexts/f18f40bf408f2da0d3d1a5a25414ee54add3e661.map
