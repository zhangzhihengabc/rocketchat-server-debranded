)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/uikit/hooks/useUiKitView.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { UiKit } from '@rocket.chat/core-typings';\nimport { useSafely } from '@rocket.chat/fuselage-hooks';\nimport { extractInitialStateFromLayout } from '@rocket.chat/fuselage-ui-kit';\nimport type { Dispatch } from 'react';\nimport { useEffect, useMemo, useReducer, useState } from 'react';\n\nimport { useUiKitActionManager } from './useUiKitActionManager';\n\nconst reduceValues = (\n\tvalues: { [actionId: string]: { value: unknown; blockId?: string } },\n\t{ actionId, payload }: { actionId: string; payload: { value: unknown; blockId?: string } },\n): { [actionId: string]: { value: unknown; blockId?: string } } => ({\n\t...values,\n\t[actionId]: payload,\n});\n\nconst getViewId = (view: UiKit.View): string => {\n\tif ('id' in view && typeof view.id === 'string') {\n\t\treturn view.id;\n\t}\n\n\tif ('viewId' in view && typeof view.viewId === 'string') {\n\t\treturn view.viewId;\n\t}\n\n\tthrow new Error('Invalid view');\n};\n\nconst getViewFromInteraction = (interaction: UiKit.ServerInteraction): UiKit.View | undefined => {\n\tif ('view' in interaction && typeof interaction.view === 'object') {\n\t\treturn interaction.view;\n\t}\n\n\tif (interaction.type === 'banner.open') {\n\t\treturn interaction;\n\t}\n\n\treturn undefined;\n};\n\ntype UseUiKitViewReturnType<TView extends UiKit.View> = {\n\tview: TView;\n\terrors?: { [field: string]: string }[];\n\tvalues: { [actionId: string]: { value: unknown; blockId?: string } };\n\tupdateValues: Dispatch<{ actionId: string; payload: { value: unknown; blockId?: string } }>;\n\tstate: {\n\t\t[blockId: string]: {\n\t\t\t[key: string]: unknown;\n\t\t};\n\t};\n};\n\nexport function useUiKitView<S extends UiKit.View>(initialView: S): UseUiKitViewReturnType<S> {\n\tconst [errors, setErrors] = useSafely(useState<{ [field: string]: string }[] | undefined>());\n\tconst [values, updateValues] = useSafely(useReducer(reduceValues, initialView.blocks, extractInitialStateFromLayout));\n\tconst [view, updateView] = useSafely(useState(initialView));\n\tconst actionManager = useUiKitActionManager();\n\n\tconst state = useMemo(() => {\n\t\treturn Object.entries(values).reduce<{ [blockId: string]: { [actionId: string]: unknown } }>((obj, [key, payload]) => {\n\t\t\tif (!payload?.blockId) {\n\t\t\t\treturn obj;\n\t\t\t}\n\n\t\t\tconst { blockId, value } = payload;\n\t\t\tobj[blockId] = obj[blockId] || {};\n\t\t\tobj[blockId][key] = value;\n\n\t\t\treturn obj;\n\t\t}, {});\n\t}, [values]);\n\n\tconst viewId = getViewId(view);\n\n\tuseEffect(() => {\n\t\tconst handleUpdate = (interaction: UiKit.ServerInteraction): void => {\n\t\t\tif (interaction.type === 'errors') {\n\t\t\t\tsetErrors(interaction.errors);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdateView((view) => ({ ...view, ...getViewFromInteraction(interaction) }));\n\t\t};\n\n\t\tactionManager.on(viewId, handleUpdate);\n\n\t\treturn (): void => {\n\t\t\tactionManager.off(viewId, handleUpdate);\n\t\t};\n\t}, [actionManager, setErrors, updateView, viewId]);\n\n\treturn { view, errors, values, updateValues, state };\n}\n",null],"names":["_objectSpread","useSafely","extractInitialStateFromLayout","useEffect","useMemo","useReducer","useState","useUiKitActionManager","module","link","default","export","useUiKitView","reduceValues","values","_ref","actionId","payload","getViewId","view","id","viewId","Error","getViewFromInteraction","interaction","type","initialView","errors","setErrors","updateValues","blocks","updateView","actionManager","state","Object","entries","reduce","obj","_ref2","key","blockId","value","handleUpdate","on","off"],"mappings":"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"}