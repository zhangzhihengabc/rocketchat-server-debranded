)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/hooks/useFormatTime.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useUserPreference, useSetting } from '@rocket.chat/ui-contexts';\nimport moment from 'moment';\nimport { useCallback } from 'react';\n\nconst dayFormat = ['h:mm A', 'H:mm'] as const;\n\nexport const useFormatTime = (): ((input: moment.MomentInput) => string) => {\n\tconst clockMode = useUserPreference<1 | 2>('clockMode');\n\tconst format = useSetting('Message_TimeFormat') as string;\n\tconst sameDay = clockMode !== undefined ? dayFormat[clockMode - 1] : format;\n\n\treturn useCallback(\n\t\t(time) => {\n\t\t\tswitch (clockMode) {\n\t\t\t\tcase 1:\n\t\t\t\tcase 2:\n\t\t\t\t\treturn moment(time).format(sameDay);\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn moment(time).format(format);\n\t\t\t}\n\t\t},\n\t\t[clockMode, format, sameDay],\n\t);\n};\n",null],"names":["useUserPreference","useSetting","moment","useCallback","module","export","useFormatTime","default","dayFormat","clockMode","format","sameDay","undefined","time"],"mappings":"2BAA8CA,EAAAC,EAA2BC,EAAAC,EAAzEC,EAAOC,MAAE,CAAA,CAAAC,cAAmB,IAAAA,CAAkB,GAA2BF,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAJ,kBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,SAAAA,CAAAG,QAAAA,CAAAA,EAAAL,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,QAAAA,CAAAD,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAIzE,IAAMK,EAAY,CAAC,SAAU,OAAgB,CAEhCF,EAAgB,KAC5B,IAAMG,EAAYT,EAAyB,aACrCU,EAAST,EAAW,sBACpBU,EAAUF,AAAcG,KAAAA,IAAdH,EAA0BD,CAAS,CAACC,EAAY,EAAE,CAAGC,EAErE,OAAOP,EACLU,IACA,OAAQJ,GACP,KAAK,EACL,KAAK,EACJ,OAAOP,EAAOW,GAAMH,MAAM,CAACC,EAE5B,SACC,OAAOT,EAAOW,GAAMH,MAAM,CAACA,EAAQ,CAEtC,EACA,CAACD,EAAWC,EAAQC,EAAQ,CAE9B"}