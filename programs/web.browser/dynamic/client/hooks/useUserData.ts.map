)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/hooks/useUserData.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useContext, useMemo } from 'react';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\n\nimport { UserPresenceContext } from '../contexts/UserPresenceContext';\nimport type { UserPresence } from '../lib/presence';\n\n/**\n * Hook to fetch and subscribe users data\n *\n * @param uid - User Id\n * @returns Users data: status, statusText, username, name\n * @public\n */\nexport const useUserData = (uid: string): UserPresence | undefined => {\n\tconst userPresence = useContext(UserPresenceContext);\n\n\tconst { subscribe, get } = useMemo(\n\t\t() => userPresence?.queryUserData(uid) ?? { subscribe: () => () => undefined, get: () => undefined },\n\t\t[userPresence, uid],\n\t);\n\n\treturn useSyncExternalStore(subscribe, get);\n};\n",null],"names":["useContext","useMemo","useSyncExternalStore","UserPresenceContext","module","export","useUserData","uid","userPresence","subscribe","get","_userPresence$queryUs","queryUserData","undefined"],"mappings":"2BAA4CA,EAAAC,EAAAC,EAAAC,EAA5CC,EAAOC,MAAE,CAAA,CAAAC,YAAY,IAASA,CAAM,GAAQF,EAAAA,IAAAA,CAAAA,QAAAA,CAAAJ,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,QAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,+BAAAA,CAAAF,qBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,kCAAAA,CAAAD,oBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAarC,IAAMG,EAAeC,IAC3B,IAAMC,EAAeR,EAAWG,GAE1B,CAAEM,UAAAA,CAAS,CAAEC,IAAAA,CAAAA,CAAK,CAAGT,EAC1B,KAAA,IAAAU,EAAA,OAAA,AAAsC,OAAtCA,CAAAA,EAAMH,MAAAA,EAAY,KAAA,EAAZA,EAAcI,aAAa,CAACL,EAAG,GAACI,AAAA,KAAA,IAAAA,EAAAA,EAAI,CAAEF,UAAW,IAAM,IAAMI,KAAAA,EAAWH,IAAK,IAAMG,KAAAA,CAAS,CAAE,EACpG,CAACL,EAAcD,EAAI,EAGpB,OAAOL,EAAqBO,EAAWC,EACxC"}