)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/hooks/useTimezoneTime.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import moment from 'moment';\nimport { useState, useEffect } from 'react';\n\nimport { useFormatTime } from './useFormatTime';\n\nexport const useTimezoneTime = (offset: number, interval = 1000): string => {\n\tconst [time, setTime] = useState<moment.Moment>(() => moment().utcOffset(offset));\n\n\tconst format = useFormatTime();\n\n\tuseEffect(() => {\n\t\tif (offset === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst update = (): void => {\n\t\t\tsetTime(moment().utcOffset(offset));\n\t\t};\n\n\t\tconst timer = setInterval(update, interval);\n\t\tupdate();\n\n\t\treturn (): void => {\n\t\t\tclearInterval(timer);\n\t\t};\n\t}, [offset, interval]);\n\n\treturn format(time);\n};\n",null],"names":["moment","useState","useEffect","useFormatTime","module","export","useTimezoneTime","default","offset","interval","arguments","length","undefined","time","setTime","utcOffset","format","update","timer","setInterval","clearInterval"],"mappings":"2BAA4BA,EAAAC,EAAAC,EAAAC,EAA5BC,EAAOC,MAAM,CAAA,CAAAC,gBAAe,IAAAA,CAAA,GAAAF,EAAAA,IAAAA,CAAAA,SAAAA,CAAAG,QAAAA,CAAAA,EAAAP,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,QAAAA,CAAAH,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,kBAAAA,CAAAD,cAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAKrB,IAAMG,EAAkB,SAACE,CAAc,EAA6B,IAA3BC,EAAQC,UAAAC,MAAA,CAAA,GAAAD,AAAAE,KAAAA,IAAAF,SAAA,CAAA,EAAA,CAAAA,SAAA,CAAA,EAAA,CAAG,IACpD,CAACG,EAAMC,EAAQ,CAAGb,EAAwB,IAAMD,IAASe,SAAS,CAACP,IAEnEQ,EAASb,IAmBf,OAjBAD,EAAU,KACT,GAAIM,AAAWI,KAAAA,IAAXJ,EACH,OAGD,IAAMS,EAAS,KACdH,EAAQd,IAASe,SAAS,CAACP,GAC5B,EAEMU,EAAQC,YAAYF,EAAQR,GAGlC,OAFAQ,IAEO,KACNG,cAAcF,EACf,CACD,EAAG,CAACV,EAAQC,EAAS,EAEdO,EAAOH,EACf"}