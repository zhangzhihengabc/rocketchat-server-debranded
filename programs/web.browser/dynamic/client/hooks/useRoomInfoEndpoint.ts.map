)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/hooks/useRoomInfoEndpoint.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport type { OperationResult } from '@rocket.chat/rest-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport type { UseQueryResult } from '@tanstack/react-query';\nimport { useQuery } from '@tanstack/react-query';\nimport { minutesToMilliseconds } from 'date-fns';\nimport type { Meteor } from 'meteor/meteor';\n\nexport const useRoomInfoEndpoint = (rid: IRoom['_id']): UseQueryResult<OperationResult<'GET', '/v1/rooms.info'>> => {\n\tconst getRoomInfo = useEndpoint('GET', '/v1/rooms.info');\n\treturn useQuery(['rooms/info', rid], () => getRoomInfo({ roomId: rid }), {\n\t\tcacheTime: minutesToMilliseconds(15),\n\t\tstaleTime: minutesToMilliseconds(5),\n\t\tretry: (count, error: Meteor.Error) => {\n\t\t\tif (count > 2 || error.error === 'not-allowed') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\t});\n};\n",null],"names":["useEndpoint","useQuery","minutesToMilliseconds","module","export","useRoomInfoEndpoint","rid","getRoomInfo","roomId","cacheTime","staleTime","retry","count","error"],"mappings":"2BAEuDA,EAAAC,EAAAC,EAAvDC,EAAOC,MAAE,CAAA,CAAAC,oBAAmB,IAAAA,CAA2B,GAAAF,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAH,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAF,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,WAAAA,CAAAD,sBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAMhD,IAAMG,EAAuBC,IACnC,IAAMC,EAAcP,EAAY,MAAO,kBACvC,OAAOC,EAAS,CAAC,aAAcK,EAAI,CAAE,IAAMC,EAAY,CAAEC,OAAQF,CAAG,GAAK,CACxEG,UAAWP,EAAsB,IACjCQ,UAAWR,EAAsB,GACjCS,MAAO,CAACC,EAAOC,IACVD,CAAAA,CAAAA,EAAQ,CAAA,GAAKC,AAAgB,gBAAhBA,EAAMA,KAAK,EAM/B"}