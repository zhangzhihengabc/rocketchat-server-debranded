function module(e,t,n){let s,i,r,a,u;n.link("@babel/runtime/helpers/objectSpread2",{default(e){s=e}},0),n.export({useWorkspaceInfo:()=>o,useRefreshStatistics:()=>c}),n.link("@rocket.chat/ui-contexts",{useEndpoint(e){i=e}},0),n.link("@tanstack/react-query",{useMutation(e){r=e},useQueries(e){a=e},useQueryClient(e){u=e}},1);let o=function(){let{refreshStatistics:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=i("GET","/v1/statistics"),n=i("GET","/v1/instances.get"),r=i("GET","/info");return a({queries:[{queryKey:["info","serverInfo"],queryFn:async()=>{let e=await r();if(!("minimumClientVersions"in e)||!("info"in e)||!("version"in e))throw Error("Invalid server info");return e},staleTime:1/0,keepPreviousData:!0},{queryKey:["info","instances"],queryFn:()=>n(),staleTime:1/0,keepPreviousData:!0,select(e){let{instances:t}=e;return t.map(e=>s(s({},e),e.instanceRecord&&{instanceRecord:s(s({},e.instanceRecord),{},{_createdAt:new Date(e.instanceRecord._createdAt)})}))}},{queryKey:["info","statistics"],queryFn:()=>t({refresh:e?"true":"false"}),staleTime:1/0,keepPreviousData:!0,select:e=>s(s({},e),{},{lastMessageSentAt:e.lastMessageSentAt?new Date(e.lastMessageSentAt):void 0})}]})},c=()=>{let e=u();return r({mutationFn:()=>e.invalidateQueries(["info","statistics"])})}}
//# sourceMappingURL=/dynamic/client/hooks/81d5d0024ba963b900dab39b05c43ab990d6b340.map
