)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/hooks/useRoomName.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport { isDirectMessageRoom } from '@rocket.chat/core-typings';\nimport { useUserSubscription } from '@rocket.chat/ui-contexts';\n\nimport { useUserDisplayName } from './useUserDisplayName';\n\n/**\n *\n * Hook to get the name of the room\n *\n * @param room - Room object\n * @returns Room name\n * @public\n *\n */\nexport const useRoomName = (room: IRoom) => {\n\tconst subscription = useUserSubscription(room._id);\n\tconst username = useUserDisplayName({ name: subscription?.fname, username: subscription?.name });\n\n\tif (isDirectMessageRoom(room)) {\n\t\treturn username;\n\t}\n\n\treturn room.fname || room.name;\n};\n",null],"names":["isDirectMessageRoom","useUserSubscription","useUserDisplayName","module","export","useRoomName","room","subscription","_id","username","name","fname"],"mappings":"2BACoCA,EAA4BC,EAAAC,EAAhEC,EAAOC,MAAE,CAAA,CAAAC,YAAAA,IAAqBA,CAAM,GAA4BF,EAAAA,IAAAA,CAAAA,4BAAAA,CAAAH,oBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAF,oBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,uBAAAA,CAAAD,mBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAczD,IAAMG,EAAeC,IAC3B,IAAMC,EAAeN,EAAoBK,EAAKE,GAAG,EAC3CC,EAAWP,EAAmB,CAAEQ,KAAMH,MAAAA,EAAY,KAAA,EAAZA,EAAcI,KAAK,CAAEF,SAAUF,MAAAA,EAAY,KAAA,EAAZA,EAAcG,IAAAA,AAAI,UAE7F,AAAIV,EAAoBM,GAChBG,EAGDH,EAAKK,KAAK,EAAIL,EAAKI,IAAI,AAC/B"}