)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/composer/EmojiPicker/EmojiPickerDropDown.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Dropdown as DropdownMobile } from '@rocket.chat/fuselage';\nimport { useLayout } from '@rocket.chat/ui-contexts';\nimport type { ReactNode } from 'react';\nimport React, { forwardRef } from 'react';\n\nimport EmojiPickerDesktopDropdown from './EmojiPickerDesktopDropdown';\n\ntype EmojiPickerDropdownProps<R> = {\n\tchildren: ReactNode;\n\treference: React.RefObject<R>;\n};\n\nconst EmojiPickerDropdown = forwardRef(function EmojiPickerDropdown<TReferenceElement extends HTMLElement>(\n\t{ children, reference }: EmojiPickerDropdownProps<TReferenceElement>,\n\tref: React.ForwardedRef<HTMLElement>,\n) {\n\tconst { isMobile } = useLayout();\n\n\tconst Dropdown = isMobile ? DropdownMobile : EmojiPickerDesktopDropdown;\n\n\treturn (\n\t\t<Dropdown ref={ref} reference={reference}>\n\t\t\t{children}\n\t\t</Dropdown>\n\t);\n});\n\nexport default EmojiPickerDropdown;\n",null],"names":["DropdownMobile","useLayout","React","forwardRef","EmojiPickerDesktopDropdown","module","link","Dropdown","default","EmojiPickerDropdown","_ref","ref","children","reference","isMobile","createElement","exportDefault"],"mappings":"2BAAAA,EAAmEC,EAAAC,EAAAC,EAAAC,EAAlDC,EAAIC,IAAA,CAAA,wBAAsB,CAAAC,SAAAA,CAAuB,EAACP,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAJ,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,QAAAA,CAAAG,QAAAA,CAAAA,EAAAN,EAAAA,CAAA,EAAAC,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,+BAAAA,CAAAG,QAAAA,CAAAA,EAAAJ,EAAAA,CAAA,CAAA,EAAA,GAYnE,IAAMK,EAAsBN,EAAW,SAASM,EAAmBC,CAAA,CAElEC,CAAoC,EAAA,GADpC,CAAEC,SAAAA,CAAQ,CAAEC,UAAAA,CAAAA,CAAwD,CAAAH,EAG9D,CAAEI,SAAAA,CAAAA,CAAU,CAAGb,IAEfM,EAAWO,EAAWd,EAAiBI,EAE7C,OACCF,EAAAa,aAAA,CAACR,EAAQ,CAACI,IAAKA,EAAKE,UAAWA,CAAU,EACvCD,EAGJ,GAzBAP,EAAOW,aAAU,CA2BFP"}