)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/marketplace/lib/getManifestFromZippedApp.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { unzipSync, strFromU8 } from 'fflate';\n\ntype Uint8ArrayObject = { [fileName: string]: Uint8Array };\ntype AppManifestSchema = { [key: string]: string };\n\nasync function fileToUint8Array(file: File): Promise<Uint8Array> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst fileReader = new FileReader();\n\t\tfileReader.onload = (e): void => resolve(new Uint8Array((e.target as any).result as Uint8Array));\n\t\tfileReader.onerror = (e): void => reject(e);\n\t\tfileReader.readAsArrayBuffer(file);\n\t});\n}\n\nfunction unzipAppBuffer(zippedAppBuffer: Uint8Array): Uint8ArrayObject {\n\treturn unzipSync(zippedAppBuffer);\n}\n\nfunction getAppManifest(unzippedAppBuffer: Uint8ArrayObject): AppManifestSchema {\n\tif (!unzippedAppBuffer['app.json']) {\n\t\tthrow new Error('No app.json file found in the zip');\n\t}\n\n\ttry {\n\t\treturn JSON.parse(strFromU8(unzippedAppBuffer['app.json']));\n\t} catch (e) {\n\t\tthrow new Error(`Failed to parse app.json: ${e instanceof Error ? e.message : String(e)}`);\n\t}\n}\n\nasync function unzipZippedApp(zippedApp: File | Uint8Array): Promise<Uint8ArrayObject> {\n\ttry {\n\t\tif (zippedApp instanceof File) {\n\t\t\tzippedApp = await fileToUint8Array(zippedApp);\n\t\t}\n\n\t\treturn unzipAppBuffer(zippedApp);\n\t} catch (e) {\n\t\tconsole.error(e);\n\t\tthrow e;\n\t}\n}\n\nexport async function getManifestFromZippedApp(zippedApp: File): Promise<AppManifestSchema> {\n\tconst unzippedBuffer = await unzipZippedApp(zippedApp);\n\treturn getAppManifest(unzippedBuffer);\n}\n",null],"names":["unzipSync","strFromU8","fileToUint8Array","file","Promise","resolve","reject","fileReader","FileReader","onload","e","Uint8Array","target","result","onerror","readAsArrayBuffer","unzipZippedApp","zippedApp","zippedAppBuffer","File","console","error","getManifestFromZippedApp","unzippedBuffer","getAppManifest","unzippedAppBuffer","Error","JSON","parse","concat","message","String","module","export"],"mappings":"2BAA8CA,EAAAC,EAK9C,eAAeC,EAAiBC,CAAU,EACzC,OAAO,IAAIC,QAAQ,CAACC,EAASC,KAC5B,IAAMC,EAAa,IAAIC,UACvBD,CAAAA,EAAWE,MAAM,CAAIC,GAAYL,EAAQ,IAAIM,WAAYD,EAAEE,MAAc,CAACC,MAAoB,GAC9FN,EAAWO,OAAO,CAAIJ,GAAYJ,EAAOI,GACzCH,EAAWQ,iBAAiB,CAACZ,EAC9B,EACD,CAkBA,eAAea,EAAeC,CAA4B,EACzD,GAAI,KAjBmBC,EAsBtB,OAJID,aAAqBE,MACxBF,CAAAA,EAAY,MAAMf,EAAiBe,EAAS,EAnBvBC,EAsBAD,EArBhBjB,EAAUkB,GAsBf,MAAOR,EAAG,CAEX,MADAU,QAAQC,KAAK,CAACX,GACRA,EAER,CAEO,eAAeY,EAAyBL,CAAe,EAC7D,IAAMM,EAAiB,MAAMP,EAAeC,GAC5C,OAAOO,AA3BR,SAAwBC,CAAmC,EAC1D,GAAI,CAACA,CAAiB,CAAC,WAAW,CACjC,MAAM,AAAIC,MAAM,qCAGjB,GAAI,CACH,OAAOC,KAAKC,KAAK,CAAC3B,EAAUwB,CAAiB,CAAC,WAAW,GACxD,MAAOf,EAAG,CACX,MAAM,AAAIgB,MAAK,6BAAAG,MAAA,CAA8BnB,aAAagB,MAAQhB,EAAEoB,OAAO,CAAGC,OAAOrB,KAEvF,EAiBuBa,EACvB,CA9CAS,EAAOC,MAAE,CAAA,CAAAX,yBAA4B,IAAAA,CAAS,GAAAU,EAAAA,IAAAA,CAAAA,SAAAA,CAAAhC,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA"}