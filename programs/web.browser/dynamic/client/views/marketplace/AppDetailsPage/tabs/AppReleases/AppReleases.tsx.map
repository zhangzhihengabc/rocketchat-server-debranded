)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/marketplace/AppDetailsPage/tabs/AppReleases/AppReleases.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { App } from '@rocket.chat/core-typings';\nimport { Accordion } from '@rocket.chat/fuselage';\nimport { useEndpoint, useToastMessageDispatch, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport type { ReactElement } from 'react';\nimport React from 'react';\n\nimport AccordionLoading from '../../../AccordionLoading';\nimport AppReleasesItem from './AppReleasesItem';\n\n// TODO: replace useEndpointData\nconst AppReleases = ({ id }: { id: App['id'] }): ReactElement => {\n\tconst getVersions = useEndpoint('GET', '/apps/:id/versions', { id });\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst t = useTranslation();\n\n\tconst { data, isLoading, isFetched } = useQuery(\n\t\t['apps', id, 'versions'],\n\t\tasync () => {\n\t\t\tconst { apps } = await getVersions();\n\n\t\t\tif (apps.length === 0) {\n\t\t\t\tthrow new Error(t('No_results_found'));\n\t\t\t}\n\t\t\treturn apps;\n\t\t},\n\t\t{\n\t\t\tonError: (error) => {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t},\n\t\t},\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Accordion width='100%' alignSelf='center'>\n\t\t\t\t{isLoading && <AccordionLoading />}\n\t\t\t\t{isFetched && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{data?.map((release) => (\n\t\t\t\t\t\t\t<AppReleasesItem release={release} key={release.version} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Accordion>\n\t\t</>\n\t);\n};\n\nexport default AppReleases;\n",null],"names":["Accordion","useEndpoint","useToastMessageDispatch","useTranslation","useQuery","React","AccordionLoading","AppReleasesItem","module","link","default","exportDefault","_ref","id","getVersions","dispatchToastMessage","t","data","isLoading","isFetched","apps","length","Error","onError","error","type","message","createElement","Fragment","width","alignSelf","map","release","key","version"],"mappings":"2BACAA,EAAkDC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAzCC,EAAWC,IAAA,CAAM,wBAAwB,CAAAT,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAQ,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAP,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,wBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAJ,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,QAAAA,CAAAE,QAAAA,CAAAA,EAAAL,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,4BAAAA,CAAAE,QAAAA,CAAAA,EAAAJ,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,oBAAAA,CAAAE,QAAAA,CAAAA,EAAAH,EAAAA,CAAA,CAAA,EAAA,GAAlDC,EAAOG,aAAa,CAUAC,IAA4C,GAA3C,CAAEC,GAAAA,CAAAA,CAAuB,CAAAD,EACvCE,EAAcb,EAAY,MAAO,qBAAsB,CAAEY,GAAAA,CAAE,GAC3DE,EAAuBb,IACvBc,EAAIb,IAEJ,CAAEc,KAAAA,CAAI,CAAEC,UAAAA,CAAS,CAAEC,UAAAA,CAAAA,CAAW,CAAGf,EACtC,CAAC,OAAQS,EAAI,WAAW,CACxB,UACC,GAAM,CAAEO,KAAAA,CAAAA,CAAM,CAAG,MAAMN,IAEvB,GAAIM,AAAgB,IAAhBA,EAAKC,MAAM,CACd,MAAM,AAAIC,MAAMN,EAAE,qBAEnB,OAAOI,CACR,EACA,CACCG,QAAUC,IACTT,EAAqB,CAAEU,KAAM,QAASC,QAASF,CAAK,EACrD,IAIF,OACCnB,EAAAsB,aAAA,CAAAtB,EAAAuB,QAAA,CAAA,KACCvB,EAAAsB,aAAA,CAAC3B,EAAS,CAAC6B,MAAM,OAAOC,UAAU,QAAQ,EACxCZ,GAAab,EAAAsB,aAAA,CAACrB,EAAgB,MAC9Ba,GACAd,EAAAsB,aAAA,CAAAtB,EAAAuB,QAAA,CAAA,KACEX,MAAAA,EAAI,KAAA,EAAJA,EAAMc,GAAG,CAAEC,GACX3B,EAAAsB,aAAA,CAACpB,EAAe,CAACyB,QAASA,EAASC,IAAKD,EAAQE,OAAAA,AAAQ,MAO/D"}