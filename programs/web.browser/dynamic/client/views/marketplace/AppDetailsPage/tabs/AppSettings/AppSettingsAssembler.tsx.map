)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/marketplace/AppDetailsPage/tabs/AppSettings/AppSettingsAssembler.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { SettingValue } from '@rocket.chat/core-typings';\nimport { Box } from '@rocket.chat/fuselage';\nimport { capitalize } from '@rocket.chat/string-helpers';\nimport type { ReactElement } from 'react';\nimport React from 'react';\n\nimport type { ISettings } from '../../../../../../ee/client/apps/@types/IOrchestrator';\nimport AppSetting from './AppSetting';\n\ntype AppSettingsAssemblerProps = {\n\tsettings: ISettings;\n\tvalues: Record<string, SettingValue>;\n\thandlers: Record<string, (eventOrValue: SettingValue) => void>;\n};\nconst AppSettingsAssembler = ({ settings, values, handlers }: AppSettingsAssemblerProps): ReactElement => (\n\t<Box>\n\t\t{Object.values(settings).map((current) => {\n\t\t\tconst { id } = current;\n\t\t\treturn <AppSetting key={id} appSetting={current} value={values[id]} onChange={handlers[`handle${capitalize(id)}`]} />;\n\t\t})}\n\t</Box>\n);\n\nexport default AppSettingsAssembler;\n",null],"names":["Box","capitalize","React","AppSetting","module","link","default","exportDefault","_ref","settings","values","handlers","createElement","Object","map","current","id","key","appSetting","value","onChange","concat"],"mappings":"2BACAA,EAA4CC,EAAAC,EAAAC,EAArCC,EAAOC,IAAA,CAAM,wBAAwB,CAAAL,IAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,8BAAAA,CAAAH,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,QAAAA,CAAAE,QAAAA,CAAAA,EAAAJ,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,eAAAA,CAAAE,QAAAA,CAAAA,EAAAH,EAAAA,CAAA,CAAA,EAAA,GAA5CC,EAAOG,aAAa,CAaSC,IAAA,GAAC,CAAEC,SAAAA,CAAQ,CAAEC,OAAAA,CAAM,CAAEC,SAAAA,CAAAA,CAAqC,CAAAH,EAAA,OACtFN,EAAAU,aAAA,CAACZ,EAAG,KACFa,OAAOH,MAAM,CAACD,GAAUK,GAAG,CAAEC,IAC7B,GAAM,CAAEC,GAAAA,CAAAA,CAAI,CAAGD,EACf,OAAOb,EAAAU,aAAA,CAACT,EAAU,CAACc,IAAKD,EAAIE,WAAYH,EAASI,MAAOT,CAAM,CAACM,EAAI,CAACI,SAAUT,CAAQ,CAAA,SAAAU,MAAA,CAAUpB,EAAWe,IAAG,AAAI,EACnH,GACK"}