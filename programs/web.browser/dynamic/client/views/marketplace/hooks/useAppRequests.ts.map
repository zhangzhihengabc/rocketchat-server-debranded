)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/marketplace/hooks/useAppRequests.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { AppRequestFilter } from '@rocket.chat/core-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\n\nexport const useAppRequests = (appId: string, limit?: number, offset?: number, sort?: string, filter?: AppRequestFilter) => {\n\tconst fetchAppRequests = useEndpoint('GET', '/apps/app-request');\n\n\treturn useQuery({\n\t\tqueryKey: ['app-requests', appId, limit, offset],\n\t\tqueryFn: async () => fetchAppRequests({ appId, q: filter, sort, limit, offset }),\n\t\tcacheTime: 0,\n\t});\n};\n",null],"names":["useEndpoint","useQuery","module","export","useAppRequests","appId","limit","offset","sort","filter","fetchAppRequests","queryKey","queryFn","q","cacheTime"],"mappings":"2BACuDA,EAAAC,EAAvDC,EAAOC,MAAE,CAAA,CAAAC,eAAmB,IAAAA,CAAA,GAA2BF,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAF,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAD,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAGhD,IAAMG,EAAiB,CAACC,EAAeC,EAAgBC,EAAiBC,EAAeC,KAC7F,IAAMC,EAAmBV,EAAY,MAAO,qBAE5C,OAAOC,EAAS,CACfU,SAAU,CAAC,eAAgBN,EAAOC,EAAOC,EAAO,CAChDK,QAAS,SAAYF,EAAiB,CAAEL,MAAAA,EAAOQ,EAAGJ,EAAQD,KAAAA,EAAMF,MAAAA,EAAOC,OAAAA,CAAM,GAC7EO,UAAW,GAEb"}