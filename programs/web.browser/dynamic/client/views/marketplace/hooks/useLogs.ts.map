)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/marketplace/hooks/useLogs.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { OperationResult } from '@rocket.chat/rest-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport type { UseQueryResult } from '@tanstack/react-query';\nimport { useQuery } from '@tanstack/react-query';\n\nexport const useLogs = (appId: string): UseQueryResult<OperationResult<'GET', '/apps/:id/logs'>> => {\n\tconst logs = useEndpoint('GET', '/apps/:id/logs', { id: appId });\n\n\treturn useQuery(['marketplace', 'apps', appId, 'logs'], () => logs());\n};\n",null],"names":["useEndpoint","useQuery","module","export","useLogs","link","appId","logs","id"],"mappings":"2BAC4BA,EAA2BC,EAAvDC,EAAOC,MAAE,CAAA,CAAAC,QAAa,IAAAA,CAAM,GAAAF,EAA2BG,IAAA,CAAA,2BAAA,CAAAL,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAD,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAIhD,IAAMG,EAAWE,IACvB,IAAMC,EAAOP,EAAY,MAAO,iBAAkB,CAAEQ,GAAIF,CAAK,GAE7D,OAAOL,EAAS,CAAC,cAAe,OAAQK,EAAO,OAAO,CAAE,IAAMC,IAC/D"}