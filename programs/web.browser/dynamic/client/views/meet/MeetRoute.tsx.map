)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/meet/MeetRoute.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useEndpoint, useRouter, useSearchParameter, useToastMessageDispatch, useUserId } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { VisitorDoesNotExistError } from '../../lib/errors/VisitorDoesNotExistError';\nimport PageLoading from '../root/PageLoading';\nimport MeetPage from './MeetPage';\n\nconst MeetRoute = () => {\n\tconst router = useRouter();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst { t } = useTranslation();\n\n\tconst uid = useUserId();\n\tconst token = useSearchParameter('token') ?? '';\n\tconst getVisitorByToken = useEndpoint('GET', '/v1/livechat/visitor/:token', { token });\n\n\tconst { data: hasVisitor } = useQuery(\n\t\t['meet', { token }],\n\t\tasync () => {\n\t\t\tif (token) {\n\t\t\t\tconst result = await getVisitorByToken();\n\t\t\t\tif ('visitor' in result) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tthrow new VisitorDoesNotExistError();\n\t\t\t}\n\n\t\t\tif (!uid) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\t\t{\n\t\t\tonSuccess: (hasVisitor) => {\n\t\t\t\tif (hasVisitor === false) {\n\t\t\t\t\trouter.navigate('/home');\n\t\t\t\t}\n\t\t\t},\n\t\t\tonError: (error) => {\n\t\t\t\tif (error instanceof VisitorDoesNotExistError) {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: t('core.Visitor_does_not_exist') });\n\t\t\t\t\trouter.navigate('/home');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t\trouter.navigate('/home');\n\t\t\t},\n\t\t},\n\t);\n\n\tif (!hasVisitor) {\n\t\treturn <PageLoading />;\n\t}\n\n\treturn <MeetPage />;\n};\n\nexport default MeetRoute;\n",null],"names":["useEndpoint","useRouter","useSearchParameter","useToastMessageDispatch","useUserId","useQuery","React","useTranslation","VisitorDoesNotExistError","PageLoading","MeetPage","module","v","default","exportDefault","_useSearchParameter","router","dispatchToastMessage","t","uid","token","getVisitorByToken","data","hasVisitor","result","onSuccess","navigate","onError","error","type","message","createElement"],"mappings":"2BAAAA,EAASC,EAAaC,EAAWC,EAAoBC,EAAqEC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA5CC,EAAAA,IAAW,CAAA,2BAAM,CAAAX,YAA2BY,CAAA,EAAAZ,EAAAA,CAAA,EAAAC,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,mBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,wBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAO,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAN,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAM,EAAAA,IAAAA,CAAAA,QAAAA,CAAAE,QAAAA,CAAAA,EAAAP,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,gBAAAA,CAAAJ,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,4CAAAA,CAAAH,yBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,sBAAAA,CAAAE,QAAAA,CAAAA,EAAAJ,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,aAAAA,CAAAE,QAAAA,CAAAA,EAAAH,EAAAA,CAAA,CAAA,EAAA,GAA1HC,EAAOG,aAAa,CASF,KAAK,IAAAC,EACtB,IAAMC,EAASf,IACTgB,EAAuBd,IACvB,CAAEe,EAAAA,CAAAA,CAAG,CAAGX,IAERY,EAAMf,IACNgB,EAAK,AAA8B,OAA9BL,CAAAA,EAAGb,EAAmB,QAAO,GAACa,AAAA,KAAA,IAAAA,EAAAA,EAAI,GACvCM,EAAoBrB,EAAY,MAAO,8BAA+B,CAAEoB,MAAAA,CAAK,GAE7E,CAAEE,KAAMC,CAAAA,CAAY,CAAGlB,EAC5B,CAAC,OAAQ,CAAEe,MAAAA,CAAK,EAAG,CACnB,UACC,GAAIA,EAAO,CACV,IAAMI,EAAS,MAAMH,IACrB,GAAI,YAAaG,EAChB,MAAO,CAAA,CAGR,OAAM,IAAIhB,UAGNW,CAKN,EACA,CACCM,UAAYF,IACQ,CAAA,IAAfA,GACHP,EAAOU,QAAQ,CAAC,QAElB,EACAC,QAAUC,IACT,GAAIA,aAAiBpB,EAA0B,CAC9CS,EAAqB,CAAEY,KAAM,QAASC,QAASZ,EAAE,8BAA8B,GAC/EF,EAAOU,QAAQ,CAAC,SAChB,OAGDT,EAAqB,CAAEY,KAAM,QAASC,QAASF,CAAK,GACpDZ,EAAOU,QAAQ,CAAC,QACjB,WAIF,AAAKH,EAIEjB,EAAAyB,aAAA,CAACrB,EAAQ,MAHRJ,EAAAyB,aAAA,CAACtB,EAAW,KAIrB"}