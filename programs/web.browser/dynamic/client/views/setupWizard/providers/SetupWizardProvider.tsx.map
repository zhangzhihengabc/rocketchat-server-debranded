)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/setupWizard/providers/SetupWizardProvider.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport {\n\tuseToastMessageDispatch,\n\tuseSessionDispatch,\n\tuseLoginWithPassword,\n\tuseSettingSetValue,\n\tuseSettingsDispatch,\n\tuseMethod,\n\tuseEndpoint,\n\tuseTranslation,\n} from '@rocket.chat/ui-contexts';\nimport { Meteor } from 'meteor/meteor';\nimport type { ReactElement, ContextType } from 'react';\nimport React, { useCallback, useMemo, useState } from 'react';\n\nimport { callbacks } from '../../../../lib/callbacks';\nimport { validateEmail } from '../../../../lib/emailValidator';\nimport { useInvalidateLicense } from '../../../hooks/useLicense';\nimport { queryClient } from '../../../lib/queryClient';\nimport { SetupWizardContext } from '../contexts/SetupWizardContext';\nimport { useParameters } from '../hooks/useParameters';\nimport { useStepRouting } from '../hooks/useStepRouting';\n\nconst initialData: ContextType<typeof SetupWizardContext>['setupWizardData'] = {\n\torganizationData: {\n\t\torganizationName: '',\n\t\torganizationIndustry: '',\n\t\torganizationSize: '',\n\t\tcountry: '',\n\t},\n\tserverData: {\n\t\tagreement: false,\n\t\temail: '',\n\t\tupdates: false,\n\t},\n\tregistrationData: { cloudEmail: '', device_code: '', user_code: '' },\n};\n\ntype HandleRegisterServer = (params: { email: string; resend?: boolean }) => Promise<void>;\n\nconst SetupWizardProvider = ({ children }: { children: ReactElement }): ReactElement => {\n\tconst invalidateLicenseQuery = useInvalidateLicense();\n\tconst t = useTranslation();\n\tconst [setupWizardData, setSetupWizardData] = useState<ContextType<typeof SetupWizardContext>['setupWizardData']>(initialData);\n\tconst [currentStep, setCurrentStep] = useStepRouting();\n\tconst { isSuccess, data } = useParameters();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst dispatchSettings = useSettingsDispatch();\n\n\tconst setShowSetupWizard = useSettingSetValue('Show_Setup_Wizard');\n\tconst registerUser = useMethod('registerUser');\n\tconst defineUsername = useMethod('setUsername');\n\tconst loginWithPassword = useLoginWithPassword();\n\tconst setForceLogin = useSessionDispatch('forceLogin');\n\tconst createRegistrationIntent = useEndpoint('POST', '/v1/cloud.createRegistrationIntent');\n\n\tconst goToPreviousStep = useCallback(() => setCurrentStep((currentStep) => currentStep - 1), [setCurrentStep]);\n\tconst goToNextStep = useCallback(() => setCurrentStep((currentStep) => currentStep + 1), [setCurrentStep]);\n\tconst goToStep = useCallback((step) => setCurrentStep(() => step), [setCurrentStep]);\n\n\tconst _validateEmail = useCallback(\n\t\t(email: string): true | string => {\n\t\t\tif (!validateEmail(email)) {\n\t\t\t\treturn t('Invalid_email');\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\t\t[t],\n\t);\n\n\tconst registerAdminUser = useCallback(\n\t\tasync ({ fullname, username, email, password }): Promise<void> => {\n\t\t\tawait registerUser({ name: fullname, username, email, pass: password });\n\t\t\tvoid callbacks.run('userRegistered', {});\n\n\t\t\ttry {\n\t\t\t\tawait loginWithPassword(email, password);\n\t\t\t} catch (error) {\n\t\t\t\tif (error instanceof Meteor.Error && error.error === 'error-invalid-email') {\n\t\t\t\t\tdispatchToastMessage({ type: 'success', message: t('We_have_sent_registration_email') });\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (error instanceof Error || typeof error === 'string') {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tsetForceLogin(false);\n\n\t\t\tawait defineUsername(username);\n\t\t\tawait dispatchSettings([{ _id: 'Organization_Email', value: email }]);\n\t\t\tvoid callbacks.run('usernameSet', {});\n\t\t},\n\t\t[registerUser, setForceLogin, defineUsername, dispatchSettings, loginWithPassword, dispatchToastMessage, t],\n\t);\n\n\tconst saveAgreementData = useCallback(\n\t\tasync (agreement): Promise<void> => {\n\t\t\tawait dispatchSettings([\n\t\t\t\t{\n\t\t\t\t\t_id: 'Cloud_Service_Agree_PrivacyTerms',\n\t\t\t\t\tvalue: agreement,\n\t\t\t\t},\n\t\t\t]);\n\t\t},\n\t\t[dispatchSettings],\n\t);\n\n\tconst saveWorkspaceData = useCallback(async (): Promise<void> => {\n\t\tconst {\n\t\t\tserverData: { updates, agreement },\n\t\t} = setupWizardData;\n\n\t\tawait dispatchSettings([\n\t\t\t{\n\t\t\t\t_id: 'Register_Server',\n\t\t\t\tvalue: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\t_id: 'Allow_Marketing_Emails',\n\t\t\t\tvalue: updates,\n\t\t\t},\n\t\t]);\n\t\tawait saveAgreementData(agreement);\n\t}, [dispatchSettings, saveAgreementData, setupWizardData]);\n\n\tconst saveOrganizationData = useCallback(\n\t\tasync (organizationData: ContextType<typeof SetupWizardContext>['setupWizardData']['organizationData']): Promise<void> => {\n\t\t\tconst { organizationName, organizationIndustry, organizationSize, country } = organizationData;\n\n\t\t\tawait dispatchSettings([\n\t\t\t\t{\n\t\t\t\t\t_id: 'Country',\n\t\t\t\t\tvalue: country,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t_id: 'Industry',\n\t\t\t\t\tvalue: organizationIndustry,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t_id: 'Size',\n\t\t\t\t\tvalue: organizationSize,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t_id: 'Organization_Name',\n\t\t\t\t\tvalue: organizationName,\n\t\t\t\t},\n\t\t\t]);\n\t\t},\n\t\t[dispatchSettings],\n\t);\n\n\tconst registerServer: HandleRegisterServer = useMutableCallback(async ({ email, resend = false }): Promise<void> => {\n\t\ttry {\n\t\t\tconst { intentData } = await createRegistrationIntent({ resend, email });\n\t\t\tinvalidateLicenseQuery(100);\n\t\t\tqueryClient.invalidateQueries(['getRegistrationStatus']);\n\n\t\t\tsetSetupWizardData((prevState) => ({\n\t\t\t\t...prevState,\n\t\t\t\tregistrationData: { ...intentData, cloudEmail: email },\n\t\t\t}));\n\n\t\t\tgoToStep(4);\n\t\t\tsetShowSetupWizard('in_progress');\n\t\t} catch (e) {\n\t\t\tdispatchToastMessage({ type: 'error', message: t('Cloud_register_error') });\n\t\t}\n\t});\n\n\tconst completeSetupWizard = useMutableCallback(async (): Promise<void> => {\n\t\tdispatchToastMessage({ type: 'success', message: t('Your_workspace_is_ready') });\n\t\treturn setShowSetupWizard('completed');\n\t});\n\n\tconst value = useMemo(\n\t\t() => ({\n\t\t\tsetupWizardData,\n\t\t\tsetSetupWizardData,\n\t\t\tcurrentStep,\n\t\t\tloaded: isSuccess,\n\t\t\tsettings: data.settings,\n\t\t\tskipCloudRegistration: data.serverAlreadyRegistered,\n\t\t\tgoToPreviousStep,\n\t\t\tgoToNextStep,\n\t\t\tgoToStep,\n\t\t\tregisterAdminUser,\n\t\t\tvalidateEmail: _validateEmail,\n\t\t\tregisterServer,\n\t\t\tsaveAgreementData,\n\t\t\tsaveWorkspaceData,\n\t\t\tsaveOrganizationData,\n\t\t\tcompleteSetupWizard,\n\t\t\tmaxSteps: data.serverAlreadyRegistered ? 2 : 4,\n\t\t}),\n\t\t[\n\t\t\tsetupWizardData,\n\t\t\tcurrentStep,\n\t\t\tisSuccess,\n\t\t\tdata.settings,\n\t\t\tdata.serverAlreadyRegistered,\n\t\t\tgoToPreviousStep,\n\t\t\tgoToNextStep,\n\t\t\tgoToStep,\n\t\t\tregisterAdminUser,\n\t\t\t_validateEmail,\n\t\t\tregisterServer,\n\t\t\tsaveAgreementData,\n\t\t\tsaveWorkspaceData,\n\t\t\tsaveOrganizationData,\n\t\t\tcompleteSetupWizard,\n\t\t],\n\t);\n\n\treturn <SetupWizardContext.Provider value={value}>{children}</SetupWizardContext.Provider>;\n};\n\nexport default SetupWizardProvider;\n",null],"names":["_objectSpread","useMutableCallback","useToastMessageDispatch","useSessionDispatch","useLoginWithPassword","useSettingSetValue","useSettingsDispatch","useMethod","useEndpoint","useTranslation","Meteor","React","useCallback","useMemo","useState","callbacks","validateEmail","useInvalidateLicense","queryClient","SetupWizardContext","useParameters","useStepRouting","module","default","link","initialData","organizationData","organizationName","organizationIndustry","organizationSize","country","serverData","agreement","email","updates","registrationData","cloudEmail","device_code","user_code","exportDefault","_ref","children","invalidateLicenseQuery","t","setupWizardData","setSetupWizardData","currentStep","setCurrentStep","isSuccess","data","dispatchToastMessage","dispatchSettings","setShowSetupWizard","registerUser","defineUsername","loginWithPassword","setForceLogin","createRegistrationIntent","goToPreviousStep","goToNextStep","goToStep","step","_validateEmail","registerAdminUser","_ref2","fullname","username","password","name","pass","run","error","Error","type","message","_id","value","saveAgreementData","saveWorkspaceData","saveOrganizationData","registerServer","_ref3","resend","intentData","invalidateQueries","prevState","e","completeSetupWizard","loaded","settings","skipCloudRegistration","serverAlreadyRegistered","maxSteps","createElement","Provider"],"mappings":"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"}