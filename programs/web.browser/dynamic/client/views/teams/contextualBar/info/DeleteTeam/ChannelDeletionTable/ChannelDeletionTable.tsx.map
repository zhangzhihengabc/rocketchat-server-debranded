)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/teams/contextualBar/info/DeleteTeam/ChannelDeletionTable/ChannelDeletionTable.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRoom, Serialized } from '@rocket.chat/core-typings';\nimport { Box, CheckBox } from '@rocket.chat/fuselage';\nimport { useTranslation } from '@rocket.chat/ui-contexts';\nimport React from 'react';\n\nimport { GenericTable, GenericTableHeaderCell, GenericTableBody, GenericTableHeader } from '../../../../../../components/GenericTable';\nimport { useSort } from '../../../../../../components/GenericTable/hooks/useSort';\nimport ChannelDeletionTableRow from './ChannelDeletionTableRow';\n\ntype ChannelDeletationTable = {\n\trooms: Serialized<IRoom>[];\n\tonToggleAllRooms: () => void;\n\tonChangeRoomSelection: (room: Serialized<IRoom>) => void;\n\tselectedRooms: { [key: string]: Serialized<IRoom> };\n};\n\nconst ChannelDeletionTable = ({ rooms, onChangeRoomSelection, selectedRooms, onToggleAllRooms }: ChannelDeletationTable) => {\n\tconst t = useTranslation();\n\tconst { sortBy, sortDirection, setSort } = useSort<'name' | 'usersCount'>('name');\n\n\tconst selectedRoomsLength = Object.values(selectedRooms).filter(Boolean).length;\n\n\tconst getSortedChannels = () => {\n\t\tif (rooms) {\n\t\t\tconst sortedRooms = [...rooms];\n\t\t\tif (sortBy === 'name') {\n\t\t\t\tsortedRooms.sort((a, b) => (a.name && b.name ? a.name.localeCompare(b.name) : 0));\n\t\t\t}\n\t\t\tif (sortBy === 'usersCount') {\n\t\t\t\tsortedRooms.sort((a, b) => a.usersCount - b.usersCount);\n\t\t\t}\n\t\t\tif (sortDirection === 'desc') {\n\t\t\t\treturn sortedRooms?.reverse();\n\t\t\t}\n\t\t\treturn sortedRooms;\n\t\t}\n\t};\n\n\tconst sortedRooms = getSortedChannels();\n\n\tconst checked = rooms.length === selectedRoomsLength;\n\tconst indeterminate = rooms.length > selectedRoomsLength && selectedRoomsLength > 0;\n\n\tconst headers = (\n\t\t<>\n\t\t\t<GenericTableHeaderCell key='name' sort='name' onClick={setSort} direction={sortDirection} active={sortBy === 'name'}>\n\t\t\t\t<CheckBox indeterminate={indeterminate} checked={checked} onChange={onToggleAllRooms} />\n\t\t\t\t<Box mi={8}>{t('Channel_name')}</Box>\n\t\t\t</GenericTableHeaderCell>\n\t\t\t<GenericTableHeaderCell\n\t\t\t\tkey='usersCount'\n\t\t\t\tsort='usersCount'\n\t\t\t\tonClick={setSort}\n\t\t\t\tdirection={sortDirection}\n\t\t\t\tactive={sortBy === 'usersCount'}\n\t\t\t>\n\t\t\t\t<Box width='100%' textAlign='end'>\n\t\t\t\t\t{t('Members')}\n\t\t\t\t</Box>\n\t\t\t</GenericTableHeaderCell>\n\t\t</>\n\t);\n\n\treturn (\n\t\t<Box display='flex' flexDirection='column' height='x200' mbs={24}>\n\t\t\t<GenericTable>\n\t\t\t\t<GenericTableHeader>{headers}</GenericTableHeader>\n\t\t\t\t<GenericTableBody>\n\t\t\t\t\t{sortedRooms?.map((room) => (\n\t\t\t\t\t\t<ChannelDeletionTableRow room={room} key={room._id} onChange={onChangeRoomSelection} selected={!!selectedRooms[room._id]} />\n\t\t\t\t\t))}\n\t\t\t\t</GenericTableBody>\n\t\t\t</GenericTable>\n\t\t</Box>\n\t);\n};\n\nexport default ChannelDeletionTable;\n",null],"names":["Box","CheckBox","useTranslation","React","GenericTable","GenericTableHeaderCell","GenericTableBody","GenericTableHeader","useSort","ChannelDeletionTableRow","module","link","default","exportDefault","_ref","rooms","onChangeRoomSelection","selectedRooms","onToggleAllRooms","t","sortBy","sortDirection","setSort","selectedRoomsLength","Object","values","filter","Boolean","length","sortedRooms","getSortedChannels","sort","a","b","name","localeCompare","usersCount","reverse","checked","indeterminate","headers","createElement","Fragment","key","onClick","direction","active","onChange","mi","width","textAlign","display","flexDirection","height","mbs","map","room","_id","selected"],"mappings":"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"}