function module(e,t,l){let s,a,i,n,o,r,u,m,c,p,d;let b=["_updatedAt","lastMessage","lm","ts","webRtcCallStartTime"];l.link("@babel/runtime/helpers/objectSpread2",{default(e){s=e}},0),l.link("@babel/runtime/helpers/objectWithoutProperties",{default(e){a=e}},1),l.export({useTeamsChannelList:()=>k}),l.link("@rocket.chat/ui-contexts",{useEndpoint(e){i=e}},0),l.link("react",{useCallback(e){n=e},useMemo(e){o=e},useState(e){r=e}},1),l.link("../../../../../hooks/lists/useScrollableRecordList",{useScrollableRecordList(e){u=e}},2),l.link("../../../../../hooks/useComponentDidUpdate",{useComponentDidUpdate(e){m=e}},3),l.link("../../../../../lib/lists/RecordList",{RecordList(e){c=e}},4),l.link("../../../../../lib/utils/getConfig",{getConfig(e){p=e}},5),l.link("../../../../../lib/utils/mapMessageFromApi",{mapMessageFromApi(e){d=e}},6);let k=e=>{let t=i("GET","/v1/teams.listRooms"),[l,k]=r(()=>new c),C=n(()=>k(new c),[]);m(()=>{e&&C()},[e,C]);let w=n(async(l,i)=>{let{rooms:n,total:o}=await t({teamId:e.teamId,offset:l,count:i,filter:e.text,type:e.type});return{items:n.map(e=>{let{_updatedAt:t,lastMessage:l,lm:i,ts:n,webRtcCallStartTime:o}=e,r=a(e,b);return s(s(s(s(s({},i&&{lm:new Date(i)}),n&&{ts:new Date(n)}),{},{_updatedAt:new Date(t)},l&&{lastMessage:d(l)}),o&&{webRtcCallStartTime:new Date(o)}),r)}),itemCount:o}},[t,e]),{loadMoreItems:f,initialItemCount:g}=u(l,w,o(()=>parseInt("".concat(p("teamsChannelListSize",10))),[]));return{reload:C,teamsChannelList:l,loadMoreItems:f,initialItemCount:g}}}
//# sourceMappingURL=/dynamic/client/views/teams/contextualBar/channels/hooks/b64fb70263ab19169a9f71d84bf71ca72cff1525.map
