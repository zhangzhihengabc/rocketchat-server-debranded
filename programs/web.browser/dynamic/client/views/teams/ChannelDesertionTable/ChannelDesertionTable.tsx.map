)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/teams/ChannelDesertionTable/ChannelDesertionTable.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRoom, Serialized } from '@rocket.chat/core-typings';\nimport { Box, CheckBox } from '@rocket.chat/fuselage';\nimport { useTranslation } from '@rocket.chat/ui-contexts';\nimport type { FC, ReactElement } from 'react';\nimport React, { useMemo } from 'react';\n\nimport { GenericTable, GenericTableHeaderCell, GenericTableHeader, GenericTableBody } from '../../../components/GenericTable';\nimport { useSort } from '../../../components/GenericTable/hooks/useSort';\nimport ChannelDesertionTableRow from './ChannelDesertionTableRow';\n\ntype ChannelDesertionTableProps = {\n\tlastOwnerWarning?: string;\n\trooms?: (Serialized<IRoom> & { isLastOwner?: boolean })[];\n\teligibleRoomsLength: number | undefined;\n\tparams?: { current: number; itemsPerPage: 25 | 50 | 100 };\n\tonChangeParams?: () => void;\n\tonChangeRoomSelection: (room: Serialized<IRoom>) => void;\n\tselectedRooms: { [key: string]: Serialized<IRoom> };\n\tonToggleAllRooms: () => void;\n};\n\nconst ChannelDesertionTable: FC<ChannelDesertionTableProps> = ({\n\trooms,\n\teligibleRoomsLength,\n\tonChangeRoomSelection,\n\tselectedRooms,\n\tonToggleAllRooms,\n\tlastOwnerWarning,\n}) => {\n\tconst { sortBy, sortDirection, setSort } = useSort<'name' | 'ts'>('name');\n\n\tconst t = useTranslation();\n\n\tconst selectedRoomsLength = Object.values(selectedRooms).filter(Boolean).length;\n\n\tconst checked = eligibleRoomsLength === selectedRoomsLength;\n\tconst indeterminate = eligibleRoomsLength && eligibleRoomsLength > selectedRoomsLength ? selectedRoomsLength > 0 : false;\n\n\tconst results = useMemo(() => {\n\t\tif (!rooms) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst direction = sortDirection === 'asc' ? 1 : -1;\n\n\t\treturn rooms.sort((a, b) =>\n\t\t\t// eslint-disable-next-line no-nested-ternary\n\t\t\ta[sortBy] && b[sortBy] ? (a[sortBy]?.localeCompare(b[sortBy] ?? '') ?? 1) * direction : direction,\n\t\t);\n\t}, [rooms, sortBy, sortDirection]);\n\n\treturn (\n\t\t<Box display='flex' flexDirection='column' height='x200' mbs={24}>\n\t\t\t<GenericTable fixed={false}>\n\t\t\t\t<GenericTableHeader>\n\t\t\t\t\t<GenericTableHeaderCell key='name' sort='name' onClick={setSort} direction={sortDirection} active={sortBy === 'name'}>\n\t\t\t\t\t\t<CheckBox indeterminate={indeterminate} checked={checked} onChange={onToggleAllRooms} />\n\t\t\t\t\t\t<Box mi={8}>{t('Channel_name')}</Box>\n\t\t\t\t\t</GenericTableHeaderCell>\n\t\t\t\t\t<GenericTableHeaderCell key='ts' sort='ts' onClick={setSort} direction={sortDirection} active={sortBy === 'ts'}>\n\t\t\t\t\t\t<Box width='100%' textAlign='end'>\n\t\t\t\t\t\t\t{t('Joined_at')}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</GenericTableHeaderCell>\n\t\t\t\t</GenericTableHeader>\n\t\t\t\t<GenericTableBody>\n\t\t\t\t\t{results?.map(\n\t\t\t\t\t\t(room, key): ReactElement => (\n\t\t\t\t\t\t\t<ChannelDesertionTableRow\n\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\troom={room}\n\t\t\t\t\t\t\t\tonChange={onChangeRoomSelection}\n\t\t\t\t\t\t\t\tselected={'_id' in room && room._id ? !!selectedRooms[room._id] : false}\n\t\t\t\t\t\t\t\tlastOwnerWarning={lastOwnerWarning}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t),\n\t\t\t\t\t)}\n\t\t\t\t</GenericTableBody>\n\t\t\t</GenericTable>\n\t\t</Box>\n\t);\n};\n\nexport default ChannelDesertionTable;\n",null],"names":["Box","CheckBox","useTranslation","React","useMemo","GenericTable","GenericTableHeaderCell","GenericTableHeader","GenericTableBody","useSort","ChannelDesertionTableRow","module","link","default","exportDefault","_ref","rooms","eligibleRoomsLength","onChangeRoomSelection","selectedRooms","onToggleAllRooms","lastOwnerWarning","sortBy","sortDirection","setSort","t","selectedRoomsLength","Object","values","filter","Boolean","length","results","direction","sort","a","b","_a$sortBy$localeCompa","_a$sortBy","_b$sortBy","localeCompare","createElement","display","flexDirection","height","mbs","fixed","key","onClick","active","indeterminate","checked","onChange","mi","width","textAlign","map","room","selected","_id"],"mappings":"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"}