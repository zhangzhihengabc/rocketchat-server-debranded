)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/subscription/hooks/useWorkspaceSync.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useEndpoint, useToastMessageDispatch } from '@rocket.chat/ui-contexts';\nimport { useMutation } from '@tanstack/react-query';\nimport { useTranslation } from 'react-i18next';\n\nexport const useWorkspaceSync = () => {\n\tconst { t } = useTranslation();\n\tconst cloudSync = useEndpoint('POST', '/v1/cloud.syncWorkspace');\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\treturn useMutation({\n\t\tmutationFn: () => cloudSync(),\n\t\tonSuccess: () => {\n\t\t\tdispatchToastMessage({\n\t\t\t\ttype: 'success',\n\t\t\t\tmessage: t('Sync_success'),\n\t\t\t});\n\t\t},\n\t\tonError: (error) => {\n\t\t\tdispatchToastMessage({\n\t\t\t\ttype: 'error',\n\t\t\t\tmessage: error,\n\t\t\t});\n\t\t},\n\t});\n};\n",null],"names":["useEndpoint","useToastMessageDispatch","useMutation","useTranslation","module","export","useWorkspaceSync","t","cloudSync","dispatchToastMessage","mutationFn","onSuccess","type","message","onError","error"],"mappings":"2BAAqDA,EAAAC,EAA2BC,EAAAC,EAAhFC,EAAOC,MAAE,CAAA,CAAAC,iBAAa,IAAAA,CAAyB,GAAiCF,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAJ,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,wBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAF,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,gBAAAA,CAAAD,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAIzE,IAAMG,EAAmB,KAC/B,GAAM,CAAEC,EAAAA,CAAAA,CAAG,CAAGJ,IACRK,EAAYR,EAAY,OAAQ,2BAChCS,EAAuBR,IAE7B,OAAOC,EAAY,CAClBQ,WAAY,IAAMF,IAClBG,UAAW,KACVF,EAAqB,CACpBG,KAAM,UACNC,QAASN,EAAE,iBAEb,EACAO,QAAUC,IACTN,EAAqB,CACpBG,KAAM,QACNC,QAASE,GAEX,GAEF"}