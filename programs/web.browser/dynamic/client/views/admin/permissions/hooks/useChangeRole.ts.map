)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/permissions/hooks/useChangeRole.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRole, IPermission } from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useToastMessageDispatch } from '@rocket.chat/ui-contexts';\n\nexport const useChangeRole = ({\n\tonGrant,\n\tonRemove,\n\tpermissionId,\n}: {\n\tonGrant: (permissionId: IPermission['_id'], roleId: IRole['_id']) => Promise<void>;\n\tonRemove: (permissionId: IPermission['_id'], roleId: IRole['_id']) => Promise<void>;\n\tpermissionId: IPermission['_id'];\n}): ((roleId: IRole['_id'], granted: boolean) => Promise<boolean>) => {\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\treturn useMutableCallback(async (roleId, granted) => {\n\t\ttry {\n\t\t\tif (granted) {\n\t\t\t\tawait onRemove(permissionId, roleId);\n\t\t\t} else {\n\t\t\t\tawait onGrant(permissionId, roleId);\n\t\t\t}\n\t\t\treturn !granted;\n\t\t} catch (error: unknown) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t\treturn granted;\n\t});\n};\n",null],"names":["useMutableCallback","useToastMessageDispatch","module","export","useChangeRole","_ref","onGrant","onRemove","permissionId","dispatchToastMessage","roleId","granted","error","type","message"],"mappings":"2BACmCA,EAA8BC,EAAjEC,EAAOC,MAAE,CAAA,CAAAC,cAAoB,IAAAA,CAAM,GAA8BF,EAAAA,IAAAA,CAAAA,8BAAAA,CAAAF,mBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAD,wBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAG1D,IAAMG,EAAgBC,IAQwC,GARvC,CAC7BC,QAAAA,CAAO,CACPC,SAAAA,CAAQ,CACRC,aAAAA,CAAAA,CAKA,CAAAH,EACMI,EAAuBR,IAE7B,OAAOD,EAAmB,MAAOU,EAAQC,KACxC,GAAI,CAMH,OALIA,EACH,MAAMJ,EAASC,EAAcE,GAE7B,MAAMJ,EAAQE,EAAcE,GAEtB,CAACC,EACP,MAAOC,EAAgB,CACxBH,EAAqB,CAAEI,KAAM,QAASC,QAASF,CAAK,GAErD,OAAOD,CACR,EACD"}