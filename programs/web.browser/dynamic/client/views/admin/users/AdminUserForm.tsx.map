)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/users/AdminUserForm.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { AvatarObject, IUser, Serialized } from '@rocket.chat/core-typings';\nimport {\n\tField,\n\tFieldLabel,\n\tFieldRow,\n\tFieldError,\n\tFieldHint,\n\tTextInput,\n\tTextAreaInput,\n\tPasswordInput,\n\tMultiSelectFiltered,\n\tBox,\n\tToggleSwitch,\n\tIcon,\n\tDivider,\n\tFieldGroup,\n\tContextualbarFooter,\n\tButtonGroup,\n\tButton,\n\tCallout,\n} from '@rocket.chat/fuselage';\nimport type { SelectOption } from '@rocket.chat/fuselage';\nimport { useUniqueId, useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { CustomFieldsForm } from '@rocket.chat/ui-client';\nimport {\n\tuseAccountsCustomFields,\n\tuseSetting,\n\tuseEndpoint,\n\tuseRouter,\n\tuseToastMessageDispatch,\n\tuseTranslation,\n} from '@rocket.chat/ui-contexts';\nimport { useQuery, useMutation } from '@tanstack/react-query';\nimport React, { useCallback } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\n\nimport { validateEmail } from '../../../../lib/emailValidator';\nimport { parseCSV } from '../../../../lib/utils/parseCSV';\nimport { ContextualbarScrollableContent } from '../../../components/Contextualbar';\nimport UserAvatarEditor from '../../../components/avatar/UserAvatarEditor';\nimport { useEndpointAction } from '../../../hooks/useEndpointAction';\nimport { useUpdateAvatar } from '../../../hooks/useUpdateAvatar';\nimport { USER_STATUS_TEXT_MAX_LENGTH, BIO_TEXT_MAX_LENGTH } from '../../../lib/constants';\nimport { useSmtpQuery } from './hooks/useSmtpQuery';\n\ntype AdminUserFormProps = {\n\tuserData?: Serialized<IUser>;\n\tonReload: () => void;\n};\n\nconst getInitialValue = ({\n\tdata,\n\tdefaultUserRoles,\n\tisSmtpEnabled,\n}: {\n\tdata?: Serialized<IUser>;\n\tdefaultUserRoles?: IUser['roles'];\n\tisSmtpEnabled?: boolean;\n}) => ({\n\troles: data?.roles ?? defaultUserRoles,\n\tname: data?.name ?? '',\n\tpassword: '',\n\tusername: data?.username ?? '',\n\tbio: data?.bio ?? '',\n\tnickname: data?.nickname ?? '',\n\temail: (data?.emails?.length && data.emails[0].address) || '',\n\tverified: (data?.emails?.length && data.emails[0].verified) || false,\n\tsetRandomPassword: false,\n\trequirePasswordChange: data?.requirePasswordChange || false,\n\tcustomFields: data?.customFields ?? {},\n\tstatusText: data?.statusText ?? '',\n\tjoinDefaultChannels: true,\n\tsendWelcomeEmail: isSmtpEnabled,\n\tavatar: '' as AvatarObject,\n});\n\nconst UserForm = ({ userData, onReload, ...props }: AdminUserFormProps) => {\n\tconst t = useTranslation();\n\tconst router = useRouter();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst customFieldsMetadata = useAccountsCustomFields();\n\tconst defaultRoles = useSetting<string>('Accounts_Registration_Users_Default_Roles') || '';\n\n\tconst defaultUserRoles = parseCSV(defaultRoles);\n\tconst { data } = useSmtpQuery();\n\tconst isSmtpEnabled = data?.isSMTPConfigured;\n\n\tconst eventStats = useEndpointAction('POST', '/v1/statistics.telemetry');\n\tconst updateUserAction = useEndpoint('POST', '/v1/users.update');\n\tconst createUserAction = useEndpoint('POST', '/v1/users.create');\n\n\tconst getRoles = useEndpoint('GET', '/v1/roles.list');\n\tconst { data: roleData, error: roleError } = useQuery(['roles'], async () => getRoles());\n\n\tconst availableRoles: SelectOption[] = roleData?.roles.map(({ _id, name, description }) => [_id, description || name]) || [];\n\n\tconst goToUser = useCallback((id) => router.navigate(`/admin/users/info/${id}`), [router]);\n\n\tconst {\n\t\tcontrol,\n\t\twatch,\n\t\thandleSubmit,\n\t\treset,\n\t\tformState: { errors, isDirty },\n\t} = useForm({\n\t\tdefaultValues: getInitialValue({ data: userData, defaultUserRoles, isSmtpEnabled }),\n\t\tmode: 'onBlur',\n\t});\n\n\tconst { avatar, username, setRandomPassword } = watch();\n\n\tconst updateAvatar = useUpdateAvatar(avatar, userData?._id || '');\n\n\tconst handleUpdateUser = useMutation({\n\t\tmutationFn: updateUserAction,\n\t\tonSuccess: async ({ user: { _id } }) => {\n\t\t\tdispatchToastMessage({ type: 'success', message: t('User_updated_successfully') });\n\t\t\tawait updateAvatar();\n\t\t\trouter.navigate(`/admin/users/info/${_id}`);\n\t\t\tonReload();\n\t\t},\n\t\tonError: (error) => {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t},\n\t});\n\n\tconst handleCreateUser = useMutation({\n\t\tmutationFn: createUserAction,\n\t\tonSuccess: async (data) => {\n\t\t\tdispatchToastMessage({ type: 'success', message: t('User_created_successfully!') });\n\t\t\tawait eventStats({\n\t\t\t\tparams: [{ eventName: 'updateCounter', settingsId: 'Manual_Entry_User_Count' }],\n\t\t\t});\n\t\t\tgoToUser(data.user._id);\n\t\t\tonReload();\n\t\t},\n\t\tonError: (error) => {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t},\n\t});\n\n\tconst handleSaveUser = useMutableCallback(async (userFormPayload) => {\n\t\tconst { avatar, ...userFormData } = userFormPayload;\n\t\tif (userData?._id) {\n\t\t\treturn handleUpdateUser.mutateAsync({ userId: userData?._id, data: userFormData });\n\t\t}\n\t\treturn handleCreateUser.mutateAsync(userFormData);\n\t});\n\n\tconst nameId = useUniqueId();\n\tconst usernameId = useUniqueId();\n\tconst emailId = useUniqueId();\n\tconst verifiedId = useUniqueId();\n\tconst statusTextId = useUniqueId();\n\tconst bioId = useUniqueId();\n\tconst nicknameId = useUniqueId();\n\tconst passwordId = useUniqueId();\n\tconst requirePasswordChangeId = useUniqueId();\n\tconst setRandomPasswordId = useUniqueId();\n\tconst rolesId = useUniqueId();\n\tconst joinDefaultChannelsId = useUniqueId();\n\tconst sendWelcomeEmailId = useUniqueId();\n\n\treturn (\n\t\t<>\n\t\t\t<ContextualbarScrollableContent {...props}>\n\t\t\t\t<FieldGroup>\n\t\t\t\t\t{userData?._id && (\n\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\tname='avatar'\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\trender={({ field: { onChange } }) => (\n\t\t\t\t\t\t\t\t\t<UserAvatarEditor\n\t\t\t\t\t\t\t\t\t\tcurrentUsername={userData?.username}\n\t\t\t\t\t\t\t\t\t\tusername={username}\n\t\t\t\t\t\t\t\t\t\tetag={userData?.avatarETag}\n\t\t\t\t\t\t\t\t\t\tsetAvatarObj={onChange}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t)}\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<FieldLabel htmlFor={nameId}>{t('Name')}</FieldLabel>\n\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\trules={{ required: t('The_field_is_required', t('Name')) }}\n\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\tid={nameId}\n\t\t\t\t\t\t\t\t\t\taria-invalid={errors.name ? 'true' : 'false'}\n\t\t\t\t\t\t\t\t\t\taria-describedby={`${nameId}-error`}\n\t\t\t\t\t\t\t\t\t\terror={errors.name?.message}\n\t\t\t\t\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t{errors?.name && (\n\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${nameId}-error`}>\n\t\t\t\t\t\t\t\t{errors.name.message}\n\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Field>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<FieldLabel htmlFor={usernameId}>{t('Username')}</FieldLabel>\n\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\tname='username'\n\t\t\t\t\t\t\t\trules={{ required: t('The_field_is_required', t('Username')) }}\n\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\tid={usernameId}\n\t\t\t\t\t\t\t\t\t\taria-invalid={errors.username ? 'true' : 'false'}\n\t\t\t\t\t\t\t\t\t\taria-describedby={`${usernameId}-error`}\n\t\t\t\t\t\t\t\t\t\terror={errors.username?.message}\n\t\t\t\t\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\t\t\t\t\taddon={<Icon name='at' size='x20' />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t{errors?.username && (\n\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${usernameId}-error`}>\n\t\t\t\t\t\t\t\t{errors.username.message}\n\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Field>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<FieldLabel htmlFor={emailId}>{t('Email')}</FieldLabel>\n\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\trules={{\n\t\t\t\t\t\t\t\t\trequired: t('The_field_is_required', t('Email')),\n\t\t\t\t\t\t\t\t\tvalidate: (email) => (validateEmail(email) ? undefined : t('error-invalid-email-address')),\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\tid={emailId}\n\t\t\t\t\t\t\t\t\t\taria-invalid={errors.email ? 'true' : 'false'}\n\t\t\t\t\t\t\t\t\t\taria-describedby={`${emailId}-error`}\n\t\t\t\t\t\t\t\t\t\terror={errors.email?.message}\n\t\t\t\t\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\t\t\t\t\taddon={<Icon name='mail' size='x20' />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t{errors?.email && (\n\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${emailId}-error`}>\n\t\t\t\t\t\t\t\t{errors.email.message}\n\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Field>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<Box display='flex' flexDirection='row' alignItems='center' justifyContent='space-between' flexGrow={1}>\n\t\t\t\t\t\t\t<FieldLabel htmlFor={verifiedId}>{t('Verified')}</FieldLabel>\n\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\tname='verified'\n\t\t\t\t\t\t\t\t\trender={({ field: { onChange, value } }) => <ToggleSwitch id={verifiedId} checked={value} onChange={onChange} />}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Field>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<FieldLabel htmlFor={statusTextId}>{t('StatusMessage')}</FieldLabel>\n\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\tname='statusText'\n\t\t\t\t\t\t\t\trules={{ maxLength: { value: USER_STATUS_TEXT_MAX_LENGTH, message: t('Max_length_is', USER_STATUS_TEXT_MAX_LENGTH) } }}\n\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\tid={statusTextId}\n\t\t\t\t\t\t\t\t\t\terror={errors?.statusText?.message}\n\t\t\t\t\t\t\t\t\t\taria-invalid={errors.statusText ? 'true' : 'false'}\n\t\t\t\t\t\t\t\t\t\taria-describedby={`${statusTextId}-error`}\n\t\t\t\t\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\t\t\t\t\taddon={<Icon name='edit' size='x20' />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t{errors?.statusText && (\n\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${statusTextId}-error`}>\n\t\t\t\t\t\t\t\t{errors.statusText.message}\n\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Field>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<FieldLabel htmlFor={bioId}>{t('Bio')}</FieldLabel>\n\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\tname='bio'\n\t\t\t\t\t\t\t\trules={{ maxLength: { value: BIO_TEXT_MAX_LENGTH, message: t('Max_length_is', BIO_TEXT_MAX_LENGTH) } }}\n\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t<TextAreaInput\n\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\tid={bioId}\n\t\t\t\t\t\t\t\t\t\trows={3}\n\t\t\t\t\t\t\t\t\t\terror={errors?.bio?.message}\n\t\t\t\t\t\t\t\t\t\taria-invalid={errors.bio ? 'true' : 'false'}\n\t\t\t\t\t\t\t\t\t\taria-describedby={`${bioId}-error`}\n\t\t\t\t\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\t\t\t\t\taddon={<Icon name='edit' size='x20' alignSelf='center' />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t{errors?.bio && (\n\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${bioId}-error`}>\n\t\t\t\t\t\t\t\t{errors.bio.message}\n\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Field>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<FieldLabel htmlFor={nicknameId}>{t('Nickname')}</FieldLabel>\n\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\tname='nickname'\n\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t<TextInput {...field} id={nicknameId} flexGrow={1} addon={<Icon name='edit' size='x20' alignSelf='center' />} />\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t</Field>\n\t\t\t\t</FieldGroup>\n\t\t\t\t<FieldGroup>\n\t\t\t\t\t{!setRandomPassword && (\n\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t<FieldLabel htmlFor={passwordId}>{t('Password')}</FieldLabel>\n\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\trules={{ required: !userData?._id && t('The_field_is_required', t('Password')) }}\n\t\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t\t<PasswordInput\n\t\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\t\tid={passwordId}\n\t\t\t\t\t\t\t\t\t\t\taria-invalid={errors.password ? 'true' : 'false'}\n\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${passwordId}-error`}\n\t\t\t\t\t\t\t\t\t\t\terror={errors.password?.message}\n\t\t\t\t\t\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\t\t\t\t\t\taddon={<Icon name='key' size='x20' />}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t{errors?.password && (\n\t\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${passwordId}-error`}>\n\t\t\t\t\t\t\t\t\t{errors.password.message}\n\t\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t)}\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<Box display='flex' flexDirection='row' alignItems='center' justifyContent='space-between' flexGrow={1}>\n\t\t\t\t\t\t\t<FieldLabel htmlFor={requirePasswordChangeId}>{t('Require_password_change')}</FieldLabel>\n\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\tname='requirePasswordChange'\n\t\t\t\t\t\t\t\t\trender={({ field: { ref, onChange, value } }) => (\n\t\t\t\t\t\t\t\t\t\t<ToggleSwitch\n\t\t\t\t\t\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\t\t\t\t\t\tid={requirePasswordChangeId}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={setRandomPassword}\n\t\t\t\t\t\t\t\t\t\t\tchecked={setRandomPassword || value}\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Field>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<Box display='flex' flexDirection='row' alignItems='center' justifyContent='space-between' flexGrow={1}>\n\t\t\t\t\t\t\t<FieldLabel htmlFor={setRandomPasswordId}>{t('Set_random_password_and_send_by_email')}</FieldLabel>\n\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\tname='setRandomPassword'\n\t\t\t\t\t\t\t\t\trender={({ field: { ref, onChange, value } }) => (\n\t\t\t\t\t\t\t\t\t\t<ToggleSwitch\n\t\t\t\t\t\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\t\t\t\t\t\tid={setRandomPasswordId}\n\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${setRandomPasswordId}-hint`}\n\t\t\t\t\t\t\t\t\t\t\tchecked={value}\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={!isSmtpEnabled}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t{!isSmtpEnabled && (\n\t\t\t\t\t\t\t<FieldHint\n\t\t\t\t\t\t\t\tid={`${setRandomPasswordId}-hint`}\n\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{ __html: t('Send_Email_SMTP_Warning', { url: 'admin/settings/Email' }) }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Field>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<FieldLabel htmlFor={rolesId}>{t('Roles')}</FieldLabel>\n\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t{roleError && <Callout>{roleError}</Callout>}\n\t\t\t\t\t\t\t{!roleError && (\n\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\tname='roles'\n\t\t\t\t\t\t\t\t\trules={{ required: t('The_field_is_required', t('Roles')) }}\n\t\t\t\t\t\t\t\t\trender={({ field: { onChange, value } }) => (\n\t\t\t\t\t\t\t\t\t\t<MultiSelectFiltered\n\t\t\t\t\t\t\t\t\t\t\tid={rolesId}\n\t\t\t\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={t('Select_an_option')}\n\t\t\t\t\t\t\t\t\t\t\toptions={availableRoles}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t{errors?.roles && <FieldError>{errors.roles.message}</FieldError>}\n\t\t\t\t\t</Field>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<Box display='flex' flexDirection='row' alignItems='center' justifyContent='space-between' flexGrow={1}>\n\t\t\t\t\t\t\t<FieldLabel htmlFor={joinDefaultChannelsId}>{t('Join_default_channels')}</FieldLabel>\n\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\tname='joinDefaultChannels'\n\t\t\t\t\t\t\t\t\trender={({ field: { ref, onChange, value } }) => (\n\t\t\t\t\t\t\t\t\t\t<ToggleSwitch id={joinDefaultChannelsId} ref={ref} onChange={onChange} checked={value} />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Field>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<Box display='flex' flexDirection='row' alignItems='center' justifyContent='space-between' flexGrow={1}>\n\t\t\t\t\t\t\t<FieldLabel htmlFor={sendWelcomeEmailId}>{t('Send_welcome_email')}</FieldLabel>\n\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\tname='sendWelcomeEmail'\n\t\t\t\t\t\t\t\t\trender={({ field: { onChange, value } }) => (\n\t\t\t\t\t\t\t\t\t\t<ToggleSwitch\n\t\t\t\t\t\t\t\t\t\t\tid={sendWelcomeEmailId}\n\t\t\t\t\t\t\t\t\t\t\taria-describedby={`${sendWelcomeEmailId}-hint`}\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\t\t\t\t\tchecked={value}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={!isSmtpEnabled}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t{!isSmtpEnabled && (\n\t\t\t\t\t\t\t<FieldHint\n\t\t\t\t\t\t\t\tid={`${sendWelcomeEmailId}-hint`}\n\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{ __html: t('Send_Email_SMTP_Warning', { url: 'admin/settings/Email' }) }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Field>\n\t\t\t\t\t{Boolean(customFieldsMetadata.length) && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t<Box fontScale='h4'>{t('Custom_Fields')}</Box>\n\t\t\t\t\t\t\t<CustomFieldsForm formName='customFields' formControl={control} metadata={customFieldsMetadata} />\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</FieldGroup>\n\t\t\t</ContextualbarScrollableContent>\n\t\t\t<ContextualbarFooter>\n\t\t\t\t<ButtonGroup stretch>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype='reset'\n\t\t\t\t\t\tdisabled={!isDirty}\n\t\t\t\t\t\tonClick={() => reset(getInitialValue({ data: userData, defaultUserRoles, isSmtpEnabled }))}\n\t\t\t\t\t>\n\t\t\t\t\t\t{t('Reset')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button primary disabled={!isDirty} onClick={handleSubmit(handleSaveUser)}>\n\t\t\t\t\t\t{t('Save')}\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</ContextualbarFooter>\n\t\t</>\n\t);\n};\n\nexport default UserForm;\n",null],"names":["_extends","_objectWithoutProperties","Field","FieldLabel","FieldRow","FieldError","FieldHint","TextInput","TextAreaInput","PasswordInput","MultiSelectFiltered","Box","ToggleSwitch","Icon","Divider","FieldGroup","ContextualbarFooter","ButtonGroup","Button","Callout","useUniqueId","useMutableCallback","CustomFieldsForm","useAccountsCustomFields","useSetting","useEndpoint","useRouter","useToastMessageDispatch","useTranslation","useQuery","useMutation","React","useCallback","Controller","useForm","validateEmail","parseCSV","ContextualbarScrollableContent","UserAvatarEditor","useEndpointAction","useUpdateAvatar","USER_STATUS_TEXT_MAX_LENGTH","BIO_TEXT_MAX_LENGTH","useSmtpQuery","module","link","default","v","getInitialValue","_ref","_data$roles","_data$name","_data$username","_data$bio","_data$nickname","_data$emails","_data$emails2","_data$customFields","_data$statusText","data","defaultUserRoles","isSmtpEnabled","roles","name","password","username","bio","nickname","email","emails","length","address","verified","setRandomPassword","requirePasswordChange","customFields","statusText","joinDefaultChannels","sendWelcomeEmail","avatar","exportDefault","_ref2","userData","onReload","props","_excluded","t","router","dispatchToastMessage","customFieldsMetadata","defaultRoles","isSMTPConfigured","eventStats","updateUserAction","createUserAction","getRoles","roleData","error","roleError","availableRoles","map","_ref3","_id","description","goToUser","id","navigate","concat","control","watch","handleSubmit","reset","formState","errors","isDirty","defaultValues","mode","updateAvatar","handleUpdateUser","mutationFn","onSuccess","_ref4","user","type","message","onError","handleCreateUser","params","eventName","settingsId","handleSaveUser","userFormPayload","userFormData","_excluded2","mutateAsync","userId","nameId","usernameId","emailId","verifiedId","statusTextId","bioId","nicknameId","passwordId","requirePasswordChangeId","setRandomPasswordId","rolesId","joinDefaultChannelsId","sendWelcomeEmailId","createElement","Fragment","render","_ref5","field","onChange","currentUsername","etag","avatarETag","setAvatarObj","htmlFor","rules","required","_ref6","_errors$name","flexGrow","_ref7","_errors$username","addon","size","validate","undefined","_ref8","_errors$email","display","flexDirection","alignItems","justifyContent","_ref9","value","checked","maxLength","_ref10","_errors$statusText","_ref11","_errors$bio","rows","alignSelf","_ref12","_ref13","_errors$password","_ref14","ref","disabled","_ref15","dangerouslySetInnerHTML","__html","url","_ref16","placeholder","options","_ref17","_ref18","Boolean","fontScale","formName","formControl","metadata","stretch","onClick","primary"],"mappings":"2BACAA,EAQCC,EARDC,EACCC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAAAC,EACGC,EACHC,EAAAC,EAEAC,EAEAC,EAAAC,EAAmBC,EAIWC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,6CAlB9BC,EACAC,IAAA,CAAA,iCAGA,CAASC,QACTC,CAAA,EAAS/C,EACT+C,CAAA,CAAA,EAAA,GAEAH,EAAmBC,IAChB,CAAA,iDAKH,CAAAC,QAAAA,CAAAA,EAAmB7C,EAGnB8C,CAAA,CAAA,EAAA,GAFAH,EACAC,IAAA,CAAM,wBAEA,CAAA3C,MAAAA,CAAAA,EAAAA,EAAAA,CAAuB,EAACC,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,cAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,cAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,oBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,IAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,aAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,KAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,QAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,oBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,OAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,QAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAyB,EAAAA,IAAAA,CAAAA,8BAAAA,CAAAxB,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,mBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAuB,EAAAA,IAAAA,CAAAA,yBAAAA,CAAAtB,iBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAsB,EAAAA,IAAAA,CAAAA,2BAAAA,CAAArB,wBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,wBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAgB,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAf,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAc,EAAAA,IAAAA,CAAAA,QAAAA,CAAAE,QAAAA,CAAAA,EAAAf,EAAAA,CAAA,EAAAC,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAY,EAAAA,IAAAA,CAAAA,kBAAAA,CAAAX,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,QAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAU,EAAAA,IAAAA,CAAAA,iCAAAA,CAAAT,cAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAS,EAAAA,IAAAA,CAAAA,iCAAAA,CAAAR,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAQ,EAAAA,IAAAA,CAAAA,oCAAAA,CAAAP,+BAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAO,EAAAA,IAAAA,CAAAA,8CAAAA,CAAAE,QAAAA,CAAAA,EAAAR,EAAAA,CAAA,CAAA,EAAA,IAAAM,EAAAA,IAAAA,CAAAA,mCAAAA,CAAAL,kBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,IAAAK,EAAAA,IAAAA,CAAAA,iCAAAA,CAAAJ,gBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,IAAAI,EAAAA,IAAAA,CAAAA,yBAAAA,CAAAH,4BAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,oBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,IAAAE,EAAAA,IAAAA,CAAAA,uBAAAA,CAAAD,aAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,IA8B/B,IAAMK,EAAkBC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,GAAC,CACxBC,KAAAA,CAAI,CACJC,iBAAAA,CAAgB,CAChBC,cAAAA,CAAAA,CAKA,CAAAZ,EAAA,MAAM,CACNa,MAAK,AAAa,OAAbZ,CAAAA,EAAES,MAAAA,EAAI,KAAA,EAAJA,EAAMG,KAAK,AAALA,GAAKZ,AAAA,KAAA,IAAAA,EAAAA,EAAIU,EACtBG,KAAI,AAAY,OAAZZ,CAAAA,EAAEQ,MAAAA,EAAI,KAAA,EAAJA,EAAMI,IAAI,AAAJA,GAAIZ,AAAA,KAAA,IAAAA,EAAAA,EAAI,GACpBa,SAAU,GACVC,SAAQ,AAAgB,OAAhBb,CAAAA,EAAEO,MAAAA,EAAI,KAAA,EAAJA,EAAMM,QAAQ,AAARA,GAAQb,AAAA,KAAA,IAAAA,EAAAA,EAAI,GAC5Bc,IAAG,AAAW,OAAXb,CAAAA,EAAEM,MAAAA,EAAI,KAAA,EAAJA,EAAMO,GAAG,AAAHA,GAAGb,AAAA,KAAA,IAAAA,EAAAA,EAAI,GAClBc,SAAQ,AAAgB,OAAhBb,CAAAA,EAAEK,MAAAA,EAAI,KAAA,EAAJA,EAAMQ,QAAQ,AAARA,GAAQb,AAAA,KAAA,IAAAA,EAAAA,EAAI,GAC5Bc,MAAQ,AAAAT,CAAAA,MAAAA,EAAI,KAAA,EAAA,AAAQ,OAARJ,CAAAA,EAAJI,EAAMU,MAAM,AAANA,GAAMd,AAAA,KAAA,IAAAA,EAAA,KAAA,EAAZA,EAAce,MAAM,AAANA,GAAUX,EAAKU,MAAM,CAAC,EAAE,CAACE,OAAO,EAAK,GAC3DC,SAAW,AAAAb,CAAAA,MAAAA,EAAI,KAAA,EAAA,AAAQ,OAARH,CAAAA,EAAJG,EAAMU,MAAM,AAANA,GAAMb,AAAA,KAAA,IAAAA,EAAA,KAAA,EAAZA,EAAcc,MAAM,AAANA,GAAUX,EAAKU,MAAM,CAAC,EAAE,CAACG,QAAQ,EAAK,CAAA,EAC/DC,kBAAmB,CAAA,EACnBC,sBAAuB,AAAAf,CAAAA,MAAAA,EAAI,KAAA,EAAJA,EAAMe,qBAAqB,AAArBA,GAAyB,CAAA,EACtDC,aAAY,AAAoB,OAApBlB,CAAAA,EAAEE,MAAAA,EAAI,KAAA,EAAJA,EAAMgB,YAAY,AAAZA,GAAYlB,AAAA,KAAA,IAAAA,EAAAA,EAAI,CAAA,EACpCmB,WAAU,AAAkB,OAAlBlB,CAAAA,EAAEC,MAAAA,EAAI,KAAA,EAAJA,EAAMiB,UAAU,AAAVA,GAAUlB,AAAA,KAAA,IAAAA,EAAAA,EAAI,GAChCmB,oBAAqB,CAAA,EACrBC,iBAAkBjB,EAClBkB,OAAQ,GACR,EAzEDnC,EAAOoC,aAEN,CAyEgBC,IAAyD,GAAxD,CAAEC,SAAAA,CAAQ,CAAEC,SAAAA,CAAAA,CAAwC,CAAAF,EAA3BG,EAAKnF,EAAAgF,EAAAI,GACzCC,EAAI1D,IACJ2D,EAAS7D,IACT8D,EAAuB7D,IAEvB8D,GAAuBlE,IACvBmE,GAAelE,EAAmB,8CAAgD,GAElFoC,GAAmBxB,EAASsD,IAC5B,CAAE/B,KAAAA,EAAAA,CAAM,CAAGhB,IACXkB,GAAgBF,MAAAA,GAAI,KAAA,EAAJA,GAAMgC,gBAAgB,CAEtCC,GAAarD,EAAkB,OAAQ,4BACvCsD,GAAmBpE,EAAY,OAAQ,oBACvCqE,GAAmBrE,EAAY,OAAQ,oBAEvCsE,GAAWtE,EAAY,MAAO,kBAC9B,CAAEkC,KAAMqC,EAAQ,CAAEC,MAAOC,EAAAA,CAAW,CAAGrE,EAAS,CAAC,QAAQ,CAAE,SAAYkE,MAEvEI,GAAiC,AAAAH,CAAAA,MAAAA,GAAQ,KAAA,EAARA,GAAUlC,KAAK,CAACsC,GAAG,CAACC,IAAA,GAAC,CAAEC,IAAAA,CAAG,CAAEvC,KAAAA,CAAI,CAAEwC,YAAAA,CAAAA,CAAa,CAAAF,EAAA,MAAK,CAACC,EAAKC,GAAexC,EAAK,EAAA,GAAK,EAAE,CAEtHyC,GAAWxE,EAAayE,GAAOlB,EAAOmB,QAAQ,CAAA,qBAAAC,MAAA,CAAsBF,IAAO,CAAClB,EAAO,EAEnF,CACLqB,QAAAA,EAAO,CACPC,MAAAA,EAAK,CACLC,aAAAA,EAAY,CACZC,MAAAA,EAAK,CACLC,UAAW,CAAEC,OAAAA,EAAM,CAAEC,QAAAA,EAAAA,CAAO,CAC5B,CAAGhF,EAAQ,CACXiF,cAAenE,EAAgB,CAAEW,KAAMuB,EAAUtB,iBAAAA,GAAkBC,cAAAA,EAAa,GAChFuD,KAAM,WAGD,CAAErC,OAAAA,EAAM,CAAEd,SAAAA,EAAQ,CAAEQ,kBAAAA,EAAAA,CAAmB,CAAGoC,KAE1CQ,GAAe7E,EAAgBuC,GAAQ,AAAAG,CAAAA,MAAAA,EAAQ,KAAA,EAARA,EAAUoB,GAAG,AAAHA,GAAO,IAExDgB,GAAmBxF,EAAY,CACpCyF,WAAY1B,GACZ2B,UAAW,MAAAC,IAA4B,GAArB,CAAEC,KAAM,CAAEpB,IAAAA,CAAAA,CAAG,CAAI,CAAAmB,EAClCjC,EAAqB,CAAEmC,KAAM,UAAWC,QAAStC,EAAE,4BAA4B,GAC/E,MAAM+B,KACN9B,EAAOmB,QAAQ,CAAA,qBAAAC,MAAA,CAAsBL,IACrCnB,GACD,EACA0C,QAAU5B,IACTT,EAAqB,CAAEmC,KAAM,QAASC,QAAS3B,CAAK,EACrD,IAGK6B,GAAmBhG,EAAY,CACpCyF,WAAYzB,GACZ0B,UAAW,MAAO7D,IACjB6B,EAAqB,CAAEmC,KAAM,UAAWC,QAAStC,EAAE,6BAA6B,GAChF,MAAMM,GAAW,CAChBmC,OAAQ,CAAC,CAAEC,UAAW,gBAAiBC,WAAY,yBAAyB,EAAE,GAE/EzB,GAAS7C,EAAK+D,IAAI,CAACpB,GAAG,EACtBnB,GACD,EACA0C,QAAU5B,IACTT,EAAqB,CAAEmC,KAAM,QAASC,QAAS3B,CAAK,EACrD,IAGKiC,GAAiB7G,EAAmB,MAAO8G,IAChD,GAAM,CAAEpD,OAAAA,CAAAA,CAAyB,CAAGoD,EAAjBC,EAAYnI,EAAKkI,EAAeE,UACnD,AAAInD,MAAAA,GAAAA,EAAUoB,GAAG,CACTgB,GAAiBgB,WAAW,CAAC,CAAEC,OAAQrD,MAAAA,EAAQ,KAAA,EAARA,EAAUoB,GAAG,CAAE3C,KAAMyE,CAAY,GAEzEN,GAAiBQ,WAAW,CAACF,EACrC,GAEMI,GAASpH,IACTqH,GAAarH,IACbsH,GAAUtH,IACVuH,GAAavH,IACbwH,GAAexH,IACfyH,GAAQzH,IACR0H,GAAa1H,IACb2H,GAAa3H,IACb4H,GAA0B5H,IAC1B6H,GAAsB7H,IACtB8H,GAAU9H,IACV+H,GAAwB/H,IACxBgI,GAAqBhI,IAE3B,OACCW,EAAAsH,aAAA,CAAAtH,EAAAuH,QAAA,CAAA,KACCvH,EAAAsH,aAAA,CAAChH,EAAmC+C,EACnCrD,EAAAsH,aAAA,CAACtI,EAAU,KACT,AAAAmE,CAAAA,MAAAA,EAAQ,KAAA,EAARA,EAAUoB,GAAG,AAAHA,GACVvE,EAAAsH,aAAA,CAACnJ,EAAK,KACL6B,EAAAsH,aAAA,CAACpH,EAAU,CACV8B,KAAK,SACL6C,QAASA,GACT2C,OAAQC,IAAA,GAAC,CAAEC,MAAO,CAAEC,SAAAA,CAAAA,CAAQ,CAAI,CAAAF,EAAA,OAC/BzH,EAAAsH,aAAA,CAAC/G,EAAgB,CAChBqH,gBAAiBzE,MAAAA,EAAQ,KAAA,EAARA,EAAUjB,QAAS,CACpCA,SAAUA,GACV2F,KAAM1E,MAAAA,EAAQ,KAAA,EAARA,EAAU2E,UAAW,CAC3BC,aAAcJ,CAAS,EACtB,CACD,IAIL3H,EAAAsH,aAAA,CAACnJ,EAAK,KACL6B,EAAAsH,aAAA,CAAClJ,EAAU,CAAC4J,QAASvB,EAAO,EAAElD,EAAE,SAChCvD,EAAAsH,aAAA,CAACjJ,EAAQ,KACR2B,EAAAsH,aAAA,CAACpH,EAAU,CACV2E,QAASA,GACT7C,KAAK,OACLiG,MAAO,CAAEC,SAAU3E,EAAE,wBAAyBA,EAAE,QAAQ,EACxDiE,OAAQW,IAAA,IAAAC,EAAA,GAAC,CAAEV,MAAAA,CAAAA,CAAO,CAAAS,EAAA,OACjBnI,EAAAsH,aAAA,CAAC9I,EAASP,EAAA,CAAA,EACLyJ,EAAK,CACThD,GAAI+B,GACJ,eAAcvB,GAAOlD,IAAI,CAAG,OAAS,QACrC,mBAAA,GAAA4C,MAAA,CAAqB6B,GAAM,UAC3BvC,MAAK,AAAa,OAAbkE,CAAAA,EAAElD,GAAOlD,IAAI,AAAJA,GAAIoG,AAAA,KAAA,IAAAA,EAAA,KAAA,EAAXA,EAAavC,OAAQ,CAC5BwC,SAAU,CAAE,GACX,CACD,IAGH,AAAAnD,CAAAA,MAAAA,GAAM,KAAA,EAANA,GAAQlD,IAAI,AAAJA,GACRhC,EAAAsH,aAAA,CAAChJ,EAAU,CAAC,YAAU,YAAYoG,GAAE,GAAAE,MAAA,CAAK6B,GAAM,SAAS,EACtDvB,GAAOlD,IAAI,CAAC6D,OAAO,GAIvB7F,EAAAsH,aAAA,CAACnJ,EAAK,KACL6B,EAAAsH,aAAA,CAAClJ,EAAU,CAAC4J,QAAStB,EAAW,EAAEnD,EAAE,aACpCvD,EAAAsH,aAAA,CAACjJ,EAAQ,KACR2B,EAAAsH,aAAA,CAACpH,EAAU,CACV2E,QAASA,GACT7C,KAAK,WACLiG,MAAO,CAAEC,SAAU3E,EAAE,wBAAyBA,EAAE,YAAY,EAC5DiE,OAAQc,IAAA,IAAAC,EAAA,GAAC,CAAEb,MAAAA,CAAAA,CAAO,CAAAY,EAAA,OACjBtI,EAAAsH,aAAA,CAAC9I,EAASP,EAAA,CAAA,EACLyJ,EAAK,CACThD,GAAIgC,GACJ,eAAcxB,GAAOhD,QAAQ,CAAG,OAAS,QACzC,mBAAA,GAAA0C,MAAA,CAAqB8B,GAAU,UAC/BxC,MAAK,AAAiB,OAAjBqE,CAAAA,EAAErD,GAAOhD,QAAQ,AAARA,GAAQqG,AAAA,KAAA,IAAAA,EAAA,KAAA,EAAfA,EAAiB1C,OAAQ,CAChCwC,SAAU,EACVG,MAAOxI,EAAAsH,aAAA,CAACxI,EAAI,CAACkD,KAAK,KAAKyG,KAAK,KAAK,EAAI,GACpC,CACD,IAGH,AAAAvD,CAAAA,MAAAA,GAAM,KAAA,EAANA,GAAQhD,QAAQ,AAARA,GACRlC,EAAAsH,aAAA,CAAChJ,EAAU,CAAC,YAAU,YAAYoG,GAAE,GAAAE,MAAA,CAAK8B,GAAU,SAAS,EAC1DxB,GAAOhD,QAAQ,CAAC2D,OAAO,GAI3B7F,EAAAsH,aAAA,CAACnJ,EAAK,KACL6B,EAAAsH,aAAA,CAAClJ,EAAU,CAAC4J,QAASrB,EAAQ,EAAEpD,EAAE,UACjCvD,EAAAsH,aAAA,CAACjJ,EAAQ,KACR2B,EAAAsH,aAAA,CAACpH,EAAU,CACV2E,QAASA,GACT7C,KAAK,QACLiG,MAAO,CACNC,SAAU3E,EAAE,wBAAyBA,EAAE,UACvCmF,SAAWrG,GAAWjC,EAAciC,GAASsG,KAAAA,EAAYpF,EAAE,gCAE5DiE,OAAQoB,IAAA,IAAAC,EAAA,GAAC,CAAEnB,MAAAA,CAAAA,CAAO,CAAAkB,EAAA,OACjB5I,EAAAsH,aAAA,CAAC9I,EAASP,EAAA,CAAA,EACLyJ,EAAK,CACThD,GAAIiC,GACJ,eAAczB,GAAO7C,KAAK,CAAG,OAAS,QACtC,mBAAA,GAAAuC,MAAA,CAAqB+B,GAAO,UAC5BzC,MAAK,AAAc,OAAd2E,CAAAA,EAAE3D,GAAO7C,KAAK,AAALA,GAAKwG,AAAA,KAAA,IAAAA,EAAA,KAAA,EAAZA,EAAchD,OAAQ,CAC7BwC,SAAU,EACVG,MAAOxI,EAAAsH,aAAA,CAACxI,EAAI,CAACkD,KAAK,OAAOyG,KAAK,KAAK,EAAI,GACtC,CACD,IAGH,AAAAvD,CAAAA,MAAAA,GAAM,KAAA,EAANA,GAAQ7C,KAAK,AAALA,GACRrC,EAAAsH,aAAA,CAAChJ,EAAU,CAAC,YAAU,YAAYoG,GAAE,GAAAE,MAAA,CAAK+B,GAAO,SAAS,EACvDzB,GAAO7C,KAAK,CAACwD,OAAO,GAIxB7F,EAAAsH,aAAA,CAACnJ,EAAK,KACL6B,EAAAsH,aAAA,CAAC1I,EAAG,CAACkK,QAAQ,OAAOC,cAAc,MAAMC,WAAW,SAASC,eAAe,gBAAgBZ,SAAU,CAAE,EACtGrI,EAAAsH,aAAA,CAAClJ,EAAU,CAAC4J,QAASpB,EAAW,EAAErD,EAAE,aACpCvD,EAAAsH,aAAA,CAACjJ,EAAQ,KACR2B,EAAAsH,aAAA,CAACpH,EAAU,CACV2E,QAASA,GACT7C,KAAK,WACLwF,OAAQ0B,IAAA,GAAC,CAAExB,MAAO,CAAEC,SAAAA,CAAQ,CAAEwB,MAAAA,CAAAA,CAAK,CAAI,CAAAD,EAAA,OAAKlJ,EAAAsH,aAAA,CAACzI,EAAY,CAAC6F,GAAIkC,GAAYwC,QAASD,EAAOxB,SAAUA,CAAS,EAAG,CAAC,MAKrH3H,EAAAsH,aAAA,CAACnJ,EAAK,KACL6B,EAAAsH,aAAA,CAAClJ,EAAU,CAAC4J,QAASnB,EAAa,EAAEtD,EAAE,kBACtCvD,EAAAsH,aAAA,CAACjJ,EAAQ,KACR2B,EAAAsH,aAAA,CAACpH,EAAU,CACV2E,QAASA,GACT7C,KAAK,aACLiG,MAAO,CAAEoB,UAAW,CAAEF,MAAOzI,EAA6BmF,QAAStC,EAAE,gBAAiB7C,EAA4B,CAAE,EACpH8G,OAAQ8B,IAAA,IAAAC,EAAA,GAAC,CAAE7B,MAAAA,CAAAA,CAAO,CAAA4B,EAAA,OACjBtJ,EAAAsH,aAAA,CAAC9I,EAASP,EAAA,CAAA,EACLyJ,EAAK,CACThD,GAAImC,GACJ3C,MAAOgB,MAAAA,GAAM,KAAA,EAAA,AAAY,OAAZqE,CAAAA,EAANrE,GAAQrC,UAAU,AAAVA,GAAU0G,AAAA,KAAA,IAAAA,EAAA,KAAA,EAAlBA,EAAoB1D,OAAQ,CACnC,eAAcX,GAAOrC,UAAU,CAAG,OAAS,QAC3C,mBAAA,GAAA+B,MAAA,CAAqBiC,GAAY,UACjCwB,SAAU,EACVG,MAAOxI,EAAAsH,aAAA,CAACxI,EAAI,CAACkD,KAAK,OAAOyG,KAAK,KAAK,EAAI,GACtC,CACD,IAGH,AAAAvD,CAAAA,MAAAA,GAAM,KAAA,EAANA,GAAQrC,UAAU,AAAVA,GACR7C,EAAAsH,aAAA,CAAChJ,EAAU,CAAC,YAAU,YAAYoG,GAAE,GAAAE,MAAA,CAAKiC,GAAY,SAAS,EAC5D3B,GAAOrC,UAAU,CAACgD,OAAO,GAI7B7F,EAAAsH,aAAA,CAACnJ,EAAK,KACL6B,EAAAsH,aAAA,CAAClJ,EAAU,CAAC4J,QAASlB,EAAM,EAAEvD,EAAE,QAC/BvD,EAAAsH,aAAA,CAACjJ,EAAQ,KACR2B,EAAAsH,aAAA,CAACpH,EAAU,CACV2E,QAASA,GACT7C,KAAK,MACLiG,MAAO,CAAEoB,UAAW,CAAEF,MAAOxI,EAAqBkF,QAAStC,EAAE,gBAAiB5C,EAAoB,CAAE,EACpG6G,OAAQgC,IAAA,IAAAC,EAAA,GAAC,CAAE/B,MAAAA,CAAAA,CAAO,CAAA8B,EAAA,OACjBxJ,EAAAsH,aAAA,CAAC7I,EAAaR,EAAA,CAAA,EACTyJ,EAAK,CACThD,GAAIoC,GACJ4C,KAAM,EACNxF,MAAOgB,MAAAA,GAAM,KAAA,EAAA,AAAK,OAALuE,CAAAA,EAANvE,GAAQ/C,GAAG,AAAHA,GAAGsH,AAAA,KAAA,IAAAA,EAAA,KAAA,EAAXA,EAAa5D,OAAQ,CAC5B,eAAcX,GAAO/C,GAAG,CAAG,OAAS,QACpC,mBAAA,GAAAyC,MAAA,CAAqBkC,GAAK,UAC1BuB,SAAU,EACVG,MAAOxI,EAAAsH,aAAA,CAACxI,EAAI,CAACkD,KAAK,OAAOyG,KAAK,MAAMkB,UAAU,QAAQ,EAAI,GACzD,CACD,IAGH,AAAAzE,CAAAA,MAAAA,GAAM,KAAA,EAANA,GAAQ/C,GAAG,AAAHA,GACRnC,EAAAsH,aAAA,CAAChJ,EAAU,CAAC,YAAU,YAAYoG,GAAE,GAAAE,MAAA,CAAKkC,GAAK,SAAS,EACrD5B,GAAO/C,GAAG,CAAC0D,OAAO,GAItB7F,EAAAsH,aAAA,CAACnJ,EAAK,KACL6B,EAAAsH,aAAA,CAAClJ,EAAU,CAAC4J,QAASjB,EAAW,EAAExD,EAAE,aACpCvD,EAAAsH,aAAA,CAACjJ,EAAQ,KACR2B,EAAAsH,aAAA,CAACpH,EAAU,CACV2E,QAASA,GACT7C,KAAK,WACLwF,OAAQoC,IAAA,GAAC,CAAElC,MAAAA,CAAAA,CAAO,CAAAkC,EAAA,OACjB5J,EAAAsH,aAAA,CAAC9I,EAASP,EAAA,CAAA,EAAKyJ,EAAK,CAAEhD,GAAIqC,GAAYsB,SAAU,EAAGG,MAAOxI,EAAAsH,aAAA,CAACxI,EAAI,CAACkD,KAAK,OAAOyG,KAAK,MAAMkB,UAAU,QAAQ,EAAI,GAAG,CAC/G,MAKN3J,EAAAsH,aAAA,CAACtI,EAAU,KACT,CAAC0D,IACD1C,EAAAsH,aAAA,CAACnJ,EAAK,KACL6B,EAAAsH,aAAA,CAAClJ,EAAU,CAAC4J,QAAShB,EAAW,EAAEzD,EAAE,aACpCvD,EAAAsH,aAAA,CAACjJ,EAAQ,KACR2B,EAAAsH,aAAA,CAACpH,EAAU,CACV2E,QAASA,GACT7C,KAAK,WACLiG,MAAO,CAAEC,SAAU,CAAC/E,CAAAA,MAAAA,GAAAA,EAAUoB,GAAG,AAAHA,GAAOhB,EAAE,wBAAyBA,EAAE,YAAY,EAC9EiE,OAAQqC,IAAA,IAAAC,EAAA,GAAC,CAAEpC,MAAAA,CAAAA,CAAO,CAAAmC,EAAA,OACjB7J,EAAAsH,aAAA,CAAC5I,EAAaT,EAAA,CAAA,EACTyJ,EAAK,CACThD,GAAIsC,GACJ,eAAc9B,GAAOjD,QAAQ,CAAG,OAAS,QACzC,mBAAA,GAAA2C,MAAA,CAAqBoC,GAAU,UAC/B9C,MAAK,AAAiB,OAAjB4F,CAAAA,EAAE5E,GAAOjD,QAAQ,AAARA,GAAQ6H,AAAA,KAAA,IAAAA,EAAA,KAAA,EAAfA,EAAiBjE,OAAQ,CAChCwC,SAAU,EACVG,MAAOxI,EAAAsH,aAAA,CAACxI,EAAI,CAACkD,KAAK,MAAMyG,KAAK,KAAK,EAAI,GACrC,CACD,IAGH,AAAAvD,CAAAA,MAAAA,GAAM,KAAA,EAANA,GAAQjD,QAAQ,AAARA,GACRjC,EAAAsH,aAAA,CAAChJ,EAAU,CAAC,YAAU,YAAYoG,GAAE,GAAAE,MAAA,CAAKoC,GAAU,SAAS,EAC1D9B,GAAOjD,QAAQ,CAAC4D,OAAO,GAK5B7F,EAAAsH,aAAA,CAACnJ,EAAK,KACL6B,EAAAsH,aAAA,CAAC1I,EAAG,CAACkK,QAAQ,OAAOC,cAAc,MAAMC,WAAW,SAASC,eAAe,gBAAgBZ,SAAU,CAAE,EACtGrI,EAAAsH,aAAA,CAAClJ,EAAU,CAAC4J,QAASf,EAAwB,EAAE1D,EAAE,4BACjDvD,EAAAsH,aAAA,CAACjJ,EAAQ,KACR2B,EAAAsH,aAAA,CAACpH,EAAU,CACV2E,QAASA,GACT7C,KAAK,wBACLwF,OAAQuC,IAAA,GAAC,CAAErC,MAAO,CAAEsC,IAAAA,CAAG,CAAErC,SAAAA,CAAQ,CAAEwB,MAAAA,CAAAA,CAAK,CAAI,CAAAY,EAAA,OAC3C/J,EAAAsH,aAAA,CAACzI,EAAY,CACZmL,IAAKA,EACLtF,GAAIuC,GACJgD,SAAUvH,GACV0G,QAAS1G,IAAqByG,EAC9BxB,SAAUA,CAAS,EAClB,CACD,MAKN3H,EAAAsH,aAAA,CAACnJ,EAAK,KACL6B,EAAAsH,aAAA,CAAC1I,EAAG,CAACkK,QAAQ,OAAOC,cAAc,MAAMC,WAAW,SAASC,eAAe,gBAAgBZ,SAAU,CAAE,EACtGrI,EAAAsH,aAAA,CAAClJ,EAAU,CAAC4J,QAASd,EAAoB,EAAE3D,EAAE,0CAC7CvD,EAAAsH,aAAA,CAACjJ,EAAQ,KACR2B,EAAAsH,aAAA,CAACpH,EAAU,CACV2E,QAASA,GACT7C,KAAK,oBACLwF,OAAQ0C,IAAA,GAAC,CAAExC,MAAO,CAAEsC,IAAAA,CAAG,CAAErC,SAAAA,CAAQ,CAAEwB,MAAAA,CAAAA,CAAK,CAAI,CAAAe,EAAA,OAC3ClK,EAAAsH,aAAA,CAACzI,EAAY,CACZmL,IAAKA,EACLtF,GAAIwC,GACJ,mBAAA,GAAAtC,MAAA,CAAqBsC,GAAmB,SACxCkC,QAASD,EACTxB,SAAUA,EACVsC,SAAU,CAACnI,EAAc,EACxB,CACD,KAIJ,CAACA,IACD9B,EAAAsH,aAAA,CAAC/I,EAAS,CACTmG,GAAE,GAAAE,MAAA,CAAKsC,GAAmB,SAC1BiD,wBAAyB,CAAEC,OAAQ7G,EAAE,0BAA2B,CAAE8G,IAAK,sBAAsB,EAAG,CAAG,IAItGrK,EAAAsH,aAAA,CAACnJ,EAAK,KACL6B,EAAAsH,aAAA,CAAClJ,EAAU,CAAC4J,QAASb,EAAQ,EAAE5D,EAAE,UACjCvD,EAAAsH,aAAA,CAACjJ,EAAQ,KACP8F,IAAanE,EAAAsH,aAAA,CAAClI,EAAO,KAAE+E,IACvB,CAACA,IACDnE,EAAAsH,aAAA,CAACpH,EAAU,CACV2E,QAASA,GACT7C,KAAK,QACLiG,MAAO,CAAEC,SAAU3E,EAAE,wBAAyBA,EAAE,SAAS,EACzDiE,OAAQ8C,IAAA,GAAC,CAAE5C,MAAO,CAAEC,SAAAA,CAAQ,CAAEwB,MAAAA,CAAAA,CAAK,CAAI,CAAAmB,EAAA,OACtCtK,EAAAsH,aAAA,CAAC3I,EAAmB,CACnB+F,GAAIyC,GACJgC,MAAOA,EACPxB,SAAUA,EACVU,SAAU,EACVkC,YAAahH,EAAE,oBACfiH,QAASpG,EAAe,EACvB,CACD,IAIJ,AAAAc,CAAAA,MAAAA,GAAM,KAAA,EAANA,GAAQnD,KAAK,AAALA,GAAS/B,EAAAsH,aAAA,CAAChJ,EAAU,KAAE4G,GAAOnD,KAAK,CAAC8D,OAAO,GAEpD7F,EAAAsH,aAAA,CAACnJ,EAAK,KACL6B,EAAAsH,aAAA,CAAC1I,EAAG,CAACkK,QAAQ,OAAOC,cAAc,MAAMC,WAAW,SAASC,eAAe,gBAAgBZ,SAAU,CAAE,EACtGrI,EAAAsH,aAAA,CAAClJ,EAAU,CAAC4J,QAASZ,EAAsB,EAAE7D,EAAE,0BAC/CvD,EAAAsH,aAAA,CAACjJ,EAAQ,KACR2B,EAAAsH,aAAA,CAACpH,EAAU,CACV2E,QAASA,GACT7C,KAAK,sBACLwF,OAAQiD,IAAA,GAAC,CAAE/C,MAAO,CAAEsC,IAAAA,CAAG,CAAErC,SAAAA,CAAQ,CAAEwB,MAAAA,CAAAA,CAAK,CAAI,CAAAsB,EAAA,OAC3CzK,EAAAsH,aAAA,CAACzI,EAAY,CAAC6F,GAAI0C,GAAuB4C,IAAKA,EAAKrC,SAAUA,EAAUyB,QAASD,CAAM,EAAG,CACxF,MAKNnJ,EAAAsH,aAAA,CAACnJ,EAAK,KACL6B,EAAAsH,aAAA,CAAC1I,EAAG,CAACkK,QAAQ,OAAOC,cAAc,MAAMC,WAAW,SAASC,eAAe,gBAAgBZ,SAAU,CAAE,EACtGrI,EAAAsH,aAAA,CAAClJ,EAAU,CAAC4J,QAASX,EAAmB,EAAE9D,EAAE,uBAC5CvD,EAAAsH,aAAA,CAACjJ,EAAQ,KACR2B,EAAAsH,aAAA,CAACpH,EAAU,CACV2E,QAASA,GACT7C,KAAK,mBACLwF,OAAQkD,IAAA,GAAC,CAAEhD,MAAO,CAAEC,SAAAA,CAAQ,CAAEwB,MAAAA,CAAAA,CAAK,CAAI,CAAAuB,EAAA,OACtC1K,EAAAsH,aAAA,CAACzI,EAAY,CACZ6F,GAAI2C,GACJ,mBAAA,GAAAzC,MAAA,CAAqByC,GAAkB,SACvCM,SAAUA,EACVyB,QAASD,EACTc,SAAU,CAACnI,EAAc,EACxB,CACD,KAIJ,CAACA,IACD9B,EAAAsH,aAAA,CAAC/I,EAAS,CACTmG,GAAE,GAAAE,MAAA,CAAKyC,GAAkB,SACzB8C,wBAAyB,CAAEC,OAAQ7G,EAAE,0BAA2B,CAAE8G,IAAK,sBAAsB,EAAG,CAAG,IAIrGM,CAAAA,CAAQjH,GAAqBnB,MAAM,EACnCvC,EAAAsH,aAAA,CAAAtH,EAAAuH,QAAA,CAAA,KACCvH,EAAAsH,aAAA,CAACvI,EAAO,MACRiB,EAAAsH,aAAA,CAAC1I,EAAG,CAACgM,UAAU,IAAI,EAAErH,EAAE,kBACvBvD,EAAAsH,aAAA,CAAC/H,EAAgB,CAACsL,SAAS,eAAeC,YAAajG,GAASkG,SAAUrH,EAAqB,MAKnG1D,EAAAsH,aAAA,CAACrI,EAAmB,KACnBe,EAAAsH,aAAA,CAACpI,EAAW,CAAC8L,QAAO,CAAA,CAAA,EACnBhL,EAAAsH,aAAA,CAACnI,EAAM,CACNyG,KAAK,QACLqE,SAAU,CAAC9E,GACX8F,QAAS,IAAMjG,GAAM/D,EAAgB,CAAEW,KAAMuB,EAAUtB,iBAAAA,GAAkBC,cAAAA,EAAa,GAAK,EAE1FyB,EAAE,UAEJvD,EAAAsH,aAAA,CAACnI,EAAM,CAAC+L,QAAO,CAAA,EAACjB,SAAU,CAAC9E,GAAS8F,QAASlG,GAAaoB,GAAgB,EACxE5C,EAAE,WAMT"}