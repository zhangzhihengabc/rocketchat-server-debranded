)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/users/UsersTable/UsersTableRow.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRole, IUser } from '@rocket.chat/core-typings';\nimport { Box } from '@rocket.chat/fuselage';\nimport { capitalize } from '@rocket.chat/string-helpers';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\nimport { useTranslation } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React from 'react';\n\nimport { Roles } from '../../../../../app/models/client';\nimport { GenericTableRow, GenericTableCell } from '../../../../components/GenericTable';\nimport UserAvatar from '../../../../components/avatar/UserAvatar';\n\ntype UsersTableRowProps = {\n\tuser: Pick<IUser, '_id' | 'username' | 'name' | 'status' | 'roles' | 'emails' | 'active' | 'avatarETag'>;\n\tonClick: (id: IUser['_id']) => void;\n\tmediaQuery: boolean;\n};\n\nconst UsersTableRow = ({ user, onClick, mediaQuery }: UsersTableRowProps): ReactElement => {\n\tconst t = useTranslation();\n\tconst { _id, emails, username, name, roles, status, active, avatarETag } = user;\n\tconst statusText = active ? t(capitalize(status as string) as TranslationKey) : t('Disabled');\n\n\tconst roleNames = (roles || [])\n\t\t.map((roleId) => (Roles.findOne(roleId, { fields: { name: 1 } }) as IRole | undefined)?.name)\n\t\t.filter((roleName): roleName is string => !!roleName)\n\t\t.join(', ');\n\n\treturn (\n\t\t<GenericTableRow\n\t\t\tonKeyDown={(): void => onClick(_id)}\n\t\t\tonClick={(): void => onClick(_id)}\n\t\t\ttabIndex={0}\n\t\t\trole='link'\n\t\t\taction\n\t\t\tqa-user-id={_id}\n\t\t>\n\t\t\t<GenericTableCell withTruncatedText>\n\t\t\t\t<Box display='flex' alignItems='center'>\n\t\t\t\t\t{username && <UserAvatar size={mediaQuery ? 'x28' : 'x40'} username={username} etag={avatarETag} />}\n\t\t\t\t\t<Box display='flex' mi={8} withTruncatedText>\n\t\t\t\t\t\t<Box display='flex' flexDirection='column' alignSelf='center' withTruncatedText>\n\t\t\t\t\t\t\t<Box fontScale='p2m' color='default' withTruncatedText>\n\t\t\t\t\t\t\t\t{name || username}\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t{!mediaQuery && name && (\n\t\t\t\t\t\t\t\t<Box fontScale='p2' color='hint' withTruncatedText>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t{`@${username}`}{' '}\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</GenericTableCell>\n\t\t\t{mediaQuery && (\n\t\t\t\t<GenericTableCell>\n\t\t\t\t\t<Box fontScale='p2m' color='hint' withTruncatedText>\n\t\t\t\t\t\t{username}\n\t\t\t\t\t</Box>{' '}\n\t\t\t\t\t<Box mi={4} />\n\t\t\t\t</GenericTableCell>\n\t\t\t)}\n\t\t\t<GenericTableCell withTruncatedText>{emails?.length && emails[0].address}</GenericTableCell>\n\t\t\t{mediaQuery && <GenericTableCell withTruncatedText>{roleNames}</GenericTableCell>}\n\t\t\t<GenericTableCell fontScale='p2' color='hint' withTruncatedText>\n\t\t\t\t{statusText}\n\t\t\t</GenericTableCell>\n\t\t</GenericTableRow>\n\t);\n};\n\nexport default UsersTableRow;\n",null],"names":["Box","capitalize","useTranslation","React","Roles","GenericTableRow","GenericTableCell","UserAvatar","module","link","default","exportDefault","_ref","user","onClick","mediaQuery","t","_id","emails","username","name","roles","status","active","avatarETag","statusText","roleNames","map","roleId","_Roles$findOne","findOne","fields","filter","roleName","join","createElement","onKeyDown","tabIndex","role","action","withTruncatedText","display","alignItems","size","etag","mi","flexDirection","alignSelf","fontScale","color","concat","length","address"],"mappings":"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"}