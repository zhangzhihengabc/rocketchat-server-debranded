)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/users/UsersTable/UsersTable.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Pagination } from '@rocket.chat/fuselage';\nimport { useMediaQuery, useDebouncedValue, useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { escapeRegExp } from '@rocket.chat/string-helpers';\nimport { useEndpoint, useRoute, useToastMessageDispatch, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport type { ReactElement, MutableRefObject } from 'react';\nimport React, { useRef, useMemo, useState, useEffect } from 'react';\n\nimport FilterByText from '../../../../components/FilterByText';\nimport GenericNoResults from '../../../../components/GenericNoResults';\nimport {\n\tGenericTable,\n\tGenericTableHeader,\n\tGenericTableHeaderCell,\n\tGenericTableBody,\n\tGenericTableLoadingTable,\n} from '../../../../components/GenericTable';\nimport { usePagination } from '../../../../components/GenericTable/hooks/usePagination';\nimport { useSort } from '../../../../components/GenericTable/hooks/useSort';\nimport UsersTableRow from './UsersTableRow';\n\ntype UsersTableProps = {\n\treload: MutableRefObject<() => void>;\n};\n\n// TODO: Missing error state\nconst UsersTable = ({ reload }: UsersTableProps): ReactElement | null => {\n\tconst t = useTranslation();\n\tconst usersRoute = useRoute('admin-users');\n\tconst mediaQuery = useMediaQuery('(min-width: 1024px)');\n\tconst [text, setText] = useState('');\n\n\tconst { current, itemsPerPage, setItemsPerPage, setCurrent, ...paginationProps } = usePagination();\n\tconst { sortBy, sortDirection, setSort } = useSort<'name' | 'username' | 'emails.address' | 'status'>('name');\n\n\tconst searchTerm = useDebouncedValue(text, 500);\n\tconst prevSearchTerm = useRef<string>('');\n\n\tconst query = useDebouncedValue(\n\t\tuseMemo(() => {\n\t\t\tif (searchTerm !== prevSearchTerm.current) {\n\t\t\t\tsetCurrent(0);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tfields: JSON.stringify({\n\t\t\t\t\tname: 1,\n\t\t\t\t\tusername: 1,\n\t\t\t\t\temails: 1,\n\t\t\t\t\troles: 1,\n\t\t\t\t\tstatus: 1,\n\t\t\t\t\tavatarETag: 1,\n\t\t\t\t\tactive: 1,\n\t\t\t\t}),\n\t\t\t\tquery: JSON.stringify({\n\t\t\t\t\t$or: [\n\t\t\t\t\t\t{ 'emails.address': { $regex: escapeRegExp(searchTerm), $options: 'i' } },\n\t\t\t\t\t\t{ username: { $regex: escapeRegExp(searchTerm), $options: 'i' } },\n\t\t\t\t\t\t{ name: { $regex: escapeRegExp(searchTerm), $options: 'i' } },\n\t\t\t\t\t],\n\t\t\t\t}),\n\t\t\t\tsort: `{ \"${sortBy}\": ${sortDirection === 'asc' ? 1 : -1} }`,\n\t\t\t\tcount: itemsPerPage,\n\t\t\t\toffset: searchTerm === prevSearchTerm.current ? current : 0,\n\t\t\t};\n\t\t}, [searchTerm, sortBy, sortDirection, itemsPerPage, current, setCurrent]),\n\t\t500,\n\t);\n\n\tconst getUsers = useEndpoint('GET', '/v1/users.list');\n\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst { data, isLoading, error, isSuccess, refetch } = useQuery(\n\t\t['users', query],\n\t\tasync () => {\n\t\t\tconst users = await getUsers(query);\n\t\t\treturn users;\n\t\t},\n\t\t{\n\t\t\tonError: (error) => {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t},\n\t\t},\n\t);\n\n\tuseEffect(() => {\n\t\treload.current = refetch;\n\t}, [reload, refetch]);\n\n\tuseEffect(() => {\n\t\tprevSearchTerm.current = searchTerm;\n\t}, [searchTerm]);\n\n\tconst handleClick = useMutableCallback((id): void =>\n\t\tusersRoute.push({\n\t\t\tcontext: 'info',\n\t\t\tid,\n\t\t}),\n\t);\n\n\tconst headers = useMemo(\n\t\t() => [\n\t\t\t<GenericTableHeaderCell w='x200' key='name' direction={sortDirection} active={sortBy === 'name'} onClick={setSort} sort='name'>\n\t\t\t\t{t('Name')}\n\t\t\t</GenericTableHeaderCell>,\n\t\t\tmediaQuery && (\n\t\t\t\t<GenericTableHeaderCell\n\t\t\t\t\tw='x140'\n\t\t\t\t\tkey='username'\n\t\t\t\t\tdirection={sortDirection}\n\t\t\t\t\tactive={sortBy === 'username'}\n\t\t\t\t\tonClick={setSort}\n\t\t\t\t\tsort='username'\n\t\t\t\t>\n\t\t\t\t\t{t('Username')}\n\t\t\t\t</GenericTableHeaderCell>\n\t\t\t),\n\t\t\t<GenericTableHeaderCell\n\t\t\t\tw='x120'\n\t\t\t\tkey='email'\n\t\t\t\tdirection={sortDirection}\n\t\t\t\tactive={sortBy === 'emails.address'}\n\t\t\t\tonClick={setSort}\n\t\t\t\tsort='emails.address'\n\t\t\t>\n\t\t\t\t{t('Email')}\n\t\t\t</GenericTableHeaderCell>,\n\t\t\tmediaQuery && (\n\t\t\t\t<GenericTableHeaderCell w='x120' key='roles' onClick={setSort}>\n\t\t\t\t\t{t('Roles')}\n\t\t\t\t</GenericTableHeaderCell>\n\t\t\t),\n\t\t\t<GenericTableHeaderCell w='x100' key='status' direction={sortDirection} active={sortBy === 'status'} onClick={setSort} sort='status'>\n\t\t\t\t{t('Status')}\n\t\t\t</GenericTableHeaderCell>,\n\t\t],\n\t\t[mediaQuery, setSort, sortBy, sortDirection, t],\n\t);\n\n\tif (error) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<FilterByText autoFocus placeholder={t('Search_Users')} onChange={({ text }): void => setText(text)} />\n\t\t\t{isLoading && (\n\t\t\t\t<GenericTable>\n\t\t\t\t\t<GenericTableHeader>{headers}</GenericTableHeader>\n\t\t\t\t\t<GenericTableBody>{isLoading && <GenericTableLoadingTable headerCells={5} />}</GenericTableBody>\n\t\t\t\t</GenericTable>\n\t\t\t)}\n\t\t\t{data?.users && data.count > 0 && isSuccess && (\n\t\t\t\t<>\n\t\t\t\t\t<GenericTable>\n\t\t\t\t\t\t<GenericTableHeader>{headers}</GenericTableHeader>\n\t\t\t\t\t\t<GenericTableBody>\n\t\t\t\t\t\t\t{data?.users.map((user) => (\n\t\t\t\t\t\t\t\t<UsersTableRow key={user._id} onClick={handleClick} mediaQuery={mediaQuery} user={user} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</GenericTableBody>\n\t\t\t\t\t</GenericTable>\n\t\t\t\t\t<Pagination\n\t\t\t\t\t\tdivider\n\t\t\t\t\t\tcurrent={current}\n\t\t\t\t\t\titemsPerPage={itemsPerPage}\n\t\t\t\t\t\tcount={data?.total || 0}\n\t\t\t\t\t\tonSetItemsPerPage={setItemsPerPage}\n\t\t\t\t\t\tonSetCurrent={setCurrent}\n\t\t\t\t\t\t{...paginationProps}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{isSuccess && data?.count === 0 && <GenericNoResults />}\n\t\t</>\n\t);\n};\n\nexport default UsersTable;\n",null],"names":["_extends","_objectWithoutProperties","Pagination","useMediaQuery","useDebouncedValue","useMutableCallback","escapeRegExp","useEndpoint","useRoute","useToastMessageDispatch","useTranslation","useQuery","React","useRef","useMemo","useState","useEffect","FilterByText","GenericNoResults","GenericTable","GenericTableHeader","GenericTableHeaderCell","GenericTableBody","GenericTableLoadingTable","usePagination","useSort","UsersTableRow","module","link","default","exportDefault","_ref","reload","t","usersRoute","mediaQuery","text","setText","_usePagination","current","itemsPerPage","setItemsPerPage","setCurrent","paginationProps","_excluded","sortBy","sortDirection","setSort","searchTerm","prevSearchTerm","query","fields","JSON","stringify","name","username","emails","roles","status","avatarETag","active","$or","$regex","$options","sort","concat","count","offset","getUsers","dispatchToastMessage","data","isLoading","error","isSuccess","refetch","users","onError","type","message","handleClick","id","push","context","headers","createElement","w","key","direction","onClick","Fragment","autoFocus","placeholder","onChange","_ref2","headerCells","map","user","_id","divider","total","onSetItemsPerPage","onSetCurrent"],"mappings":"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"}