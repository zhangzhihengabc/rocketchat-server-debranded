)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/moderation/UserMessages.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Box, Callout, Message, StatesAction, StatesActions, StatesIcon, StatesTitle } from '@rocket.chat/fuselage';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useEndpoint, useRouter, useToastMessageDispatch, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport React from 'react';\n\nimport { ContextualbarHeader, ContextualbarTitle, ContextualbarClose, ContextualbarFooter } from '../../../components/Contextualbar';\nimport GenericNoResults from '../../../components/GenericNoResults';\nimport MessageContextFooter from './MessageContextFooter';\nimport ContextMessage from './helpers/ContextMessage';\n\n// TODO: Missing Error State\nconst UserMessages = ({ userId, onRedirect }: { userId: string; onRedirect: (mid: string) => void }): JSX.Element => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst moderationRoute = useRouter();\n\tconst getUserMessages = useEndpoint('GET', '/v1/moderation.user.reportedMessages');\n\n\tconst {\n\t\tdata: report,\n\t\trefetch: reloadUserMessages,\n\t\tisLoading: isLoadingUserMessages,\n\t\tisSuccess: isSuccessUserMessages,\n\t\tisError,\n\t} = useQuery(\n\t\t['moderation.userMessages', { userId }],\n\t\tasync () => {\n\t\t\tconst messages = await getUserMessages({ userId });\n\t\t\treturn messages;\n\t\t},\n\t\t{\n\t\t\tonError: (error) => {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t},\n\t\t},\n\t);\n\n\tconst handleChange = useMutableCallback(() => {\n\t\treloadUserMessages();\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t<ContextualbarHeader>\n\t\t\t\t<ContextualbarTitle>{t('Moderation_Message_context_header')}</ContextualbarTitle>\n\t\t\t\t<ContextualbarClose onClick={() => moderationRoute.navigate('/admin/moderation', { replace: true })} />\n\t\t\t</ContextualbarHeader>\n\t\t\t<Box display='flex' flexDirection='column' width='full' height='full' overflowY='auto' overflowX='hidden'>\n\t\t\t\t{isLoadingUserMessages && <Message>{t('Loading')}</Message>}\n\n\t\t\t\t{isSuccessUserMessages && (\n\t\t\t\t\t<Box padding={16}>\n\t\t\t\t\t\t{report.messages.length > 0 && (\n\t\t\t\t\t\t\t<Callout title={t('Moderation_Duplicate_messages')} type='warning' icon='warning'>\n\t\t\t\t\t\t\t\t{t('Moderation_Duplicate_messages_warning')}\n\t\t\t\t\t\t\t</Callout>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{!report.user && (\n\t\t\t\t\t\t\t<Callout mbs={8} type='warning' icon='warning'>\n\t\t\t\t\t\t\t\t{t('Moderation_User_deleted_warning')}\n\t\t\t\t\t\t\t</Callout>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Box>\n\t\t\t\t)}\n\n\t\t\t\t{isSuccessUserMessages &&\n\t\t\t\t\treport.messages.length > 0 &&\n\t\t\t\t\treport.messages.map((message) => (\n\t\t\t\t\t\t<Box key={message._id}>\n\t\t\t\t\t\t\t<ContextMessage\n\t\t\t\t\t\t\t\tmessage={message.message}\n\t\t\t\t\t\t\t\troom={message.room}\n\t\t\t\t\t\t\t\tonRedirect={onRedirect}\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tdeleted={!report.user}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t))}\n\t\t\t\t{isSuccessUserMessages && report.messages.length === 0 && <GenericNoResults />}\n\t\t\t\t{isError && (\n\t\t\t\t\t<Box display='flex' flexDirection='column' alignItems='center' pb={20} color='default'>\n\t\t\t\t\t\t<StatesIcon name='warning' variation='danger' />\n\t\t\t\t\t\t<StatesTitle>{t('Something_went_wrong')}</StatesTitle>\n\t\t\t\t\t\t<StatesActions>\n\t\t\t\t\t\t\t<StatesAction onClick={handleChange}>{t('Reload_page')}</StatesAction>\n\t\t\t\t\t\t</StatesActions>\n\t\t\t\t\t</Box>\n\t\t\t\t)}\n\t\t\t</Box>\n\t\t\t<ContextualbarFooter display='flex'>\n\t\t\t\t{isSuccessUserMessages && report.messages.length > 0 && <MessageContextFooter userId={userId} deleted={!report.user} />}\n\t\t\t</ContextualbarFooter>\n\t\t</>\n\t);\n};\n\nexport default UserMessages;\n",null],"names":["Box","Callout","Message","StatesAction","StatesActions","StatesIcon","StatesTitle","useMutableCallback","useEndpoint","useRouter","useToastMessageDispatch","useTranslation","useQuery","React","ContextualbarHeader","ContextualbarTitle","ContextualbarClose","ContextualbarFooter","GenericNoResults","MessageContextFooter","ContextMessage","module","v","default","exportDefault","_ref","userId","onRedirect","t","dispatchToastMessage","moderationRoute","getUserMessages","data","report","refetch","reloadUserMessages","isLoading","isLoadingUserMessages","isSuccess","isSuccessUserMessages","isError","messages","onError","error","type","message","handleChange","createElement","Fragment","onClick","navigate","replace","display","flexDirection","width","height","overflowY","overflowX","padding","length","title","icon","user","mbs","map","key","_id","room","onChange","deleted","alignItems","pb","color","name","variation"],"mappings":"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"}