)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/moderation/hooks/useDismissMessageAction.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useEndpoint, useSetModal, useToastMessageDispatch, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport React from 'react';\n\nimport GenericModal from '../../../../components/GenericModal';\n\nexport const useDismissMessageAction = (msgId: string): { action: () => void } => {\n\tconst t = useTranslation();\n\tconst setModal = useSetModal();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst queryClient = useQueryClient();\n\n\tconst dismissMessage = useEndpoint('POST', '/v1/moderation.dismissReports');\n\n\tconst handleDismissMessage = useMutation({\n\t\tmutationFn: dismissMessage,\n\t\tonError: (error) => {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t},\n\t\tonSuccess: () => {\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Moderation_Reports_dismissed') });\n\t\t},\n\t});\n\n\tconst onDismissMessage = async () => {\n\t\tawait handleDismissMessage.mutateAsync({ msgId });\n\t\tqueryClient.invalidateQueries({ queryKey: ['moderation.userMessages'] });\n\t\tsetModal();\n\t};\n\n\tconst confirmDismissMessage = (): void => {\n\t\tsetModal(\n\t\t\t<GenericModal\n\t\t\t\ttitle={t('Moderation_Dismiss_reports')}\n\t\t\t\tconfirmText={t('Moderation_Dismiss_reports')}\n\t\t\t\tvariant='danger'\n\t\t\t\tonConfirm={() => onDismissMessage()}\n\t\t\t\tonCancel={() => setModal()}\n\t\t\t>\n\t\t\t\t{t('Moderation_Dismiss_reports_confirm')}\n\t\t\t</GenericModal>,\n\t\t);\n\t};\n\n\treturn {\n\t\taction: () => confirmDismissMessage(),\n\t};\n};\n",null],"names":["useEndpoint","useSetModal","useToastMessageDispatch","useTranslation","useMutation","useQueryClient","React","GenericModal","module","export","useDismissMessageAction","default","msgId","t","setModal","dispatchToastMessage","queryClient","dismissMessage","handleDismissMessage","mutationFn","onError","error","type","message","onSuccess","onDismissMessage","mutateAsync","invalidateQueries","queryKey","confirmDismissMessage","createElement","title","confirmText","variant","onConfirm","onCancel","action"],"mappings":"2BAA4DA,EAAsBC,EAAAC,EAA2BC,EAAAC,EAAAC,EAAAC,EAAAC,EAA7GC,EAAOC,MAAE,CAAA,CAAAC,wBAA0B,IAAAA,CAAyB,GAAiDF,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAR,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,wBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAJ,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,QAAAA,CAAAG,QAAAA,CAAAA,EAAAL,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,sCAAAA,CAAAG,QAAAA,CAAAA,EAAAJ,EAAAA,CAAA,CAAA,EAAA,GAMtG,IAAMG,EAA2BE,IACvC,IAAMC,EAAIV,IACJW,EAAWb,IACXc,EAAuBb,IACvBc,EAAcX,IAEdY,EAAiBjB,EAAY,OAAQ,iCAErCkB,EAAuBd,EAAY,CACxCe,WAAYF,EACZG,QAAUC,IACTN,EAAqB,CAAEO,KAAM,QAASC,QAASF,CAAK,EACrD,EACAG,UAAW,KACVT,EAAqB,CAAEO,KAAM,UAAWC,QAASV,EAAE,+BAA+B,EACnF,IAGKY,EAAmB,UACxB,MAAMP,EAAqBQ,WAAW,CAAC,CAAEd,MAAAA,CAAK,GAC9CI,EAAYW,iBAAiB,CAAC,CAAEC,SAAU,CAAC,0BAAyB,AAAC,GACrEd,GACD,EAEMe,EAAwB,KAC7Bf,EACCR,EAAAwB,aAAA,CAACvB,EAAY,CACZwB,MAAOlB,EAAE,8BACTmB,YAAanB,EAAE,8BACfoB,QAAQ,SACRC,UAAW,IAAMT,IACjBU,SAAU,IAAMrB,GAAW,EAE1BD,EAAE,uCAGN,EAEA,MAAO,CACNuB,OAAQ,IAAMP,IAEhB"}