)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/moderation/hooks/useDeleteMessagesAction.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useEndpoint, useRoute, useSetModal, useToastMessageDispatch, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport React from 'react';\n\nimport type { GenericMenuItemProps } from '../../../../components/GenericMenu/GenericMenuItem';\nimport GenericModal from '../../../../components/GenericModal';\n\nconst useDeleteMessagesAction = (userId: string): GenericMenuItemProps => {\n\tconst t = useTranslation();\n\tconst deleteMessages = useEndpoint('POST', '/v1/moderation.user.deleteReportedMessages');\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst setModal = useSetModal();\n\tconst moderationRoute = useRoute('moderation-console');\n\tconst queryClient = useQueryClient();\n\n\tconst handleDeleteMessages = useMutation({\n\t\tmutationFn: deleteMessages,\n\t\tonError: (error) => {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t},\n\t\tonSuccess: () => {\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Moderation_Messages_deleted') });\n\t\t},\n\t});\n\n\tconst onDeleteAll = async () => {\n\t\tawait handleDeleteMessages.mutateAsync({ userId });\n\t\tqueryClient.invalidateQueries({ queryKey: ['moderation.reports'] });\n\t\tsetModal();\n\t\tmoderationRoute.push({});\n\t};\n\n\tconst confirmDeletMessages = (): void => {\n\t\tsetModal(\n\t\t\t<GenericModal\n\t\t\t\tconfirmText={t('Moderation_Dismiss_and_delete')}\n\t\t\t\ttitle={t('Moderation_Delete_all_messages')}\n\t\t\t\tvariant='danger'\n\t\t\t\tonConfirm={() => onDeleteAll()}\n\t\t\t\tonCancel={() => setModal()}\n\t\t\t>\n\t\t\t\t{t('Moderation_Are_you_sure_you_want_to_delete_all_reported_messages_from_this_user')}\n\t\t\t</GenericModal>,\n\t\t);\n\t};\n\n\treturn {\n\t\tid: 'deleteAll',\n\t\tcontent: t('Moderation_Delete_all_messages'),\n\t\ticon: 'trash',\n\t\tonClick: () => confirmDeletMessages(),\n\t};\n};\n\nexport default useDeleteMessagesAction;\n",null],"names":["useEndpoint","useRoute","useSetModal","useToastMessageDispatch","useTranslation","useMutation","useQueryClient","React","GenericModal","module","v","default","exportDefault","userId","t","deleteMessages","dispatchToastMessage","setModal","moderationRoute","queryClient","handleDeleteMessages","mutationFn","onError","error","type","message","onSuccess","onDeleteAll","mutateAsync","invalidateQueries","queryKey","push","confirmDeletMessages","createElement","confirmText","title","variant","onConfirm","onCancel","id","content","icon","onClick"],"mappings":"2BAAAA,EAASC,EAAaC,EAAUC,EAAaC,EAA0EC,EAAAC,EAAAC,EAAAC,EAAjDC,EAAAA,IAAgB,CAAA,2BAAM,CAAAT,YAA2BU,CAAA,EAAAV,EAAAA,CAAA,EAAAC,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,wBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAJ,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,QAAAA,CAAAE,QAAAA,CAAAA,EAAAJ,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,sCAAAA,CAAAE,QAAAA,CAAAA,EAAAH,EAAAA,CAAA,CAAA,EAAA,GAAvHC,EAAOG,aAAa,CAOaC,IAChC,IAAMC,EAAIV,IACJW,EAAiBf,EAAY,OAAQ,8CACrCgB,EAAuBb,IACvBc,EAAWf,IACXgB,EAAkBjB,EAAS,sBAC3BkB,EAAcb,IAEdc,EAAuBf,EAAY,CACxCgB,WAAYN,EACZO,QAAUC,IACTP,EAAqB,CAAEQ,KAAM,QAASC,QAASF,CAAK,EACrD,EACAG,UAAW,KACVV,EAAqB,CAAEQ,KAAM,UAAWC,QAASX,EAAE,8BAA8B,EAClF,IAGKa,EAAc,UACnB,MAAMP,EAAqBQ,WAAW,CAAC,CAAEf,OAAAA,CAAM,GAC/CM,EAAYU,iBAAiB,CAAC,CAAEC,SAAU,CAAC,qBAAoB,AAAC,GAChEb,IACAC,EAAgBa,IAAI,CAAC,CAAA,EACtB,EAEMC,EAAuB,KAC5Bf,EACCV,EAAA0B,aAAA,CAACzB,EAAY,CACZ0B,YAAapB,EAAE,iCACfqB,MAAOrB,EAAE,kCACTsB,QAAQ,SACRC,UAAW,IAAMV,IACjBW,SAAU,IAAMrB,GAAW,EAE1BH,EAAE,oFAGN,EAEA,MAAO,CACNyB,GAAI,YACJC,QAAS1B,EAAE,kCACX2B,KAAM,QACNC,QAAS,IAAMV,IAEjB"}