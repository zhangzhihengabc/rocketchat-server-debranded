)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/moderation/hooks/useResetAvatarAction.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useEndpoint, useSetModal, useToastMessageDispatch, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport React from 'react';\n\nimport type { GenericMenuItemProps } from '../../../../components/GenericMenu/GenericMenuItem';\nimport GenericModal from '../../../../components/GenericModal';\n\nconst useResetAvatarAction = (userId: string): GenericMenuItemProps => {\n\tconst t = useTranslation();\n\tconst setModal = useSetModal();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst queryClient = useQueryClient();\n\n\tconst resetAvatar = useEndpoint('POST', '/v1/users.resetAvatar');\n\n\tconst handleResetAvatar = useMutation({\n\t\tmutationFn: resetAvatar,\n\t\tonError: (error) => {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t},\n\t\tonSuccess: () => {\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Moderation_Avatar_reset_success') });\n\t\t},\n\t});\n\n\tconst onResetAvatar = async () => {\n\t\tsetModal();\n\t\thandleResetAvatar.mutateAsync({ userId });\n\t\tqueryClient.invalidateQueries({ queryKey: ['moderation.reports'] });\n\t};\n\n\tconst confirmResetAvatar = (): void => {\n\t\tsetModal(\n\t\t\t<GenericModal\n\t\t\t\ttitle={t('Moderation_Reset_user_avatar')}\n\t\t\t\tconfirmText={t('Reset')}\n\t\t\t\tvariant='danger'\n\t\t\t\tonConfirm={() => onResetAvatar()}\n\t\t\t\tonCancel={() => setModal()}\n\t\t\t>\n\t\t\t\t{t('Moderation_Are_you_sure_you_want_to_reset_the_avatar')}\n\t\t\t</GenericModal>,\n\t\t);\n\t};\n\n\treturn {\n\t\tid: 'resetAvatar',\n\t\tcontent: t('Moderation_Reset_user_avatar'),\n\t\ticon: 'reload',\n\t\tonClick: () => confirmResetAvatar(),\n\t};\n};\n\nexport default useResetAvatarAction;\n",null],"names":["useEndpoint","useSetModal","useToastMessageDispatch","useTranslation","useMutation","useQueryClient","React","GenericModal","module","link","v","default","exportDefault","userId","t","setModal","dispatchToastMessage","queryClient","resetAvatar","handleResetAvatar","mutationFn","onError","error","type","message","onSuccess","onResetAvatar","mutateAsync","invalidateQueries","queryKey","confirmResetAvatar","createElement","title","confirmText","variant","onConfirm","onCancel","id","content","icon","onClick"],"mappings":"2BAAAA,EAASC,EAAaC,EAAaC,EAA0EC,EAAAC,EAAAC,EAAAC,EAAjDC,EAAcC,IAAE,CAAA,2BAAM,CAAAT,YAA2BU,CAAA,EAAAV,EAAAA,CAAA,EAAAC,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,wBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAJ,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,QAAAA,CAAAG,QAAAA,CAAAA,EAAAL,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,sCAAAA,CAAAG,QAAAA,CAAAA,EAAAJ,EAAAA,CAAA,CAAA,EAAA,GAA7GC,EAAOI,aAAa,CAOUC,IAC7B,IAAMC,EAAIX,IACJY,EAAWd,IACXe,EAAuBd,IACvBe,EAAcZ,IAEda,EAAclB,EAAY,OAAQ,yBAElCmB,EAAoBf,EAAY,CACrCgB,WAAYF,EACZG,QAAUC,IACTN,EAAqB,CAAEO,KAAM,QAASC,QAASF,CAAK,EACrD,EACAG,UAAW,KACVT,EAAqB,CAAEO,KAAM,UAAWC,QAASV,EAAE,kCAAkC,EACtF,IAGKY,EAAgB,UACrBX,IACAI,EAAkBQ,WAAW,CAAC,CAAEd,OAAAA,CAAM,GACtCI,EAAYW,iBAAiB,CAAC,CAAEC,SAAU,CAAC,qBAAoB,AAAC,EACjE,EAEMC,EAAqB,KAC1Bf,EACCT,EAAAyB,aAAA,CAACxB,EAAY,CACZyB,MAAOlB,EAAE,gCACTmB,YAAanB,EAAE,SACfoB,QAAQ,SACRC,UAAW,IAAMT,IACjBU,SAAU,IAAMrB,GAAW,EAE1BD,EAAE,yDAGN,EAEA,MAAO,CACNuB,GAAI,cACJC,QAASxB,EAAE,gCACXyB,KAAM,SACNC,QAAS,IAAMV,IAEjB"}