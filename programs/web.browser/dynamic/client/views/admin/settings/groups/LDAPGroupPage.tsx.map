)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/settings/groups/LDAPGroupPage.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { ISetting } from '@rocket.chat/core-typings';\nimport { Button, Box, TextInput, Field, FieldLabel, FieldRow } from '@rocket.chat/fuselage';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useSetModal, useToastMessageDispatch, useSetting, useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport type { FormEvent } from 'react';\nimport React, { memo, useMemo } from 'react';\n\nimport GenericModal from '../../../../components/GenericModal';\nimport { useExternalLink } from '../../../../hooks/useExternalLink';\nimport { useEditableSettings } from '../../EditableSettingsContext';\nimport TabbedGroupPage from './TabbedGroupPage';\n\nfunction LDAPGroupPage({ _id, ...group }: ISetting): JSX.Element {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst testConnection = useEndpoint('POST', '/v1/ldap.testConnection');\n\tconst syncNow = useEndpoint('POST', '/v1/ldap.syncNow');\n\tconst testSearch = useEndpoint('POST', '/v1/ldap.testSearch');\n\tconst ldapEnabled = useSetting('LDAP_Enable');\n\tconst setModal = useSetModal();\n\tconst closeModal = useMutableCallback(() => setModal());\n\n\tconst handleLinkClick = useExternalLink();\n\n\tconst editableSettings = useEditableSettings(\n\t\tuseMemo(\n\t\t\t() => ({\n\t\t\t\tgroup: _id,\n\t\t\t}),\n\t\t\t[_id],\n\t\t),\n\t);\n\n\tconst changed = useMemo(() => editableSettings.some(({ changed }) => changed), [editableSettings]);\n\n\tconst handleTestConnectionButtonClick = async (): Promise<void> => {\n\t\ttry {\n\t\t\tconst { message } = await testConnection();\n\t\t\tdispatchToastMessage({ type: 'success', message: t(message as Parameters<typeof t>[0]) });\n\t\t} catch (error) {\n\t\t\terror instanceof Error && dispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t};\n\n\tconst handleSyncNowButtonClick = async (): Promise<void> => {\n\t\ttry {\n\t\t\tawait testConnection();\n\t\t\tconst confirmSync = async (): Promise<void> => {\n\t\t\t\tcloseModal();\n\n\t\t\t\ttry {\n\t\t\t\t\tconst { message } = await syncNow();\n\t\t\t\t\tdispatchToastMessage({ type: 'success', message: t(message as Parameters<typeof t>[0]) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\terror instanceof Error && dispatchToastMessage({ type: 'error', message: error });\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tsetModal(\n\t\t\t\t<GenericModal\n\t\t\t\t\tvariant='info'\n\t\t\t\t\tconfirmText={t('Sync')}\n\t\t\t\t\tcancelText={t('Cancel')}\n\t\t\t\t\ttitle={t('Execute_Synchronization_Now')}\n\t\t\t\t\tonConfirm={confirmSync}\n\t\t\t\t\tonClose={closeModal}\n\t\t\t\t>\n\t\t\t\t\t{t('LDAP_Sync_Now_Description')}\n\t\t\t\t</GenericModal>,\n\t\t\t);\n\t\t} catch (error) {\n\t\t\terror instanceof Error && dispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t};\n\n\tconst handleSearchTestButtonClick = async (): Promise<void> => {\n\t\ttry {\n\t\t\tawait testConnection();\n\t\t\tlet username = '';\n\t\t\tconst handleChangeUsername = (event: FormEvent<HTMLInputElement>): void => {\n\t\t\t\tusername = event.currentTarget.value;\n\t\t\t};\n\n\t\t\tconst confirmSearch = async (): Promise<void> => {\n\t\t\t\ttry {\n\t\t\t\t\tconst { message } = await testSearch({ username });\n\t\t\t\t\tdispatchToastMessage({ type: 'success', message: t(message as Parameters<typeof t>[0]) });\n\t\t\t\t} catch (error) {\n\t\t\t\t\terror instanceof Error && dispatchToastMessage({ type: 'error', message: error });\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tsetModal(\n\t\t\t\t<GenericModal\n\t\t\t\t\twrapperFunction={(props) => (\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tis='form'\n\t\t\t\t\t\t\tonSubmit={(e: FormEvent) => {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tconfirmSearch();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\tvariant='info'\n\t\t\t\t\tconfirmText={t('Search')}\n\t\t\t\t\tcancelText={t('Cancel')}\n\t\t\t\t\ttitle={t('Test_LDAP_Search')}\n\t\t\t\t\tonClose={closeModal}\n\t\t\t\t>\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<Box display='flex'>\n\t\t\t\t\t\t\t<FieldLabel>{t('LDAP_Username_To_Search')}</FieldLabel>\n\t\t\t\t\t\t</Box>\n\n\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t<TextInput onChange={handleChangeUsername} />\n\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t</Field>\n\t\t\t\t</GenericModal>,\n\t\t\t);\n\t\t} catch (error) {\n\t\t\terror instanceof Error && dispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t};\n\n\treturn (\n\t\t<TabbedGroupPage\n\t\t\t_id={_id}\n\t\t\t{...group}\n\t\t\theaderButtons={\n\t\t\t\t<>\n\t\t\t\t\t<Button children={t('Test_Connection')} disabled={!ldapEnabled || changed} onClick={handleTestConnectionButtonClick} />\n\t\t\t\t\t<Button children={t('Test_LDAP_Search')} disabled={!ldapEnabled || changed} onClick={handleSearchTestButtonClick} />\n\t\t\t\t\t<Button children={t('LDAP_Sync_Now')} disabled={!ldapEnabled || changed} onClick={handleSyncNowButtonClick} />\n\t\t\t\t\t<Button role='link' onClick={() => handleLinkClick('https://go.rocket.chat/i/ldap-docs')}>\n\t\t\t\t\t\t{t('LDAP_Documentation')}\n\t\t\t\t\t</Button>\n\t\t\t\t</>\n\t\t\t}\n\t\t/>\n\t);\n}\n\nexport default memo(LDAPGroupPage);\n",null],"names":["_extends","_objectWithoutProperties","Button","Box","TextInput","Field","FieldLabel","FieldRow","useMutableCallback","useSetModal","useToastMessageDispatch","useSetting","useEndpoint","useTranslation","React","memo","useMemo","GenericModal","useExternalLink","useEditableSettings","TabbedGroupPage","module","link","default","v","exportDefault","_ref","_id","group","_excluded","t","dispatchToastMessage","testConnection","syncNow","testSearch","ldapEnabled","setModal","closeModal","handleLinkClick","editableSettings","changed","some","_ref2","handleTestConnectionButtonClick","message","type","error","Error","handleSyncNowButtonClick","confirmSync","createElement","variant","confirmText","cancelText","title","onConfirm","onClose","handleSearchTestButtonClick","username","confirmSearch","wrapperFunction","props","is","onSubmit","e","preventDefault","display","onChange","event","currentTarget","value","headerButtons","Fragment","children","disabled","onClick","role"],"mappings":"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"}