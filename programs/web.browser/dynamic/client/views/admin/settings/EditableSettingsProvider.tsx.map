)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/settings/EditableSettingsProvider.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { SettingId, GroupId, ISetting, TabId } from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport type { SettingsContextQuery } from '@rocket.chat/ui-contexts';\nimport { useSettings } from '@rocket.chat/ui-contexts';\nimport { Mongo } from 'meteor/mongo';\nimport { Tracker } from 'meteor/tracker';\nimport type { FilterOperators } from 'mongodb';\nimport type { FunctionComponent, MutableRefObject } from 'react';\nimport React, { useEffect, useMemo, useRef } from 'react';\n\nimport { useIsEnterprise } from '../../../hooks/useIsEnterprise';\nimport { createReactiveSubscriptionFactory } from '../../../lib/createReactiveSubscriptionFactory';\nimport type { EditableSetting, EditableSettingsContextValue } from '../EditableSettingsContext';\nimport { EditableSettingsContext } from '../EditableSettingsContext';\n\nconst defaultQuery: SettingsContextQuery = {};\n\ntype EditableSettingsProviderProps = {\n\treadonly query?: SettingsContextQuery;\n};\n\nconst EditableSettingsProvider: FunctionComponent<EditableSettingsProviderProps> = ({ children, query = defaultQuery }) => {\n\tconst settingsCollectionRef = useRef<Mongo.Collection<EditableSetting>>(null) as MutableRefObject<Mongo.Collection<EditableSetting>>;\n\tconst persistedSettings = useSettings(query);\n\n\tconst getSettingsCollection = useMutableCallback(() => {\n\t\tif (!settingsCollectionRef.current) {\n\t\t\tsettingsCollectionRef.current = new Mongo.Collection<any>(null);\n\t\t}\n\n\t\treturn settingsCollectionRef.current;\n\t}) as () => Mongo.Collection<EditableSetting>;\n\n\tuseEffect(() => {\n\t\tconst settingsCollection = getSettingsCollection();\n\n\t\tsettingsCollection.remove({ _id: { $nin: persistedSettings.map(({ _id }) => _id) } });\n\t\tfor (const { _id, ...fields } of persistedSettings) {\n\t\t\tsettingsCollection.upsert(_id, { $set: { ...fields }, $unset: { changed: true } });\n\t\t}\n\t}, [getSettingsCollection, persistedSettings]);\n\n\tconst queryEditableSetting = useMemo(() => {\n\t\tconst validateSettingQueries = (\n\t\t\tquery: undefined | string | FilterOperators<ISetting> | FilterOperators<ISetting>[],\n\t\t\tsettingsCollection: Mongo.Collection<EditableSetting>,\n\t\t): boolean => {\n\t\t\tif (!query) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst queries = [].concat(typeof query === 'string' ? JSON.parse(query) : query);\n\t\t\treturn queries.every((query) => settingsCollection.find(query).count() > 0);\n\t\t};\n\n\t\treturn createReactiveSubscriptionFactory((_id: SettingId): EditableSetting | undefined => {\n\t\t\tconst settingsCollection = getSettingsCollection();\n\t\t\tconst editableSetting = settingsCollection.findOne(_id);\n\n\t\t\tif (!editableSetting) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...editableSetting,\n\t\t\t\tdisabled: editableSetting.blocked || !validateSettingQueries(editableSetting.enableQuery, settingsCollection),\n\t\t\t\tinvisible: !validateSettingQueries(editableSetting.displayQuery, settingsCollection),\n\t\t\t};\n\t\t});\n\t}, [getSettingsCollection]);\n\n\tconst queryEditableSettings = useMemo(\n\t\t() =>\n\t\t\tcreateReactiveSubscriptionFactory((query = {}) =>\n\t\t\t\tgetSettingsCollection()\n\t\t\t\t\t.find(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...('_id' in query && { _id: { $in: query._id } }),\n\t\t\t\t\t\t\t...('group' in query && { group: query.group }),\n\t\t\t\t\t\t\t...('changed' in query && { changed: query.changed }),\n\t\t\t\t\t\t\t$and: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t...('section' in query &&\n\t\t\t\t\t\t\t\t\t\t(query.section\n\t\t\t\t\t\t\t\t\t\t\t? { section: query.section }\n\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t$or: [{ section: { $exists: false } }, { section: '' }],\n\t\t\t\t\t\t\t\t\t\t\t  })),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t...('tab' in query &&\n\t\t\t\t\t\t\t\t\t\t(query.tab\n\t\t\t\t\t\t\t\t\t\t\t? { tab: query.tab }\n\t\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t$or: [{ tab: { $exists: false } }, { tab: '' }],\n\t\t\t\t\t\t\t\t\t\t\t  })),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\t\tsection: 1,\n\t\t\t\t\t\t\t\tsorter: 1,\n\t\t\t\t\t\t\t\ti18nLabel: 1,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t)\n\t\t\t\t\t.fetch(),\n\t\t\t),\n\t\t[getSettingsCollection],\n\t);\n\n\tconst queryGroupSections = useMemo(\n\t\t() =>\n\t\t\tcreateReactiveSubscriptionFactory((_id: GroupId, tab?: TabId) =>\n\t\t\t\tArray.from(\n\t\t\t\t\tnew Set(\n\t\t\t\t\t\tgetSettingsCollection()\n\t\t\t\t\t\t\t.find(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgroup: _id,\n\t\t\t\t\t\t\t\t\t...(tab !== undefined\n\t\t\t\t\t\t\t\t\t\t? { tab }\n\t\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t$or: [{ tab: { $exists: false } }, { tab: '' }],\n\t\t\t\t\t\t\t\t\t\t  }),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\tsection: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\t\t\t\tsorter: 1,\n\t\t\t\t\t\t\t\t\t\tsection: 1,\n\t\t\t\t\t\t\t\t\t\ti18nLabel: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.fetch()\n\t\t\t\t\t\t\t.map(({ section }) => section || ''),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t[getSettingsCollection],\n\t);\n\n\tconst queryGroupTabs = useMemo(\n\t\t() =>\n\t\t\tcreateReactiveSubscriptionFactory((_id: GroupId) =>\n\t\t\t\tArray.from(\n\t\t\t\t\tnew Set(\n\t\t\t\t\t\tgetSettingsCollection()\n\t\t\t\t\t\t\t.find(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgroup: _id,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\t\t\t\ttab: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tsort: {\n\t\t\t\t\t\t\t\t\t\tsorter: 1,\n\t\t\t\t\t\t\t\t\t\ttab: 1,\n\t\t\t\t\t\t\t\t\t\ti18nLabel: 1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.fetch()\n\t\t\t\t\t\t\t.map(({ tab }) => tab || ''),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t[getSettingsCollection],\n\t);\n\n\tconst dispatch = useMutableCallback((changes: Partial<EditableSetting>[]): void => {\n\t\tfor (const { _id, ...data } of changes) {\n\t\t\tif (!_id) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tgetSettingsCollection().update(_id, { $set: data });\n\t\t}\n\t\tTracker.flush();\n\t});\n\n\tconst { data } = useIsEnterprise();\n\n\tconst isEnterprise = data?.isEnterprise ?? false;\n\n\tconst contextValue = useMemo<EditableSettingsContextValue>(\n\t\t() => ({\n\t\t\tqueryEditableSetting,\n\t\t\tqueryEditableSettings,\n\t\t\tqueryGroupSections,\n\t\t\tqueryGroupTabs,\n\t\t\tdispatch,\n\t\t\tisEnterprise,\n\t\t}),\n\t\t[queryEditableSetting, queryEditableSettings, queryGroupSections, queryGroupTabs, dispatch, isEnterprise],\n\t);\n\n\treturn <EditableSettingsContext.Provider children={children} value={contextValue} />;\n};\n\nexport default EditableSettingsProvider;\n",null],"names":["_objectSpread","_objectWithoutProperties","useMutableCallback","useSettings","Mongo","Tracker","React","useEffect","useMemo","useRef","useIsEnterprise","createReactiveSubscriptionFactory","EditableSettingsContext","module","default","link","defaultQuery","exportDefault","_ref","_data$isEnterprise","children","query","settingsCollectionRef","persistedSettings","getSettingsCollection","current","Collection","settingsCollection","_ref3","remove","_id","$nin","map","_ref2","fields","_excluded","upsert","$set","$unset","changed","queryEditableSetting","validateSettingQueries","queries","concat","JSON","parse","every","find","count","editableSetting","findOne","disabled","blocked","enableQuery","invisible","displayQuery","queryEditableSettings","arguments","length","undefined","$in","group","$and","section","$or","$exists","tab","sort","sorter","i18nLabel","fetch","queryGroupSections","Array","from","Set","_ref4","queryGroupTabs","_ref5","dispatch","changes","_ref6","data","_excluded2","update","flush","isEnterprise","contextValue","createElement","Provider","value"],"mappings":"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"}