)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/settings/MemoizedSetting.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { ISettingBase, SettingEditor, SettingValue } from '@rocket.chat/core-typings';\nimport { Box, Callout, Field, FieldHint, Margins } from '@rocket.chat/fuselage';\nimport type { ElementType, ReactElement, ReactNode } from 'react';\nimport React, { memo } from 'react';\n\nimport ActionSettingInput from './inputs/ActionSettingInput';\nimport AssetSettingInput from './inputs/AssetSettingInput';\nimport BooleanSettingInput from './inputs/BooleanSettingInput';\nimport CodeSettingInput from './inputs/CodeSettingInput';\nimport ColorSettingInput from './inputs/ColorSettingInput';\nimport FontSettingInput from './inputs/FontSettingInput';\nimport GenericSettingInput from './inputs/GenericSettingInput';\nimport IntSettingInput from './inputs/IntSettingInput';\nimport LanguageSettingInput from './inputs/LanguageSettingInput';\nimport LookupSettingInput from './inputs/LookupSettingInput';\nimport MultiSelectSettingInput from './inputs/MultiSelectSettingInput';\nimport PasswordSettingInput from './inputs/PasswordSettingInput';\nimport RelativeUrlSettingInput from './inputs/RelativeUrlSettingInput';\nimport RoomPickSettingInput from './inputs/RoomPickSettingInput';\nimport SelectSettingInput from './inputs/SelectSettingInput';\nimport SelectTimezoneSettingInput from './inputs/SelectTimezoneSettingInput';\nimport StringSettingInput from './inputs/StringSettingInput';\n\n// @todo: the props are loosely typed because `Setting` needs to typecheck them.\nconst inputsByType: Record<ISettingBase['type'], ElementType<any>> = {\n\tboolean: BooleanSettingInput,\n\tstring: StringSettingInput,\n\trelativeUrl: RelativeUrlSettingInput,\n\tpassword: PasswordSettingInput,\n\tint: IntSettingInput,\n\tselect: SelectSettingInput,\n\tmultiSelect: MultiSelectSettingInput,\n\tlanguage: LanguageSettingInput,\n\tcolor: ColorSettingInput,\n\tfont: FontSettingInput,\n\tcode: CodeSettingInput,\n\taction: ActionSettingInput,\n\tasset: AssetSettingInput,\n\troomPick: RoomPickSettingInput,\n\ttimezone: SelectTimezoneSettingInput,\n\tlookup: LookupSettingInput,\n\tdate: GenericSettingInput, // @todo: implement\n\tgroup: GenericSettingInput, // @todo: implement\n};\n\ntype MemoizedSettingProps = {\n\t_id?: string;\n\ttype: ISettingBase['type'];\n\thint?: ReactNode;\n\tcallout?: ReactNode;\n\tvalue?: SettingValue;\n\teditor?: SettingEditor;\n\tonChangeValue?: (value: SettingValue) => void;\n\tonChangeEditor?: (value: unknown) => void;\n\tonResetButtonClick?: () => void;\n\tclassName?: string;\n\tinvisible?: boolean;\n\tlabel?: string;\n\tsectionChanged?: boolean;\n\thasResetButton?: boolean;\n\tdisabled?: boolean;\n\tshowUpgradeButton?: ReactNode;\n\tactionText?: string;\n};\n\nconst MemoizedSetting = ({\n\ttype,\n\thint = undefined,\n\tcallout = undefined,\n\tvalue = undefined,\n\teditor = undefined,\n\tonChangeValue,\n\tonChangeEditor,\n\tdisabled,\n\tshowUpgradeButton,\n\tclassName = undefined,\n\tinvisible = undefined,\n\t...inputProps\n}: MemoizedSettingProps): ReactElement | null => {\n\tif (invisible) {\n\t\treturn null;\n\t}\n\n\tconst InputComponent = inputsByType[type];\n\n\treturn (\n\t\t<Field className={className} flexDirection='row' justifyContent='space-between' alignItems='flex-start'>\n\t\t\t<Box flexDirection='column' flexGrow={1} wordBreak='break-word' w='full'>\n\t\t\t\t<InputComponent\n\t\t\t\t\tvalue={value}\n\t\t\t\t\thint={hint}\n\t\t\t\t\teditor={editor}\n\t\t\t\t\tonChangeValue={onChangeValue}\n\t\t\t\t\tonChangeEditor={onChangeEditor}\n\t\t\t\t\t{...inputProps}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t/>\n\t\t\t\t{hint && type !== 'code' && <FieldHint>{hint}</FieldHint>}\n\t\t\t\t{callout && (\n\t\t\t\t\t<Margins block={16}>\n\t\t\t\t\t\t<Callout type='warning'>{callout}</Callout>\n\t\t\t\t\t</Margins>\n\t\t\t\t)}\n\t\t\t</Box>\n\t\t\t{showUpgradeButton}\n\t\t</Field>\n\t);\n};\n\nexport default memo(MemoizedSetting);\n",null],"names":["_extends","_objectWithoutProperties","Box","Callout","Field","FieldHint","Margins","React","memo","ActionSettingInput","AssetSettingInput","BooleanSettingInput","CodeSettingInput","ColorSettingInput","FontSettingInput","GenericSettingInput","IntSettingInput","LanguageSettingInput","LookupSettingInput","MultiSelectSettingInput","PasswordSettingInput","RelativeUrlSettingInput","RoomPickSettingInput","SelectSettingInput","SelectTimezoneSettingInput","StringSettingInput","module","link","default","v","inputsByType","boolean","string","relativeUrl","password","int","select","multiSelect","language","color","font","code","action","asset","roomPick","timezone","lookup","date","group","exportDefault","_ref","type","hint","callout","value","editor","onChangeValue","onChangeEditor","disabled","showUpgradeButton","className","invisible","inputProps","_excluded","InputComponent","createElement","flexDirection","justifyContent","alignItems","flexGrow","wordBreak","w","block"],"mappings":"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"}