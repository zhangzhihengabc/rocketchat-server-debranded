)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/settings/inputs/LanguageSettingInput.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Box, FieldLabel, FieldRow, Flex, Select } from '@rocket.chat/fuselage';\nimport { useLanguages } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React from 'react';\n\nimport ResetSettingButton from '../ResetSettingButton';\n\ntype LanguageSettingInputProps = {\n\t_id: string;\n\tlabel: string;\n\tvalue: string;\n\tplaceholder?: string;\n\treadonly?: boolean;\n\tautocomplete?: boolean;\n\tdisabled?: boolean;\n\thasResetButton?: boolean;\n\tonChangeValue?: (value: string | number) => void;\n\tonResetButtonClick?: () => void;\n};\n\nfunction LanguageSettingInput({\n\t_id,\n\tlabel,\n\tvalue,\n\tplaceholder,\n\treadonly,\n\tautocomplete,\n\tdisabled,\n\thasResetButton,\n\tonChangeValue,\n\tonResetButtonClick,\n}: LanguageSettingInputProps): ReactElement {\n\tconst languages = useLanguages();\n\n\tconst handleChange = (value: string): void => {\n\t\tonChangeValue?.(value);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Flex.Container>\n\t\t\t\t<Box>\n\t\t\t\t\t<FieldLabel htmlFor={_id} title={_id}>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t{hasResetButton && <ResetSettingButton data-qa-reset-setting-id={_id} onClick={onResetButtonClick} />}\n\t\t\t\t</Box>\n\t\t\t</Flex.Container>\n\t\t\t<FieldRow>\n\t\t\t\t<Select\n\t\t\t\t\tdata-qa-setting-id={_id}\n\t\t\t\t\tid={_id}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\treadOnly={readonly}\n\t\t\t\t\tautoComplete={autocomplete === false ? 'off' : undefined}\n\t\t\t\t\tonChange={(value) => handleChange(String(value))}\n\t\t\t\t\toptions={languages.map(({ key, name }) => [key, name])}\n\t\t\t\t/>\n\t\t\t</FieldRow>\n\t\t</>\n\t);\n}\n\nexport default LanguageSettingInput;\n",null],"names":["Box","FieldLabel","FieldRow","Flex","Select","useLanguages","React","ResetSettingButton","module","link","v","default","exportDefault","_ref","_id","label","value","placeholder","readonly","autocomplete","disabled","hasResetButton","onChangeValue","onResetButtonClick","languages","handleChange","createElement","Fragment","Container","htmlFor","title","onClick","id","readOnly","autoComplete","undefined","onChange","String","options","map","_ref2","key","name"],"mappings":"2BAAAA,EAAOC,EAAOC,EAAYC,EAAAC,EAAsDC,EAAAC,EAAAC,EAAxCC,EAAEC,IAAQ,CAAA,wBAAM,CAAAT,IAAwBU,CAAA,EAAAV,EAAAA,CAAA,EAAAC,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,KAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,OAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAH,aAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,QAAAA,CAAAG,QAAAA,CAAAA,EAAAL,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAG,QAAAA,CAAAA,EAAAJ,EAAAA,CAAA,CAAA,EAAA,GAAhFC,EAAOI,aAAO,CAoBd,SAA6BC,CAAA,EAWD,GAXE,CAC7BC,IAAAA,CAAG,CACHC,MAAAA,CAAK,CACLC,MAAAA,CAAK,CACLC,YAAAA,CAAW,CACXC,SAAAA,CAAQ,CACRC,aAAAA,CAAY,CACZC,SAAAA,CAAQ,CACRC,eAAAA,CAAc,CACdC,cAAAA,CAAa,CACbC,mBAAAA,CAAAA,CAC2B,CAAAV,EACrBW,EAAYnB,IAEZoB,EAAgBT,IACrBM,MAAAA,GAAAA,EAAgBN,EACjB,EAEA,OACCV,EAAAoB,aAAA,CAAApB,EAAAqB,QAAA,CAAA,KACCrB,EAAAoB,aAAA,CAACvB,EAAKyB,SAAS,CAAA,KACdtB,EAAAoB,aAAA,CAAC1B,EAAG,KACHM,EAAAoB,aAAA,CAACzB,EAAU,CAAC4B,QAASf,EAAKgB,MAAOhB,CAAI,EACnCC,GAEDM,GAAkBf,EAAAoB,aAAA,CAACnB,EAAkB,CAAC,2BAA0BO,EAAKiB,QAASR,CAAmB,KAGpGjB,EAAAoB,aAAA,CAACxB,EAAQ,KACRI,EAAAoB,aAAA,CAACtB,EAAM,CACN,qBAAoBU,EACpBkB,GAAIlB,EACJE,MAAOA,EACPC,YAAaA,EACbG,SAAUA,EACVa,SAAUf,EACVgB,aAAcf,AAAiB,CAAA,IAAjBA,EAAyB,MAAQgB,KAAAA,EAC/CC,SAAWpB,GAAUS,EAAaY,OAAOrB,IACzCsB,QAASd,EAAUe,GAAG,CAACC,IAAA,GAAC,CAAEC,IAAAA,CAAG,CAAEC,KAAAA,CAAAA,CAAM,CAAAF,EAAA,MAAK,CAACC,EAAKC,EAAK,EAAE,IAK5D"}