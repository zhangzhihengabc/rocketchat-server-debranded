)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/settings/inputs/MultiSelectSettingInput.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { FieldLabel, Flex, Box, MultiSelectFiltered, MultiSelect } from '@rocket.chat/fuselage';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\nimport { useTranslation } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React from 'react';\n\nimport ResetSettingButton from '../ResetSettingButton';\n\nexport type valuesOption = { key: string; i18nLabel: TranslationKey };\ntype MultiSelectSettingInputProps = {\n\t_id: string;\n\tlabel: string;\n\tvalue?: [string, string];\n\tvalues: valuesOption[];\n\tplaceholder?: string;\n\treadonly?: boolean;\n\tautocomplete?: boolean;\n\tdisabled?: boolean;\n\thasResetButton?: boolean;\n\tonChangeValue?: (value: string[]) => void;\n\tonResetButtonClick?: () => void;\n};\n\nfunction MultiSelectSettingInput({\n\t_id,\n\tlabel,\n\tvalue,\n\tplaceholder,\n\treadonly,\n\tdisabled,\n\tvalues = [],\n\thasResetButton,\n\tonChangeValue,\n\tonResetButtonClick,\n\tautocomplete,\n}: MultiSelectSettingInputProps): ReactElement {\n\tconst t = useTranslation();\n\n\tconst handleChange = (value: string[]): void => {\n\t\tonChangeValue?.(value);\n\t\t// onChangeValue && onChangeValue([...event.currentTarget.querySelectorAll('option')].filter((e) => e.selected).map((el) => el.value));\n\t};\n\tconst Component = autocomplete ? MultiSelectFiltered : MultiSelect;\n\treturn (\n\t\t<>\n\t\t\t<Flex.Container>\n\t\t\t\t<Box>\n\t\t\t\t\t<FieldLabel htmlFor={_id} title={_id}>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t{hasResetButton && <ResetSettingButton data-qa-reset-setting-id={_id} onClick={onResetButtonClick} />}\n\t\t\t\t</Box>\n\t\t\t</Flex.Container>\n\t\t\t<Component\n\t\t\t\tdata-qa-setting-id={_id}\n\t\t\t\tid={_id}\n\t\t\t\tvalue={value}\n\t\t\t\tplaceholder={placeholder}\n\t\t\t\tdisabled={disabled}\n\t\t\t\treadOnly={readonly}\n\t\t\t\t// autoComplete={autocomplete === false ? 'off' : undefined}\n\t\t\t\tonChange={handleChange}\n\t\t\t\toptions={values.map(({ key, i18nLabel }) => [key, t(i18nLabel)])}\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default MultiSelectSettingInput;\n",null],"names":["FieldLabel","Flex","Box","MultiSelectFiltered","MultiSelect","useTranslation","React","ResetSettingButton","module","v","default","exportDefault","_ref","_id","label","value","placeholder","readonly","disabled","values","hasResetButton","onChangeValue","onResetButtonClick","autocomplete","t","Component","createElement","Fragment","Container","htmlFor","title","onClick","id","readOnly","onChange","options","map","_ref2","key","i18nLabel"],"mappings":"2BAAAA,EAASC,EAAUC,EAAEC,EAAWC,EAAgEC,EAAAC,EAAAC,EAA3CC,EAAAA,IAAa,CAAA,wBAAM,CAAAR,WAAwBS,CAAA,EAAAT,EAAAA,CAAA,EAAAC,KAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,IAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,oBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAH,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,QAAAA,CAAAE,QAAAA,CAAAA,EAAAJ,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAE,QAAAA,CAAAA,EAAAH,EAAAA,CAAA,CAAA,EAAA,GAAhGC,EAAOG,aAAY,CAuBnB,SAAgCC,CAAA,EAYD,GAZE,CAChCC,IAAAA,CAAG,CACHC,MAAAA,CAAK,CACLC,MAAAA,CAAK,CACLC,YAAAA,CAAW,CACXC,SAAAA,CAAQ,CACRC,SAAAA,CAAQ,CACRC,OAAAA,EAAS,EAAE,CACXC,eAAAA,CAAc,CACdC,cAAAA,CAAa,CACbC,mBAAAA,CAAkB,CAClBC,aAAAA,CAAAA,CAC8B,CAAAX,EACxBY,EAAInB,IAMJoB,EAAYF,EAAepB,EAAsBC,EACvD,OACCE,EAAAoB,aAAA,CAAApB,EAAAqB,QAAA,CAAA,KACCrB,EAAAoB,aAAA,CAACzB,EAAK2B,SAAS,CAAA,KACdtB,EAAAoB,aAAA,CAACxB,EAAG,KACHI,EAAAoB,aAAA,CAAC1B,EAAU,CAAC6B,QAAShB,EAAKiB,MAAOjB,CAAI,EACnCC,GAEDM,GAAkBd,EAAAoB,aAAA,CAACnB,EAAkB,CAAC,2BAA0BM,EAAKkB,QAAST,CAAmB,KAGpGhB,EAAAoB,aAAA,CAACD,EAAS,CACT,qBAAoBZ,EACpBmB,GAAInB,EACJE,MAAOA,EACPC,YAAaA,EACbE,SAAUA,EACVe,SAAUhB,EAEViB,SAvBmBnB,IACrBM,MAAAA,GAAAA,EAAgBN,EAEjB,EAqBGoB,QAAShB,EAAOiB,GAAG,CAACC,IAAA,GAAC,CAAEC,IAAAA,CAAG,CAAEC,UAAAA,CAAAA,CAAW,CAAAF,EAAA,MAAK,CAACC,EAAKd,EAAEe,GAAW,EAAE,GAIrE"}