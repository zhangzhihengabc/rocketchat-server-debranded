)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/settings/inputs/RoomPickSettingInput.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { SettingValueRoomPick } from '@rocket.chat/core-typings';\nimport { Box, FieldLabel, FieldRow, Flex } from '@rocket.chat/fuselage';\nimport type { ReactElement } from 'react';\nimport React from 'react';\n\nimport RoomAutoCompleteMultiple from '../../../../components/RoomAutoCompleteMultiple';\nimport ResetSettingButton from '../ResetSettingButton';\n\ntype RoomPickSettingInputProps = {\n\t_id: string;\n\tlabel: string;\n\tvalue?: SettingValueRoomPick | '';\n\tplaceholder?: string;\n\treadonly?: boolean;\n\tdisabled?: boolean;\n\thasResetButton?: boolean;\n\tonChangeValue: (value: SettingValueRoomPick) => void;\n\tonResetButtonClick?: () => void;\n};\n\nfunction RoomPickSettingInput({\n\t_id,\n\tlabel,\n\tvalue,\n\tplaceholder,\n\treadonly,\n\tdisabled,\n\thasResetButton,\n\tonChangeValue,\n\tonResetButtonClick,\n}: RoomPickSettingInputProps): ReactElement {\n\tconst parsedValue = (value || []).map(({ _id }) => _id);\n\n\tconst handleChange = (value: string | string[]) => {\n\t\tif (typeof value === 'object') {\n\t\t\tconst newValue = value.map((currentValue: string) => ({ _id: currentValue }));\n\t\t\tonChangeValue(newValue);\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Flex.Container>\n\t\t\t\t<Box>\n\t\t\t\t\t<FieldLabel htmlFor={_id} title={_id}>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t{hasResetButton && <ResetSettingButton data-qa-reset-setting-id={_id} onClick={onResetButtonClick} />}\n\t\t\t\t</Box>\n\t\t\t</Flex.Container>\n\t\t\t<FieldRow>\n\t\t\t\t<RoomAutoCompleteMultiple\n\t\t\t\t\treadOnly={readonly}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tvalue={parsedValue}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t</FieldRow>\n\t\t</>\n\t);\n}\n\nexport default RoomPickSettingInput;\n",null],"names":["Box","FieldLabel","FieldRow","Flex","React","RoomAutoCompleteMultiple","ResetSettingButton","module","link","v","default","exportDefault","_ref","_id","label","value","placeholder","readonly","disabled","hasResetButton","onChangeValue","onResetButtonClick","parsedValue","map","_ref2","createElement","Fragment","Container","htmlFor","title","onClick","readOnly","onChange","newValue","currentValue"],"mappings":"2BACAA,EAAOC,EAAOC,EAAYC,EAA8CC,EAAAC,EAAAC,EAA9CC,EAAcC,IAAE,CAAA,wBAAM,CAAAR,IAAwBS,CAAA,EAAAT,EAAAA,CAAA,EAAAC,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,KAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,QAAAA,CAAAG,QAAAA,CAAAA,EAAAN,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,kDAAAA,CAAAG,QAAAA,CAAAA,EAAAL,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAG,QAAAA,CAAAA,EAAAJ,EAAAA,CAAA,CAAA,EAAA,GAAxEC,EAAOI,aAAO,CAmBd,SAA6BC,CAAA,EAUD,GAVE,CAC7BC,IAAAA,CAAG,CACHC,MAAAA,CAAK,CACLC,MAAAA,CAAK,CACLC,YAAAA,CAAW,CACXC,SAAAA,CAAQ,CACRC,SAAAA,CAAQ,CACRC,eAAAA,CAAc,CACdC,cAAAA,CAAa,CACbC,mBAAAA,CAAAA,CAC2B,CAAAT,EACrBU,EAAc,AAACP,CAAAA,GAAS,EAAE,AAAF,EAAIQ,GAAG,CAACC,IAAA,GAAC,CAAEX,IAAAA,CAAAA,CAAK,CAAAW,EAAA,OAAKX,CAAG,GAStD,OACCT,EAAAqB,aAAA,CAAArB,EAAAsB,QAAA,CAAA,KACCtB,EAAAqB,aAAA,CAACtB,EAAKwB,SAAS,CAAA,KACdvB,EAAAqB,aAAA,CAACzB,EAAG,KACHI,EAAAqB,aAAA,CAACxB,EAAU,CAAC2B,QAASf,EAAKgB,MAAOhB,CAAI,EACnCC,GAEDK,GAAkBf,EAAAqB,aAAA,CAACnB,EAAkB,CAAC,2BAA0BO,EAAKiB,QAAST,CAAmB,KAGpGjB,EAAAqB,aAAA,CAACvB,EAAQ,KACRE,EAAAqB,aAAA,CAACpB,EAAwB,CACxB0B,SAAUd,EACVD,YAAaA,EACbE,SAAUA,EACVH,MAAOO,EACPU,SAvBkBjB,IACrB,GAAI,AAAiB,UAAjB,OAAOA,EAAoB,CAC9B,IAAMkB,EAAWlB,EAAMQ,GAAG,CAAEW,GAA0B,CAAA,CAAErB,IAAKqB,CAAY,CAAA,GACzEd,EAAca,GAEhB,CAkB2B,IAK5B"}