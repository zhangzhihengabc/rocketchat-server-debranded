)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/import/PrepareChannels.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { CheckBox, Table, Tag, Pagination, TableHead, TableRow, TableCell, TableBody } from '@rocket.chat/fuselage';\nimport { useTranslation } from '@rocket.chat/ui-contexts';\nimport type { FC, Dispatch, SetStateAction, ChangeEvent } from 'react';\nimport React, { useState, useCallback } from 'react';\n\ntype ChannelDescriptor = {\n\tchannel_id: string;\n\tname: string;\n\tis_archived: boolean;\n\tdo_import: boolean;\n};\n\ntype PrepareChannelsProps = {\n\tchannelsCount: number;\n\tchannels: ChannelDescriptor[];\n\tsetChannels: Dispatch<SetStateAction<ChannelDescriptor[]>>;\n};\n\nconst PrepareChannels: FC<PrepareChannelsProps> = ({ channels, channelsCount, setChannels }) => {\n\tconst t = useTranslation();\n\tconst [current, setCurrent] = useState(0);\n\tconst [itemsPerPage, setItemsPerPage] = useState<25 | 50 | 100>(25);\n\tconst showingResultsLabel = useCallback(\n\t\t({ count, current, itemsPerPage }) => t('Showing_results_of', current + 1, Math.min(current + itemsPerPage, count), count),\n\t\t[t],\n\t);\n\tconst itemsPerPageLabel = useCallback(() => t('Items_per_page:'), [t]);\n\n\tif (!channels.length) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Table>\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableCell width='x36'>\n\t\t\t\t\t\t\t<CheckBox\n\t\t\t\t\t\t\t\tchecked={channelsCount > 0}\n\t\t\t\t\t\t\t\tindeterminate={channelsCount > 0 && channelsCount !== channels.length}\n\t\t\t\t\t\t\t\tonChange={(): void => {\n\t\t\t\t\t\t\t\t\tsetChannels((channels) => {\n\t\t\t\t\t\t\t\t\t\tconst hasCheckedArchivedChannels = channels.some(({ is_archived, do_import }) => is_archived && do_import);\n\t\t\t\t\t\t\t\t\t\tconst isChecking = channelsCount === 0;\n\n\t\t\t\t\t\t\t\t\t\tif (isChecking) {\n\t\t\t\t\t\t\t\t\t\t\treturn channels.map((channel) => ({ ...channel, do_import: true }));\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (hasCheckedArchivedChannels) {\n\t\t\t\t\t\t\t\t\t\t\treturn channels.map((channel) => (channel.is_archived ? { ...channel, do_import: false } : channel));\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\treturn channels.map((channel) => ({ ...channel, do_import: false }));\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell is='th'>{t('Name')}</TableCell>\n\t\t\t\t\t\t<TableCell is='th' align='end'></TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t\t{channels.slice(current, current + itemsPerPage).map((channel) => (\n\t\t\t\t\t\t<TableRow key={channel.channel_id}>\n\t\t\t\t\t\t\t<TableCell width='x36'>\n\t\t\t\t\t\t\t\t<CheckBox\n\t\t\t\t\t\t\t\t\tchecked={channel.do_import}\n\t\t\t\t\t\t\t\t\tonChange={(event: ChangeEvent<HTMLInputElement>): void => {\n\t\t\t\t\t\t\t\t\t\tconst { checked } = event.currentTarget;\n\t\t\t\t\t\t\t\t\t\tsetChannels((channels) =>\n\t\t\t\t\t\t\t\t\t\t\tchannels.map((_channel) => (_channel === channel ? { ..._channel, do_import: checked } : _channel)),\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell>{channel.name}</TableCell>\n\t\t\t\t\t\t\t<TableCell align='end'>{channel.is_archived && <Tag variant='danger'>{t('Importer_Archived')}</Tag>}</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t))}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t\t<Pagination\n\t\t\t\tcurrent={current}\n\t\t\t\titemsPerPage={itemsPerPage}\n\t\t\t\titemsPerPageLabel={itemsPerPageLabel}\n\t\t\t\tshowingResultsLabel={showingResultsLabel}\n\t\t\t\tcount={channels.length || 0}\n\t\t\t\tonSetItemsPerPage={setItemsPerPage}\n\t\t\t\tonSetCurrent={setCurrent}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default PrepareChannels;\n",null],"names":["_objectSpread","CheckBox","Table","Tag","TableHead","TableRow","TableCell","TableBody","useTranslation","React","useState","useCallback","module","link","default","v","Pagination","exportDefault","_ref","channels","channelsCount","setChannels","t","current","setCurrent","itemsPerPage","setItemsPerPage","showingResultsLabel","_ref2","count","Math","min","itemsPerPageLabel","length","createElement","Fragment","width","checked","indeterminate","onChange","hasCheckedArchivedChannels","some","_ref3","is_archived","do_import","map","channel","is","align","slice","key","channel_id","event","currentTarget","_channel","name","variant","onSetItemsPerPage","onSetCurrent"],"mappings":"2BAAAA,EAAAC,EAASC,EAAUC,EAAAA,EAAYC,EAAYC,EAASC,EAAUC,EAAsDC,EAAAC,EAAAC,EAAAC,EAAnGC,EAAOC,IAAK,CAAA,uCAAmC,CAAAC,QAAWC,CAAA,EAAAf,EAAiBe,CAAA,CAAA,EAAA,GAAnBH,EAAEC,IAAS,CAAA,wBAAQ,CAAAZ,SAAwBc,CAAA,EAAAd,EAAAA,CAAA,EAAAC,MAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,IAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAa,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAZ,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAJ,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,QAAAA,CAAAE,QAAAA,CAAAA,EAAAL,EAAAA,CAAA,EAAAC,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAApHC,EAAOK,aAAY,CAkB+BC,IAA6C,GAA5C,CAAEC,SAAAA,CAAQ,CAAEC,cAAAA,CAAa,CAAEC,YAAAA,CAAAA,CAAa,CAAAH,EACpFI,EAAId,IACJ,CAACe,EAASC,EAAW,CAAGd,EAAS,GACjC,CAACe,EAAcC,EAAgB,CAAGhB,EAAwB,IAC1DiB,EAAsBhB,EAC3BiB,IAAA,GAAC,CAAEC,MAAAA,CAAK,CAAEN,QAAAA,CAAO,CAAEE,aAAAA,CAAAA,CAAc,CAAAG,EAAA,OAAKN,EAAE,qBAAsBC,EAAU,EAAGO,KAAKC,GAAG,CAACR,EAAUE,EAAcI,GAAQA,EAAM,EAC1H,CAACP,EAAE,EAEEU,EAAoBrB,EAAY,IAAMW,EAAE,mBAAoB,CAACA,EAAE,SAErE,AAAKH,EAASc,MAAM,CAKnBxB,EAAAyB,aAAA,CAAAzB,EAAA0B,QAAA,CAAA,KACC1B,EAAAyB,aAAA,CAAChC,EAAK,KACLO,EAAAyB,aAAA,CAAC9B,EAAS,KACTK,EAAAyB,aAAA,CAAC7B,EAAQ,KACRI,EAAAyB,aAAA,CAAC5B,EAAS,CAAC8B,MAAM,KAAK,EACrB3B,EAAAyB,aAAA,CAACjC,EAAQ,CACRoC,QAASjB,EAAgB,EACzBkB,cAAelB,EAAgB,GAAKA,IAAkBD,EAASc,MAAO,CACtEM,SAAU,KACTlB,EAAaF,IACZ,IAAMqB,EAA6BrB,EAASsB,IAAI,CAACC,IAAA,GAAC,CAAEC,YAAAA,CAAW,CAAEC,UAAAA,CAAAA,CAAW,CAAAF,EAAA,OAAKC,GAAeC,CAAS,UAGzG,AAFmBxB,AAAkB,IAAlBA,EAGXD,EAAS0B,GAAG,CAAEC,GAAO9C,EAAAA,EAAA,CAAA,EAAW8C,GAAO,CAAA,EAAA,CAAEF,UAAW,CAAA,CAAI,IAG5DJ,EACIrB,EAAS0B,GAAG,CAAEC,GAAaA,EAAQH,WAAW,CAAA3C,EAAAA,EAAA,CAAA,EAAQ8C,GAAO,CAAA,EAAA,CAAEF,UAAW,CAAA,CAAK,GAAKE,GAGrF3B,EAAS0B,GAAG,CAAEC,GAAO9C,EAAAA,EAAA,CAAA,EAAW8C,GAAO,CAAA,EAAA,CAAEF,UAAW,CAAA,CAAK,GACjE,EACD,CAAE,IAGJnC,EAAAyB,aAAA,CAAC5B,EAAS,CAACyC,GAAG,IAAI,EAAEzB,EAAE,SACtBb,EAAAyB,aAAA,CAAC5B,EAAS,CAACyC,GAAG,KAAKC,MAAM,KAAK,KAGhCvC,EAAAyB,aAAA,CAAC3B,EAAS,KACRY,EAAS8B,KAAK,CAAC1B,EAASA,EAAUE,GAAcoB,GAAG,CAAEC,GACrDrC,EAAAyB,aAAA,CAAC7B,EAAQ,CAAC6C,IAAKJ,EAAQK,UAAAA,AAAW,EACjC1C,EAAAyB,aAAA,CAAC5B,EAAS,CAAC8B,MAAM,KAAK,EACrB3B,EAAAyB,aAAA,CAACjC,EAAQ,CACRoC,QAASS,EAAQF,SAAU,CAC3BL,SAAWa,IACV,GAAM,CAAEf,QAAAA,CAAAA,CAAS,CAAGe,EAAMC,aAAa,CACvChC,EAAaF,GACZA,EAAS0B,GAAG,CAAES,GAAcA,IAAaR,EAAO9C,EAAAA,EAAA,CAAA,EAAQsD,GAAQ,CAAA,EAAA,CAAEV,UAAWP,CAAO,GAAKiB,GAE3F,CAAE,IAGJ7C,EAAAyB,aAAA,CAAC5B,EAAS,KAAEwC,EAAQS,IAAI,EACxB9C,EAAAyB,aAAA,CAAC5B,EAAS,CAAC0C,MAAM,KAAK,EAAEF,EAAQH,WAAW,EAAIlC,EAAAyB,aAAA,CAAC/B,EAAG,CAACqD,QAAQ,QAAQ,EAAElC,EAAE,2BAK5Eb,EAAAyB,aAAA,CAAClB,EAAU,CACVO,QAASA,EACTE,aAAcA,EACdO,kBAAmBA,EACnBL,oBAAqBA,EACrBE,MAAOV,EAASc,MAAM,EAAI,EAC1BwB,kBAAmB/B,EACnBgC,aAAclC,CAAW,IA7DpB,IAiET"}