)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/import/ImportHistoryPage.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Button, ButtonGroup, Table, TableHead, TableCell, TableRow, TableBody } from '@rocket.chat/fuselage';\nimport { useMediaQuery } from '@rocket.chat/fuselage-hooks';\nimport { useToastMessageDispatch, useEndpoint, useTranslation, useRouter } from '@rocket.chat/ui-contexts';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport React, { useMemo } from 'react';\n\nimport { ProgressStep } from '../../../../app/importer/lib/ImporterProgressStep';\nimport Page from '../../../components/Page';\nimport ImportOperationSummary from './ImportOperationSummary';\n\nfunction ImportHistoryPage() {\n\tconst queryClient = useQueryClient();\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst downloadPendingFiles = useEndpoint('POST', '/v1/downloadPendingFiles');\n\tconst downloadPendingAvatars = useEndpoint('POST', '/v1/downloadPendingAvatars');\n\n\tconst getCurrentImportOperation = useEndpoint('GET', '/v1/getCurrentImportOperation');\n\tconst getLatestImportOperations = useEndpoint('GET', '/v1/getLatestImportOperations');\n\n\tconst router = useRouter();\n\n\tconst currentOperation = useQuery(\n\t\t['ImportHistoryPage', 'currentOperation'],\n\t\tasync () => {\n\t\t\tconst { operation = { valid: false } } = await getCurrentImportOperation();\n\t\t\treturn operation;\n\t\t},\n\t\t{\n\t\t\tonError: () => dispatchToastMessage({ type: 'error', message: t('Failed_To_Load_Import_Operation') }),\n\t\t},\n\t);\n\n\tconst latestOperations = useQuery(\n\t\t['ImportHistoryPage', 'latestOperations'],\n\t\tasync () => {\n\t\t\tconst operations = await getLatestImportOperations();\n\t\t\treturn operations;\n\t\t},\n\t\t{\n\t\t\tonError: () => dispatchToastMessage({ type: 'error', message: t('Failed_To_Load_Import_History') }),\n\t\t},\n\t);\n\n\tconst isLoading = currentOperation.isLoading || latestOperations.isLoading;\n\n\tconst hasAnySuccessfulImport = useMemo(() => {\n\t\treturn latestOperations.isSuccess && latestOperations.data.some(({ status }) => status === ProgressStep.DONE);\n\t}, [latestOperations.isSuccess, latestOperations.data]);\n\n\tconst handleNewImportClick = () => {\n\t\trouter.navigate('/admin/import/new');\n\t};\n\n\tconst downloadPendingFilesResult = useMutation({\n\t\tmutationFn: async () => downloadPendingFiles(),\n\t\tonError: (error) => {\n\t\t\tconsole.error(error);\n\t\t\tdispatchToastMessage({ type: 'error', message: t('Failed_To_Download_Files') });\n\t\t},\n\t\tonSuccess: ({ count }) => {\n\t\t\tqueryClient.invalidateQueries(['ImportHistoryPage', 'currentOperation']);\n\t\t\tqueryClient.invalidateQueries(['ImportHistoryPage', 'latestOperations']);\n\t\t\tif (!count) {\n\t\t\t\tdispatchToastMessage({ type: 'info', message: t('No_files_left_to_download') });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdispatchToastMessage({ type: 'info', message: t('File_Downloads_Started') });\n\t\t\trouter.navigate('/admin/import/progress');\n\t\t},\n\t});\n\n\tconst downloadPendingAvatarsResult = useMutation({\n\t\tmutationFn: async () => downloadPendingAvatars(),\n\t\tonError: (error) => {\n\t\t\tconsole.error(error);\n\t\t\tdispatchToastMessage({ type: 'error', message: t('Failed_To_Download_Files') });\n\t\t},\n\t\tonSuccess: ({ count }) => {\n\t\t\tqueryClient.invalidateQueries(['ImportHistoryPage', 'currentOperation']);\n\t\t\tqueryClient.invalidateQueries(['ImportHistoryPage', 'latestOperations']);\n\t\t\tif (!count) {\n\t\t\t\tdispatchToastMessage({ type: 'info', message: t('No_files_left_to_download') });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdispatchToastMessage({ type: 'info', message: t('File_Downloads_Started') });\n\t\t\trouter.navigate('/admin/import/progress');\n\t\t},\n\t});\n\n\tconst small = useMediaQuery('(max-width: 768px)');\n\n\treturn (\n\t\t<Page>\n\t\t\t<Page.Header title={t('Import')}>\n\t\t\t\t<ButtonGroup>\n\t\t\t\t\t<Button primary disabled={isLoading} onClick={handleNewImportClick}>\n\t\t\t\t\t\t{t('Import_New_File')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t{hasAnySuccessfulImport && (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tloading={downloadPendingFilesResult.isLoading}\n\t\t\t\t\t\t\tdisabled={downloadPendingAvatarsResult.isLoading}\n\t\t\t\t\t\t\tonClick={() => downloadPendingFilesResult.mutate()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{t('Download_Pending_Files')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\t\t\t\t\t{hasAnySuccessfulImport && (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tloading={downloadPendingAvatarsResult.isLoading}\n\t\t\t\t\t\t\tdisabled={downloadPendingFilesResult.isLoading}\n\t\t\t\t\t\t\tonClick={() => downloadPendingAvatarsResult.mutate()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{t('Download_Pending_Avatars')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\t\t\t\t</ButtonGroup>\n\t\t\t</Page.Header>\n\t\t\t<Page.ScrollableContentWithShadow>\n\t\t\t\t<Table fixed data-qa-id='ImportTable'>\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell is='th' rowSpan={2} width='x140'>\n\t\t\t\t\t\t\t\t{t('Import_Type')}\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell is='th' rowSpan={2}>\n\t\t\t\t\t\t\t\t{t('Last_Updated')}\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t{!small && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<TableCell is='th' rowSpan={2}>\n\t\t\t\t\t\t\t\t\t\t{t('Last_Status')}\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell is='th' rowSpan={2}>\n\t\t\t\t\t\t\t\t\t\t{t('File')}\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell is='th' align='center' colSpan={4} width='x320'>\n\t\t\t\t\t\t\t\t\t\t{t('Counters')}\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t{!small && (\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<TableCell is='th' align='center'>\n\t\t\t\t\t\t\t\t\t{t('Users')}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell is='th' align='center'>\n\t\t\t\t\t\t\t\t\t{t('Channels')}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell is='th' align='center'>\n\t\t\t\t\t\t\t\t\t{t('Messages')}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t<TableCell is='th' align='center'>\n\t\t\t\t\t\t\t\t\t{t('Total')}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{isLoading && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{Array.from({ length: 20 }, (_, i) => (\n\t\t\t\t\t\t\t\t\t<ImportOperationSummary.Skeleton small={small} key={i} />\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{currentOperation.isSuccess && currentOperation.data.valid && (\n\t\t\t\t\t\t\t<ImportOperationSummary {...currentOperation.data} small={small} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{currentOperation.isSuccess && latestOperations.isSuccess && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{latestOperations.data\n\t\t\t\t\t\t\t\t\t.filter(({ _id }) => !currentOperation.data.valid || currentOperation.data._id !== _id)\n\t\t\t\t\t\t\t\t\t// Forcing valid=false as the current API only accept preparation/progress over currentOperation\n\t\t\t\t\t\t\t\t\t?.map((operation) => (\n\t\t\t\t\t\t\t\t\t\t<ImportOperationSummary key={operation._id} {...operation} valid={false} small={small} />\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</Page.ScrollableContentWithShadow>\n\t\t</Page>\n\t);\n}\n\nexport default ImportHistoryPage;\n",null],"names":["_extends","Button","ButtonGroup","Table","TableHead","TableCell","TableRow","TableBody","useMediaQuery","useToastMessageDispatch","useEndpoint","useTranslation","useRouter","useQuery","useMutation","useQueryClient","React","useMemo","ProgressStep","Page","ImportOperationSummary","module","link","default","v","exportDefault","_latestOperations$dat","queryClient","t","dispatchToastMessage","downloadPendingFiles","downloadPendingAvatars","getCurrentImportOperation","getLatestImportOperations","router","currentOperation","operation","valid","onError","type","message","latestOperations","operations","isLoading","hasAnySuccessfulImport","isSuccess","data","some","_ref","status","DONE","downloadPendingFilesResult","mutationFn","error","console","onSuccess","_ref2","count","invalidateQueries","navigate","downloadPendingAvatarsResult","_ref3","small","createElement","Header","title","primary","disabled","onClick","loading","mutate","ScrollableContentWithShadow","fixed","is","rowSpan","width","Fragment","align","colSpan","Array","from","length","_","i","Skeleton","key","filter","_ref4","_id","map"],"mappings":"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"}