)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/admin/customUserStatus/CustomUserStatusFormWithData.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IUserStatus } from '@rocket.chat/core-typings';\nimport { Box, Callout } from '@rocket.chat/fuselage';\nimport { useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport type { ReactElement } from 'react';\nimport React, { useMemo } from 'react';\n\nimport { FormSkeleton } from '../../../components/Skeleton';\nimport CustomUserStatusForm from './CustomUserStatusForm';\n\ntype CustomUserStatusFormWithDataProps = {\n\t_id?: IUserStatus['_id'];\n\tonClose: () => void;\n\tonReload: () => void;\n};\n\nconst CustomUserStatusFormWithData = ({ _id, onReload, onClose }: CustomUserStatusFormWithDataProps): ReactElement => {\n\tconst t = useTranslation();\n\tconst query = useMemo(() => ({ query: JSON.stringify({ _id }) }), [_id]);\n\n\tconst getCustomUserStatus = useEndpoint('GET', '/v1/custom-user-status.list');\n\n\tconst { data, isLoading, error, refetch } = useQuery(['custom-user-statuses', query], async () => {\n\t\tconst customUserStatus = await getCustomUserStatus(query);\n\t\treturn customUserStatus;\n\t});\n\n\tconst handleReload = (): void => {\n\t\tonReload?.();\n\t\trefetch?.();\n\t};\n\n\tif (!_id) {\n\t\treturn <CustomUserStatusForm onReload={handleReload} onClose={onClose} />;\n\t}\n\n\tif (isLoading) {\n\t\treturn <FormSkeleton pi={20} />;\n\t}\n\n\tif (error || !data || data.count < 1) {\n\t\treturn (\n\t\t\t<Box p={20}>\n\t\t\t\t<Callout type='danger'>{t('Custom_User_Status_Error_Invalid_User_Status')}</Callout>\n\t\t\t</Box>\n\t\t);\n\t}\n\n\treturn <CustomUserStatusForm status={data.statuses[0]} onReload={handleReload} onClose={onClose} />;\n};\n\nexport default CustomUserStatusFormWithData;\n",null],"names":["Box","Callout","useEndpoint","useTranslation","useQuery","React","useMemo","FormSkeleton","CustomUserStatusForm","module","link","default","exportDefault","_ref","_id","onReload","onClose","t","query","JSON","stringify","getCustomUserStatus","data","isLoading","error","refetch","customUserStatus","handleReload","createElement","pi","count","p","type","status","statuses"],"mappings":"2BACAA,EAAOC,EAA8CC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAvCC,EAASC,IAAAA,CAAAA,wBAA6B,CAACV,IAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,QAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAQ,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAP,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAM,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAL,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,QAAAA,CAAAE,QAAAA,CAAAA,EAAAN,EAAAA,CAAA,EAAAC,QAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,+BAAAA,CAAAF,aAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,yBAAAA,CAAAE,QAAAA,CAAAA,EAAAH,EAAAA,CAAA,CAAA,EAAA,GAArDC,EAAOG,aAAO,CAeuBC,IAAgF,GAA/E,CAAEC,IAAAA,CAAG,CAAEC,SAAAA,CAAQ,CAAEC,QAAAA,CAAAA,CAA4C,CAAAH,EAC5FI,EAAId,IACJe,EAAQZ,EAAQ,IAAO,CAAA,CAAEY,MAAOC,KAAKC,SAAS,CAAC,CAAEN,IAAAA,CAAG,EAAG,CAAA,EAAK,CAACA,EAAI,EAEjEO,EAAsBnB,EAAY,MAAO,+BAEzC,CAAEoB,KAAAA,CAAI,CAAEC,UAAAA,CAAS,CAAEC,MAAAA,CAAK,CAAEC,QAAAA,CAAAA,CAAS,CAAGrB,EAAS,CAAC,uBAAwBc,EAAM,CAAE,UACrF,IAAMQ,EAAmB,MAAML,EAAoBH,GACnD,OAAOQ,CACR,GAEMC,EAAe,KACpBZ,MAAAA,GAAAA,IACAU,MAAAA,GAAAA,GACD,SAEA,AAAKX,EAIDS,EACIlB,EAAAuB,aAAA,CAACrB,EAAY,CAACsB,GAAI,EAAG,GAGzBL,GAAS,CAACF,GAAQA,EAAKQ,KAAK,CAAG,EAEjCzB,EAAAuB,aAAA,CAAC5B,EAAG,CAAC+B,EAAG,EAAG,EACV1B,EAAAuB,aAAA,CAAC3B,EAAO,CAAC+B,KAAK,QAAQ,EAAEf,EAAE,kDAKtBZ,EAAAuB,aAAA,CAACpB,EAAoB,CAACyB,OAAQX,EAAKY,QAAQ,CAAC,EAAG,CAACnB,SAAUY,EAAcX,QAASA,CAAQ,GAfxFX,EAAAuB,aAAA,CAACpB,EAAoB,CAACO,SAAUY,EAAcX,QAASA,CAAQ,EAgBxE"}