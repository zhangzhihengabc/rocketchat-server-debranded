)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/hooks/useActiveConnections.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useEndpoint } from '@rocket.chat/ui-contexts';\nimport type { UseQueryResult } from '@tanstack/react-query';\nimport { useQuery } from '@tanstack/react-query';\n\nexport const useActiveConnections = (): UseQueryResult<{ max: number; current: number; percentage: number }> => {\n\tconst getConnections = useEndpoint('GET', '/v1/presence.getConnections');\n\treturn useQuery(\n\t\t['userConnections'],\n\t\tasync () => {\n\t\t\tconst { current, max } = await getConnections();\n\t\t\treturn { current, max, percentage: Math.min((current / max) * 100, 100) };\n\t\t},\n\t\t{ staleTime: 1000 * 60 },\n\t);\n};\n",null],"names":["useEndpoint","useQuery","module","export","useActiveConnections","getConnections","current","max","percentage","Math","min","staleTime"],"mappings":"2BAAuDA,EAAAC,EAAvDC,EAAOC,MAAE,CAAA,CAAAC,qBAAmB,IAAAA,CAA2B,GAAAF,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAF,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAD,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAIhD,IAAMG,EAAuB,KACnC,IAAMC,EAAiBL,EAAY,MAAO,+BAC1C,OAAOC,EACN,CAAC,kBAAkB,CACnB,UACC,GAAM,CAAEK,QAAAA,CAAO,CAAEC,IAAAA,CAAAA,CAAK,CAAG,MAAMF,IAC/B,MAAO,CAAEC,QAAAA,EAASC,IAAAA,EAAKC,WAAYC,KAAKC,GAAG,CAAEJ,EAAUC,EAAO,IAAK,IAAI,CACxE,EACA,CAAEI,UAAW,GAAS,EAExB"}