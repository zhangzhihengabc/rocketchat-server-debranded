)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/omnichannel/directory/utils/formatQueuedAt.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IOmnichannelRoom } from '@rocket.chat/core-typings';\nimport moment from 'moment';\n\nexport const formatQueuedAt = (room: IOmnichannelRoom) => {\n\tconst { servedBy, closedAt, open, queuedAt, ts } = room || {};\n\tconst queueStartedAt = queuedAt || ts;\n\n\t// Room served\n\tif (servedBy) {\n\t\treturn moment(servedBy.ts).from(moment(queueStartedAt), true);\n\t}\n\n\t// Room open and not served\n\tif (open) {\n\t\treturn moment(queueStartedAt).fromNow(true);\n\t}\n\n\t// Room closed and not served\n\tif (closedAt && queueStartedAt) {\n\t\treturn moment(closedAt).from(moment(queueStartedAt), true);\n\t}\n\n\treturn '';\n};\n",null],"names":["moment","module","export","formatQueuedAt","default","room","servedBy","closedAt","open","queuedAt","ts","queueStartedAt","from","fromNow"],"mappings":"2BAC4BA,EAA5BC,EAAOC,MAAM,CAAA,CAAAC,eAAe,IAAAA,CAAA,GAAAF,EAAAA,IAAAA,CAAAA,SAAAA,CAAAG,QAAAA,CAAAA,EAAAJ,EAAAA,CAAA,CAAA,EAAA,GAErB,IAAMG,EAAkBE,IAC9B,GAAM,CAAEC,SAAAA,CAAQ,CAAEC,SAAAA,CAAQ,CAAEC,KAAAA,CAAI,CAAEC,SAAAA,CAAQ,CAAEC,GAAAA,CAAAA,CAAI,CAAGL,GAAQ,CAAA,EACrDM,EAAiBF,GAAYC,SAGnC,AAAIJ,EACIN,EAAOM,EAASI,EAAE,EAAEE,IAAI,CAACZ,EAAOW,GAAiB,CAAA,GAIrDH,EACIR,EAAOW,GAAgBE,OAAO,CAAC,CAAA,GAInCN,GAAYI,EACRX,EAAOO,GAAUK,IAAI,CAACZ,EAAOW,GAAiB,CAAA,GAG/C,EACR"}