)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/omnichannel/directory/contacts/contextualBar/ContactNewEdit.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { ILivechatVisitor, Serialized } from '@rocket.chat/core-typings';\nimport { Field, FieldLabel, FieldRow, FieldError, TextInput, ButtonGroup, Button, ContextualbarContent } from '@rocket.chat/fuselage';\nimport { CustomFieldsForm } from '@rocket.chat/ui-client';\nimport { useToastMessageDispatch, useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useQueryClient } from '@tanstack/react-query';\nimport type { ReactElement } from 'react';\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\n\nimport { hasAtLeastOnePermission } from '../../../../../../app/authorization/client';\nimport { validateEmail } from '../../../../../../lib/emailValidator';\nimport { ContextualbarScrollableContent, ContextualbarFooter } from '../../../../../components/Contextualbar';\nimport { createToken } from '../../../../../lib/utils/createToken';\nimport { ContactManager as ContactManagerForm } from '../../../additionalForms';\nimport { FormSkeleton } from '../../components/FormSkeleton';\nimport { useCustomFieldsMetadata } from '../../hooks/useCustomFieldsMetadata';\n\ntype ContactNewEditProps = {\n\tid: string;\n\tdata?: { contact: Serialized<ILivechatVisitor> | null };\n\tclose(): void;\n};\n\ntype ContactFormData = {\n\ttoken: string;\n\tname: string;\n\temail: string;\n\tphone: string;\n\tusername: string;\n\tcustomFields: Record<any, any>;\n};\n\nconst DEFAULT_VALUES = {\n\ttoken: '',\n\tname: '',\n\temail: '',\n\tphone: '',\n\tusername: '',\n\tcustomFields: {},\n};\n\nconst getInitialValues = (data: ContactNewEditProps['data']): ContactFormData => {\n\tif (!data) {\n\t\treturn DEFAULT_VALUES;\n\t}\n\n\tconst { name, token, phone, visitorEmails, livechatData, contactManager } = data.contact ?? {};\n\n\treturn {\n\t\ttoken: token ?? '',\n\t\tname: name ?? '',\n\t\temail: visitorEmails ? visitorEmails[0].address : '',\n\t\tphone: phone ? phone[0].phoneNumber : '',\n\t\tcustomFields: livechatData ?? {},\n\t\tusername: contactManager?.username ?? '',\n\t};\n};\n\nconst ContactNewEdit = ({ id, data, close }: ContactNewEditProps): ReactElement => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst queryClient = useQueryClient();\n\n\tconst canViewCustomFields = (): boolean =>\n\t\thasAtLeastOnePermission(['view-livechat-room-customfields', 'edit-livechat-room-customfields']);\n\n\tconst [userId, setUserId] = useState('no-agent-selected');\n\tconst saveContact = useEndpoint('POST', '/v1/omnichannel/contact');\n\tconst getContactBy = useEndpoint('GET', '/v1/omnichannel/contact.search');\n\tconst getUserData = useEndpoint('GET', '/v1/users.info');\n\n\tconst { data: customFieldsMetadata = [], isInitialLoading: isLoadingCustomFields } = useCustomFieldsMetadata({\n\t\tscope: 'visitor',\n\t\tenabled: canViewCustomFields(),\n\t});\n\n\tconst initialValue = getInitialValues(data);\n\tconst { username: initialUsername } = initialValue;\n\n\tconst {\n\t\tregister,\n\t\tformState: { errors, isValid, isDirty, isSubmitting },\n\t\tcontrol,\n\t\tsetValue,\n\t\thandleSubmit,\n\t\tsetError,\n\t} = useForm<ContactFormData>({\n\t\tmode: 'onChange',\n\t\treValidateMode: 'onChange',\n\t\tdefaultValues: initialValue,\n\t});\n\n\tuseEffect(() => {\n\t\tif (!initialUsername) {\n\t\t\treturn;\n\t\t}\n\n\t\tgetUserData({ username: initialUsername }).then(({ user }) => {\n\t\t\tsetUserId(user._id);\n\t\t});\n\t}, [getUserData, initialUsername]);\n\n\tconst validateEmailFormat = (email: string): boolean | string => {\n\t\tif (!email || email === initialValue.email) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (!validateEmail(email)) {\n\t\t\treturn t('error-invalid-email-address');\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tconst validateContactField = async (name: 'phone' | 'email', value: string, optional = true) => {\n\t\tif ((optional && !value) || value === initialValue[name]) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst query = { [name]: value } as Record<'phone' | 'email', string>;\n\t\tconst { contact } = await getContactBy(query);\n\t\treturn !contact || contact._id === id;\n\t};\n\n\tconst validateName = (v: string): string | boolean => (!v.trim() ? t('The_field_is_required', t('Name')) : true);\n\n\tconst handleContactManagerChange = async (userId: string): Promise<void> => {\n\t\tsetUserId(userId);\n\n\t\tif (userId === 'no-agent-selected') {\n\t\t\tsetValue('username', '', { shouldDirty: true });\n\t\t\treturn;\n\t\t}\n\n\t\tconst { user } = await getUserData({ userId });\n\t\tsetValue('username', user.username || '', { shouldDirty: true });\n\t};\n\n\tconst validateAsync = async ({ phone = '', email = '' } = {}) => {\n\t\tconst isEmailValid = await validateContactField('email', email);\n\t\tconst isPhoneValid = await validateContactField('phone', phone);\n\n\t\t!isEmailValid && setError('email', { message: t('Email_already_exists') });\n\t\t!isPhoneValid && setError('phone', { message: t('Phone_already_exists') });\n\n\t\treturn isEmailValid && isPhoneValid;\n\t};\n\n\tconst handleSave = async (data: ContactFormData): Promise<void> => {\n\t\tif (!(await validateAsync(data))) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { name, phone, email, customFields, username, token } = data;\n\n\t\tconst payload = {\n\t\t\tname,\n\t\t\tphone,\n\t\t\temail,\n\t\t\tcustomFields,\n\t\t\ttoken: token || createToken(),\n\t\t\t...(username && { contactManager: { username } }),\n\t\t\t...(id && { _id: id }),\n\t\t};\n\n\t\ttry {\n\t\t\tawait saveContact(payload);\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Saved') });\n\t\t\tawait queryClient.invalidateQueries({ queryKey: ['current-contacts'] });\n\t\t\tclose();\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t};\n\n\tif (isLoadingCustomFields) {\n\t\treturn (\n\t\t\t<ContextualbarContent>\n\t\t\t\t<FormSkeleton />\n\t\t\t</ContextualbarContent>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<ContextualbarScrollableContent is='form' onSubmit={handleSubmit(handleSave)}>\n\t\t\t\t<Field>\n\t\t\t\t\t<FieldLabel>{t('Name')}*</FieldLabel>\n\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t<TextInput {...register('name', { validate: validateName })} error={errors.name?.message} flexGrow={1} />\n\t\t\t\t\t</FieldRow>\n\t\t\t\t\t<FieldError>{errors.name?.message}</FieldError>\n\t\t\t\t</Field>\n\t\t\t\t<Field>\n\t\t\t\t\t<FieldLabel>{t('Email')}</FieldLabel>\n\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t<TextInput {...register('email', { validate: validateEmailFormat })} error={errors.email?.message} flexGrow={1} />\n\t\t\t\t\t</FieldRow>\n\t\t\t\t\t<FieldError>{errors.email?.message}</FieldError>\n\t\t\t\t</Field>\n\t\t\t\t<Field>\n\t\t\t\t\t<FieldLabel>{t('Phone')}</FieldLabel>\n\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t<TextInput {...register('phone')} error={errors.phone?.message} flexGrow={1} />\n\t\t\t\t\t</FieldRow>\n\t\t\t\t\t<FieldError>{errors.phone?.message}</FieldError>\n\t\t\t\t</Field>\n\t\t\t\t{canViewCustomFields() && <CustomFieldsForm formName='customFields' formControl={control} metadata={customFieldsMetadata} />}\n\t\t\t\t<ContactManagerForm value={userId} handler={handleContactManagerChange} />\n\t\t\t</ContextualbarScrollableContent>\n\t\t\t<ContextualbarFooter>\n\t\t\t\t<ButtonGroup stretch>\n\t\t\t\t\t<Button flexGrow={1} onClick={close}>\n\t\t\t\t\t\t{t('Cancel')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tmie='none'\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tonClick={handleSubmit(handleSave)}\n\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\tloading={isSubmitting}\n\t\t\t\t\t\tdisabled={!isValid || !isDirty}\n\t\t\t\t\t\tprimary\n\t\t\t\t\t>\n\t\t\t\t\t\t{t('Save')}\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</ContextualbarFooter>\n\t\t</>\n\t);\n};\n\nexport default ContactNewEdit;\n",null],"names":["_extends","_objectSpread","Field","FieldLabel","FieldRow","FieldError","TextInput","ButtonGroup","Button","ContextualbarContent","CustomFieldsForm","useToastMessageDispatch","useEndpoint","useTranslation","useQueryClient","React","useState","useEffect","useForm","hasAtLeastOnePermission","validateEmail","ContextualbarScrollableContent","ContextualbarFooter","createToken","ContactManagerForm","FormSkeleton","useCustomFieldsMetadata","module","link","default","v","ContactManager","DEFAULT_VALUES","token","name","email","phone","username","customFields","getInitialValues","data","_data$contact","_contactManager$usern","visitorEmails","livechatData","contactManager","contact","address","phoneNumber","exportDefault","_ref","_errors$name","_errors$name2","_errors$email","_errors$email2","_errors$phone","_errors$phone2","id","close","t","dispatchToastMessage","queryClient","canViewCustomFields","userId","setUserId","saveContact","getContactBy","getUserData","customFieldsMetadata","isInitialLoading","isLoadingCustomFields","scope","enabled","initialValue","initialUsername","register","formState","errors","isValid","isDirty","isSubmitting","control","setValue","handleSubmit","setError","mode","reValidateMode","defaultValues","then","_ref2","user","_id","validateContactField","value","optional","arguments","length","undefined","handleContactManagerChange","shouldDirty","validateAsync","isEmailValid","isPhoneValid","message","handleSave","payload","type","invalidateQueries","queryKey","error","createElement","Fragment","is","onSubmit","validate","trim","flexGrow","formName","formControl","metadata","handler","stretch","onClick","mie","loading","disabled","primary"],"mappings":"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"}