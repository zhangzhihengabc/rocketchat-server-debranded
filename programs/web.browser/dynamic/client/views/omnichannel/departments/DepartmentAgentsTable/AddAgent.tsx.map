)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/omnichannel/departments/DepartmentAgentsTable/AddAgent.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Box, Button } from '@rocket.chat/fuselage';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useToastMessageDispatch, useTranslation } from '@rocket.chat/ui-contexts';\nimport React, { useState } from 'react';\n\nimport AutoCompleteAgent from '../../../../components/AutoCompleteAgent';\nimport { useEndpointAction } from '../../../../hooks/useEndpointAction';\nimport type { IDepartmentAgent } from '../EditDepartment';\n\nfunction AddAgent({ agentList, onAdd }: { agentList: IDepartmentAgent[]; onAdd: (agent: IDepartmentAgent) => void }) {\n\tconst t = useTranslation();\n\n\tconst [userId, setUserId] = useState('');\n\n\tconst getAgent = useEndpointAction('GET', '/v1/livechat/users/agent/:_id', { keys: { _id: userId } });\n\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst handleAgent = useMutableCallback((e) => setUserId(e));\n\n\tconst handleSave = useMutableCallback(async () => {\n\t\tif (!userId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst {\n\t\t\tuser: { _id, username, name },\n\t\t} = await getAgent();\n\n\t\tif (!agentList.some(({ agentId }) => agentId === _id)) {\n\t\t\tsetUserId('');\n\t\t\tonAdd({ agentId: _id, username: username ?? '', name, count: 0, order: 0 });\n\t\t} else {\n\t\t\tdispatchToastMessage({ type: 'error', message: t('This_agent_was_already_selected') });\n\t\t}\n\t});\n\n\treturn (\n\t\t<Box display='flex' alignItems='center'>\n\t\t\t<AutoCompleteAgent value={userId} onChange={handleAgent} />\n\t\t\t<Button disabled={!userId} onClick={handleSave} mis={8} primary>\n\t\t\t\t{t('Add')}\n\t\t\t</Button>\n\t\t</Box>\n\t);\n}\n\nexport default AddAgent;\n",null],"names":["Box","Button","useMutableCallback","useToastMessageDispatch","useTranslation","React","useState","AutoCompleteAgent","useEndpointAction","module","link","default","exportDefault","_ref","agentList","onAdd","t","userId","setUserId","getAgent","keys","_id","dispatchToastMessage","handleAgent","e","handleSave","user","username","name","some","_ref2","agentId","type","message","count","order","createElement","display","alignItems","value","onChange","disabled","onClick","mis","primary"],"mappings":"2BAAAA,EAAOC,EAA6CC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAtCC,EAAQC,IAAAA,CAAAA,wBAA6B,CAACV,IAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,OAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAQ,EAAAA,IAAAA,CAAAA,8BAAAA,CAAAP,mBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAO,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAN,wBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,QAAAA,CAAAE,QAAAA,CAAAA,EAAAN,EAAAA,CAAA,EAAAC,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,2CAAAA,CAAAE,QAAAA,CAAAA,EAAAJ,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,sCAAAA,CAAAD,kBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAApDC,EAAOG,aAAa,CASpB,SAAiBC,CAAA,EAAkG,GAAjG,CAAEC,UAAAA,CAAS,CAAEC,MAAAA,CAAAA,CAAoF,CAAAF,EAC5GG,EAAIZ,IAEJ,CAACa,EAAQC,EAAU,CAAGZ,EAAS,IAE/Ba,EAAWX,EAAkB,MAAO,gCAAiC,CAAEY,KAAM,CAAEC,IAAKJ,CAAM,CAAE,GAE5FK,EAAuBnB,IAEvBoB,EAAcrB,EAAoBsB,GAAMN,EAAUM,IAElDC,EAAavB,EAAmB,UACrC,GAAI,CAACe,EACJ,OAGD,GAAM,CACLS,KAAM,CAAEL,IAAAA,CAAG,CAAEM,SAAAA,CAAQ,CAAEC,KAAAA,CAAAA,CAAI,CAC3B,CAAG,MAAMT,IAELL,EAAUe,IAAI,CAACC,IAAA,GAAC,CAAEC,QAAAA,CAAAA,CAAS,CAAAD,EAAA,OAAKC,IAAYV,CAAG,GAInDC,EAAqB,CAAEU,KAAM,QAASC,QAASjB,EAAE,kCAAkC,IAHnFE,EAAU,IACVH,EAAM,CAAEgB,QAASV,EAAKM,SAAUA,MAAAA,EAAAA,EAAY,GAAIC,KAAAA,EAAMM,MAAO,EAAGC,MAAO,CAAC,GAI1E,GAEA,OACC9B,EAAA+B,aAAA,CAACpC,EAAG,CAACqC,QAAQ,OAAOC,WAAW,QAAQ,EACtCjC,EAAA+B,aAAA,CAAC7B,EAAiB,CAACgC,MAAOtB,EAAQuB,SAAUjB,CAAY,GACxDlB,EAAA+B,aAAA,CAACnC,EAAM,CAACwC,SAAU,CAACxB,EAAQyB,QAASjB,EAAYkB,IAAK,EAAGC,QAAO,CAAA,CAAA,EAC7D5B,EAAE,QAIP"}