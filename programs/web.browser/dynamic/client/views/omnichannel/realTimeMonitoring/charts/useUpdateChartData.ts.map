)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/omnichannel/realTimeMonitoring/charts/useUpdateChartData.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { type Chart } from 'chart.js';\nimport { type TFunction } from 'i18next';\nimport { type RefObject } from 'react';\n\nimport { updateChart } from '../../../../../app/livechat/client/lib/chartHandler';\n\ntype UseUpdateChartDataOptions = {\n\tcontext: RefObject<Chart | undefined>;\n\tcanvas: RefObject<HTMLCanvasElement | null>;\n\tinit: (canvas: HTMLCanvasElement, context: undefined, t: TFunction) => Promise<Chart>;\n\tt: TFunction;\n};\n\nexport const useUpdateChartData = ({ context: contextRef, canvas: canvasRef, init, t }: UseUpdateChartDataOptions) =>\n\tuseMutableCallback(async (label: string, data: { [x: string]: number }) => {\n\t\tconst canvas = canvasRef.current;\n\n\t\tif (!canvas) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst context = contextRef.current ?? (await init(canvas, undefined, t));\n\n\t\tawait updateChart(context, label, data);\n\t});\n",null],"names":["useMutableCallback","updateChart","module","export","useUpdateChartData","_ref","context","contextRef","canvas","canvasRef","init","t","label","data","_contextRef$current","current","undefined"],"mappings":"2BAAmCA,EAA8BC,EAAjEC,EAAOC,MAAE,CAAA,CAAAC,mBAAoB,IAAMA,CAAA,GAA8BF,EAAAA,IAAAA,CAAAA,8BAAAA,CAAAF,mBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,sDAAAA,CAAAD,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAc1D,IAAMG,EAAqBC,IAAA,GAAC,CAAEC,QAASC,CAAU,CAAEC,OAAQC,CAAS,CAAEC,KAAAA,CAAI,CAAEC,EAAAA,CAAAA,CAA8B,CAAAN,EAAA,OAChHL,EAAmB,MAAOY,EAAeC,KAAiC,IAAAC,EACzE,IAAMN,EAASC,EAAUM,OAAO,CAEhC,GAAI,CAACP,EACJ,OAGD,IAAMF,EAAO,AAAqB,OAArBQ,CAAAA,EAAGP,EAAWQ,OAAO,AAAPA,GAAOD,AAAA,KAAA,IAAAA,EAAAA,EAAK,MAAMJ,EAAKF,EAAQQ,KAAAA,EAAWL,EAErE,OAAMV,EAAYK,EAASM,EAAOC,EACnC,EAAE"}