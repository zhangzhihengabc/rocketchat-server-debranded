)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/omnichannel/agents/AgentEdit.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { ILivechatAgent, ILivechatDepartment, ILivechatDepartmentAgents } from '@rocket.chat/core-typings';\nimport {\n\tField,\n\tFieldLabel,\n\tFieldRow,\n\tTextInput,\n\tButton,\n\tBox,\n\tMultiSelect,\n\tIcon,\n\tSelect,\n\tContextualbarFooter,\n\tButtonGroup,\n} from '@rocket.chat/fuselage';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useToastMessageDispatch, useRoute, useSetting, useMethod, useTranslation, useEndpoint } from '@rocket.chat/ui-contexts';\nimport type { FC } from 'react';\nimport React, { useMemo, useRef, useState } from 'react';\n\nimport { getUserEmailAddress } from '../../../../lib/getUserEmailAddress';\nimport { ContextualbarScrollableContent } from '../../../components/Contextualbar';\nimport UserInfo from '../../../components/UserInfo';\nimport { useForm } from '../../../hooks/useForm';\nimport { MaxChatsPerAgentContainer } from '../additionalForms';\n\n// TODO: TYPE:\n// Department\n\ntype dataType = {\n\tuser: Pick<ILivechatAgent, '_id' | 'username' | 'name' | 'status' | 'statusLivechat' | 'emails' | 'livechat'>;\n};\n\ntype AgentEditProps = {\n\tdata: dataType;\n\tuserDepartments: { departments: Pick<ILivechatDepartmentAgents, 'departmentId'>[] };\n\tavailableDepartments: { departments: Pick<ILivechatDepartment, '_id' | 'name' | 'archived'>[] };\n\tuid: string;\n\treset: () => void;\n};\n\nconst AgentEdit: FC<AgentEditProps> = ({ data, userDepartments, availableDepartments, uid, reset, ...props }) => {\n\tconst t = useTranslation();\n\tconst agentsRoute = useRoute('omnichannel-agents');\n\tconst [maxChatUnsaved, setMaxChatUnsaved] = useState();\n\tconst voipEnabled = useSetting('VoIP_Enabled');\n\n\tconst { user } = data || { user: {} };\n\tconst { name, username, statusLivechat } = user;\n\n\tconst email = getUserEmailAddress(user);\n\n\tconst options: [string, string][] = useMemo(() => {\n\t\tconst archivedDepartment = (name: string, archived?: boolean) => (archived ? `${name} [${t('Archived')}]` : name);\n\n\t\treturn availableDepartments?.departments\n\t\t\t? availableDepartments.departments.map(({ _id, name, archived }) =>\n\t\t\t\t\tname ? [_id, archivedDepartment(name, archived)] : [_id, archivedDepartment(_id, archived)],\n\t\t\t  )\n\t\t\t: [];\n\t}, [availableDepartments.departments, t]);\n\n\tconst initialDepartmentValue = useMemo(\n\t\t() => (userDepartments.departments ? userDepartments.departments.map(({ departmentId }) => departmentId) : []),\n\t\t[userDepartments],\n\t);\n\n\tconst saveRef = useRef({\n\t\tvalues: {},\n\t\thasUnsavedChanges: false,\n\t\treset: () => undefined,\n\t\tcommit: () => undefined,\n\t});\n\n\tconst { reset: resetMaxChats, commit: commitMaxChats } = saveRef.current;\n\n\tconst onChangeMaxChats = useMutableCallback(({ hasUnsavedChanges, ...value }) => {\n\t\tsaveRef.current = value;\n\n\t\tif (hasUnsavedChanges !== maxChatUnsaved) {\n\t\t\tsetMaxChatUnsaved(hasUnsavedChanges);\n\t\t}\n\t});\n\n\tconst { values, handlers, hasUnsavedChanges, commit } = useForm({\n\t\tdepartments: initialDepartmentValue,\n\t\tstatus: statusLivechat,\n\t\tmaxChats: 0,\n\t\tvoipExtension: '',\n\t});\n\n\tconst { handleDepartments, handleStatus, handleVoipExtension } = handlers;\n\tconst { departments, status, voipExtension } = values as {\n\t\tdepartments: string[];\n\t\tstatus: ILivechatAgent['statusLivechat'];\n\t\tvoipExtension: string;\n\t};\n\n\tconst saveAgentInfo = useMethod('livechat:saveAgentInfo');\n\tconst saveAgentStatus = useEndpoint('POST', '/v1/livechat/agent.status');\n\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst handleReset = useMutableCallback(() => {\n\t\treset();\n\t\tresetMaxChats();\n\t});\n\n\tconst handleSave = useMutableCallback(async () => {\n\t\ttry {\n\t\t\tawait saveAgentStatus({ status, agentId: uid });\n\t\t\tawait saveAgentInfo(uid, saveRef.current.values, departments);\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Success') });\n\t\t\tagentsRoute.push({});\n\t\t\treset();\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t\tcommit();\n\t\tcommitMaxChats();\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t<ContextualbarScrollableContent is='form' {...props}>\n\t\t\t\t{username && (\n\t\t\t\t\t<Box alignSelf='center'>\n\t\t\t\t\t\t<UserInfo.Avatar data-qa='AgentEdit-Avatar' username={username} />\n\t\t\t\t\t</Box>\n\t\t\t\t)}\n\t\t\t\t<Field>\n\t\t\t\t\t<FieldLabel>{t('Name')}</FieldLabel>\n\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t<TextInput data-qa='AgentEditTextInput-Name' value={name} disabled />\n\t\t\t\t\t</FieldRow>\n\t\t\t\t</Field>\n\t\t\t\t<Field>\n\t\t\t\t\t<FieldLabel>{t('Username')}</FieldLabel>\n\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t<TextInput data-qa='AgentEditTextInput-Username' value={username} disabled addon={<Icon name='at' size='x20' />} />\n\t\t\t\t\t</FieldRow>\n\t\t\t\t</Field>\n\t\t\t\t<Field>\n\t\t\t\t\t<FieldLabel>{t('Email')}</FieldLabel>\n\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t<TextInput data-qa='AgentEditTextInput-Email' value={email} disabled addon={<Icon name='mail' size='x20' />} />\n\t\t\t\t\t</FieldRow>\n\t\t\t\t</Field>\n\t\t\t\t<Field>\n\t\t\t\t\t<FieldLabel>{t('Departments')}</FieldLabel>\n\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t<MultiSelect\n\t\t\t\t\t\t\tdata-qa='AgentEditTextInput-Departaments'\n\t\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\t\tvalue={departments}\n\t\t\t\t\t\t\tplaceholder={t('Select_an_option')}\n\t\t\t\t\t\t\tonChange={handleDepartments}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FieldRow>\n\t\t\t\t</Field>\n\t\t\t\t<Field>\n\t\t\t\t\t<FieldLabel>{t('Status')}</FieldLabel>\n\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tdata-qa='AgentEditTextInput-Status'\n\t\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t\t['available', t('Available')],\n\t\t\t\t\t\t\t\t['not-available', t('Not_Available')],\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\tvalue={status}\n\t\t\t\t\t\t\tplaceholder={t('Select_an_option')}\n\t\t\t\t\t\t\tonChange={handleStatus}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FieldRow>\n\t\t\t\t</Field>\n\t\t\t\t<MaxChatsPerAgentContainer data={user as any} onChange={onChangeMaxChats} />\n\t\t\t\t{voipEnabled && (\n\t\t\t\t\t<Field>\n\t\t\t\t\t\t<FieldLabel>{t('VoIP_Extension')}</FieldLabel>\n\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t<TextInput data-qa='AgentEditTextInput-VoIP_Extension' value={voipExtension as string} onChange={handleVoipExtension} />\n\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t</Field>\n\t\t\t\t)}\n\t\t\t</ContextualbarScrollableContent>\n\t\t\t<ContextualbarFooter>\n\t\t\t\t<ButtonGroup wrap>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tdata-qa='AgentEditButtonReset'\n\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\ttype='reset'\n\t\t\t\t\t\tdisabled={!hasUnsavedChanges && !maxChatUnsaved}\n\t\t\t\t\t\tonClick={handleReset}\n\t\t\t\t\t>\n\t\t\t\t\t\t{t('Reset')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tdata-qa='AgentEditButtonSave'\n\t\t\t\t\t\tmie='none'\n\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\tdisabled={!hasUnsavedChanges && !maxChatUnsaved}\n\t\t\t\t\t\tonClick={handleSave}\n\t\t\t\t\t>\n\t\t\t\t\t\t{t('Save')}\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</ContextualbarFooter>\n\t\t</>\n\t);\n};\n\nexport default AgentEdit;\n",null],"names":["_extends","_objectWithoutProperties","Field","FieldLabel","FieldRow","TextInput","Button","Box","MultiSelect","Icon","Select","ContextualbarFooter","ButtonGroup","useMutableCallback","useToastMessageDispatch","useRoute","useSetting","useMethod","useTranslation","useEndpoint","React","useMemo","useRef","useState","getUserEmailAddress","ContextualbarScrollableContent","UserInfo","useForm","MaxChatsPerAgentContainer","module","link","default","v","exportDefault","_ref","data","userDepartments","availableDepartments","uid","reset","props","_excluded","t","agentsRoute","maxChatUnsaved","setMaxChatUnsaved","voipEnabled","user","name","username","statusLivechat","email","options","archivedDepartment","archived","concat","departments","map","_ref2","_id","initialDepartmentValue","_ref3","departmentId","saveRef","values","hasUnsavedChanges","undefined","commit","resetMaxChats","commitMaxChats","current","onChangeMaxChats","_ref4","value","_excluded2","handlers","status","maxChats","voipExtension","handleDepartments","handleStatus","handleVoipExtension","saveAgentInfo","saveAgentStatus","dispatchToastMessage","handleReset","handleSave","agentId","type","message","push","error","createElement","Fragment","is","alignSelf","Avatar","disabled","addon","size","placeholder","onChange","wrap","flexGrow","onClick","mie"],"mappings":"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"}