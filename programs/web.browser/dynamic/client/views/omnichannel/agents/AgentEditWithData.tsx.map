)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/omnichannel/agents/AgentEditWithData.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Box } from '@rocket.chat/fuselage';\nimport { useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport type { ReactElement } from 'react';\nimport React from 'react';\n\nimport { FormSkeleton } from '../../../components/Skeleton';\nimport AgentEdit from './AgentEdit';\n\ntype AgentEditWithDataProps = {\n\tuid: string;\n\treload: () => void;\n};\n\nconst AgentEditWithData = ({ uid, reload }: AgentEditWithDataProps): ReactElement => {\n\tconst t = useTranslation();\n\tconst getDepartments = useEndpoint('GET', '/v1/livechat/department');\n\n\tconst getAgent = useEndpoint('GET', '/v1/livechat/users/agent/:_id', { _id: uid });\n\n\tconst getAgentDepartments = useEndpoint('GET', '/v1/livechat/agents/:agentId/departments', { agentId: uid });\n\n\tconst { data, isInitialLoading: isLoading, error } = useQuery(['getAgent'], async () => getAgent());\n\tconst {\n\t\tdata: userDepartments,\n\t\tisLoading: isUserDepartmentsLoading,\n\t\terror: userDepartmentsError,\n\t} = useQuery({ queryKey: ['getAgentDepartments'], queryFn: async () => getAgentDepartments(), cacheTime: 0 });\n\n\tconst {\n\t\tdata: availableDepartments,\n\t\tisLoading: isAvailableDepartmentsLoading,\n\t\terror: availableDepartmentsError,\n\t} = useQuery(['getDepartments'], async () => getDepartments({ showArchived: 'true' }));\n\n\tif (isLoading || isAvailableDepartmentsLoading || isUserDepartmentsLoading || !userDepartments || !availableDepartments) {\n\t\treturn <FormSkeleton />;\n\t}\n\n\tif (error || userDepartmentsError || availableDepartmentsError || !data || !data.user) {\n\t\treturn <Box p={16}>{t('User_not_found')}</Box>;\n\t}\n\n\treturn <AgentEdit uid={uid} data={data} userDepartments={userDepartments} availableDepartments={availableDepartments} reset={reload} />;\n};\n\nexport default AgentEditWithData;\n",null],"names":["Box","useEndpoint","useTranslation","useQuery","React","FormSkeleton","AgentEdit","module","link","default","exportDefault","_ref","uid","reload","t","getDepartments","getAgent","_id","getAgentDepartments","agentId","data","isInitialLoading","isLoading","error","userDepartments","isUserDepartmentsLoading","userDepartmentsError","queryKey","queryFn","cacheTime","availableDepartments","isAvailableDepartmentsLoading","availableDepartmentsError","showArchived","createElement","user","p","reset"],"mappings":"2BAAAA,EAA4CC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAArCC,EAAOC,IAAA,CAAM,wBAAwB,CAAAR,IAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAO,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAN,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAJ,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,QAAAA,CAAAE,QAAAA,CAAAA,EAAAL,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,+BAAAA,CAAAF,aAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,cAAAA,CAAAE,QAAAA,CAAAA,EAAAH,EAAAA,CAAA,CAAA,EAAA,GAA5CC,EAAOG,aAAa,CAcMC,IAA0D,GAAzD,CAAEC,IAAAA,CAAG,CAAEC,OAAAA,CAAAA,CAAgC,CAAAF,EAC3DG,EAAIZ,IACJa,EAAiBd,EAAY,MAAO,2BAEpCe,EAAWf,EAAY,MAAO,gCAAiC,CAAEgB,IAAKL,CAAG,GAEzEM,EAAsBjB,EAAY,MAAO,2CAA4C,CAAEkB,QAASP,CAAG,GAEnG,CAAEQ,KAAAA,CAAI,CAAEC,iBAAkBC,CAAS,CAAEC,MAAAA,CAAAA,CAAO,CAAGpB,EAAS,CAAC,WAAW,CAAE,SAAYa,KAClF,CACLI,KAAMI,CAAe,CACrBF,UAAWG,CAAwB,CACnCF,MAAOG,CAAAA,CACP,CAAGvB,EAAS,CAAEwB,SAAU,CAAC,sBAAsB,CAAEC,QAAS,SAAYV,IAAuBW,UAAW,CAAC,GAEpG,CACLT,KAAMU,CAAoB,CAC1BR,UAAWS,CAA6B,CACxCR,MAAOS,CAAAA,CACP,CAAG7B,EAAS,CAAC,iBAAiB,CAAE,SAAYY,EAAe,CAAEkB,aAAc,MAAM,WAElF,AAAIX,GAAaS,GAAiCN,GAA4B,CAACD,GAAmB,CAACM,EAC3F1B,EAAA8B,aAAA,CAAC7B,EAAY,MAGjBkB,GAASG,GAAwBM,GAA6B,CAACZ,GAAQ,CAACA,EAAKe,IAAI,CAC7E/B,EAAA8B,aAAA,CAAClC,EAAG,CAACoC,EAAG,EAAG,EAAEtB,EAAE,mBAGhBV,EAAA8B,aAAA,CAAC5B,EAAS,CAACM,IAAKA,EAAKQ,KAAMA,EAAMI,gBAAiBA,EAAiBM,qBAAsBA,EAAsBO,MAAOxB,CAAO,EACrI"}