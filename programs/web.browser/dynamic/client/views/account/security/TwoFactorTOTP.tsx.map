)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/account/security/TwoFactorTOTP.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Box, Button, TextInput, Margins } from '@rocket.chat/fuselage';\nimport { useSafely } from '@rocket.chat/fuselage-hooks';\nimport { useSetModal, useToastMessageDispatch, useUser, useMethod, useTranslation } from '@rocket.chat/ui-contexts';\nimport type { ReactElement, ComponentProps } from 'react';\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport qrcode from 'yaqrcode';\n\nimport TextCopy from '../../../components/TextCopy';\nimport TwoFactorTotpModal from '../../../components/TwoFactorModal/TwoFactorTotpModal';\nimport BackupCodesModal from './BackupCodesModal';\n\nconst TwoFactorTOTP = (props: ComponentProps<typeof Box>): ReactElement => {\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst user = useUser();\n\tconst setModal = useSetModal();\n\n\tconst enableTotpFn = useMethod('2fa:enable');\n\tconst disableTotpFn = useMethod('2fa:disable');\n\tconst verifyCodeFn = useMethod('2fa:validateTempToken');\n\tconst checkCodesRemainingFn = useMethod('2fa:checkCodesRemaining');\n\tconst regenerateCodesFn = useMethod('2fa:regenerateCodes');\n\n\tconst [registeringTotp, setRegisteringTotp] = useSafely(useState(false));\n\tconst [qrCode, setQrCode] = useSafely(useState<string>());\n\tconst [totpSecret, setTotpSecret] = useSafely(useState<string>());\n\tconst [codesRemaining, setCodesRemaining] = useSafely(useState(0));\n\n\tconst { register, handleSubmit } = useForm({ defaultValues: { authCode: '' } });\n\n\tconst totpEnabled = user?.services?.totp?.enabled;\n\n\tconst closeModal = useCallback(() => setModal(null), [setModal]);\n\n\tuseEffect(() => {\n\t\tconst updateCodesRemaining = async (): Promise<void | boolean> => {\n\t\t\tif (!totpEnabled) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst result = await checkCodesRemainingFn();\n\t\t\tsetCodesRemaining(result.remaining);\n\t\t};\n\t\tupdateCodesRemaining();\n\t}, [checkCodesRemainingFn, setCodesRemaining, totpEnabled]);\n\n\tconst handleEnableTotp = useCallback(async () => {\n\t\ttry {\n\t\t\tconst result = await enableTotpFn();\n\n\t\t\tsetTotpSecret(result.secret);\n\t\t\tsetQrCode(qrcode(result.url, { size: 200 }));\n\n\t\t\tsetRegisteringTotp(true);\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t}, [dispatchToastMessage, enableTotpFn, setQrCode, setRegisteringTotp, setTotpSecret]);\n\n\tconst handleDisableTotp = useCallback(async () => {\n\t\tconst onDisable = async (authCode: string): Promise<void> => {\n\t\t\ttry {\n\t\t\t\tconst result = await disableTotpFn(authCode);\n\n\t\t\t\tif (!result) {\n\t\t\t\t\treturn dispatchToastMessage({ type: 'error', message: t('Invalid_two_factor_code') });\n\t\t\t\t}\n\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Two-factor_authentication_disabled') });\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t\tcloseModal();\n\t\t};\n\n\t\tsetModal(<TwoFactorTotpModal onConfirm={onDisable} onClose={closeModal} />);\n\t}, [closeModal, disableTotpFn, dispatchToastMessage, setModal, t]);\n\n\tconst handleVerifyCode = useCallback(\n\t\tasync ({ authCode }) => {\n\t\t\ttry {\n\t\t\t\tconst result = await verifyCodeFn(authCode);\n\n\t\t\t\tif (!result) {\n\t\t\t\t\treturn dispatchToastMessage({ type: 'error', message: t('Invalid_two_factor_code') });\n\t\t\t\t}\n\n\t\t\t\tsetModal(<BackupCodesModal codes={result.codes} onClose={closeModal} />);\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t},\n\t\t[closeModal, dispatchToastMessage, setModal, t, verifyCodeFn],\n\t);\n\n\tconst handleRegenerateCodes = useCallback(() => {\n\t\tconst onRegenerate = async (authCode: string): Promise<void> => {\n\t\t\ttry {\n\t\t\t\tconst result = await regenerateCodesFn(authCode);\n\n\t\t\t\tif (!result) {\n\t\t\t\t\treturn dispatchToastMessage({ type: 'error', message: t('Invalid_two_factor_code') });\n\t\t\t\t}\n\t\t\t\tsetModal(<BackupCodesModal codes={result.codes} onClose={closeModal} />);\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t};\n\n\t\tsetModal(<TwoFactorTotpModal onConfirm={onRegenerate} onClose={closeModal} />);\n\t}, [closeModal, dispatchToastMessage, regenerateCodesFn, setModal, t]);\n\n\treturn (\n\t\t<Box display='flex' flexDirection='column' alignItems='flex-start' {...props}>\n\t\t\t<Margins blockEnd={8}>\n\t\t\t\t<Box fontScale='h4'>{t('Two-factor_authentication')}</Box>\n\t\t\t\t{!totpEnabled && !registeringTotp && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Box>{t('Two-factor_authentication_is_currently_disabled')}</Box>\n\t\t\t\t\t\t<Button primary onClick={handleEnableTotp}>\n\t\t\t\t\t\t\t{t('Enable_two-factor_authentication')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t\t{!totpEnabled && registeringTotp && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Box>{t('Scan_QR_code')}</Box>\n\t\t\t\t\t\t<Box>{t('Scan_QR_code_alternative_s')}</Box>\n\t\t\t\t\t\t<TextCopy text={totpSecret || ''} />\n\t\t\t\t\t\t<Box is='img' size='x200' src={qrCode} aria-hidden='true' />\n\t\t\t\t\t\t<Box display='flex' flexDirection='row' w='full'>\n\t\t\t\t\t\t\t<TextInput placeholder={t('Enter_authentication_code')} {...register('authCode')} />\n\t\t\t\t\t\t\t<Button primary onClick={handleSubmit(handleVerifyCode)}>\n\t\t\t\t\t\t\t\t{t('Verify')}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t\t{totpEnabled && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Button danger onClick={handleDisableTotp}>\n\t\t\t\t\t\t\t{t('Disable_two-factor_authentication')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Box fontScale='p2m' mbs={8}>\n\t\t\t\t\t\t\t{t('Backup_codes')}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box>{t('You_have_n_codes_remaining', { number: codesRemaining })}</Box>\n\t\t\t\t\t\t<Button onClick={handleRegenerateCodes}>{t('Regenerate_codes')}</Button>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Margins>\n\t\t</Box>\n\t);\n};\n\nexport default TwoFactorTOTP;\n",null],"names":["_extends","Box","Button","TextInput","Margins","useSafely","useSetModal","useToastMessageDispatch","useUser","useMethod","useTranslation","React","useState","useCallback","useEffect","useForm","qrcode","TextCopy","TwoFactorTotpModal","BackupCodesModal","module","link","default","v","exportDefault","props","_user$services","_user$services$totp","t","dispatchToastMessage","user","setModal","enableTotpFn","disableTotpFn","verifyCodeFn","checkCodesRemainingFn","regenerateCodesFn","registeringTotp","setRegisteringTotp","qrCode","setQrCode","totpSecret","setTotpSecret","codesRemaining","setCodesRemaining","register","handleSubmit","defaultValues","authCode","totpEnabled","services","totp","enabled","closeModal","updateCodesRemaining","result","remaining","handleEnableTotp","secret","url","size","error","type","message","handleDisableTotp","onDisable","createElement","onConfirm","onClose","handleVerifyCode","_ref","codes","handleRegenerateCodes","onRegenerate","display","flexDirection","alignItems","blockEnd","fontScale","Fragment","primary","onClick","text","is","src","w","placeholder","danger","mbs","number"],"mappings":"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"}