)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/account/profile/AccountProfileForm.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport {\n\tField,\n\tFieldGroup,\n\tFieldLabel,\n\tFieldRow,\n\tFieldError,\n\tFieldHint,\n\tTextInput,\n\tTextAreaInput,\n\tBox,\n\tIcon,\n\tButton,\n} from '@rocket.chat/fuselage';\nimport { useUniqueId } from '@rocket.chat/fuselage-hooks';\nimport { CustomFieldsForm } from '@rocket.chat/ui-client';\nimport {\n\tuseAccountsCustomFields,\n\tuseToastMessageDispatch,\n\tuseTranslation,\n\tuseEndpoint,\n\tuseUser,\n\tuseMethod,\n} from '@rocket.chat/ui-contexts';\nimport { useMutation } from '@tanstack/react-query';\nimport type { AllHTMLAttributes, ReactElement } from 'react';\nimport React, { useCallback } from 'react';\nimport { Controller, useFormContext } from 'react-hook-form';\n\nimport { validateEmail } from '../../../../lib/emailValidator';\nimport { getUserEmailAddress } from '../../../../lib/getUserEmailAddress';\nimport UserStatusMenu from '../../../components/UserStatusMenu';\nimport UserAvatarEditor from '../../../components/avatar/UserAvatarEditor';\nimport { useUpdateAvatar } from '../../../hooks/useUpdateAvatar';\nimport { USER_STATUS_TEXT_MAX_LENGTH, BIO_TEXT_MAX_LENGTH } from '../../../lib/constants';\nimport type { AccountProfileFormValues } from './getProfileInitialValues';\nimport { useAccountProfileSettings } from './useAccountProfileSettings';\n\nconst AccountProfileForm = (props: AllHTMLAttributes<HTMLFormElement>): ReactElement => {\n\tconst t = useTranslation();\n\tconst user = useUser();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst checkUsernameAvailability = useEndpoint('GET', '/v1/users.checkUsernameAvailability');\n\tconst sendConfirmationEmail = useEndpoint('POST', '/v1/users.sendConfirmationEmail');\n\n\tconst customFieldsMetadata = useAccountsCustomFields();\n\n\tconst {\n\t\tallowRealNameChange,\n\t\tallowUserStatusMessageChange,\n\t\tallowEmailChange,\n\t\tallowUserAvatarChange,\n\t\tcanChangeUsername,\n\t\trequireName,\n\t\tnamesRegex,\n\t} = useAccountProfileSettings();\n\n\tconst {\n\t\tcontrol,\n\t\twatch,\n\t\thandleSubmit,\n\t\treset,\n\t\tformState: { errors },\n\t} = useFormContext<AccountProfileFormValues>();\n\n\tconst { email, avatar, username } = watch();\n\n\tconst previousEmail = user ? getUserEmailAddress(user) : '';\n\tconst previousUsername = user?.username || '';\n\tconst isUserVerified = user?.emails?.[0]?.verified ?? false;\n\n\tconst mutateConfirmationEmail = useMutation({\n\t\tmutationFn: sendConfirmationEmail,\n\t\tonSuccess: () => dispatchToastMessage({ type: 'success', message: t('Verification_email_sent') }),\n\t\tonError: (error) => dispatchToastMessage({ type: 'error', message: error }),\n\t});\n\n\tconst handleSendConfirmationEmail = useCallback(async () => {\n\t\tif (email !== previousEmail) {\n\t\t\treturn;\n\t\t}\n\n\t\tmutateConfirmationEmail.mutateAsync({ email });\n\t}, [email, previousEmail, mutateConfirmationEmail]);\n\n\tconst validateUsername = async (username: string): Promise<string | undefined> => {\n\t\tif (!username) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (username === previousUsername) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!namesRegex.test(username)) {\n\t\t\treturn t('error-invalid-username');\n\t\t}\n\n\t\tconst { result: isAvailable } = await checkUsernameAvailability({ username });\n\t\tif (!isAvailable) {\n\t\t\treturn t('Username_already_exist');\n\t\t}\n\t};\n\n\t// FIXME: replace to endpoint\n\tconst updateOwnBasicInfo = useMethod('saveUserProfile');\n\n\tconst updateAvatar = useUpdateAvatar(avatar, user?._id || '');\n\n\tconst handleSave = async ({ email, name, username, statusType, statusText, nickname, bio, customFields }: AccountProfileFormValues) => {\n\t\ttry {\n\t\t\tawait updateOwnBasicInfo(\n\t\t\t\t{\n\t\t\t\t\trealname: name,\n\t\t\t\t\t...(user ? getUserEmailAddress(user) !== email && { email } : {}),\n\t\t\t\t\tusername,\n\t\t\t\t\tstatusText,\n\t\t\t\t\tstatusType,\n\t\t\t\t\tnickname,\n\t\t\t\t\tbio,\n\t\t\t\t},\n\t\t\t\tcustomFields,\n\t\t\t);\n\n\t\t\tawait updateAvatar();\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Profile_saved_successfully') });\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t} finally {\n\t\t\treset({ email, name, username, statusType, statusText, nickname, bio, customFields });\n\t\t}\n\t};\n\n\tconst nameId = useUniqueId();\n\tconst usernameId = useUniqueId();\n\tconst nicknameId = useUniqueId();\n\tconst statusTextId = useUniqueId();\n\tconst bioId = useUniqueId();\n\tconst emailId = useUniqueId();\n\n\treturn (\n\t\t<Box {...props} is='form' autoComplete='off' onSubmit={handleSubmit(handleSave)}>\n\t\t\t<FieldGroup>\n\t\t\t\t<Field>\n\t\t\t\t\t<Controller\n\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\tname='avatar'\n\t\t\t\t\t\trender={({ field: { onChange } }) => (\n\t\t\t\t\t\t\t<UserAvatarEditor\n\t\t\t\t\t\t\t\tetag={user?.avatarETag}\n\t\t\t\t\t\t\t\tcurrentUsername={user?.username}\n\t\t\t\t\t\t\t\tusername={username}\n\t\t\t\t\t\t\t\tsetAvatarObj={onChange}\n\t\t\t\t\t\t\t\tdisabled={!allowUserAvatarChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t</Field>\n\t\t\t\t<Box display='flex' flexDirection='row' justifyContent='space-between'>\n\t\t\t\t\t<Field mie={8} flexShrink={1}>\n\t\t\t\t\t\t<FieldLabel required htmlFor={nameId}>\n\t\t\t\t\t\t\t{t('Name')}\n\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\trules={{ validate: (name) => (requireName && name === '' ? t('error-the-field-is-required', { field: t('Name') }) : true) }}\n\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\tid={nameId}\n\t\t\t\t\t\t\t\t\t\terror={errors.name?.message}\n\t\t\t\t\t\t\t\t\t\tdisabled={!allowRealNameChange}\n\t\t\t\t\t\t\t\t\t\taria-required='true'\n\t\t\t\t\t\t\t\t\t\taria-invalid={errors.username ? 'true' : 'false'}\n\t\t\t\t\t\t\t\t\t\taria-describedby={`${nameId}-error ${nameId}-hint`}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t{errors.name && (\n\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${nameId}-error`}>\n\t\t\t\t\t\t\t\t{errors.name.message}\n\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{!allowRealNameChange && <FieldHint id={`${nameId}-hint`}>{t('RealName_Change_Disabled')}</FieldHint>}\n\t\t\t\t\t</Field>\n\t\t\t\t\t<Field mis={8} flexShrink={1}>\n\t\t\t\t\t\t<FieldLabel required htmlFor={usernameId}>\n\t\t\t\t\t\t\t{t('Username')}\n\t\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\tname='username'\n\t\t\t\t\t\t\t\trules={{\n\t\t\t\t\t\t\t\t\trequired: t('error-the-field-is-required', { field: t('Username') }),\n\t\t\t\t\t\t\t\t\tvalidate: (username) => validateUsername(username),\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\tid={usernameId}\n\t\t\t\t\t\t\t\t\t\tdisabled={!canChangeUsername}\n\t\t\t\t\t\t\t\t\t\terror={errors.username?.message}\n\t\t\t\t\t\t\t\t\t\taddon={<Icon name='at' size='x20' />}\n\t\t\t\t\t\t\t\t\t\taria-required='true'\n\t\t\t\t\t\t\t\t\t\taria-invalid={errors.username ? 'true' : 'false'}\n\t\t\t\t\t\t\t\t\t\taria-describedby={`${usernameId}-error ${usernameId}-hint`}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t{errors?.username && (\n\t\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${usernameId}-error`}>\n\t\t\t\t\t\t\t\t{errors.username.message}\n\t\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{!canChangeUsername && <FieldHint id={`${usernameId}-hint`}>{t('Username_Change_Disabled')}</FieldHint>}\n\t\t\t\t\t</Field>\n\t\t\t\t</Box>\n\t\t\t\t<Field>\n\t\t\t\t\t<FieldLabel htmlFor={statusTextId}>{t('StatusMessage')}</FieldLabel>\n\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\tname='statusText'\n\t\t\t\t\t\t\trules={{ maxLength: { value: USER_STATUS_TEXT_MAX_LENGTH, message: t('Max_length_is', USER_STATUS_TEXT_MAX_LENGTH) } }}\n\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\tid={statusTextId}\n\t\t\t\t\t\t\t\t\terror={errors?.statusText?.message}\n\t\t\t\t\t\t\t\t\tdisabled={!allowUserStatusMessageChange}\n\t\t\t\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\t\t\t\tplaceholder={t('StatusMessage_Placeholder')}\n\t\t\t\t\t\t\t\t\taria-invalid={errors.statusText ? 'true' : 'false'}\n\t\t\t\t\t\t\t\t\taria-describedby={`${statusTextId}-error ${statusTextId}-hint`}\n\t\t\t\t\t\t\t\t\taddon={\n\t\t\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\t\t\tname='statusType'\n\t\t\t\t\t\t\t\t\t\t\trender={({ field: { value, onChange } }) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<UserStatusMenu margin='neg-x2' onChange={onChange} initialStatus={value as IUser['status']} />\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FieldRow>\n\t\t\t\t\t{errors?.statusText && (\n\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${statusTextId}-error`}>\n\t\t\t\t\t\t\t{errors?.statusText.message}\n\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t)}\n\t\t\t\t\t{!allowUserStatusMessageChange && <FieldHint id={`${statusTextId}-hint`}>{t('StatusMessage_Change_Disabled')}</FieldHint>}\n\t\t\t\t</Field>\n\t\t\t\t<Field>\n\t\t\t\t\t<FieldLabel htmlFor={nicknameId}>{t('Nickname')}</FieldLabel>\n\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\tname='nickname'\n\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t<TextInput {...field} id={nicknameId} flexGrow={1} addon={<Icon name='edit' size='x20' alignSelf='center' />} />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FieldRow>\n\t\t\t\t</Field>\n\t\t\t\t<Field>\n\t\t\t\t\t<FieldLabel htmlFor={bioId}>{t('Bio')}</FieldLabel>\n\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\tname='bio'\n\t\t\t\t\t\t\trules={{ maxLength: { value: BIO_TEXT_MAX_LENGTH, message: t('Max_length_is', BIO_TEXT_MAX_LENGTH) } }}\n\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t<TextAreaInput\n\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\tid={bioId}\n\t\t\t\t\t\t\t\t\terror={errors.bio?.message}\n\t\t\t\t\t\t\t\t\trows={3}\n\t\t\t\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\t\t\t\taddon={<Icon name='edit' size='x20' alignSelf='center' />}\n\t\t\t\t\t\t\t\t\taria-invalid={errors.statusText ? 'true' : 'false'}\n\t\t\t\t\t\t\t\t\taria-describedby={`${bioId}-error`}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FieldRow>\n\t\t\t\t\t{errors?.bio && (\n\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${bioId}-error`}>\n\t\t\t\t\t\t\t{errors.bio.message}\n\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t)}\n\t\t\t\t</Field>\n\t\t\t\t<Field>\n\t\t\t\t\t<FieldLabel required htmlFor={emailId}>\n\t\t\t\t\t\t{t('Email')}\n\t\t\t\t\t</FieldLabel>\n\t\t\t\t\t<FieldRow display='flex' flexDirection='row' justifyContent='space-between'>\n\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\trules={{ validate: { validateEmail: (email) => (validateEmail(email) ? undefined : t('error-invalid-email-address')) } }}\n\t\t\t\t\t\t\trender={({ field }) => (\n\t\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\tid={emailId}\n\t\t\t\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\t\t\t\terror={errors.email?.message}\n\t\t\t\t\t\t\t\t\taddon={<Icon name={isUserVerified ? 'circle-check' : 'mail'} size='x20' />}\n\t\t\t\t\t\t\t\t\tdisabled={!allowEmailChange}\n\t\t\t\t\t\t\t\t\taria-required='true'\n\t\t\t\t\t\t\t\t\taria-invalid={errors.email ? 'true' : 'false'}\n\t\t\t\t\t\t\t\t\taria-describedby={`${emailId}-error ${emailId}-hint`}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{!isUserVerified && (\n\t\t\t\t\t\t\t<Button disabled={email !== previousEmail} onClick={handleSendConfirmationEmail} mis={24}>\n\t\t\t\t\t\t\t\t{t('Resend_verification_email')}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</FieldRow>\n\t\t\t\t\t{errors.email && (\n\t\t\t\t\t\t<FieldError aria-live='assertive' id={`${emailId}-error`}>\n\t\t\t\t\t\t\t{errors?.email?.message}\n\t\t\t\t\t\t</FieldError>\n\t\t\t\t\t)}\n\t\t\t\t\t{!allowEmailChange && <FieldHint id={`${emailId}-hint`}>{t('Email_Change_Disabled')}</FieldHint>}\n\t\t\t\t</Field>\n\t\t\t\t{customFieldsMetadata && <CustomFieldsForm formName='customFields' formControl={control} metadata={customFieldsMetadata} />}\n\t\t\t</FieldGroup>\n\t\t</Box>\n\t);\n};\n\nexport default AccountProfileForm;\n",null],"names":["_extends","_objectSpread","Field","FieldGroup","FieldLabel","FieldRow","FieldError","FieldHint","TextInput","TextAreaInput","Box","Icon","Button","useUniqueId","CustomFieldsForm","useAccountsCustomFields","useToastMessageDispatch","useTranslation","useEndpoint","useUser","useMethod","useMutation","React","useCallback","Controller","useFormContext","validateEmail","getUserEmailAddress","UserStatusMenu","UserAvatarEditor","useUpdateAvatar","USER_STATUS_TEXT_MAX_LENGTH","BIO_TEXT_MAX_LENGTH","useAccountProfileSettings","module","link","default","v","exportDefault","props","_user$emails$0$verifi","_user$emails","_user$emails$","_errors$email2","t","user","dispatchToastMessage","checkUsernameAvailability","sendConfirmationEmail","customFieldsMetadata","allowRealNameChange","allowUserStatusMessageChange","allowEmailChange","allowUserAvatarChange","canChangeUsername","requireName","namesRegex","control","watch","handleSubmit","reset","formState","errors","email","avatar","username","previousEmail","previousUsername","isUserVerified","emails","verified","mutateConfirmationEmail","mutationFn","onSuccess","type","message","onError","error","handleSendConfirmationEmail","mutateAsync","validateUsername","test","result","isAvailable","updateOwnBasicInfo","updateAvatar","_id","handleSave","_ref","name","statusType","statusText","nickname","bio","customFields","realname","nameId","usernameId","nicknameId","statusTextId","bioId","emailId","createElement","is","autoComplete","onSubmit","render","_ref2","field","onChange","etag","avatarETag","currentUsername","setAvatarObj","disabled","display","flexDirection","justifyContent","mie","flexShrink","required","htmlFor","rules","validate","_ref3","_errors$name","id","concat","mis","_ref4","_errors$username","addon","size","maxLength","value","_ref5","_errors$statusText","flexGrow","placeholder","_ref6","margin","initialStatus","_ref7","alignSelf","_ref8","_errors$bio","rows","undefined","_ref9","_errors$email","onClick","formName","formControl","metadata"],"mappings":"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"}