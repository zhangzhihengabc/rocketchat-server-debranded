)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/account/profile/AccountProfilePage.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { ButtonGroup, Button, Box } from '@rocket.chat/fuselage';\nimport { useUniqueId } from '@rocket.chat/fuselage-hooks';\nimport { SHA256 } from '@rocket.chat/sha256';\nimport type { TranslationKey } from '@rocket.chat/ui-contexts';\nimport {\n\tuseSetModal,\n\tuseToastMessageDispatch,\n\tuseUser,\n\tuseLogout,\n\tuseEndpoint,\n\tuseTranslation,\n\tuseSetting,\n} from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React, { useState, useCallback } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\n\nimport ConfirmOwnerChangeModal from '../../../components/ConfirmOwnerChangeModal';\nimport Page from '../../../components/Page';\nimport { useAllowPasswordChange } from '../security/useAllowPasswordChange';\nimport AccountProfileForm from './AccountProfileForm';\nimport ActionConfirmModal from './ActionConfirmModal';\nimport { getProfileInitialValues } from './getProfileInitialValues';\n\n// TODO: enforce useMutation\nconst AccountProfilePage = (): ReactElement => {\n\tconst t = useTranslation();\n\tconst user = useUser();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst setModal = useSetModal();\n\tconst logout = useLogout();\n\tconst [loggingOut, setLoggingOut] = useState(false);\n\n\tconst erasureType = useSetting('Message_ErasureType');\n\tconst allowDeleteOwnAccount = useSetting('Accounts_AllowDeleteOwnAccount');\n\tconst { hasLocalPassword } = useAllowPasswordChange();\n\n\tconst methods = useForm({\n\t\tdefaultValues: getProfileInitialValues(user),\n\t\tmode: 'onBlur',\n\t});\n\n\tconst {\n\t\treset,\n\t\tformState: { isDirty, isSubmitting },\n\t} = methods;\n\n\tconst logoutOtherClients = useEndpoint('POST', '/v1/users.logoutOtherClients');\n\tconst deleteOwnAccount = useEndpoint('POST', '/v1/users.deleteOwnAccount');\n\n\tconst handleLogoutOtherLocations = useCallback(async () => {\n\t\tsetLoggingOut(true);\n\t\ttry {\n\t\t\tawait logoutOtherClients();\n\t\t\tdispatchToastMessage({\n\t\t\t\ttype: 'success',\n\t\t\t\tmessage: t('Logged_out_of_other_clients_successfully'),\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t\tsetLoggingOut(false);\n\t}, [logoutOtherClients, dispatchToastMessage, t]);\n\n\tconst handleConfirmOwnerChange = useCallback(\n\t\t(passwordOrUsername, shouldChangeOwner, shouldBeRemoved) => {\n\t\t\tconst handleConfirm = async (): Promise<void> => {\n\t\t\t\ttry {\n\t\t\t\t\tawait deleteOwnAccount({ password: SHA256(passwordOrUsername), confirmRelinquish: true });\n\t\t\t\t\tdispatchToastMessage({ type: 'success', message: t('User_has_been_deleted') });\n\t\t\t\t\tsetModal(null);\n\t\t\t\t\tlogout();\n\t\t\t\t} catch (error) {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t\t}\n\t\t\t};\n\n\t\t\treturn setModal(() => (\n\t\t\t\t<ConfirmOwnerChangeModal\n\t\t\t\t\tonConfirm={handleConfirm}\n\t\t\t\t\tonCancel={() => setModal(null)}\n\t\t\t\t\tcontentTitle={t(`Delete_User_Warning_${erasureType}` as TranslationKey)}\n\t\t\t\t\tconfirmText={t('Delete')}\n\t\t\t\t\tshouldChangeOwner={shouldChangeOwner}\n\t\t\t\t\tshouldBeRemoved={shouldBeRemoved}\n\t\t\t\t/>\n\t\t\t));\n\t\t},\n\t\t[erasureType, setModal, t, deleteOwnAccount, dispatchToastMessage, logout],\n\t);\n\n\tconst handleDeleteOwnAccount = useCallback(async () => {\n\t\tconst handleConfirm = async (passwordOrUsername: string): Promise<void> => {\n\t\t\ttry {\n\t\t\t\tawait deleteOwnAccount({ password: SHA256(passwordOrUsername) });\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('User_has_been_deleted') });\n\t\t\t\tlogout();\n\t\t\t} catch (error: any) {\n\t\t\t\tif (error.error === 'user-last-owner') {\n\t\t\t\t\tconst { shouldChangeOwner, shouldBeRemoved } = error.details;\n\t\t\t\t\treturn handleConfirmOwnerChange(passwordOrUsername, shouldChangeOwner, shouldBeRemoved);\n\t\t\t\t}\n\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t};\n\n\t\treturn setModal(() => <ActionConfirmModal onConfirm={handleConfirm} onCancel={() => setModal(null)} isPassword={hasLocalPassword} />);\n\t}, [dispatchToastMessage, hasLocalPassword, setModal, handleConfirmOwnerChange, deleteOwnAccount, logout, t]);\n\n\tconst profileFormId = useUniqueId();\n\n\treturn (\n\t\t<Page>\n\t\t\t<Page.Header title={t('Profile')} />\n\t\t\t<Page.ScrollableContentWithShadow>\n\t\t\t\t<Box maxWidth='600px' w='full' alignSelf='center'>\n\t\t\t\t\t<FormProvider {...methods}>\n\t\t\t\t\t\t<AccountProfileForm id={profileFormId} />\n\t\t\t\t\t</FormProvider>\n\t\t\t\t\t<ButtonGroup stretch mb={12}>\n\t\t\t\t\t\t<Button onClick={handleLogoutOtherLocations} flexGrow={0} loading={loggingOut}>\n\t\t\t\t\t\t\t{t('Logout_Others')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t{allowDeleteOwnAccount && (\n\t\t\t\t\t\t\t<Button icon='trash' danger onClick={handleDeleteOwnAccount}>\n\t\t\t\t\t\t\t\t{t('Delete_my_account')}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</ButtonGroup>\n\t\t\t\t</Box>\n\t\t\t</Page.ScrollableContentWithShadow>\n\t\t\t<Page.Footer isDirty={isDirty}>\n\t\t\t\t<ButtonGroup>\n\t\t\t\t\t<Button disabled={!isDirty} onClick={() => reset(getProfileInitialValues(user))}>\n\t\t\t\t\t\t{t('Cancel')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tform={profileFormId}\n\t\t\t\t\t\tdata-qa='AccountProfilePageSaveButton'\n\t\t\t\t\t\tprimary\n\t\t\t\t\t\tdisabled={!isDirty || loggingOut}\n\t\t\t\t\t\tloading={isSubmitting}\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t>\n\t\t\t\t\t\t{t('Save_changes')}\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</Page.Footer>\n\t\t</Page>\n\t);\n};\n\nexport default AccountProfilePage;\n",null],"names":["ButtonGroup","Button","Box","useUniqueId","SHA256","useSetModal","useToastMessageDispatch","useUser","useLogout","useEndpoint","useTranslation","useSetting","React","useState","useCallback","FormProvider","useForm","ConfirmOwnerChangeModal","Page","useAllowPasswordChange","AccountProfileForm","ActionConfirmModal","getProfileInitialValues","module","link","v","default","exportDefault","t","user","dispatchToastMessage","setModal","logout","loggingOut","setLoggingOut","erasureType","allowDeleteOwnAccount","hasLocalPassword","methods","defaultValues","mode","reset","formState","isDirty","isSubmitting","logoutOtherClients","deleteOwnAccount","handleLogoutOtherLocations","type","message","error","handleConfirmOwnerChange","passwordOrUsername","shouldChangeOwner","shouldBeRemoved","handleConfirm","password","confirmRelinquish","createElement","onConfirm","onCancel","contentTitle","concat","confirmText","handleDeleteOwnAccount","details","isPassword","profileFormId","Header","title","ScrollableContentWithShadow","maxWidth","w","alignSelf","id","stretch","mb","onClick","flexGrow","loading","icon","danger","Footer","disabled","form","primary"],"mappings":"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"}