)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/cloud/CloudAnnouncementHandler.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IBanner, UiKit } from '@rocket.chat/core-typings';\nimport { useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { exhaustiveCheck } from '../../../lib/utils/exhaustiveCheck';\nimport { useUiKitActionManager } from '../../uikit/hooks/useUiKitActionManager';\n\ntype CloudAnnouncementHandlerProps = Pick<IBanner, 'dictionary' | 'surface' | 'view'>;\n\nconst CloudAnnouncementHandler = ({ dictionary = {}, surface, view }: CloudAnnouncementHandlerProps) => {\n\tconst { i18n } = useTranslation();\n\n\tuseEffect(() => {\n\t\tconst appNs = `app-cloud-announcements-core`;\n\t\tif (!dictionary) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const [language, translations] of Object.entries(dictionary)) {\n\t\t\ti18n.addResources(language, appNs, translations);\n\t\t}\n\t}, [i18n, dictionary]);\n\n\tconst actionManager = useUiKitActionManager();\n\n\tconst viewRef = useRef({ ...view, appId: view.appId || 'cloud-announcements-core' });\n\tviewRef.current = { ...view, appId: view.appId || 'cloud-announcements-core' };\n\n\tuseEffect(() => {\n\t\tswitch (surface) {\n\t\t\tcase 'modal': {\n\t\t\t\t// TODO fixme\n\t\t\t\tconst modalView = viewRef.current as unknown as UiKit.ModalView;\n\n\t\t\t\tactionManager.openView('modal', modalView);\n\n\t\t\t\treturn () => {\n\t\t\t\t\tactionManager.disposeView(modalView.id);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tcase 'banner': {\n\t\t\t\tconst bannerView = viewRef.current as UiKit.BannerView;\n\n\t\t\t\tactionManager.openView('banner', { ...bannerView });\n\n\t\t\t\treturn () => {\n\t\t\t\t\tactionManager.disposeView(bannerView.viewId);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\texhaustiveCheck(surface);\n\t\t}\n\t}, [actionManager, surface]);\n\n\treturn null;\n};\n\nexport default CloudAnnouncementHandler;\n",null],"names":["_objectSpread","useEffect","useRef","useTranslation","exhaustiveCheck","useUiKitActionManager","module","link","default","exportDefault","_ref","dictionary","surface","view","i18n","language","translations","Object","entries","addResources","actionManager","viewRef","appId","current","modalView","openView","disposeView","id","bannerView","viewId"],"mappings":"2BACAA,EAAAC,EAASC,EAAiCC,EAAAC,EAAAC,EAAxBC,EAAEC,IAAQ,CAAA,uCAAc,CAAAC,QAAAA,CAAAA,EAAAR,EAAAA,CAAA,CAAA,EAAA,GAAtBM,EAAQC,IAAAA,CAAAA,QAAa,CAACN,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,OAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,gBAAAA,CAAAH,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,qCAAAA,CAAAF,gBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,0CAAAA,CAAAD,sBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAA1CC,EAAOG,aAAa,CAQaC,IAAsE,GAArE,CAAEC,WAAAA,EAAa,CAAA,CAAE,CAAEC,QAAAA,CAAO,CAAEC,KAAAA,CAAAA,CAAqC,CAAAH,EAC5F,CAAEI,KAAAA,CAAAA,CAAM,CAAGX,IAEjBF,EAAU,KAET,GAAKU,EAIL,IAAK,GAAM,CAACI,EAAUC,EAAa,GAAIC,OAAOC,OAAO,CAACP,GACrDG,EAAKK,YAAY,CAACJ,EANR,+BAMyBC,EAErC,EAAG,CAACF,EAAMH,EAAW,EAErB,IAAMS,EAAgBf,IAEhBgB,EAAUnB,EAAMF,EAAAA,EAAA,CAAA,EAAMa,GAAI,CAAA,EAAA,CAAES,MAAOT,EAAKS,KAAK,EAAI,0BAA0B,IA+BjF,OA9BAD,EAAQE,OAAO,CAAAvB,EAAAA,EAAA,CAAA,EAAQa,GAAI,CAAA,EAAA,CAAES,MAAOT,EAAKS,KAAK,EAAI,0BAA0B,GAE5ErB,EAAU,KACT,OAAQW,GACP,IAAK,QAAS,CAEb,IAAMY,EAAYH,EAAQE,OAAqC,CAI/D,OAFAH,EAAcK,QAAQ,CAAC,QAASD,GAEzB,KACNJ,EAAcM,WAAW,CAACF,EAAUG,EAAE,CACvC,EAGD,IAAK,SAAU,CACd,IAAMC,EAAaP,EAAQE,OAA2B,CAItD,OAFAH,EAAcK,QAAQ,CAAC,SAAQzB,EAAA,CAAA,EAAO4B,IAE/B,KACNR,EAAcM,WAAW,CAACE,EAAWC,MAAM,CAC5C,EAGD,QACCzB,EAAgBQ,EAAS,CAE5B,EAAG,CAACQ,EAAeR,EAAQ,EAEpB,IACR"}