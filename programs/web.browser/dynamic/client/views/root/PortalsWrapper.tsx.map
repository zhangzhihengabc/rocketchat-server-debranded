)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/root/PortalsWrapper.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { FC } from 'react';\nimport React from 'react';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\n\nimport { portalsSubscription } from '../../lib/portals/portalsSubscription';\nimport PortalWrapper from './PortalWrapper';\n\nconst PortalsWrapper: FC = () => {\n\tconst portals = useSyncExternalStore(portalsSubscription.subscribe, portalsSubscription.getSnapshot);\n\n\treturn (\n\t\t<>\n\t\t\t{portals.map(({ key, portal }) => (\n\t\t\t\t<PortalWrapper key={key} portal={portal} />\n\t\t\t))}\n\t\t</>\n\t);\n};\n\nexport default PortalsWrapper;\n",null],"names":["React","useSyncExternalStore","portalsSubscription","PortalWrapper","module","link","default","exportDefault","portals","subscribe","getSnapshot","createElement","Fragment","map","_ref","key","portal"],"mappings":"2BACAA,EAA0BC,EAAAC,EAAAC,EAAnBC,EAAKC,IAAM,CAAA,QAAQ,CAAAC,QAAAA,CAAAA,EAAAN,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,+BAAAA,CAAAH,qBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,wCAAAA,CAAAF,oBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,kBAAAA,CAAAE,QAAAA,CAAAA,EAAAH,EAAAA,CAAA,CAAA,EAAA,GAA1BC,EAAOG,aAAW,CAMS,KAC1B,IAAMC,EAAUP,EAAqBC,EAAoBO,SAAS,CAAEP,EAAoBQ,WAAW,EAEnG,OACCV,EAAAW,aAAA,CAAAX,EAAAY,QAAA,CAAA,KACEJ,EAAQK,GAAG,CAACC,IAAA,GAAC,CAAEC,IAAAA,CAAG,CAAEC,OAAAA,CAAAA,CAAQ,CAAAF,EAAA,OAC5Bd,EAAAW,aAAA,CAACR,EAAa,CAACY,IAAKA,EAAKC,OAAQA,CAAO,EAAG,GAI/C"}