)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/root/hooks/useEscapeKeyStroke.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useSession, useToastMessageDispatch, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useEffect, useRef } from 'react';\n\nimport GenericModal from '../../../components/GenericModal';\nimport { imperativeModal } from '../../../lib/imperativeModal';\nimport { useClearUnreadAllMessagesMutation } from './useClearUnreadAllMessagesMutation';\n\nexport const useEscapeKeyStroke = () => {\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst t = useTranslation();\n\n\tconst clearUnreadAllMessagesMutation = useClearUnreadAllMessagesMutation({\n\t\tonError: (error) => {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t},\n\t\tonMutate: () => {\n\t\t\timperativeModal.close();\n\t\t},\n\t});\n\n\tconst { current: unread } = useRef(useSession('unread'));\n\n\tuseEffect(() => {\n\t\tconst handleKeyDown = (event: KeyboardEvent) => {\n\t\t\tif (\n\t\t\t\tevent.code !== 'Escape' ||\n\t\t\t\t!(event.shiftKey === true || event.ctrlKey === true) ||\n\t\t\t\tunread === undefined ||\n\t\t\t\tunread === null ||\n\t\t\t\tunread === ''\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\n\t\t\timperativeModal.open({\n\t\t\t\tcomponent: GenericModal,\n\t\t\t\tprops: {\n\t\t\t\t\tchildren: t('Are_you_sure_you_want_to_clear_all_unread_messages'),\n\t\t\t\t\tvariant: 'warning',\n\t\t\t\t\ttitle: t('Clear_all_unreads_question'),\n\t\t\t\t\tconfirmText: t('Yes_clear_all'),\n\t\t\t\t\tonClose: imperativeModal.close,\n\t\t\t\t\tonCancel: imperativeModal.close,\n\t\t\t\t\tonConfirm: clearUnreadAllMessagesMutation.mutate,\n\t\t\t\t},\n\t\t\t});\n\t\t};\n\n\t\tdocument.body.addEventListener('keydown', handleKeyDown);\n\n\t\treturn () => {\n\t\t\tdocument.body.removeEventListener('keydown', handleKeyDown);\n\t\t};\n\t}, [clearUnreadAllMessagesMutation.mutate, dispatchToastMessage, t, unread]);\n};\n",null],"names":["useSession","useToastMessageDispatch","useTranslation","useEffect","useRef","GenericModal","imperativeModal","useClearUnreadAllMessagesMutation","module","export","useEscapeKeyStroke","default","dispatchToastMessage","t","clearUnreadAllMessagesMutation","onError","error","type","message","onMutate","close","current","unread","handleKeyDown","event","code","shiftKey","ctrlKey","preventDefault","stopPropagation","open","component","props","children","variant","title","confirmText","onClose","onCancel","onConfirm","mutate","document","body","addEventListener","removeEventListener"],"mappings":"2BAA8DA,EAAMC,EAA2BC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA/FC,EAAOC,MAAE,CAAA,CAAAC,mBAAY,IAAAA,CAAyB,GAAiDF,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAR,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,wBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAM,EAAAA,IAAAA,CAAAA,QAAAA,CAAAL,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,OAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,mCAAAA,CAAAG,QAAAA,CAAAA,EAAAN,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,+BAAAA,CAAAF,gBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,sCAAAA,CAAAD,kCAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAOxF,IAAMG,EAAqB,KACjC,IAAME,EAAuBX,IACvBY,EAAIX,IAEJY,EAAiCP,EAAkC,CACxEQ,QAAUC,IACTJ,EAAqB,CAAEK,KAAM,QAASC,QAASF,CAAK,EACrD,EACAG,SAAU,KACTb,EAAgBc,KAAK,EACtB,IAGK,CAAEC,QAASC,CAAAA,CAAQ,CAAGlB,EAAOJ,EAAW,WAE9CG,EAAU,KACT,IAAMoB,EAAiBC,IAEN,WAAfA,EAAMC,IAAI,EACRD,CAAAA,AAAmB,CAAA,IAAnBA,EAAME,QAAQ,EAAaF,AAAkB,CAAA,IAAlBA,EAAMG,OAAO,AAAK,GAE/CL,MADAA,GAEAA,AAAW,KAAXA,IAKDE,EAAMI,cAAc,GACpBJ,EAAMK,eAAe,GAErBvB,EAAgBwB,IAAI,CAAC,CACpBC,UAAW1B,EACX2B,MAAO,CACNC,SAAUpB,EAAE,sDACZqB,QAAS,UACTC,MAAOtB,EAAE,8BACTuB,YAAavB,EAAE,iBACfwB,QAAS/B,EAAgBc,KAAK,CAC9BkB,SAAUhC,EAAgBc,KAAK,CAC/BmB,UAAWzB,EAA+B0B,MAAAA,IAG7C,EAIA,OAFAC,SAASC,IAAI,CAACC,gBAAgB,CAAC,UAAWpB,GAEnC,KACNkB,SAASC,IAAI,CAACE,mBAAmB,CAAC,UAAWrB,EAC9C,CACD,EAAG,CAACT,EAA+B0B,MAAM,CAAE5B,EAAsBC,EAAGS,EAAO,CAC5E"}