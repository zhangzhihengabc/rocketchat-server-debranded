)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/contextualBar/Discussions/useDiscussionsList.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useCallback, useMemo } from 'react';\n\nimport { useScrollableMessageList } from '../../../../hooks/lists/useScrollableMessageList';\nimport { useStreamUpdatesForMessageList } from '../../../../hooks/lists/useStreamUpdatesForMessageList';\nimport type { DiscussionsListOptions } from '../../../../lib/lists/DiscussionsList';\nimport { DiscussionsList } from '../../../../lib/lists/DiscussionsList';\nimport { getConfig } from '../../../../lib/utils/getConfig';\n\nexport const useDiscussionsList = (\n\toptions: DiscussionsListOptions,\n\tuid: IUser['_id'] | null,\n): {\n\tdiscussionsList: DiscussionsList;\n\tinitialItemCount: number;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tif (!uid) {\n\t\tthrow new Error('User ID is undefined. Cannot load discussions list');\n\t}\n\n\tconst discussionsList = useMemo(() => new DiscussionsList(options), [options]);\n\n\tconst getDiscussions = useEndpoint('GET', '/v1/chat.getDiscussions');\n\n\tconst fetchMessages = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { messages, total } = await getDiscussions({\n\t\t\t\troomId: options.rid,\n\t\t\t\ttext: options.text,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end,\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems: messages,\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[getDiscussions, options.rid, options.text],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableMessageList(\n\t\tdiscussionsList,\n\t\tfetchMessages,\n\t\tuseMemo(() => parseInt(`${getConfig('discussionListSize', 10)}`), []),\n\t);\n\tuseStreamUpdatesForMessageList(discussionsList, uid, options.rid);\n\n\treturn {\n\t\tdiscussionsList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n",null],"names":["useEndpoint","useCallback","useMemo","useScrollableMessageList","useStreamUpdatesForMessageList","DiscussionsList","getConfig","module","export","useDiscussionsList","options","uid","Error","discussionsList","getDiscussions","fetchMessages","start","end","messages","total","roomId","rid","text","offset","count","items","itemCount","loadMoreItems","initialItemCount","parseInt","concat"],"mappings":"2BACuDA,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAvDC,EAAOC,MAAE,CAAA,CAAAC,mBAAmB,IAAAA,CAA2B,GAAAF,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAP,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAO,EAAAA,IAAAA,CAAAA,QAAAA,CAAAN,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,QAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,mDAAAA,CAAAJ,yBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,yDAAAA,CAAAH,+BAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,wCAAAA,CAAAF,gBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,kCAAAA,CAAAD,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAShD,IAAMG,EAAqB,CACjCC,EACAC,KAMA,GAAI,CAACA,EACJ,MAAM,AAAIC,MAAM,sDAGjB,IAAMC,EAAkBX,EAAQ,IAAM,IAAIG,EAAgBK,GAAU,CAACA,EAAQ,EAEvEI,EAAiBd,EAAY,MAAO,2BAEpCe,EAAgBd,EACrB,MAAOe,EAAOC,KACb,GAAM,CAAEC,SAAAA,CAAQ,CAAEC,MAAAA,CAAAA,CAAO,CAAG,MAAML,EAAe,CAChDM,OAAQV,EAAQW,GAAG,CACnBC,KAAMZ,EAAQY,IAAI,CAClBC,OAAQP,EACRQ,MAAOP,IAGR,MAAO,CACNQ,MAAOP,EACPQ,UAAWP,EAEb,EACA,CAACL,EAAgBJ,EAAQW,GAAG,CAAEX,EAAQY,IAAI,CAAC,EAGtC,CAAEK,cAAAA,CAAa,CAAEC,iBAAAA,CAAAA,CAAkB,CAAGzB,EAC3CU,EACAE,EACAb,EAAQ,IAAM2B,SAAQ,GAAAC,MAAA,CAAIxB,EAAU,qBAAsB,MAAQ,EAAE,GAIrE,OAFAF,EAA+BS,EAAiBF,EAAKD,EAAQW,GAAG,EAEzD,CACNR,gBAAAA,EACAc,cAAAA,EACAC,iBAAAA,EAEF"}