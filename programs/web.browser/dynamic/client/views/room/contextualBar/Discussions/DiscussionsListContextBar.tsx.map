)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/contextualBar/Discussions/DiscussionsListContextBar.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IDiscussionMessage } from '@rocket.chat/core-typings';\nimport { useDebouncedValue } from '@rocket.chat/fuselage-hooks';\nimport { useUserId } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React, { useCallback, useMemo, useState } from 'react';\n\nimport { useRecordList } from '../../../../hooks/lists/useRecordList';\nimport { AsyncStatePhase } from '../../../../hooks/useAsyncState';\nimport { useRoom } from '../../contexts/RoomContext';\nimport { useRoomToolbox } from '../../contexts/RoomToolboxContext';\nimport DiscussionsList from './DiscussionsList';\nimport { useDiscussionsList } from './useDiscussionsList';\n\nconst DiscussionListContextBar = (): ReactElement | null => {\n\tconst userId = useUserId();\n\tconst room = useRoom();\n\tconst { closeTab } = useRoomToolbox();\n\n\tconst [text, setText] = useState('');\n\tconst debouncedText = useDebouncedValue(text, 400);\n\n\tconst options = useMemo(\n\t\t() => ({\n\t\t\trid: room._id,\n\t\t\ttext: debouncedText,\n\t\t}),\n\t\t[room._id, debouncedText],\n\t);\n\n\tconst { discussionsList, loadMoreItems } = useDiscussionsList(options, userId);\n\tconst { phase, error, items: discussions, itemCount: totalItemCount } = useRecordList<IDiscussionMessage>(discussionsList);\n\n\tconst handleTextChange = useCallback((e) => {\n\t\tsetText(e.currentTarget.value);\n\t}, []);\n\n\tif (!userId) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<DiscussionsList\n\t\t\tonClose={closeTab}\n\t\t\tuserId={userId}\n\t\t\terror={error}\n\t\t\tdiscussions={discussions}\n\t\t\ttotal={totalItemCount}\n\t\t\tloading={phase === AsyncStatePhase.LOADING}\n\t\t\tloadMoreItems={loadMoreItems}\n\t\t\ttext={text}\n\t\t\tonChangeFilter={handleTextChange}\n\t\t/>\n\t);\n};\n\nexport default DiscussionListContextBar;\n",null],"names":["useDebouncedValue","useUserId","React","useCallback","useMemo","useState","useRecordList","AsyncStatePhase","useRoom","useRoomToolbox","DiscussionsList","useDiscussionsList","module","link","default","exportDefault","userId","room","closeTab","text","setText","debouncedText","options","rid","_id","discussionsList","loadMoreItems","phase","error","items","discussions","itemCount","totalItemCount","handleTextChange","e","currentTarget","value","createElement","onClose","total","loading","LOADING","onChangeFilter"],"mappings":"2BACAA,EAAgEC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAvDC,EAAmBC,IAAA,CAAM,8BAA8B,CAAAb,kBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAY,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAX,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAW,EAAAA,IAAAA,CAAAA,QAAAA,CAAAE,QAAAA,CAAAA,EAAAZ,EAAAA,CAAA,EAAAC,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,QAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAO,EAAAA,IAAAA,CAAAA,wCAAAA,CAAAN,cAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAM,EAAAA,IAAAA,CAAAA,kCAAAA,CAAAL,gBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,6BAAAA,CAAAJ,QAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,oCAAAA,CAAAH,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,oBAAAA,CAAAE,QAAAA,CAAAA,EAAAJ,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,uBAAAA,CAAAD,mBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAhEC,EAAOG,aAAE,CAYwB,KAChC,IAAMC,EAASf,IACTgB,EAAOT,IACP,CAAEU,SAAAA,CAAAA,CAAU,CAAGT,IAEf,CAACU,EAAMC,EAAQ,CAAGf,EAAS,IAC3BgB,EAAgBrB,EAAkBmB,EAAM,KAExCG,EAAUlB,EACf,IAAO,CAAA,CACNmB,IAAKN,EAAKO,GAAG,CACbL,KAAME,IAEP,CAACJ,EAAKO,GAAG,CAAEH,EAAc,EAGpB,CAAEI,gBAAAA,CAAe,CAAEC,cAAAA,CAAAA,CAAe,CAAGf,EAAmBW,EAASN,GACjE,CAAEW,MAAAA,CAAK,CAAEC,MAAAA,CAAK,CAAEC,MAAOC,CAAW,CAAEC,UAAWC,CAAAA,CAAgB,CAAG1B,EAAkCmB,GAEpGQ,EAAmB9B,EAAa+B,IACrCd,EAAQc,EAAEC,aAAa,CAACC,KAAK,CAC9B,EAAG,EAAE,SAEL,AAAKpB,EAKJd,EAAAmC,aAAA,CAAC3B,EAAe,CACf4B,QAASpB,EACTF,OAAQA,EACRY,MAAOA,EACPE,YAAaA,EACbS,MAAOP,EACPQ,QAASb,IAAUpB,EAAgBkC,OAAQ,CAC3Cf,cAAeA,EACfP,KAAMA,EACNuB,eAAgBT,CAAiB,GAb3B,IAgBT"}