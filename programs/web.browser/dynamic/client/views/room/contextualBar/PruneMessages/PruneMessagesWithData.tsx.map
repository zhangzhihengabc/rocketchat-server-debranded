)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/contextualBar/PruneMessages/PruneMessagesWithData.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { isDirectMessageRoom } from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useSetModal, useToastMessageDispatch, useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport moment from 'moment';\nimport type { ReactElement } from 'react';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { useForm, FormProvider } from 'react-hook-form';\n\nimport GenericModal from '../../../../components/GenericModal';\nimport { useRoom } from '../../contexts/RoomContext';\nimport { useRoomToolbox } from '../../contexts/RoomToolboxContext';\nimport PruneMessages from './PruneMessages';\n\nconst getTimeZoneOffset = (): string => {\n\tconst offset = new Date().getTimezoneOffset();\n\tconst absOffset = Math.abs(offset);\n\treturn `${offset < 0 ? '+' : '-'}${`00${Math.floor(absOffset / 60)}`.slice(-2)}:${`00${absOffset % 60}`.slice(-2)}`;\n};\n\nexport const initialValues = {\n\tnewer: {\n\t\tdate: '',\n\t\ttime: '',\n\t},\n\tolder: {\n\t\tdate: '',\n\t\ttime: '',\n\t},\n\tusers: [],\n\tinclusive: false,\n\tpinned: false,\n\tdiscussion: false,\n\tthreads: false,\n\tattached: false,\n};\n\nconst DEFAULT_PRUNE_LIMIT = 2000;\n\nconst PruneMessagesWithData = (): ReactElement => {\n\tconst t = useTranslation();\n\tconst room = useRoom();\n\tconst setModal = useSetModal();\n\tconst { closeTab: close } = useRoomToolbox();\n\tconst closeModal = useCallback(() => setModal(null), [setModal]);\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst pruneMessagesAction = useEndpoint('POST', '/v1/rooms.cleanHistory');\n\n\tconst [counter, setCounter] = useState(0);\n\n\tconst methods = useForm({ defaultValues: initialValues });\n\n\tconst {\n\t\tnewer: { date: newerDate, time: newerTime },\n\t\tolder: { date: olderDate, time: olderTime },\n\t\tusers,\n\t\tinclusive,\n\t\tpinned,\n\t\tdiscussion,\n\t\tthreads,\n\t\tattached,\n\t} = methods.watch();\n\n\tconst fromDate = useMemo(() => {\n\t\treturn new Date(`${newerDate || '0001-01-01'}T${newerTime || '00:00'}:00${getTimeZoneOffset()}`);\n\t}, [newerDate, newerTime]);\n\n\tconst toDate = useMemo(() => {\n\t\treturn new Date(`${olderDate || '9999-12-31'}T${olderTime || '23:59'}:59${getTimeZoneOffset()}`);\n\t}, [olderDate, olderTime]);\n\n\tconst handlePrune = useMutableCallback((): void => {\n\t\tconst handlePruneAction = async () => {\n\t\t\tconst limit = DEFAULT_PRUNE_LIMIT;\n\n\t\t\ttry {\n\t\t\t\tif (counter === limit) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { count } = await pruneMessagesAction({\n\t\t\t\t\troomId: room._id,\n\t\t\t\t\tlatest: toDate.toISOString(),\n\t\t\t\t\toldest: fromDate.toISOString(),\n\t\t\t\t\tinclusive,\n\t\t\t\t\tlimit,\n\t\t\t\t\texcludePinned: pinned,\n\t\t\t\t\tfilesOnly: attached,\n\t\t\t\t\tignoreDiscussion: discussion,\n\t\t\t\t\tignoreThreads: threads,\n\t\t\t\t\tusers,\n\t\t\t\t});\n\n\t\t\t\tsetCounter(count);\n\n\t\t\t\tif (count < 1) {\n\t\t\t\t\tthrow new Error(t('No_messages_found_to_prune'));\n\t\t\t\t}\n\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('__count__message_pruned', { count }) });\n\t\t\t\tmethods.reset();\n\t\t\t} catch (error: unknown) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t} finally {\n\t\t\t\tcloseModal();\n\t\t\t}\n\t\t};\n\n\t\treturn setModal(\n\t\t\t<GenericModal\n\t\t\t\tvariant='danger'\n\t\t\t\tonClose={closeModal}\n\t\t\t\tonCancel={closeModal}\n\t\t\t\tonConfirm={handlePruneAction}\n\t\t\t\tconfirmText={t('Yes_prune_them')}\n\t\t\t>\n\t\t\t\t{t('Prune_Modal')}\n\t\t\t</GenericModal>,\n\t\t);\n\t});\n\n\tconst callOutText = useMemo(() => {\n\t\tconst exceptPinned = pinned ? ` ${t('except_pinned', {})}` : '';\n\t\tconst ifFrom = users.length\n\t\t\t? ` ${t('if_they_are_from', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [users.map((element) => element).join(', ')],\n\t\t\t  })}`\n\t\t\t: '';\n\t\tconst filesOrMessages = t(attached ? 'files' : 'messages', {});\n\n\t\tif (newerDate && olderDate) {\n\t\t\treturn (\n\t\t\t\tt('Prune_Warning_between', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [filesOrMessages, name, moment(fromDate).format('L LT'), moment(toDate).format('L LT')],\n\t\t\t\t}) +\n\t\t\t\texceptPinned +\n\t\t\t\tifFrom\n\t\t\t);\n\t\t}\n\n\t\tif (newerDate) {\n\t\t\treturn (\n\t\t\t\tt('Prune_Warning_after', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [filesOrMessages, name, moment(fromDate).format('L LT')],\n\t\t\t\t}) +\n\t\t\t\texceptPinned +\n\t\t\t\tifFrom\n\t\t\t);\n\t\t}\n\n\t\tif (olderDate) {\n\t\t\treturn (\n\t\t\t\tt('Prune_Warning_before', {\n\t\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\t\tsprintf: [filesOrMessages, name, moment(toDate).format('L LT')],\n\t\t\t\t}) +\n\t\t\t\texceptPinned +\n\t\t\t\tifFrom\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\tt('Prune_Warning_all', {\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tsprintf: [filesOrMessages, room && ((isDirectMessageRoom(room) && room.usernames?.join(' x ')) || room.fname || room.name)],\n\t\t\t}) +\n\t\t\texceptPinned +\n\t\t\tifFrom\n\t\t);\n\t}, [attached, fromDate, newerDate, olderDate, pinned, room, t, toDate, users]);\n\n\tconst validateText = useMemo(() => {\n\t\tif (fromDate > toDate) {\n\t\t\treturn t('Newer_than_may_not_exceed_Older_than', {\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tsprintf: [],\n\t\t\t});\n\t\t}\n\n\t\tif (isNaN(fromDate.getTime()) || isNaN(toDate.getTime())) {\n\t\t\treturn t('error-invalid-date', {\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tsprintf: [],\n\t\t\t});\n\t\t}\n\n\t\treturn undefined;\n\t}, [fromDate, t, toDate]);\n\n\treturn (\n\t\t<FormProvider {...methods}>\n\t\t\t<PruneMessages callOutText={callOutText} validateText={validateText} users={users} onClickClose={close} onClickPrune={handlePrune} />\n\t\t</FormProvider>\n\t);\n};\n\nexport default PruneMessagesWithData;\n",null],"names":["isDirectMessageRoom","useMutableCallback","useSetModal","useToastMessageDispatch","useEndpoint","useTranslation","moment","React","useCallback","useMemo","useState","useForm","FormProvider","GenericModal","useRoom","useRoomToolbox","PruneMessages","module","export","initialValues","default","getTimeZoneOffset","offset","Date","getTimezoneOffset","absOffset","Math","abs","concat","floor","slice","newer","date","time","older","users","inclusive","pinned","discussion","threads","attached","exportDefault","t","room","setModal","closeTab","close","closeModal","dispatchToastMessage","pruneMessagesAction","counter","setCounter","methods","defaultValues","newerDate","newerTime","olderDate","olderTime","watch","fromDate","toDate","handlePrune","handlePruneAction","count","roomId","_id","latest","toISOString","oldest","limit","excludePinned","filesOnly","ignoreDiscussion","ignoreThreads","Error","type","message","reset","error","createElement","variant","onClose","onCancel","onConfirm","confirmText","callOutText","_room$usernames","exceptPinned","ifFrom","length","postProcess","sprintf","map","element","join","filesOrMessages","name","format","usernames","fname","validateText","isNaN","getTime","onClickClose","onClickPrune"],"mappings":"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"}