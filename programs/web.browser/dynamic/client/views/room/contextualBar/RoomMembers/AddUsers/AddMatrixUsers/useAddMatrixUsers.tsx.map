)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/contextualBar/RoomMembers/AddUsers/AddMatrixUsers/useAddMatrixUsers.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useSetModal, useToastMessageDispatch, useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useMutation } from '@tanstack/react-query';\nimport React from 'react';\n\nimport AddMatrixUsersModal from './AddMatrixUsersModal';\n\nexport type useAddMatrixUsersProps = {\n\thandleSave: (args_0: any) => Promise<void>;\n\tusers: string[];\n};\n\nexport const useAddMatrixUsers = () => {\n\tconst setModal = useSetModal();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst handleClose = useMutableCallback(() => setModal(null));\n\tconst dispatchVerifyEndpoint = useEndpoint('GET', '/v1/federation/matrixIds.verify');\n\n\treturn useMutation(async ({ users, handleSave }: useAddMatrixUsersProps) => {\n\t\ttry {\n\t\t\tlet matrixIdVerificationMap = new Map();\n\t\t\tconst matrixIds = users.filter((user) => user.startsWith('@'));\n\t\t\tif (matrixIds.length > 0) {\n\t\t\t\tconst matrixIdsVerificationResponse = await dispatchVerifyEndpoint({ matrixIds });\n\t\t\t\tconst { results: matrixIdsVerificationResults } = matrixIdsVerificationResponse;\n\t\t\t\tmatrixIdVerificationMap = new Map(Object.entries(matrixIdsVerificationResults));\n\t\t\t}\n\n\t\t\tsetModal(\n\t\t\t\t<AddMatrixUsersModal\n\t\t\t\t\tcompleteUserList={users}\n\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\tonSave={handleSave}\n\t\t\t\t\tmatrixIdVerifiedStatus={matrixIdVerificationMap as Map<string, string>}\n\t\t\t\t/>,\n\t\t\t);\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error as Error });\n\t\t}\n\t});\n};\n",null],"names":["useMutableCallback","useSetModal","useToastMessageDispatch","useEndpoint","useMutation","React","AddMatrixUsersModal","module","export","useAddMatrixUsers","default","setModal","dispatchToastMessage","handleClose","dispatchVerifyEndpoint","_ref","users","handleSave","matrixIdVerificationMap","Map","matrixIds","filter","user","startsWith","length","matrixIdsVerificationResponse","results","matrixIdsVerificationResults","Object","entries","createElement","completeUserList","onClose","onSave","matrixIdVerifiedStatus","error","type","message"],"mappings":"2BAAmCA,EAA8BC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAjEC,EAAOC,MAAE,CAAA,CAAAC,kBAAoB,IAAMA,CAAA,GAA8BF,EAAAA,IAAAA,CAAAA,8BAAAA,CAAAP,mBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAO,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAN,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,wBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAH,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,QAAAA,CAAAG,QAAAA,CAAAA,EAAAL,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAG,QAAAA,CAAAA,EAAAJ,EAAAA,CAAA,CAAA,EAAA,GAY1D,IAAMG,EAAoB,KAChC,IAAME,EAAWV,IACXW,EAAuBV,IACvBW,EAAcb,EAAmB,IAAMW,EAAS,OAChDG,EAAyBX,EAAY,MAAO,mCAElD,OAAOC,EAAY,MAAAW,IAAwD,GAAjD,CAAEC,MAAAA,CAAK,CAAEC,WAAAA,CAAAA,CAAoC,CAAAF,EACtE,GAAI,CACH,IAAIG,EAA0B,IAAIC,IAC5BC,EAAYJ,EAAMK,MAAM,CAAEC,GAASA,EAAKC,UAAU,CAAC,MACzD,GAAIH,EAAUI,MAAM,CAAG,EAAG,CACzB,IAAMC,EAAgC,MAAMX,EAAuB,CAAEM,UAAAA,CAAS,GACxE,CAAEM,QAASC,CAAAA,CAA8B,CAAGF,EAClDP,EAA0B,IAAIC,IAAIS,OAAOC,OAAO,CAACF,IAGlDhB,EACCN,EAAAyB,aAAA,CAACxB,EAAmB,CACnByB,iBAAkBf,EAClBgB,QAASnB,EACToB,OAAQhB,EACRiB,uBAAwBhB,CAA+C,IAGxE,MAAOiB,EAAO,CACfvB,EAAqB,CAAEwB,KAAM,QAASC,QAASF,CAAc,GAE/D,EACD"}