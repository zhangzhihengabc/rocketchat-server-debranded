)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/contextualBar/VideoConference/VideoConfPopups/VideoConfPopup/VideoConfPopupRoomInfo.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport { isDirectMessageRoom, isMultipleDirectMessageRoom } from '@rocket.chat/core-typings';\nimport { useUser, useUserSubscription } from '@rocket.chat/ui-contexts';\nimport { VideoConfPopupInfo } from '@rocket.chat/ui-video-conf';\nimport type { ReactElement } from 'react';\nimport React from 'react';\n\nimport { RoomIcon } from '../../../../../../components/RoomIcon';\nimport ReactiveUserStatus from '../../../../../../components/UserStatus/ReactiveUserStatus';\nimport RoomAvatar from '../../../../../../components/avatar/RoomAvatar';\nimport { useUserDisplayName } from '../../../../../../hooks/useUserDisplayName';\n\nconst VideoConfPopupRoomInfo = ({ room }: { room: IRoom }): ReactElement => {\n\tconst ownUser = useUser();\n\tconst [userId] = room?.uids?.filter((uid) => uid !== ownUser?._id) || [];\n\tconst subscription = useUserSubscription(room._id);\n\tconst username = useUserDisplayName({ name: subscription?.fname, username: subscription?.name });\n\tconst avatar = <RoomAvatar room={room} size='x40' />;\n\n\tif (isDirectMessageRoom(room)) {\n\t\treturn (\n\t\t\t<VideoConfPopupInfo\n\t\t\t\tavatar={avatar}\n\t\t\t\t{...(userId && {\n\t\t\t\t\ticon: isMultipleDirectMessageRoom(room) ? <RoomIcon placement='default' room={room} /> : <ReactiveUserStatus uid={userId} />,\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t{username}\n\t\t\t</VideoConfPopupInfo>\n\t\t);\n\t}\n\n\treturn (\n\t\t<VideoConfPopupInfo avatar={avatar} icon={<RoomIcon placement='default' room={room} />}>\n\t\t\t{room.fname || room.name}\n\t\t</VideoConfPopupInfo>\n\t);\n};\n\nexport default VideoConfPopupRoomInfo;\n",null],"names":["_extends","isDirectMessageRoom","isMultipleDirectMessageRoom","useUser","useUserSubscription","VideoConfPopupInfo","React","RoomIcon","ReactiveUserStatus","RoomAvatar","useUserDisplayName","module","default","v","link","exportDefault","_ref","_room$uids","room","ownUser","userId","uids","filter","uid","_id","subscription","username","name","fname","avatar","createElement","size","icon","placement"],"mappings":"2BACAA,EAAAC,EAASC,EAAoFC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAApFC,EAAAA,IAAAA,CAAAA,iCAAgD,CAAEC,QAAMC,CAAA,EAAAb,EAAAA,CAAA,CAAA,EAAA,GAAnCW,EAA6BG,IAAAA,CAAAA,4BAAiC,CAACb,oBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,4BAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAS,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAR,QAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,oBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAO,EAAAA,IAAAA,CAAAA,6BAAAA,CAAAN,mBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAM,EAAAA,IAAAA,CAAAA,QAAAA,CAAAC,QAAAA,CAAAA,EAAAN,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,wCAAAA,CAAAJ,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,6DAAAA,CAAAC,QAAAA,CAAAA,EAAAJ,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,iDAAAA,CAAAC,QAAAA,CAAAA,EAAAH,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,6CAAAA,CAAAD,mBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAA7FC,EAAOI,aAAE,CAWsBC,IAA4C,IAAAC,EAAA,GAA3C,CAAEC,KAAAA,CAAAA,CAAuB,CAAAF,EAClDG,EAAUhB,IACV,CAACiB,EAAO,CAAG,AAAAF,CAAAA,MAAAA,EAAI,KAAA,EAAA,AAAM,OAAND,CAAAA,EAAJC,EAAMG,IAAI,AAAJA,GAAIJ,AAAA,KAAA,IAAAA,EAAA,KAAA,EAAVA,EAAYK,MAAM,CAAEC,GAAQA,IAAQJ,CAAAA,MAAAA,EAAO,KAAA,EAAPA,EAASK,GAAG,AAAHA,EAAG,GAAK,EAAE,CAClEC,EAAerB,EAAoBc,EAAKM,GAAG,EAC3CE,EAAWhB,EAAmB,CAAEiB,KAAMF,MAAAA,EAAY,KAAA,EAAZA,EAAcG,KAAK,CAAEF,SAAUD,MAAAA,EAAY,KAAA,EAAZA,EAAcE,IAAAA,AAAI,GACvFE,EAASvB,EAAAwB,aAAA,CAACrB,EAAU,CAACS,KAAMA,EAAMa,KAAK,KAAK,UAEjD,AAAI9B,EAAoBiB,GAEtBZ,EAAAwB,aAAA,CAACzB,EAAkBL,EAAA,CAClB6B,OAAQA,CAAO,EACVT,GAAU,CACdY,KAAM9B,EAA4BgB,GAAQZ,EAAAwB,aAAA,CAACvB,EAAQ,CAAC0B,UAAU,UAAUf,KAAMA,CAAK,GAAMZ,EAAAwB,aAAA,CAACtB,EAAkB,CAACe,IAAKH,CAAO,KAGzHM,GAMHpB,EAAAwB,aAAA,CAACzB,EAAkB,CAACwB,OAAQA,EAAQG,KAAM1B,EAAAwB,aAAA,CAACvB,EAAQ,CAAC0B,UAAU,UAAUf,KAAMA,CAAK,EAAI,EACrFA,EAAKU,KAAK,EAAIV,EAAKS,IAAI,CAG3B"}