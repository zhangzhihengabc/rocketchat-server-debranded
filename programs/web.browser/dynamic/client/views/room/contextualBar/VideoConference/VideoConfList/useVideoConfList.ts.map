)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/contextualBar/VideoConference/VideoConfList/useVideoConfList.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport { useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useCallback, useState } from 'react';\n\nimport { useScrollableRecordList } from '../../../../../hooks/lists/useScrollableRecordList';\nimport { useComponentDidUpdate } from '../../../../../hooks/useComponentDidUpdate';\nimport { VideoConfRecordList } from './VideoConfRecordList';\n\nexport const useVideoConfList = (options: {\n\troomId: IRoom['_id'];\n}): {\n\tvideoConfList: VideoConfRecordList;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst getVideoConfs = useEndpoint('GET', '/v1/video-conference.list');\n\tconst [videoConfList, setVideoConfList] = useState(() => new VideoConfRecordList());\n\tconst reload = useCallback(() => setVideoConfList(new VideoConfRecordList()), []);\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tconst fetchData = useCallback(\n\t\tasync (_start, _end) => {\n\t\t\tconst { data, total } = await getVideoConfs({\n\t\t\t\troomId: options.roomId,\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems: data.map((videoConf: any) => ({\n\t\t\t\t\t...videoConf,\n\t\t\t\t\t_updatedAt: new Date(videoConf._updatedAt),\n\t\t\t\t\tcreatedAt: new Date(videoConf.createdAt),\n\t\t\t\t\tendedAt: videoConf.endedAt ? new Date(videoConf.endedAt) : undefined,\n\t\t\t\t})),\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[getVideoConfs, options],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(videoConfList, fetchData);\n\n\treturn {\n\t\treload,\n\t\tvideoConfList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n",null],"names":["_objectSpread","useEndpoint","useCallback","useState","useScrollableRecordList","useComponentDidUpdate","VideoConfRecordList","module","link","default","export","useVideoConfList","options","getVideoConfs","videoConfList","setVideoConfList","reload","fetchData","_start","_end","data","total","roomId","items","map","videoConf","_updatedAt","Date","createdAt","endedAt","undefined","itemCount","loadMoreItems","initialItemCount"],"mappings":"2BACAA,EAAuDC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA9CC,EAAaC,IAAM,CAAA,uCAA2B,CAAAC,QAAAA,CAAAA,EAAAT,EAAAA,CAAA,CAAA,EAAA,GAAvDO,EAAOG,MAAE,CAAA,CAAAC,iBAAmB,IAAAA,CAAA,GAA2BJ,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAN,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAM,EAAAA,IAAAA,CAAAA,QAAAA,CAAAL,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,qDAAAA,CAAAH,wBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,6CAAAA,CAAAF,sBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAD,oBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAOhD,IAAMK,EAAoBC,IAQhC,IAAMC,EAAgBZ,EAAY,MAAO,6BACnC,CAACa,EAAeC,EAAiB,CAAGZ,EAAS,IAAM,IAAIG,GACvDU,EAASd,EAAY,IAAMa,EAAiB,IAAIT,GAAwB,EAAE,EAEhFD,EAAsB,KACrBO,GAAWI,GACZ,EAAG,CAACJ,EAASI,EAAO,EAEpB,IAAMC,EAAYf,EACjB,MAAOgB,EAAQC,KACd,GAAM,CAAEC,KAAAA,CAAI,CAAEC,MAAAA,CAAAA,CAAO,CAAG,MAAMR,EAAc,CAC3CS,OAAQV,EAAQU,MAAAA,GAGjB,MAAO,CACNC,MAAOH,EAAKI,GAAG,CAAEC,GAAczB,EAAAA,EAAA,CAAA,EAC3ByB,GAAS,CAAA,EAAA,CACZC,WAAY,IAAIC,KAAKF,EAAUC,UAAU,EACzCE,UAAW,IAAID,KAAKF,EAAUG,SAAS,EACvCC,QAASJ,EAAUI,OAAO,CAAG,IAAIF,KAAKF,EAAUI,OAAO,EAAIC,KAAAA,CAAS,IAErEC,UAAWV,EAEb,EACA,CAACR,EAAeD,EAAQ,EAGnB,CAAEoB,cAAAA,CAAa,CAAEC,iBAAAA,CAAAA,CAAkB,CAAG7B,EAAwBU,EAAeG,GAEnF,MAAO,CACND,OAAAA,EACAF,cAAAA,EACAkB,cAAAA,EACAC,iBAAAA,EAEF"}