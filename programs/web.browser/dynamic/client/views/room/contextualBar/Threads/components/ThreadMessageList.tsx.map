)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/contextualBar/Threads/components/ThreadMessageList.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IMessage, IThreadMainMessage } from '@rocket.chat/core-typings';\nimport { MessageDivider } from '@rocket.chat/fuselage';\nimport { useMergedRefs } from '@rocket.chat/fuselage-hooks';\nimport { useSetting, useTranslation, useUserPreference } from '@rocket.chat/ui-contexts';\nimport { differenceInSeconds } from 'date-fns';\nimport type { ReactElement } from 'react';\nimport React, { Fragment } from 'react';\n\nimport { MessageTypes } from '../../../../../../app/ui-utils/client';\nimport { isTruthy } from '../../../../../../lib/isTruthy';\nimport ScrollableContentWrapper from '../../../../../components/ScrollableContentWrapper';\nimport SystemMessage from '../../../../../components/message/variants/SystemMessage';\nimport ThreadMessage from '../../../../../components/message/variants/ThreadMessage';\nimport { useFormatDate } from '../../../../../hooks/useFormatDate';\nimport { isMessageNewDay } from '../../../MessageList/lib/isMessageNewDay';\nimport MessageListProvider from '../../../MessageList/providers/MessageListProvider';\nimport LoadingMessagesIndicator from '../../../body/LoadingMessagesIndicator';\nimport { useFirstUnreadMessageId } from '../../../hooks/useFirstUnreadMessageId';\nimport { useScrollMessageList } from '../../../hooks/useScrollMessageList';\nimport { useLegacyThreadMessageJump } from '../hooks/useLegacyThreadMessageJump';\nimport { useLegacyThreadMessageListScrolling } from '../hooks/useLegacyThreadMessageListScrolling';\nimport { useLegacyThreadMessages } from '../hooks/useLegacyThreadMessages';\n\nconst isMessageSequential = (current: IMessage, previous: IMessage | undefined, groupingRange: number): boolean => {\n\tif (!previous) {\n\t\treturn false;\n\t}\n\n\tif (MessageTypes.isSystemMessage(current) || MessageTypes.isSystemMessage(previous)) {\n\t\treturn false;\n\t}\n\n\tif (current.groupable === false) {\n\t\treturn false;\n\t}\n\n\tif (current.u._id !== previous.u._id) {\n\t\treturn false;\n\t}\n\n\tif (current.alias !== previous.alias) {\n\t\treturn false;\n\t}\n\treturn differenceInSeconds(current.ts, previous.ts) < groupingRange && !isMessageNewDay(current, previous);\n};\n\ntype ThreadMessageListProps = {\n\tmainMessage: IThreadMainMessage;\n};\n\nconst ThreadMessageList = ({ mainMessage }: ThreadMessageListProps): ReactElement => {\n\tconst { messages, loading } = useLegacyThreadMessages(mainMessage._id);\n\tconst {\n\t\tlistWrapperRef: listWrapperScrollRef,\n\t\tlistRef: listScrollRef,\n\t\tonScroll: handleScroll,\n\t} = useLegacyThreadMessageListScrolling(mainMessage);\n\tconst { parentRef: listJumpRef } = useLegacyThreadMessageJump({ enabled: !loading });\n\n\tconst listRef = useMergedRefs<HTMLElement | null>(listScrollRef, listJumpRef);\n\tconst hideUsernames = useUserPreference<boolean>('hideUsernames');\n\tconst showUserAvatar = !!useUserPreference<boolean>('displayAvatars');\n\n\tconst formatDate = useFormatDate();\n\tconst t = useTranslation();\n\tconst messageGroupingPeriod = Number(useSetting('Message_GroupingPeriod'));\n\n\tconst scrollMessageList = useScrollMessageList(listWrapperScrollRef);\n\n\tconst firstUnreadMessageId = useFirstUnreadMessageId();\n\n\treturn (\n\t\t<div className={['thread-list js-scroll-thread', hideUsernames && 'hide-usernames'].filter(isTruthy).join(' ')}>\n\t\t\t<ScrollableContentWrapper\n\t\t\t\tref={listWrapperScrollRef}\n\t\t\t\tonScroll={handleScroll}\n\t\t\t\tstyle={{ scrollBehavior: 'smooth', overflowX: 'hidden' }}\n\t\t\t>\n\t\t\t\t<ul className='thread' ref={listRef} style={{ scrollBehavior: 'smooth', overflowX: 'hidden' }}>\n\t\t\t\t\t{loading ? (\n\t\t\t\t\t\t<li className='load-more'>\n\t\t\t\t\t\t\t<LoadingMessagesIndicator />\n\t\t\t\t\t\t</li>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<MessageListProvider scrollMessageList={scrollMessageList}>\n\t\t\t\t\t\t\t{[mainMessage, ...messages].map((message, index, { [index - 1]: previous }) => {\n\t\t\t\t\t\t\t\tconst sequential = isMessageSequential(message, previous, messageGroupingPeriod);\n\t\t\t\t\t\t\t\tconst newDay = isMessageNewDay(message, previous);\n\t\t\t\t\t\t\t\tconst firstUnread = firstUnreadMessageId === message._id;\n\t\t\t\t\t\t\t\tconst showDivider = newDay || firstUnread;\n\n\t\t\t\t\t\t\t\tconst shouldShowAsSequential = sequential && !newDay;\n\n\t\t\t\t\t\t\t\tconst system = MessageTypes.isSystemMessage(message);\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Fragment key={message._id}>\n\t\t\t\t\t\t\t\t\t\t{showDivider && (\n\t\t\t\t\t\t\t\t\t\t\t<MessageDivider unreadLabel={firstUnread ? t('Unread_Messages').toLowerCase() : undefined}>\n\t\t\t\t\t\t\t\t\t\t\t\t{newDay && formatDate(message.ts)}\n\t\t\t\t\t\t\t\t\t\t\t</MessageDivider>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t{system ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<SystemMessage message={message} showUserAvatar={showUserAvatar} />\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t<ThreadMessage\n\t\t\t\t\t\t\t\t\t\t\t\t\tmessage={message}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsequential={shouldShowAsSequential}\n\t\t\t\t\t\t\t\t\t\t\t\t\tunread={firstUnread}\n\t\t\t\t\t\t\t\t\t\t\t\t\tshowUserAvatar={showUserAvatar}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</MessageListProvider>\n\t\t\t\t\t)}\n\t\t\t\t</ul>\n\t\t\t</ScrollableContentWrapper>\n\t\t</div>\n\t);\n};\n\nexport default ThreadMessageList;\n",null],"names":["MessageDivider","useMergedRefs","useSetting","useTranslation","useUserPreference","differenceInSeconds","React","Fragment","MessageTypes","isTruthy","ScrollableContentWrapper","SystemMessage","ThreadMessage","useFormatDate","isMessageNewDay","MessageListProvider","LoadingMessagesIndicator","useFirstUnreadMessageId","useScrollMessageList","useLegacyThreadMessageJump","useLegacyThreadMessageListScrolling","useLegacyThreadMessages","module","link","default","isMessageSequential","current","previous","groupingRange","isSystemMessage","groupable","u","_id","alias","ts","exportDefault","_ref","mainMessage","messages","loading","listWrapperRef","listWrapperScrollRef","listRef","listScrollRef","onScroll","handleScroll","parentRef","listJumpRef","enabled","hideUsernames","showUserAvatar","formatDate","t","messageGroupingPeriod","Number","scrollMessageList","firstUnreadMessageId","createElement","className","filter","join","ref","style","scrollBehavior","overflowX","map","message","index","_ref2","sequential","newDay","firstUnread","showDivider","shouldShowAsSequential","system","key","unreadLabel","toLowerCase","undefined","unread"],"mappings":"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"}