function module(e,t,n){let i,r,s,l,u,a,o,c,d,m;n.export({useThreadMainMessageQuery:()=>y}),n.link("@rocket.chat/ui-contexts",{useStream(e){i=e}},0),n.link("@tanstack/react-query",{useQueryClient(e){r=e},useQuery(e){s=e}},1),n.link("react",{useCallback(e){l=e},useEffect(e){u=e},useRef(e){a=e}},2),n.link("../../../../../../lib/utils/highOrderFunctions",{withDebouncing(e){o=e}},3),n.link("../../../../../lib/minimongo",{createFilterFromQuery(e){c=e}},4),n.link("../../../contexts/RoomContext",{useRoom(e){d=e}},5),n.link("./useGetMessageByID",{useGetMessageByID(e){m=e}},6);let g=e=>{var t;let n={ts:e.ts};return e.excludePinned&&(n.pinned={$ne:!0}),e.ignoreDiscussion&&(n.drid={$exists:!1}),null!==(t=e.users)&&void 0!==t&&t.length&&(n["u.username"]={$in:e.users}),c(n)},k=()=>{let e=i("room-messages"),t=i("notify-room");return l((n,i)=>{let{onMutate:r,onDelete:s}=i,l=e(n.rid,e=>{n._id===e._id&&(null==r||r(e))}),u=t("".concat(n.rid,"/deleteMessage"),e=>{n._id===e._id&&(null==s||s())}),a=t("".concat(n.rid,"/deleteMessageBulk"),e=>{let t=g(e);t(n)&&(null==s||s())});return()=>{l(),u(),a()}},[t,e])},y=function(e){let{onDelete:t}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=d(),i=m(),l=k(),c=r(),g=a();return u(()=>()=>{var e;null===(e=g.current)||void 0===e||e.call(g),g.current=void 0},[e]),s(["rooms",n._id,"threads",e,"main-message"],async n=>{let{queryKey:r}=n,s=await i(e);if(!s)throw Error("Invalid main message");let u=o({wait:1e4})(()=>{c.invalidateQueries(r,{exact:!0})});return g.current=g.current||l(s,{onMutate:e=>{c.setQueryData(r,()=>e),u()},onDelete:()=>{null==t||t(),c.invalidateQueries(r,{exact:!0})}}),s})}}
//# sourceMappingURL=/dynamic/client/views/room/contextualBar/Threads/hooks/c5a53dc29a87a9333e6632a13e5e0e4095d1b968.map
