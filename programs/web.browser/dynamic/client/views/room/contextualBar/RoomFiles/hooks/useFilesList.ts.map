)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/contextualBar/RoomFiles/hooks/useFilesList.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useUserRoom, useUserId, useEndpoint } from '@rocket.chat/ui-contexts';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { useScrollableRecordList } from '../../../../../hooks/lists/useScrollableRecordList';\nimport { useStreamUpdatesForMessageList } from '../../../../../hooks/lists/useStreamUpdatesForMessageList';\nimport { useComponentDidUpdate } from '../../../../../hooks/useComponentDidUpdate';\nimport type { FilesListOptions } from '../../../../../lib/lists/FilesList';\nimport { FilesList } from '../../../../../lib/lists/FilesList';\nimport type { MessageList } from '../../../../../lib/lists/MessageList';\nimport { getConfig } from '../../../../../lib/utils/getConfig';\n\nexport const useFilesList = (\n\toptions: FilesListOptions,\n): {\n\tfilesList: FilesList;\n\tinitialItemCount: number;\n\treload: () => void;\n\tloadMoreItems: (start: number, end: number) => void;\n} => {\n\tconst [filesList, setFilesList] = useState(() => new FilesList(options));\n\tconst reload = useCallback(() => setFilesList(new FilesList(options)), [options]);\n\tconst room = useUserRoom(options.rid as string);\n\tconst uid = useUserId();\n\n\tuseComponentDidUpdate(() => {\n\t\toptions && reload();\n\t}, [options, reload]);\n\n\tuseEffect(() => {\n\t\tif (filesList.options !== options) {\n\t\t\tfilesList.updateFilters(options);\n\t\t}\n\t}, [filesList, options]);\n\n\tconst roomTypes = {\n\t\tc: '/v1/channels.files',\n\t\tl: '/v1/channels.files',\n\t\tv: '/v1/channels.files',\n\t\td: '/v1/im.files',\n\t\tp: '/v1/groups.files',\n\t} as const;\n\n\tconst apiEndPoint = room ? roomTypes[room.t] : '/v1/channels.files';\n\n\tconst getFiles = useEndpoint('GET', apiEndPoint);\n\n\tconst fetchMessages = useCallback(\n\t\tasync (start, end) => {\n\t\t\tconst { files, total } = await getFiles({\n\t\t\t\troomId: options.rid,\n\t\t\t\toffset: start,\n\t\t\t\tcount: end,\n\t\t\t\tsort: JSON.stringify({ uploadedAt: -1 }),\n\t\t\t\tquery: JSON.stringify({\n\t\t\t\t\tname: { $regex: options.text || '', $options: 'i' },\n\t\t\t\t\t...(options.type !== 'all' && {\n\t\t\t\t\t\ttypeGroup: options.type,\n\t\t\t\t\t}),\n\t\t\t\t}),\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\titems: files.map((file) => ({\n\t\t\t\t\t...file,\n\t\t\t\t\tuploadedAt: file.uploadedAt ? new Date(file.uploadedAt) : undefined,\n\t\t\t\t\tmodifiedAt: file.modifiedAt ? new Date(file.modifiedAt) : undefined,\n\t\t\t\t})),\n\t\t\t\titemCount: total,\n\t\t\t};\n\t\t},\n\t\t[getFiles, options.rid, options.type, options.text],\n\t);\n\n\tconst { loadMoreItems, initialItemCount } = useScrollableRecordList(\n\t\tfilesList,\n\t\tfetchMessages,\n\t\tuseMemo(() => parseInt(`${getConfig('discussionListSize', 10)}`), []),\n\t);\n\n\t// TODO: chapter day : frontend create useStreamUpdatesForUploadList\n\tuseStreamUpdatesForMessageList(filesList as unknown as MessageList, uid, options.rid || null);\n\n\treturn {\n\t\treload,\n\t\tfilesList,\n\t\tloadMoreItems,\n\t\tinitialItemCount,\n\t};\n};\n",null],"names":["_objectSpread","useUserRoom","useUserId","useEndpoint","useCallback","useEffect","useMemo","useState","useScrollableRecordList","useStreamUpdatesForMessageList","useComponentDidUpdate","FilesList","getConfig","module","link","default","v","export","useFilesList","options","filesList","setFilesList","reload","room","rid","uid","updateFilters","apiEndPoint","roomTypes","c","l","d","p","t","getFiles","fetchMessages","start","end","files","total","roomId","offset","count","sort","JSON","stringify","uploadedAt","query","name","$regex","text","$options","type","typeGroup","items","map","file","Date","undefined","modifiedAt","itemCount","loadMoreItems","initialItemCount","parseInt","concat"],"mappings":"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"}