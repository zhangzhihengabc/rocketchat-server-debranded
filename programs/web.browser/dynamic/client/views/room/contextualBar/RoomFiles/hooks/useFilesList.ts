function module(e,t,s){let i,l,o,n,a,d,r,u,p,c,f,m,k;s.link("@babel/runtime/helpers/objectSpread2",{default(e){i=e}},0),s.export({useFilesList:()=>g}),s.link("@rocket.chat/ui-contexts",{useUserRoom(e){l=e},useUserId(e){o=e},useEndpoint(e){n=e}},0),s.link("react",{useCallback(e){a=e},useEffect(e){d=e},useMemo(e){r=e},useState(e){u=e}},1),s.link("../../../../../hooks/lists/useScrollableRecordList",{useScrollableRecordList(e){p=e}},2),s.link("../../../../../hooks/lists/useStreamUpdatesForMessageList",{useStreamUpdatesForMessageList(e){c=e}},3),s.link("../../../../../hooks/useComponentDidUpdate",{useComponentDidUpdate(e){f=e}},4),s.link("../../../../../lib/lists/FilesList",{FilesList(e){m=e}},5),s.link("../../../../../lib/utils/getConfig",{getConfig(e){k=e}},6);let g=e=>{let[t,s]=u(()=>new m(e)),g=a(()=>s(new m(e)),[e]),h=l(e.rid),v=o();f(()=>{e&&g()},[e,g]),d(()=>{t.options!==e&&t.updateFilters(e)},[t,e]);let S=h?({c:"/v1/channels.files",l:"/v1/channels.files",v:"/v1/channels.files",d:"/v1/im.files",p:"/v1/groups.files"})[h.t]:"/v1/channels.files",b=n("GET",S),y=a(async(t,s)=>{let{files:l,total:o}=await b({roomId:e.rid,offset:t,count:s,sort:JSON.stringify({uploadedAt:-1}),query:JSON.stringify(i({name:{$regex:e.text||"",$options:"i"}},"all"!==e.type&&{typeGroup:e.type}))});return{items:l.map(e=>i(i({},e),{},{uploadedAt:e.uploadedAt?new Date(e.uploadedAt):void 0,modifiedAt:e.modifiedAt?new Date(e.modifiedAt):void 0})),itemCount:o}},[b,e.rid,e.type,e.text]),{loadMoreItems:L,initialItemCount:A}=p(t,y,r(()=>parseInt("".concat(k("discussionListSize",10))),[]));return c(t,v,e.rid||null),{reload:g,filesList:t,loadMoreItems:L,initialItemCount:A}}}
//# sourceMappingURL=/dynamic/client/views/room/contextualBar/RoomFiles/hooks/7a1d4ddd2e5f19c6355050d6dcfc3b341af8fe34.map
