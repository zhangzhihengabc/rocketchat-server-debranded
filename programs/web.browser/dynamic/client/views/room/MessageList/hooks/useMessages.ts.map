)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/MessageList/hooks/useMessages.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRoom, IMessage, MessageTypesValues } from '@rocket.chat/core-typings';\nimport { useStableArray } from '@rocket.chat/fuselage-hooks';\nimport { useSetting, useUserPreference } from '@rocket.chat/ui-contexts';\nimport type { Mongo } from 'meteor/mongo';\nimport { useCallback, useMemo } from 'react';\n\nimport { ChatMessage } from '../../../../../app/models/client';\nimport { useReactiveValue } from '../../../../hooks/useReactiveValue';\nimport { useRoom } from '../../contexts/RoomContext';\n\nconst mergeHideSysMessages = (\n\tsysMesArray1: Array<MessageTypesValues>,\n\tsysMesArray2: Array<MessageTypesValues>,\n): Array<MessageTypesValues> => {\n\treturn Array.from(new Set([...sysMesArray1, ...sysMesArray2]));\n};\n\nexport const useMessages = ({ rid }: { rid: IRoom['_id'] }): IMessage[] => {\n\tconst showThreadsInMainChannel = useUserPreference<boolean>('showThreadsInMainChannel', false);\n\tconst hideSysMesSetting = useSetting<MessageTypesValues[]>('Hide_System_Messages') ?? [];\n\tconst room = useRoom();\n\tconst hideRoomSysMes: Array<MessageTypesValues> = Array.isArray(room.sysMes) ? room.sysMes : [];\n\n\tconst hideSysMessages = useStableArray(mergeHideSysMessages(hideSysMesSetting, hideRoomSysMes));\n\n\tconst query: Mongo.Selector<IMessage> = useMemo(\n\t\t() => ({\n\t\t\trid,\n\t\t\t_hidden: { $ne: true },\n\t\t\tt: { $nin: hideSysMessages },\n\t\t\t...(!showThreadsInMainChannel && {\n\t\t\t\t$or: [{ tmid: { $exists: false } }, { tshow: { $eq: true } }],\n\t\t\t}),\n\t\t}),\n\t\t[rid, hideSysMessages, showThreadsInMainChannel],\n\t);\n\n\treturn useReactiveValue(\n\t\tuseCallback(\n\t\t\t() =>\n\t\t\t\tChatMessage.find(query, {\n\t\t\t\t\tsort: {\n\t\t\t\t\t\tts: 1,\n\t\t\t\t\t},\n\t\t\t\t}).fetch(),\n\t\t\t[query],\n\t\t),\n\t);\n};\n",null],"names":["_objectSpread","useStableArray","useSetting","useUserPreference","useCallback","useMemo","ChatMessage","useReactiveValue","useRoom","module","link","default","export","useMessages","mergeHideSysMessages","sysMesArray1","sysMesArray2","Array","from","Set","_ref","_useSetting","rid","showThreadsInMainChannel","hideSysMesSetting","room","hideRoomSysMes","isArray","sysMes","hideSysMessages","query","_hidden","$ne","t","$nin","$or","tmid","$exists","tshow","$eq","find","sort","ts","fetch"],"mappings":"2BACAA,EAA+BC,EAA8BC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAApDC,EAAgBC,IAAAA,CAAAA,uCAAoC,CAAAC,QAAAA,CAAAA,EAAAX,EAAAA,CAAA,CAAA,EAAA,GAA7DS,EAAOG,MAAE,CAAA,CAAAC,YAAgB,IAAMA,CAAA,GAA8BJ,EAAAA,IAAAA,CAAAA,8BAAAA,CAAAR,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAQ,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAP,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,kBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAM,EAAAA,IAAAA,CAAAA,QAAAA,CAAAL,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,QAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,mCAAAA,CAAAH,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,qCAAAA,CAAAF,iBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,6BAAAA,CAAAD,QAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAS7D,IAAMM,EAAuB,CAC5BC,EACAC,IAEOC,MAAMC,IAAI,CAAC,IAAIC,IAAI,IAAIJ,KAAiBC,EAAa,GAGhDH,EAAcO,IAA+C,IAAAC,EAAA,GAA9C,CAAEC,IAAAA,CAAAA,CAA4B,CAAAF,EACnDG,EAA2BpB,EAA2B,2BAA4B,CAAA,GAClFqB,EAAiB,AAA2D,OAA3DH,CAAAA,EAAGnB,EAAiC,uBAAsB,GAACmB,AAAA,KAAA,IAAAA,EAAAA,EAAI,EAAE,CAClFI,EAAOjB,IACPkB,EAA4CT,MAAMU,OAAO,CAACF,EAAKG,MAAM,EAAIH,EAAKG,MAAM,CAAG,EAAE,CAEzFC,EAAkB5B,EAAea,EAAqBU,EAAmBE,IAEzEI,EAAkCzB,EACvC,IAAAL,EAAA,CACCsB,IAAAA,EACAS,QAAS,CAAEC,IAAK,CAAA,CAAI,EACpBC,EAAG,CAAEC,KAAML,CAAe,CAAE,EACxB,CAACN,GAA4B,CAChCY,IAAK,CAAC,CAAEC,KAAM,CAAEC,QAAS,CAAA,CAAK,CAAE,EAAI,CAAEC,MAAO,CAAEC,IAAK,CAAA,CAAI,CAAE,EAAE,GAG9D,CAACjB,EAAKO,EAAiBN,EAAyB,EAGjD,OAAOhB,EACNH,EACC,IACCE,EAAYkC,IAAI,CAACV,EAAO,CACvBW,KAAM,CACLC,GAAI,KAEHC,KAAK,GACT,CAACb,EAAM,EAGV"}