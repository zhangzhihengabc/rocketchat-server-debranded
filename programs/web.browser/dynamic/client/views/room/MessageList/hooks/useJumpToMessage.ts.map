)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/MessageList/hooks/useJumpToMessage.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IMessage } from '@rocket.chat/core-typings';\nimport { useRouter } from '@rocket.chat/ui-contexts';\nimport type { RefObject } from 'react';\nimport { useLayoutEffect } from 'react';\n\nimport { useMessageListJumpToMessageParam, useMessageListScroll } from '../../../../components/message/list/MessageListContext';\nimport { setHighlightMessage, clearHighlightMessage } from '../providers/messageHighlightSubscription';\n\n// this is an arbitrary value so that there's a gap between the header and the message;\nconst SCROLL_EXTRA_OFFSET = 60;\n\nexport const useJumpToMessage = (messageId: IMessage['_id'], messageRef: RefObject<HTMLDivElement>): void => {\n\tconst jumpToMessageParam = useMessageListJumpToMessageParam();\n\tconst scroll = useMessageListScroll();\n\tconst router = useRouter();\n\n\tuseLayoutEffect(() => {\n\t\tif (jumpToMessageParam !== messageId || !messageRef.current || !scroll) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tscroll((wrapper) => {\n\t\t\t\tif (!wrapper || !messageRef.current) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst containerRect = wrapper.getBoundingClientRect();\n\t\t\t\tconst messageRect = messageRef.current.getBoundingClientRect();\n\n\t\t\t\tconst offset = messageRect.top - containerRect.top;\n\t\t\t\tconst scrollPosition = wrapper.scrollTop;\n\t\t\t\tconst newScrollPosition = scrollPosition + offset - SCROLL_EXTRA_OFFSET;\n\n\t\t\t\treturn { top: newScrollPosition, behavior: 'smooth' };\n\t\t\t});\n\n\t\t\tconst search = router.getSearchParameters();\n\t\t\tdelete search.msg;\n\t\t\trouter.navigate(\n\t\t\t\t{\n\t\t\t\t\tpathname: router.getLocationPathname(),\n\t\t\t\t\tsearch,\n\t\t\t\t},\n\t\t\t\t{ replace: true },\n\t\t\t);\n\n\t\t\tsetHighlightMessage(messageId);\n\t\t\tsetTimeout(clearHighlightMessage, 2000);\n\t\t}, 500);\n\t}, [messageId, jumpToMessageParam, messageRef, scroll, router]);\n};\n",null],"names":["useRouter","useLayoutEffect","useMessageListJumpToMessageParam","useMessageListScroll","setHighlightMessage","clearHighlightMessage","module","export","useJumpToMessage","messageId","messageRef","jumpToMessageParam","scroll","router","current","setTimeout","wrapper","containerRect","getBoundingClientRect","messageRect","offset","top","scrollPosition","scrollTop","behavior","search","getSearchParameters","msg","navigate","pathname","getLocationPathname","replace"],"mappings":"2BACqDA,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAArDC,EAAOC,MAAE,CAAA,CAAAC,iBAAiB,IAAAA,CAA0B,GAACF,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAN,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAM,EAAAA,IAAAA,CAAAA,QAAAA,CAAAL,gBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,yDAAAA,CAAAJ,iCAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,qBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,4CAAAA,CAAAF,oBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,sBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAU9C,IAAMG,EAAmB,CAACC,EAA4BC,KAC5D,IAAMC,EAAqBT,IACrBU,EAAST,IACTU,EAASb,IAEfC,EAAgB,KACXU,IAAuBF,GAAcC,EAAWI,OAAO,EAAKF,GAIhEG,WAAW,KACVH,EAAQI,IACP,GAAI,CAACA,GAAW,CAACN,EAAWI,OAAO,CAClC,OAED,IAAMG,EAAgBD,EAAQE,qBAAqB,GAC7CC,EAAcT,EAAWI,OAAO,CAACI,qBAAqB,GAEtDE,EAASD,EAAYE,GAAG,CAAGJ,EAAcI,GAAG,CAC5CC,EAAiBN,EAAQO,SAAS,CAGxC,MAAO,CAAEF,IAFiBC,EAAiBF,EAtBnB,GAwBSI,SAAU,QAAQ,CACpD,GAEA,IAAMC,EAASZ,EAAOa,mBAAmB,EACzC,QAAOD,EAAOE,GAAG,CACjBd,EAAOe,QAAQ,CACd,CACCC,SAAUhB,EAAOiB,mBAAmB,GACpCL,OAAAA,GAED,CAAEM,QAAS,CAAA,CAAI,GAGhB3B,EAAoBK,GACpBM,WAAWV,EAAuB,IACnC,EAAG,IACJ,EAAG,CAACI,EAAWE,EAAoBD,EAAYE,EAAQC,EAAO,CAC/D"}