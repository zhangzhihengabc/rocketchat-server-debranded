)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/Header/Omnichannel/QuickActions/hooks/useQuickActions.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport {\n\tuseSetModal,\n\tuseToastMessageDispatch,\n\tuseUserId,\n\tuseSetting,\n\tusePermission,\n\tuseRole,\n\tuseEndpoint,\n\tuseMethod,\n\tuseTranslation,\n\tuseRouter,\n} from '@rocket.chat/ui-contexts';\nimport React, { useCallback, useState, useEffect } from 'react';\n\nimport { LivechatInquiry } from '../../../../../../../app/livechat/client/collections/LivechatInquiry';\nimport { LegacyRoomManager } from '../../../../../../../app/ui-utils/client';\nimport PlaceChatOnHoldModal from '../../../../../../../ee/app/livechat-enterprise/client/components/modals/PlaceChatOnHoldModal';\nimport { useHasLicenseModule } from '../../../../../../../ee/client/hooks/useHasLicenseModule';\nimport CloseChatModal from '../../../../../../components/Omnichannel/modals/CloseChatModal';\nimport CloseChatModalData from '../../../../../../components/Omnichannel/modals/CloseChatModalData';\nimport ForwardChatModal from '../../../../../../components/Omnichannel/modals/ForwardChatModal';\nimport ReturnChatQueueModal from '../../../../../../components/Omnichannel/modals/ReturnChatQueueModal';\nimport TranscriptModal from '../../../../../../components/Omnichannel/modals/TranscriptModal';\nimport { useIsRoomOverMacLimit } from '../../../../../../hooks/omnichannel/useIsRoomOverMacLimit';\nimport { useOmnichannelRouteConfig } from '../../../../../../hooks/omnichannel/useOmnichannelRouteConfig';\nimport { quickActionHooks } from '../../../../../../ui';\nimport { useOmnichannelRoom } from '../../../../contexts/RoomContext';\nimport type { QuickActionsActionConfig } from '../../../../lib/quickActions';\nimport { QuickActionsEnum } from '../../../../lib/quickActions';\nimport { usePutChatOnHoldMutation } from './usePutChatOnHoldMutation';\nimport { useReturnChatToQueueMutation } from './useReturnChatToQueueMutation';\n\nexport const useQuickActions = (): {\n\tquickActions: QuickActionsActionConfig[];\n\tactionDefault: (actionId: string) => void;\n} => {\n\tconst room = useOmnichannelRoom();\n\tconst setModal = useSetModal();\n\tconst router = useRouter();\n\n\tconst t = useTranslation();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\n\tconst [onHoldModalActive, setOnHoldModalActive] = useState(false);\n\n\tconst visitorRoomId = room.v._id;\n\tconst rid = room._id;\n\tconst uid = useUserId();\n\tconst roomLastMessage = room.lastMessage;\n\n\tconst getVisitorInfo = useEndpoint('GET', '/v1/livechat/visitors.info');\n\n\tconst getVisitorEmail = useMutableCallback(async () => {\n\t\tif (!visitorRoomId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst {\n\t\t\tvisitor: { visitorEmails },\n\t\t} = await getVisitorInfo({ visitorId: visitorRoomId });\n\n\t\tif (visitorEmails?.length && visitorEmails[0].address) {\n\t\t\treturn visitorEmails[0].address;\n\t\t}\n\t});\n\n\tuseEffect(() => {\n\t\tif (onHoldModalActive && roomLastMessage?.token) {\n\t\t\tsetModal(null);\n\t\t}\n\t}, [roomLastMessage, onHoldModalActive, setModal]);\n\n\tconst closeModal = useCallback(() => setModal(null), [setModal]);\n\n\tconst requestTranscript = useEndpoint('POST', '/v1/livechat/transcript/:rid', { rid });\n\n\tconst handleRequestTranscript = useCallback(\n\t\tasync (email: string, subject: string) => {\n\t\t\ttry {\n\t\t\t\tawait requestTranscript({ email, subject });\n\t\t\t\tcloseModal();\n\t\t\t\tdispatchToastMessage({\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\tmessage: t('Livechat_email_transcript_has_been_requested'),\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t},\n\t\t[closeModal, dispatchToastMessage, requestTranscript, t],\n\t);\n\n\tconst sendTranscriptPDF = useEndpoint('POST', '/v1/omnichannel/:rid/request-transcript', { rid });\n\n\tconst handleSendTranscriptPDF = useCallback(async () => {\n\t\ttry {\n\t\t\tawait sendTranscriptPDF();\n\t\t\tdispatchToastMessage({\n\t\t\t\ttype: 'success',\n\t\t\t\tmessage: t('Livechat_transcript_has_been_requested'),\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t}, [dispatchToastMessage, sendTranscriptPDF, t]);\n\n\tconst sendTranscript = useMethod('livechat:sendTranscript');\n\n\tconst handleSendTranscript = useCallback(\n\t\tasync (email: string, subject: string, token: string) => {\n\t\t\ttry {\n\t\t\t\tawait sendTranscript(token, rid, email, subject);\n\t\t\t\tcloseModal();\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t},\n\t\t[closeModal, dispatchToastMessage, rid, sendTranscript],\n\t);\n\n\tconst discardTranscript = useEndpoint('DELETE', '/v1/livechat/transcript/:rid', { rid });\n\n\tconst handleDiscardTranscript = useCallback(async () => {\n\t\ttry {\n\t\t\tawait discardTranscript();\n\t\t\tdispatchToastMessage({\n\t\t\t\ttype: 'success',\n\t\t\t\tmessage: t('Livechat_transcript_request_has_been_canceled'),\n\t\t\t});\n\t\t\tcloseModal();\n\t\t} catch (error) {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t}\n\t}, [closeModal, discardTranscript, dispatchToastMessage, t]);\n\n\tconst forwardChat = useEndpoint('POST', '/v1/livechat/room.forward');\n\n\tconst handleForwardChat = useCallback(\n\t\tasync (departmentId?: string, userId?: string, comment?: string) => {\n\t\t\tif (departmentId && userId) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst transferData: {\n\t\t\t\troomId: string;\n\t\t\t\tclientAction: boolean;\n\t\t\t\tcomment?: string;\n\t\t\t\tdepartmentId?: string;\n\t\t\t\tuserId?: string;\n\t\t\t} = {\n\t\t\t\troomId: rid,\n\t\t\t\tcomment,\n\t\t\t\tclientAction: true,\n\t\t\t};\n\n\t\t\tif (departmentId) {\n\t\t\t\ttransferData.departmentId = departmentId;\n\t\t\t}\n\t\t\tif (userId) {\n\t\t\t\ttransferData.userId = userId;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait forwardChat(transferData);\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Transferred') });\n\t\t\t\trouter.navigate('/home');\n\t\t\t\tLegacyRoomManager.close(room.t + rid);\n\t\t\t\tcloseModal();\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t},\n\t\t[closeModal, dispatchToastMessage, forwardChat, room.t, rid, router, t],\n\t);\n\n\tconst closeChat = useEndpoint('POST', '/v1/livechat/room.closeByUser');\n\n\tconst handleClose = useCallback(\n\t\tasync (\n\t\t\tcomment?: string,\n\t\t\ttags?: string[],\n\t\t\tpreferences?: { omnichannelTranscriptPDF: boolean; omnichannelTranscriptEmail: boolean },\n\t\t\trequestData?: { email: string; subject: string },\n\t\t) => {\n\t\t\ttry {\n\t\t\t\tawait closeChat({\n\t\t\t\t\trid,\n\t\t\t\t\t...(comment && { comment }),\n\t\t\t\t\t...(tags && { tags }),\n\t\t\t\t\t...(preferences?.omnichannelTranscriptPDF && { generateTranscriptPdf: true }),\n\t\t\t\t\t...(preferences?.omnichannelTranscriptEmail && requestData\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\ttranscriptEmail: {\n\t\t\t\t\t\t\t\t\tsendToVisitor: preferences?.omnichannelTranscriptEmail,\n\t\t\t\t\t\t\t\t\trequestData,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: { transcriptEmail: { sendToVisitor: false } }),\n\t\t\t\t});\n\t\t\t\tLivechatInquiry.remove({ rid });\n\t\t\t\tcloseModal();\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Chat_closed_successfully') });\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t}\n\t\t},\n\t\t[closeChat, closeModal, dispatchToastMessage, rid, t],\n\t);\n\n\tconst returnChatToQueueMutation = useReturnChatToQueueMutation({\n\t\tonSuccess: () => {\n\t\t\tLegacyRoomManager.close(room.t + rid);\n\t\t\trouter.navigate('/home');\n\t\t},\n\t\tonError: (error) => {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t},\n\t\tonSettled: () => {\n\t\t\tcloseModal();\n\t\t},\n\t});\n\n\tconst putChatOnHoldMutation = usePutChatOnHoldMutation({\n\t\tonSuccess: () => {\n\t\t\tdispatchToastMessage({ type: 'success', message: t('Chat_On_Hold_Successfully') });\n\t\t},\n\t\tonError: (error) => {\n\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t},\n\t\tonSettled: () => {\n\t\t\tcloseModal();\n\t\t},\n\t});\n\n\tconst handleAction = useMutableCallback(async (id: string) => {\n\t\tswitch (id) {\n\t\t\tcase QuickActionsEnum.MoveQueue:\n\t\t\t\tsetModal(\n\t\t\t\t\t<ReturnChatQueueModal\n\t\t\t\t\t\tonMoveChat={(): void => returnChatToQueueMutation.mutate(rid)}\n\t\t\t\t\t\tonCancel={(): void => {\n\t\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase QuickActionsEnum.TranscriptPDF:\n\t\t\t\thandleSendTranscriptPDF();\n\t\t\t\tbreak;\n\t\t\tcase QuickActionsEnum.TranscriptEmail:\n\t\t\t\tconst visitorEmail = await getVisitorEmail();\n\n\t\t\t\tif (!visitorEmail) {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: t('Customer_without_registered_email') });\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tsetModal(\n\t\t\t\t\t<TranscriptModal\n\t\t\t\t\t\troom={room}\n\t\t\t\t\t\temail={visitorEmail}\n\t\t\t\t\t\tonRequest={handleRequestTranscript}\n\t\t\t\t\t\tonSend={handleSendTranscript}\n\t\t\t\t\t\tonDiscard={handleDiscardTranscript}\n\t\t\t\t\t\tonCancel={closeModal}\n\t\t\t\t\t/>,\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase QuickActionsEnum.ChatForward:\n\t\t\t\tsetModal(<ForwardChatModal room={room} onForward={handleForwardChat} onCancel={closeModal} />);\n\t\t\t\tbreak;\n\t\t\tcase QuickActionsEnum.CloseChat:\n\t\t\t\tconst email = await getVisitorEmail();\n\t\t\t\tsetModal(\n\t\t\t\t\troom.departmentId ? (\n\t\t\t\t\t\t<CloseChatModalData visitorEmail={email} departmentId={room.departmentId} onConfirm={handleClose} onCancel={closeModal} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<CloseChatModal visitorEmail={email} onConfirm={handleClose} onCancel={closeModal} />\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase QuickActionsEnum.OnHoldChat:\n\t\t\t\tsetModal(\n\t\t\t\t\t<PlaceChatOnHoldModal\n\t\t\t\t\t\tonOnHoldChat={(): void => putChatOnHoldMutation.mutate(rid)}\n\t\t\t\t\t\tonCancel={(): void => {\n\t\t\t\t\t\t\tcloseModal();\n\t\t\t\t\t\t\tsetOnHoldModalActive(false);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>,\n\t\t\t\t);\n\t\t\t\tsetOnHoldModalActive(true);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\tconst omnichannelRouteConfig = useOmnichannelRouteConfig();\n\n\tconst manualOnHoldAllowed = useSetting('Livechat_allow_manual_on_hold');\n\n\tconst hasManagerRole = useRole('livechat-manager');\n\tconst hasMonitorRole = useRole('livechat-monitor');\n\n\tconst roomOpen = room?.open && (room.u?._id === uid || hasManagerRole || hasMonitorRole) && room?.lastMessage?.t !== 'livechat-close';\n\tconst canMoveQueue = !!omnichannelRouteConfig?.returnQueue && room?.u !== undefined;\n\tconst canForwardGuest = usePermission('transfer-livechat-guest');\n\tconst canSendTranscriptEmail = usePermission('send-omnichannel-chat-transcript');\n\tconst hasLicense = useHasLicenseModule('livechat-enterprise');\n\tconst canSendTranscriptPDF = usePermission('request-pdf-transcript');\n\tconst canCloseRoom = usePermission('close-livechat-room');\n\tconst canCloseOthersRoom = usePermission('close-others-livechat-room');\n\tconst restrictedOnHold = useSetting('Livechat_allow_manual_on_hold_upon_agent_engagement_only');\n\tconst canRoomBePlacedOnHold = !room.onHold && room.u;\n\tconst canAgentPlaceOnHold = !room.lastMessage?.token;\n\tconst canPlaceChatOnHold = Boolean(manualOnHoldAllowed && canRoomBePlacedOnHold && (!restrictedOnHold || canAgentPlaceOnHold));\n\tconst isRoomOverMacLimit = useIsRoomOverMacLimit(room);\n\n\tconst hasPermissionButtons = (id: string): boolean => {\n\t\tswitch (id) {\n\t\t\tcase QuickActionsEnum.MoveQueue:\n\t\t\t\treturn !isRoomOverMacLimit && !!roomOpen && canMoveQueue;\n\t\t\tcase QuickActionsEnum.ChatForward:\n\t\t\t\treturn !isRoomOverMacLimit && !!roomOpen && canForwardGuest;\n\t\t\tcase QuickActionsEnum.Transcript:\n\t\t\t\treturn !isRoomOverMacLimit && (canSendTranscriptEmail || (hasLicense && canSendTranscriptPDF));\n\t\t\tcase QuickActionsEnum.TranscriptEmail:\n\t\t\t\treturn !isRoomOverMacLimit && canSendTranscriptEmail;\n\t\t\tcase QuickActionsEnum.TranscriptPDF:\n\t\t\t\treturn hasLicense && !isRoomOverMacLimit && canSendTranscriptPDF;\n\t\t\tcase QuickActionsEnum.CloseChat:\n\t\t\t\treturn !!roomOpen && (canCloseRoom || canCloseOthersRoom);\n\t\t\tcase QuickActionsEnum.OnHoldChat:\n\t\t\t\treturn !!roomOpen && canPlaceChatOnHold;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn false;\n\t};\n\n\tconst quickActions = quickActionHooks\n\t\t.map((quickActionHook) => quickActionHook())\n\t\t.filter((quickAction): quickAction is QuickActionsActionConfig => !!quickAction)\n\t\t.filter((action) => {\n\t\t\tconst { options, id } = action;\n\t\t\tif (options) {\n\t\t\t\taction.options = options.filter(({ id }) => hasPermissionButtons(id));\n\t\t\t}\n\n\t\t\treturn hasPermissionButtons(id);\n\t\t})\n\t\t.sort((a, b) => (a.order ?? 0) - (b.order ?? 0));\n\n\tconst actionDefault = useMutableCallback((actionId: string) => {\n\t\thandleAction(actionId);\n\t});\n\n\treturn { quickActions, actionDefault };\n};\n",null],"names":["_objectSpread","useMutableCallback","useSetModal","useToastMessageDispatch","useUserId","useSetting","usePermission","useRole","useEndpoint","useMethod","useTranslation","useRouter","React","useCallback","useState","useEffect","LivechatInquiry","LegacyRoomManager","PlaceChatOnHoldModal","useHasLicenseModule","CloseChatModal","CloseChatModalData","ForwardChatModal","ReturnChatQueueModal","TranscriptModal","useIsRoomOverMacLimit","useOmnichannelRouteConfig","quickActionHooks","useOmnichannelRoom","QuickActionsEnum","usePutChatOnHoldMutation","useReturnChatToQueueMutation","module","default","export","useQuickActions","_room$u","_room$lastMessage","_room$lastMessage2","room","setModal","router","t","dispatchToastMessage","onHoldModalActive","setOnHoldModalActive","visitorRoomId","v","_id","rid","uid","roomLastMessage","lastMessage","getVisitorInfo","getVisitorEmail","visitor","visitorEmails","visitorId","length","address","token","closeModal","requestTranscript","handleRequestTranscript","email","subject","type","message","error","sendTranscriptPDF","handleSendTranscriptPDF","sendTranscript","handleSendTranscript","discardTranscript","handleDiscardTranscript","forwardChat","handleForwardChat","departmentId","userId","comment","transferData","roomId","clientAction","navigate","close","closeChat","handleClose","tags","preferences","requestData","omnichannelTranscriptPDF","generateTranscriptPdf","omnichannelTranscriptEmail","transcriptEmail","sendToVisitor","remove","returnChatToQueueMutation","onSuccess","onError","onSettled","putChatOnHoldMutation","handleAction","id","MoveQueue","createElement","onMoveChat","mutate","onCancel","TranscriptPDF","TranscriptEmail","visitorEmail","onRequest","onSend","onDiscard","ChatForward","onForward","CloseChat","onConfirm","OnHoldChat","onOnHoldChat","omnichannelRouteConfig","manualOnHoldAllowed","hasManagerRole","hasMonitorRole","roomOpen","open","u","canMoveQueue","returnQueue","undefined","canForwardGuest","canSendTranscriptEmail","hasLicense","canSendTranscriptPDF","canCloseRoom","canCloseOthersRoom","restrictedOnHold","canRoomBePlacedOnHold","onHold","canAgentPlaceOnHold","canPlaceChatOnHold","Boolean","isRoomOverMacLimit","hasPermissionButtons","Transcript","quickActions","map","quickActionHook","filter","quickAction","action","options","_ref","sort","a","b","_a$order","_b$order","order","actionDefault","actionId"],"mappings":"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"}