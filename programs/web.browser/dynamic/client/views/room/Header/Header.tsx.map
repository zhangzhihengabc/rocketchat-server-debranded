)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/Header/Header.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport { isVoipRoom } from '@rocket.chat/core-typings';\nimport { HeaderToolbox } from '@rocket.chat/ui-client';\nimport { useLayout } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React, { lazy, memo, useMemo } from 'react';\n\nimport BurgerMenu from '../../../components/BurgerMenu';\n\nconst DirectRoomHeader = lazy(() => import('./DirectRoomHeader'));\nconst OmnichannelRoomHeader = lazy(() => import('./Omnichannel/OmnichannelRoomHeader'));\nconst VoipRoomHeader = lazy(() => import('./Omnichannel/VoipRoomHeader'));\nconst RoomHeader = lazy(() => import('./RoomHeader'));\n\ntype HeaderProps<T> = {\n\troom: T;\n};\n\nconst Header = ({ room }: HeaderProps<IRoom>): ReactElement | null => {\n\tconst { isMobile, isEmbedded, showTopNavbarEmbeddedLayout } = useLayout();\n\n\tconst slots = useMemo(\n\t\t() => ({\n\t\t\tstart: isMobile && (\n\t\t\t\t<HeaderToolbox>\n\t\t\t\t\t<BurgerMenu />\n\t\t\t\t</HeaderToolbox>\n\t\t\t),\n\t\t}),\n\t\t[isMobile],\n\t);\n\n\tif (isEmbedded && !showTopNavbarEmbeddedLayout) {\n\t\treturn null;\n\t}\n\n\tif (room.t === 'd' && (room.uids?.length ?? 0) < 3) {\n\t\treturn <DirectRoomHeader slots={slots} room={room} />;\n\t}\n\n\tif (room.t === 'l') {\n\t\treturn <OmnichannelRoomHeader slots={slots} />;\n\t}\n\n\tif (isVoipRoom(room)) {\n\t\treturn <VoipRoomHeader slots={slots} room={room} />;\n\t}\n\n\treturn <RoomHeader slots={slots} room={room} topic={room.topic} />;\n};\n\nexport default memo(Header);\n",null],"names":["isVoipRoom","HeaderToolbox","useLayout","React","lazy","memo","useMemo","BurgerMenu","module","link","default","DirectRoomHeader","dynamicImport","OmnichannelRoomHeader","VoipRoomHeader","RoomHeader","exportDefault","_ref","_room$uids$length","_room$uids","room","isMobile","isEmbedded","showTopNavbarEmbeddedLayout","slots","start","createElement","t","uids","length","topic"],"mappings":"2BACAA,EAAuDC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA9CC,EAAYC,IAAA,CAAM,4BAA4B,CAAAT,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAQ,EAAAA,IAAAA,CAAAA,yBAAAA,CAAAP,cAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAO,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAN,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAM,EAAAA,IAAAA,CAAAA,QAAAA,CAAAE,QAAAA,CAAAA,EAAAP,EAAAA,CAAA,EAAAC,KAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,KAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,QAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,iCAAAA,CAAAE,QAAAA,CAAAA,EAAAH,EAAAA,CAAA,CAAA,EAAA,GAQvD,IAAMI,EAAmBP,EAAK,IAAMI,EAAAI,aAAA,CAAO,uBACrCC,EAAwBT,EAAK,IAAMI,EAAAI,aAAA,CAAO,wCAC1CE,EAAiBV,EAAK,IAAMI,EAAAI,aAAA,CAAO,iCACnCG,EAAaX,EAAK,IAAMI,EAAAI,aAAA,CAAO,iBAXrCJ,EAAOQ,aAAY,CAkDJX,EAjCAY,IAAsD,IAAAC,EAAAC,EAAA,GAArD,CAAEC,KAAAA,CAAAA,CAA0B,CAAAH,EACrC,CAAEI,SAAAA,CAAQ,CAAEC,WAAAA,CAAU,CAAEC,4BAAAA,CAAAA,CAA6B,CAAGrB,IAExDsB,EAAQlB,EACb,IAAO,CAAA,CACNmB,MAAOJ,GACNlB,EAAAuB,aAAA,CAACzB,EAAa,KACbE,EAAAuB,aAAA,CAACnB,EAAU,SAId,CAACc,EAAS,SAGX,AAAIC,GAAc,CAACC,EACX,KAGJH,AAAW,MAAXA,EAAKO,CAAC,EAAY,CAAA,AAAkB,OAAlBT,CAAAA,EAAA,AAAU,OAAVC,CAAAA,EAACC,EAAKQ,IAAI,AAAJA,GAAIT,AAAA,KAAA,IAAAA,EAAA,KAAA,EAATA,EAAWU,MAAM,AAANA,GAAMX,AAAA,KAAA,IAAAA,EAAAA,EAAI,CAAA,EAAK,EACzCf,EAAAuB,aAAA,CAACf,EAAgB,CAACa,MAAOA,EAAOJ,KAAMA,CAAK,GAG/CA,AAAW,MAAXA,EAAKO,CAAC,CACFxB,EAAAuB,aAAA,CAACb,EAAqB,CAACW,MAAOA,CAAM,GAGxCxB,EAAWoB,GACPjB,EAAAuB,aAAA,CAACZ,EAAc,CAACU,MAAOA,EAAOJ,KAAMA,CAAK,GAG1CjB,EAAAuB,aAAA,CAACX,EAAU,CAACS,MAAOA,EAAOJ,KAAMA,EAAMU,MAAOV,EAAKU,KAAAA,AAAM,EAChE"}