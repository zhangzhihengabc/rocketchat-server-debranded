)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/webdav/WebdavFilePickerModal/WebdavFilePickerTable.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IWebdavNode } from '@rocket.chat/core-typings';\nimport { Box, Icon } from '@rocket.chat/fuselage';\nimport { useTranslation } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React from 'react';\n\nimport GenericNoResults from '../../../../components/GenericNoResults';\nimport {\n\tGenericTable,\n\tGenericTableBody,\n\tGenericTableCell,\n\tGenericTableHeader,\n\tGenericTableHeaderCell,\n\tGenericTableLoadingRow,\n\tGenericTableRow,\n} from '../../../../components/GenericTable';\nimport { timeAgo } from '../../../../lib/utils/timeAgo';\nimport type { WebdavSortOptions } from './WebdavFilePickerModal';\nimport { getNodeFileSize } from './lib/getNodeFileSize';\nimport { getNodeIconType } from './lib/getNodeIconType';\n\ntype WebdavFilePickerTableProps = {\n\twebdavNodes: IWebdavNode[];\n\tsortBy: string;\n\tsortDirection: 'asc' | 'desc';\n\tonSort: (sortBy: WebdavSortOptions, sortDirection?: 'asc' | 'desc') => void;\n\tonNodeClick: (webdavNode: IWebdavNode) => void;\n\tisLoading: boolean;\n};\n\nconst WebdavFilePickerTable = ({\n\twebdavNodes,\n\tsortBy,\n\tsortDirection,\n\tonSort,\n\tonNodeClick,\n\tisLoading,\n}: WebdavFilePickerTableProps): ReactElement => {\n\tconst t = useTranslation();\n\n\treturn (\n\t\t<Box display='flex' flexDirection='column' overflowY='hidden' height='x256'>\n\t\t\t{(isLoading || webdavNodes?.length > 0) && (\n\t\t\t\t<GenericTable>\n\t\t\t\t\t<GenericTableHeader>\n\t\t\t\t\t\t<GenericTableHeaderCell\n\t\t\t\t\t\t\twidth='300px'\n\t\t\t\t\t\t\tkey='name'\n\t\t\t\t\t\t\tdirection={sortDirection}\n\t\t\t\t\t\t\tactive={sortBy === 'name'}\n\t\t\t\t\t\t\tonClick={onSort}\n\t\t\t\t\t\t\tsort='name'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{t('Name')}\n\t\t\t\t\t\t</GenericTableHeaderCell>\n\t\t\t\t\t\t<GenericTableHeaderCell key='size' direction={sortDirection} active={sortBy === 'size'} onClick={onSort} sort='size'>\n\t\t\t\t\t\t\t{t('Size')}\n\t\t\t\t\t\t</GenericTableHeaderCell>\n\t\t\t\t\t\t<GenericTableHeaderCell\n\t\t\t\t\t\t\tkey='dataModified'\n\t\t\t\t\t\t\tdirection={sortDirection}\n\t\t\t\t\t\t\tactive={sortBy === 'dataModified'}\n\t\t\t\t\t\t\tonClick={onSort}\n\t\t\t\t\t\t\tsort='dataModified'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{t('Data_modified')}\n\t\t\t\t\t\t</GenericTableHeaderCell>\n\t\t\t\t\t</GenericTableHeader>\n\t\t\t\t\t<GenericTableBody>\n\t\t\t\t\t\t{isLoading &&\n\t\t\t\t\t\t\tArray(5)\n\t\t\t\t\t\t\t\t.fill('')\n\t\t\t\t\t\t\t\t.map((_, index) => <GenericTableLoadingRow key={index} cols={3} />)}\n\t\t\t\t\t\t{!isLoading &&\n\t\t\t\t\t\t\twebdavNodes?.map((webdavNode, index) => {\n\t\t\t\t\t\t\t\tconst { icon } = getNodeIconType(webdavNode.basename, webdavNode.type, webdavNode.mime);\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<GenericTableRow key={index} onClick={(): void => onNodeClick(webdavNode)} tabIndex={index} role='link' action>\n\t\t\t\t\t\t\t\t\t\t<GenericTableCell fontScale='p2' color='default' w='x200' display='flex' alignItems='center'>\n\t\t\t\t\t\t\t\t\t\t\t<Icon mie={4} size='x20' name={icon} />\n\t\t\t\t\t\t\t\t\t\t\t<Box withTruncatedText>{webdavNode.basename}</Box>\n\t\t\t\t\t\t\t\t\t\t</GenericTableCell>\n\t\t\t\t\t\t\t\t\t\t<GenericTableCell fontScale='p2' color='default'>\n\t\t\t\t\t\t\t\t\t\t\t<Box withTruncatedText>{getNodeFileSize(webdavNode.type, webdavNode?.size)}</Box>\n\t\t\t\t\t\t\t\t\t\t</GenericTableCell>\n\t\t\t\t\t\t\t\t\t\t<GenericTableCell fontScale='p2' color='default'>\n\t\t\t\t\t\t\t\t\t\t\t<Box withTruncatedText>{timeAgo(new Date())}</Box>\n\t\t\t\t\t\t\t\t\t\t</GenericTableCell>\n\t\t\t\t\t\t\t\t\t</GenericTableRow>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t</GenericTableBody>\n\t\t\t\t</GenericTable>\n\t\t\t)}\n\t\t\t{!isLoading && webdavNodes?.length === 0 && <GenericNoResults />}\n\t\t</Box>\n\t);\n};\n\nexport default WebdavFilePickerTable;\n",null],"names":["Box","Icon","useTranslation","React","GenericNoResults","GenericTable","GenericTableBody","GenericTableCell","GenericTableHeader","GenericTableHeaderCell","GenericTableLoadingRow","GenericTableRow","timeAgo","getNodeFileSize","getNodeIconType","module","link","default","exportDefault","_ref","webdavNodes","sortBy","sortDirection","onSort","onNodeClick","isLoading","t","createElement","display","flexDirection","overflowY","height","length","width","key","direction","active","onClick","sort","Array","fill","map","_","index","cols","webdavNode","icon","basename","type","mime","tabIndex","role","action","fontScale","color","w","alignItems","mie","size","name","withTruncatedText","Date"],"mappings":"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"}