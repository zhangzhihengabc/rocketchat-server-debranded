)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/webdav/SaveToWebdavModal.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { MessageAttachment, IWebdavAccount } from '@rocket.chat/core-typings';\nimport type { SelectOption } from '@rocket.chat/fuselage';\nimport { Modal, Box, Button, FieldGroup, Field, FieldLabel, FieldRow, FieldError, Select, Throbber } from '@rocket.chat/fuselage';\nimport { useUniqueId } from '@rocket.chat/fuselage-hooks';\nimport { useMethod, useToastMessageDispatch, useTranslation } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React, { useState, useMemo, useEffect, useRef } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\n\nimport { useEndpointData } from '../../../hooks/useEndpointData';\nimport { getWebdavServerName } from '../../../lib/getWebdavServerName';\n\ntype SaveToWebdavModalProps = {\n\tonClose: () => void;\n\tdata: {\n\t\tattachment: MessageAttachment;\n\t\turl: string;\n\t};\n};\n\nconst SaveToWebdavModal = ({ onClose, data }: SaveToWebdavModalProps): ReactElement => {\n\tconst t = useTranslation();\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst uploadFileToWebdav = useMethod('uploadFileToWebdav');\n\tconst fileRequest = useRef<XMLHttpRequest | null>(null);\n\tconst accountIdField = useUniqueId();\n\n\tconst {\n\t\tcontrol,\n\t\thandleSubmit,\n\t\tformState: { errors },\n\t} = useForm<{ accountId: string }>();\n\n\tconst { value } = useEndpointData('/v1/webdav.getMyAccounts');\n\n\tconst accountsOptions: SelectOption[] = useMemo(() => {\n\t\tif (value?.accounts) {\n\t\t\treturn value.accounts.map(({ _id, ...current }) => [_id, getWebdavServerName(current)]);\n\t\t}\n\n\t\treturn [];\n\t}, [value?.accounts]);\n\n\tuseEffect(() => fileRequest.current?.abort, []);\n\n\tconst handleSaveFile = ({ accountId }: { accountId: IWebdavAccount['_id'] }): void => {\n\t\tsetIsLoading(true);\n\n\t\tconst {\n\t\t\turl,\n\t\t\tattachment: { title },\n\t\t} = data;\n\n\t\tfileRequest.current = new XMLHttpRequest();\n\t\tfileRequest.current.open('GET', url, true);\n\t\tfileRequest.current.responseType = 'arraybuffer';\n\t\tfileRequest.current.onload = async (): Promise<void> => {\n\t\t\tconst arrayBuffer = fileRequest.current?.response;\n\t\t\tif (arrayBuffer) {\n\t\t\t\tconst fileData = new Uint8Array(arrayBuffer);\n\n\t\t\t\ttry {\n\t\t\t\t\tif (!title) {\n\t\t\t\t\t\tthrow new Error('File name is required');\n\t\t\t\t\t}\n\t\t\t\t\tconst response = await uploadFileToWebdav(accountId, fileData, title);\n\t\t\t\t\tif (!response.success) {\n\t\t\t\t\t\tthrow new Error(response.message ? t(response.message) : 'Error uploading file');\n\t\t\t\t\t}\n\t\t\t\t\treturn dispatchToastMessage({ type: 'success', message: t('File_uploaded') });\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn dispatchToastMessage({ type: 'error', message: error });\n\t\t\t\t} finally {\n\t\t\t\t\tsetIsLoading(false);\n\t\t\t\t\tonClose();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tfileRequest.current.send(null);\n\t};\n\n\treturn (\n\t\t<Modal wrapperFunction={(props) => <Box is='form' onSubmit={handleSubmit(handleSaveFile)} {...props} />}>\n\t\t\t<Modal.Header>\n\t\t\t\t<Modal.Title>{t('Save_To_Webdav')}</Modal.Title>\n\t\t\t\t<Modal.Close title={t('Close')} onClick={onClose} />\n\t\t\t</Modal.Header>\n\t\t\t<Modal.Content>\n\t\t\t\t{isLoading && (\n\t\t\t\t\t<Box alignItems='center' display='flex' justifyContent='center' minHeight='x32'>\n\t\t\t\t\t\t<Throbber />\n\t\t\t\t\t</Box>\n\t\t\t\t)}\n\t\t\t\t{!isLoading && (\n\t\t\t\t\t<FieldGroup>\n\t\t\t\t\t\t<Field>\n\t\t\t\t\t\t\t<FieldLabel>{t('Select_a_webdav_server')}</FieldLabel>\n\t\t\t\t\t\t\t<FieldRow>\n\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\tname='accountId'\n\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\trules={{ required: true }}\n\t\t\t\t\t\t\t\t\trender={({ field }): ReactElement => (\n\t\t\t\t\t\t\t\t\t\t<Select {...field} options={accountsOptions} id={accountIdField} placeholder={t('Select_an_option')} />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FieldRow>\n\t\t\t\t\t\t\t{errors.accountId && <FieldError>{t('Field_required')}</FieldError>}\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t</FieldGroup>\n\t\t\t\t)}\n\t\t\t</Modal.Content>\n\t\t\t<Modal.Footer>\n\t\t\t\t<Modal.FooterControllers>\n\t\t\t\t\t<Button onClick={onClose}>{t('Cancel')}</Button>\n\t\t\t\t\t<Button primary type='submit' loading={isLoading}>\n\t\t\t\t\t\t{t('Save_To_Webdav')}\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.FooterControllers>\n\t\t\t</Modal.Footer>\n\t\t</Modal>\n\t);\n};\nexport default SaveToWebdavModal;\n",null],"names":["_extends","_objectWithoutProperties","Modal","Box","Button","FieldGroup","Field","FieldLabel","FieldRow","FieldError","Select","Throbber","useUniqueId","useMethod","useToastMessageDispatch","useTranslation","React","useState","useMemo","useEffect","useRef","useForm","Controller","useEndpointData","getWebdavServerName","module","link","default","v","exportDefault","_ref","onClose","data","t","isLoading","setIsLoading","dispatchToastMessage","uploadFileToWebdav","fileRequest","accountIdField","control","handleSubmit","formState","errors","value","accountsOptions","accounts","map","_ref2","_id","_excluded","_fileRequest$current","current","abort","handleSaveFile","_ref3","accountId","url","attachment","title","XMLHttpRequest","open","responseType","onload","_fileRequest$current2","arrayBuffer","response","fileData","Uint8Array","Error","success","message","type","error","send","createElement","wrapperFunction","props","is","onSubmit","Header","Title","Close","onClick","Content","alignItems","display","justifyContent","minHeight","name","rules","required","render","_ref4","field","options","id","placeholder","Footer","FooterControllers","primary","loading"],"mappings":"2BAEAA,EAA0FC,EAA1FC,EAASC,EAAKC,EAAOC,EAAQC,EAAAC,EAAmBC,EAAUC,EAAUC,EAAEC,EAA4DC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,gBAAzHC,EAAUC,IAAE,CAAA,iCAAqC,CAAAC,QAAEC,CAAQ,EAAE5B,EAAAA,CAAU,CAAA,EAAE,GAAwByB,EAAAA,IAAAA,CAAAA,iDAAwB,CAAAE,QAAAA,CAAAA,EAAA1B,EAAAA,CAAA,CAAA,EAAA,GAAhDwB,EAAQC,IAAA,CAAA,wBAAgB,CAAAxB,MAAAA,CAAuB,EAACA,EAAAA,CAAA,EAAAC,IAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,OAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,MAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,OAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAc,EAAAA,IAAAA,CAAAA,8BAAAA,CAAAb,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAa,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAZ,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,wBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAU,EAAAA,IAAAA,CAAAA,QAAAA,CAAAE,QAAAA,CAAAA,EAAAX,EAAAA,CAAA,EAAAC,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,QAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,OAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,kBAAAA,CAAAJ,QAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,iCAAAA,CAAAF,gBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,mCAAAA,CAAAD,oBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAlIC,EAAOI,aAAY,CAkBOC,IAA4D,GAA3D,CAAEC,QAAAA,CAAO,CAAEC,KAAAA,CAAAA,CAA8B,CAAAF,EAC7DG,EAAIlB,IACJ,CAACmB,EAAWC,EAAa,CAAGlB,EAAS,CAAA,GACrCmB,EAAuBtB,IACvBuB,EAAqBxB,EAAU,sBAC/ByB,EAAclB,EAA8B,MAC5CmB,EAAiB3B,IAEjB,CACL4B,QAAAA,CAAO,CACPC,aAAAA,CAAY,CACZC,UAAW,CAAEC,OAAAA,CAAAA,CAAM,CACnB,CAAGtB,IAEE,CAAEuB,MAAAA,CAAAA,CAAO,CAAGrB,EAAgB,4BAE5BsB,EAAkC3B,EAAQ,IAC/C,AAAI0B,MAAAA,GAAAA,EAAOE,QAAQ,CACXF,EAAME,QAAQ,CAACC,GAAG,CAACC,IAAA,GAAC,CAAEC,IAAAA,CAAAA,CAAiB,CAAAD,EAAF,MAAO,CAACC,EAAKzB,EAAbvB,EAAA+C,EAAAE,IAA0C,GAGhF,EAAE,CACP,CAACN,MAAAA,EAAK,KAAA,EAALA,EAAOE,QAAQ,CAAC,EAEpB3B,EAAU,KAAA,IAAAgC,EAAA,OAAA,AAAyB,OAAzBA,CAAAA,EAAMb,EAAYc,OAAO,AAAPA,GAAOD,AAAA,KAAA,IAAAA,EAAA,KAAA,EAAnBA,EAAqBE,KAAK,EAAE,EAAE,EAE9C,IAAMC,EAAiBC,IAA8D,GAA7D,CAAEC,UAAAA,CAAAA,CAAiD,CAAAD,EAC1EpB,EAAa,CAAA,GAEb,GAAM,CACLsB,IAAAA,CAAG,CACHC,WAAY,CAAEC,MAAAA,CAAAA,CAAK,CACnB,CAAG3B,CAEJM,CAAAA,EAAYc,OAAO,CAAG,IAAIQ,eAC1BtB,EAAYc,OAAO,CAACS,IAAI,CAAC,MAAOJ,EAAK,CAAA,GACrCnB,EAAYc,OAAO,CAACU,YAAY,CAAG,cACnCxB,EAAYc,OAAO,CAACW,MAAM,CAAG,UAA0B,IAAAC,EACtD,IAAMC,EAAW,AAAsB,OAAtBD,CAAAA,EAAG1B,EAAYc,OAAO,AAAPA,GAAOY,AAAA,KAAA,IAAAA,EAAA,KAAA,EAAnBA,EAAqBE,QAAQ,CACjD,GAAID,EAAa,CAChB,IAAME,EAAW,IAAIC,WAAWH,GAEhC,GAAI,CACH,GAAI,CAACN,EACJ,MAAM,AAAIU,MAAM,yBAEjB,IAAMH,EAAW,MAAM7B,EAAmBmB,EAAWW,EAAUR,GAC/D,GAAI,CAACO,EAASI,OAAO,CACpB,MAAM,AAAID,MAAMH,EAASK,OAAO,CAAGtC,EAAEiC,EAASK,OAAO,EAAI,wBAE1D,OAAOnC,EAAqB,CAAEoC,KAAM,UAAWD,QAAStC,EAAE,gBAAgB,GACzE,MAAOwC,EAAO,CACf,OAAOrC,EAAqB,CAAEoC,KAAM,QAASD,QAASE,CAAK,UAClD,CACTtC,EAAa,CAAA,GACbJ,KAGH,EACAO,EAAYc,OAAO,CAACsB,IAAI,CAAC,KAC1B,EAEA,OACC1D,EAAA2D,aAAA,CAACzE,EAAK,CAAC0E,gBAAkBC,GAAU7D,EAAA2D,aAAA,CAACxE,EAAGH,EAAA,CAAC8E,GAAG,OAAOC,SAAUtC,EAAaa,EAAgB,EAAKuB,GAAU,EACvG7D,EAAA2D,aAAA,CAACzE,EAAM8E,MAAM,CAAA,KACZhE,EAAA2D,aAAA,CAACzE,EAAM+E,KAAK,CAAA,KAAEhD,EAAE,mBAChBjB,EAAA2D,aAAA,CAACzE,EAAMgF,KAAK,CAAA,CAACvB,MAAO1B,EAAE,SAAUkD,QAASpD,CAAQ,IAElDf,EAAA2D,aAAA,CAACzE,EAAMkF,OAAO,CAAA,KACZlD,GACAlB,EAAA2D,aAAA,CAACxE,EAAG,CAACkF,WAAW,SAASC,QAAQ,OAAOC,eAAe,SAASC,UAAU,KAAK,EAC9ExE,EAAA2D,aAAA,CAAChE,EAAQ,OAGV,CAACuB,GACDlB,EAAA2D,aAAA,CAACtE,EAAU,KACVW,EAAA2D,aAAA,CAACrE,EAAK,KACLU,EAAA2D,aAAA,CAACpE,EAAU,KAAE0B,EAAE,2BACfjB,EAAA2D,aAAA,CAACnE,EAAQ,KACRQ,EAAA2D,aAAA,CAACrD,EAAU,CACVmE,KAAK,YACLjD,QAASA,EACTkD,MAAO,CAAEC,SAAU,CAAA,CAAI,EACvBC,OAAQC,IAAA,GAAC,CAAEC,MAAAA,CAAAA,CAAO,CAAAD,EAAA,OACjB7E,EAAA2D,aAAA,CAACjE,EAAMV,EAAA,CAAA,EAAK8F,EAAK,CAAEC,QAASlD,EAAiBmD,GAAIzD,EAAgB0D,YAAahE,EAAE,mBAAoB,GAAG,CACtG,IAGHU,EAAOa,SAAS,EAAIxC,EAAA2D,aAAA,CAAClE,EAAU,KAAEwB,EAAE,sBAKxCjB,EAAA2D,aAAA,CAACzE,EAAMgG,MAAM,CAAA,KACZlF,EAAA2D,aAAA,CAACzE,EAAMiG,iBAAiB,CAAA,KACvBnF,EAAA2D,aAAA,CAACvE,EAAM,CAAC+E,QAASpD,CAAQ,EAAEE,EAAE,WAC7BjB,EAAA2D,aAAA,CAACvE,EAAM,CAACgG,QAAO,CAAA,EAAC5B,KAAK,SAAS6B,QAASnE,CAAU,EAC/CD,EAAE,qBAMT"}