)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/UserCard/UserCardWithData.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport { PositionAnimated, AnimatedVisibility } from '@rocket.chat/fuselage';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useSetting, useRolesDescription, useTranslation } from '@rocket.chat/ui-contexts';\nimport type { ReactElement, UIEvent } from 'react';\nimport React, { useMemo, useRef } from 'react';\n\nimport { getUserDisplayName } from '../../../../lib/getUserDisplayName';\nimport { Backdrop } from '../../../components/Backdrop';\nimport GenericMenu from '../../../components/GenericMenu/GenericMenu';\nimport LocalTime from '../../../components/LocalTime';\nimport UserCard from '../../../components/UserCard';\nimport { ReactiveUserStatus } from '../../../components/UserStatus';\nimport { useUserInfoQuery } from '../../../hooks/useUserInfoQuery';\nimport { useUserInfoActions } from '../hooks/useUserInfoActions';\n\ntype UserCardWithDataProps = {\n\tusername: string;\n\ttarget: Element;\n\trid: IRoom['_id'];\n\topen: (e: UIEvent) => void;\n\tonClose: () => void;\n};\n\nconst UserCardWithData = ({ username, target, rid, open, onClose }: UserCardWithDataProps): ReactElement => {\n\tconst t = useTranslation();\n\tconst ref = useRef(target);\n\tconst getRoles = useRolesDescription();\n\tconst showRealNames = Boolean(useSetting('UI_Use_Real_Name'));\n\n\tconst { data, isLoading } = useUserInfoQuery({ username });\n\n\tref.current = target;\n\n\tconst user = useMemo(() => {\n\t\tconst defaultValue = isLoading ? undefined : null;\n\n\t\tconst {\n\t\t\t_id,\n\t\t\tname,\n\t\t\troles = defaultValue,\n\t\t\tstatusText = defaultValue,\n\t\t\tbio = defaultValue,\n\t\t\tutcOffset = defaultValue,\n\t\t\tnickname,\n\t\t\tavatarETag,\n\t\t} = data?.user || {};\n\n\t\treturn {\n\t\t\t_id,\n\t\t\tname: getUserDisplayName(name, username, showRealNames),\n\t\t\tusername,\n\t\t\troles: roles && getRoles(roles).map((role, index) => <UserCard.Role key={index}>{role}</UserCard.Role>),\n\t\t\tbio,\n\t\t\tetag: avatarETag,\n\t\t\tlocalTime: utcOffset && Number.isInteger(utcOffset) && <LocalTime utcOffset={utcOffset} />,\n\t\t\tstatus: _id && <ReactiveUserStatus uid={_id} />,\n\t\t\tcustomStatus: statusText,\n\t\t\tnickname,\n\t\t};\n\t}, [data, username, showRealNames, isLoading, getRoles]);\n\n\tconst handleOpen = useMutableCallback((e: UIEvent) => {\n\t\topen?.(e);\n\t\tonClose?.();\n\t});\n\n\tconst { actions: actionsDefinition, menuActions: menuOptions } = useUserInfoActions(\n\t\t{ _id: user._id ?? '', username: user.username, name: user.name },\n\t\trid,\n\t);\n\n\tconst menu = useMemo(() => {\n\t\tif (!menuOptions?.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn <GenericMenu title={t('More')} key='menu' data-qa-id='menu' sections={menuOptions} placement='bottom-start' />;\n\t}, [menuOptions, t]);\n\n\tconst actions = useMemo(() => {\n\t\tconst mapAction = ([key, { content, icon, onClick }]: any): ReactElement => (\n\t\t\t<UserCard.Action key={key} label={content} aria-label={content} onClick={onClick} icon={icon} />\n\t\t);\n\n\t\treturn [...actionsDefinition.map(mapAction), menu].filter(Boolean);\n\t}, [actionsDefinition, menu]);\n\n\treturn (\n\t\t<>\n\t\t\t<Backdrop bg='transparent' onClick={onClose} />\n\t\t\t<PositionAnimated anchor={ref} placement='top-start' margin={8} visible={AnimatedVisibility.UNHIDING}>\n\t\t\t\t<UserCard {...user} onClose={onClose} open={handleOpen} actions={actions} isLoading={isLoading} />\n\t\t\t</PositionAnimated>\n\t\t</>\n\t);\n};\n\nexport default UserCardWithData;\n",null],"names":["_extends","PositionAnimated","AnimatedVisibility","useMutableCallback","useSetting","useRolesDescription","useTranslation","React","useMemo","useRef","getUserDisplayName","Backdrop","GenericMenu","LocalTime","UserCard","ReactiveUserStatus","useUserInfoQuery","useUserInfoActions","module","default","v","link","exportDefault","_ref","_user$_id","username","target","rid","open","onClose","t","ref","getRoles","showRealNames","Boolean","data","isLoading","current","user","defaultValue","undefined","_id","name","roles","statusText","bio","utcOffset","nickname","avatarETag","map","role","index","createElement","Role","key","etag","localTime","Number","isInteger","status","uid","customStatus","handleOpen","e","actions","actionsDefinition","menuActions","menuOptions","menu","length","title","sections","placement","_ref2","content","icon","onClick","Action","label","filter","Fragment","bg","anchor","margin","visible","UNHIDING"],"mappings":"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"}