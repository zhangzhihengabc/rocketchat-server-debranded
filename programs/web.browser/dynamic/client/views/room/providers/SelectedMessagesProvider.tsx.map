)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/providers/SelectedMessagesProvider.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Emitter } from '@rocket.chat/emitter';\nimport type { FC } from 'react';\nimport React, { useMemo } from 'react';\n\nimport { SelectedMessageContext } from '../MessageList/contexts/SelectedMessagesContext';\n\n// data-qa-select\n\nexport const selectedMessageStore = new (class SelectMessageStore extends Emitter<\n\t{\n\t\tchange: undefined;\n\t\ttoggleIsSelecting: boolean;\n\t} & { [mid: string]: boolean }\n> {\n\tstore = new Set<string>();\n\n\tisSelecting = false;\n\n\tsetIsSelecting(isSelecting: boolean): void {\n\t\tthis.isSelecting = isSelecting;\n\t\tthis.emit('toggleIsSelecting', isSelecting);\n\t}\n\n\tgetIsSelecting(): boolean {\n\t\treturn this.isSelecting;\n\t}\n\n\tisSelected(mid: string): boolean {\n\t\treturn Boolean(this.store.has(mid));\n\t}\n\n\tgetSelectedMessages(): string[] {\n\t\treturn Array.from(this.store);\n\t}\n\n\ttoggle(mid: string): void {\n\t\tif (this.store.has(mid)) {\n\t\t\tthis.store.delete(mid);\n\t\t\tthis.emit(mid, false);\n\t\t\tthis.emit('change');\n\t\t\treturn;\n\t\t}\n\t\tthis.store.add(mid);\n\t\tthis.emit(mid, true);\n\t\tthis.emit('change');\n\t}\n\n\tcount(): number {\n\t\treturn this.store.size;\n\t}\n\n\tclearStore(): void {\n\t\tconst selectedMessages = this.getSelectedMessages();\n\t\tthis.store.clear();\n\t\tselectedMessages.forEach((mid) => this.emit(mid, false));\n\t\tthis.emit('change');\n\t}\n\n\treset(): void {\n\t\tthis.clearStore();\n\t\tthis.isSelecting = false;\n\t\tthis.emit('toggleIsSelecting', false);\n\t}\n})();\n\nexport const SelectedMessagesProvider: FC = ({ children }) => {\n\tconst value = useMemo(\n\t\t() => ({\n\t\t\tselectedMessageStore,\n\t\t}),\n\t\t[],\n\t);\n\n\treturn <SelectedMessageContext.Provider value={value}>{children}</SelectedMessageContext.Provider>;\n};\n",null],"names":["Emitter","React","useMemo","SelectedMessageContext","module","export","selectedMessageStore","SelectedMessagesProvider","default","SelectMessageStore","constructor","arguments","store","Set","isSelecting","setIsSelecting","emit","getIsSelecting","isSelected","mid","Boolean","has","getSelectedMessages","Array","from","toggle","delete","add","count","size","clearStore","selectedMessages","clear","forEach","reset","_ref","children","value","createElement","Provider"],"mappings":"2BAA+CA,EAAAC,EAAAC,EAAAC,EAA/CC,EAAOC,MAAE,CAAA,CAAAC,qBAAe,IAAAA,EAAuBC,yBAAAA,IAAAA,CAAA,GAAAH,EAAAA,IAAAA,CAAAA,uBAAAA,CAAAJ,QAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,QAAAA,CAAAI,QAAAA,CAAAA,EAAAP,EAAAA,CAAA,EAAAC,QAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,kDAAAA,CAAAD,uBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAQxC,IAAMG,EAAuB,IAAK,MAAMG,UAA2BT,EAKzEU,aAAA,CAAA,KAAA,IAAAC,WAAA,IAAA,CACAC,KAAK,CAAG,IAAIC,IAAa,IAAA,CAEzBC,WAAW,CAAG,CAAA,CAAK,CAEnBC,eAAeD,CAAoB,CAAA,CAClC,IAAI,CAACA,WAAW,CAAGA,EACnB,IAAI,CAACE,IAAI,CAAC,oBAAqBF,EAChC,CAEAG,gBAAc,CACb,OAAO,IAAI,CAACH,WAAW,AACxB,CAEAI,WAAWC,CAAW,CAAA,CACrB,MAAOC,CAAAA,CAAQ,IAAI,CAACR,KAAK,CAACS,GAAG,CAACF,EAC/B,CAEAG,qBAAmB,CAClB,OAAOC,MAAMC,IAAI,CAAC,IAAI,CAACZ,KAAK,CAC7B,CAEAa,OAAON,CAAW,CAAA,CACjB,GAAI,IAAI,CAACP,KAAK,CAACS,GAAG,CAACF,GAAM,CACxB,IAAI,CAACP,KAAK,CAACc,MAAM,CAACP,GAClB,IAAI,CAACH,IAAI,CAACG,EAAK,CAAA,GACf,IAAI,CAACH,IAAI,CAAC,UACV,OAED,IAAI,CAACJ,KAAK,CAACe,GAAG,CAACR,GACf,IAAI,CAACH,IAAI,CAACG,EAAK,CAAA,GACf,IAAI,CAACH,IAAI,CAAC,SACX,CAEAY,OAAK,CACJ,OAAO,IAAI,CAAChB,KAAK,CAACiB,IAAI,AACvB,CAEAC,YAAU,CACT,IAAMC,EAAmB,IAAI,CAACT,mBAAmB,GACjD,IAAI,CAACV,KAAK,CAACoB,KAAK,GAChBD,EAAiBE,OAAO,CAAEd,GAAQ,IAAI,CAACH,IAAI,CAACG,EAAK,CAAA,IACjD,IAAI,CAACH,IAAI,CAAC,SACX,CAEAkB,OAAK,CACJ,IAAI,CAACJ,UAAU,GACf,IAAI,CAAChB,WAAW,CAAG,CAAA,EACnB,IAAI,CAACE,IAAI,CAAC,oBAAqB,CAAA,EAChC,GAGYT,EAA+B4B,IAAiB,GAAhB,CAAEC,SAAAA,CAAAA,CAAU,CAAAD,EAClDE,EAAQnC,EACb,IAAO,CAAA,CACNI,qBAAAA,IAED,EAAE,EAGH,OAAOL,EAAAqC,aAAA,CAACnC,EAAuBoC,QAAQ,CAAA,CAACF,MAAOA,CAAM,EAAED,EACxD"}