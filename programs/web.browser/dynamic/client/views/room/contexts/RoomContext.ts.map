)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/contexts/RoomContext.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRoom, IOmnichannelRoom, IVoipRoom, ISubscription } from '@rocket.chat/core-typings';\nimport { isOmnichannelRoom, isVoipRoom } from '@rocket.chat/core-typings';\nimport { createContext, useContext } from 'react';\n\nexport interface IRoomWithFederationOriginalName extends IRoom {\n\tfederationOriginalName?: string;\n}\n\ntype RoomContextValue = {\n\trid: IRoom['_id'];\n\troom: IRoomWithFederationOriginalName;\n\tsubscription?: ISubscription;\n\thasMorePreviousMessages: boolean;\n\thasMoreNextMessages: boolean;\n\tisLoadingMoreMessages: boolean;\n};\n\nexport const RoomContext = createContext<RoomContextValue | null>(null);\n\nexport const useUserIsSubscribed = (): boolean => {\n\tconst context = useContext(RoomContext);\n\n\tif (!context) {\n\t\tthrow new Error('use useRoom only inside opened rooms');\n\t}\n\n\treturn !!context.subscription;\n};\n\nexport const useRoom = (): IRoom => {\n\tconst context = useContext(RoomContext);\n\n\tif (!context) {\n\t\tthrow new Error('use useRoom only inside opened rooms');\n\t}\n\n\treturn context.room;\n};\n\nexport const useRoomSubscription = (): ISubscription | undefined => {\n\tconst context = useContext(RoomContext);\n\n\tif (!context) {\n\t\tthrow new Error('use useRoomSubscription only inside opened rooms');\n\t}\n\n\treturn context.subscription;\n};\n\nexport const useRoomMessages = (): {\n\thasMorePreviousMessages: boolean;\n\thasMoreNextMessages: boolean;\n\tisLoadingMoreMessages: boolean;\n} => {\n\tconst context = useContext(RoomContext);\n\n\tif (!context) {\n\t\tthrow new Error('use useRoomMessages only inside opened rooms');\n\t}\n\n\treturn {\n\t\thasMorePreviousMessages: context.hasMorePreviousMessages,\n\t\thasMoreNextMessages: context.hasMoreNextMessages,\n\t\tisLoadingMoreMessages: context.isLoadingMoreMessages,\n\t};\n};\n\nexport const useOmnichannelRoom = (): IOmnichannelRoom => {\n\t// TODO: today if the user do not belong in the room, the room object will not update on new changes\n\t// for normal rooms this is OK, but for Omnichannel rooms,\n\t// there are cases where an agent can be outside of the room but need to see the room changes\n\t// A solution would be to use subscribeToRoom to get the room updates\n\n\tconst { room } = useContext(RoomContext) || {};\n\n\tif (!room) {\n\t\tthrow new Error('use useRoom only inside opened rooms');\n\t}\n\n\tif (!isOmnichannelRoom(room)) {\n\t\tthrow new Error('invalid room type');\n\t}\n\n\treturn room;\n};\n\nexport const useVoipRoom = (): IVoipRoom => {\n\tconst { room } = useContext(RoomContext) || {};\n\n\tif (!room) {\n\t\tthrow new Error('use useRoom only inside opened rooms');\n\t}\n\n\tif (!isVoipRoom(room)) {\n\t\tthrow new Error('invalid room type');\n\t}\n\n\treturn room;\n};\n",null],"names":["isOmnichannelRoom","isVoipRoom","createContext","useContext","module","export","RoomContext","useUserIsSubscribed","useRoom","useRoomSubscription","useRoomMessages","useOmnichannelRoom","useVoipRoom","context","Error","subscription","room","hasMorePreviousMessages","hasMoreNextMessages","isLoadingMoreMessages"],"mappings":"2BAC0EA,EAAAC,EAAAC,EAAAC,EAA1EC,EAAOC,MAAE,CAAA,CAAAC,YAAiB,IAAEA,EAAYC,oBAAM,IAAAA,EAA4BC,QAAAA,IAAAA,EAAAC,oBAAAA,IAAAA,EAAAC,gBAAAA,IAAAA,EAAAC,mBAAAA,IAAAA,EAAAC,YAAAA,IAAAA,CAAA,GAAAR,EAAAA,IAAAA,CAAAA,4BAAAA,CAAAJ,kBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,QAAAA,CAAAF,cAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAgBnE,IAAMG,EAAcJ,EAAuC,MAErDK,EAAsB,KAClC,IAAMM,EAAUV,EAAWG,GAE3B,GAAI,CAACO,EACJ,MAAM,AAAIC,MAAM,wCAGjB,MAAO,CAAC,CAACD,EAAQE,YAAY,AAC9B,EAEaP,EAAU,KACtB,IAAMK,EAAUV,EAAWG,GAE3B,GAAI,CAACO,EACJ,MAAM,AAAIC,MAAM,wCAGjB,OAAOD,EAAQG,IAAI,AACpB,EAEaP,EAAsB,KAClC,IAAMI,EAAUV,EAAWG,GAE3B,GAAI,CAACO,EACJ,MAAM,AAAIC,MAAM,oDAGjB,OAAOD,EAAQE,YAAY,AAC5B,EAEaL,EAAkB,KAK9B,IAAMG,EAAUV,EAAWG,GAE3B,GAAI,CAACO,EACJ,MAAM,AAAIC,MAAM,gDAGjB,MAAO,CACNG,wBAAyBJ,EAAQI,uBAAuB,CACxDC,oBAAqBL,EAAQK,mBAAmB,CAChDC,sBAAuBN,EAAQM,qBAAAA,CAEjC,EAEaR,EAAqB,KAMjC,GAAM,CAAEK,KAAAA,CAAAA,CAAM,CAAGb,EAAWG,IAAgB,CAAA,EAE5C,GAAI,CAACU,EACJ,MAAM,AAAIF,MAAM,wCAGjB,GAAI,CAACd,EAAkBgB,GACtB,MAAM,AAAIF,MAAM,qBAGjB,OAAOE,CACR,EAEaJ,EAAc,KAC1B,GAAM,CAAEI,KAAAA,CAAAA,CAAM,CAAGb,EAAWG,IAAgB,CAAA,EAE5C,GAAI,CAACU,EACJ,MAAM,AAAIF,MAAM,wCAGjB,GAAI,CAACb,EAAWe,GACf,MAAM,AAAIF,MAAM,qBAGjB,OAAOE,CACR"}