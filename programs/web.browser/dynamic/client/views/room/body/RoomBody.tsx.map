)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/body/RoomBody.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IMessage, IUser } from '@rocket.chat/core-typings';\nimport { isEditedMessage } from '@rocket.chat/core-typings';\nimport {\n\tusePermission,\n\tuseRole,\n\tuseRouter,\n\tuseSearchParameter,\n\tuseSetting,\n\tuseTranslation,\n\tuseUser,\n\tuseUserPreference,\n} from '@rocket.chat/ui-contexts';\nimport type { MouseEventHandler, ReactElement, UIEvent } from 'react';\nimport React, { memo, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\n\nimport { ChatMessage, RoomRoles } from '../../../../app/models/client';\nimport { RoomHistoryManager } from '../../../../app/ui-utils/client';\nimport { isAtBottom } from '../../../../app/ui/client/views/app/lib/scrolling';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { isTruthy } from '../../../../lib/isTruthy';\nimport { withDebouncing, withThrottling } from '../../../../lib/utils/highOrderFunctions';\nimport ScrollableContentWrapper from '../../../components/ScrollableContentWrapper';\nimport { useEmbeddedLayout } from '../../../hooks/useEmbeddedLayout';\nimport { useReactiveQuery } from '../../../hooks/useReactiveQuery';\nimport { RoomManager } from '../../../lib/RoomManager';\nimport type { Upload } from '../../../lib/chats/Upload';\nimport { roomCoordinator } from '../../../lib/rooms/roomCoordinator';\nimport { setMessageJumpQueryStringParameter } from '../../../lib/utils/setMessageJumpQueryStringParameter';\nimport Announcement from '../Announcement';\nimport { MessageList } from '../MessageList/MessageList';\nimport MessageListErrorBoundary from '../MessageList/MessageListErrorBoundary';\nimport ComposerContainer from '../composer/ComposerContainer';\nimport RoomComposer from '../composer/RoomComposer/RoomComposer';\nimport { useChat } from '../contexts/ChatContext';\nimport { useRoom, useRoomSubscription, useRoomMessages } from '../contexts/RoomContext';\nimport { useRoomToolbox } from '../contexts/RoomToolboxContext';\nimport { useScrollMessageList } from '../hooks/useScrollMessageList';\nimport DropTargetOverlay from './DropTargetOverlay';\nimport JumpToRecentMessageButton from './JumpToRecentMessageButton';\nimport LeaderBar from './LeaderBar';\nimport LoadingMessagesIndicator from './LoadingMessagesIndicator';\nimport RetentionPolicyWarning from './RetentionPolicyWarning';\nimport RoomForeword from './RoomForeword/RoomForeword';\nimport UnreadMessagesIndicator from './UnreadMessagesIndicator';\nimport UploadProgressIndicator from './UploadProgressIndicator';\nimport { useFileUploadDropTarget } from './hooks/useFileUploadDropTarget';\nimport { useGoToHomeOnRemoved } from './hooks/useGoToHomeOnRemoved';\nimport { useReadMessageWindowEvents } from './hooks/useReadMessageWindowEvents';\nimport { useRestoreScrollPosition } from './hooks/useRestoreScrollPosition';\nimport { useRetentionPolicy } from './hooks/useRetentionPolicy';\nimport { useUnreadMessages } from './hooks/useUnreadMessages';\n\nconst RoomBody = (): ReactElement => {\n\tconst t = useTranslation();\n\tconst isLayoutEmbedded = useEmbeddedLayout();\n\tconst room = useRoom();\n\tconst user = useUser();\n\tconst toolbox = useRoomToolbox();\n\tconst admin = useRole('admin');\n\tconst subscription = useRoomSubscription();\n\n\tconst [lastMessageDate, setLastMessageDate] = useState<Date | undefined>();\n\tconst [hideLeaderHeader, setHideLeaderHeader] = useState(false);\n\tconst [hasNewMessages, setHasNewMessages] = useState(false);\n\n\tconst hideFlexTab = useUserPreference<boolean>('hideFlexTab') || undefined;\n\tconst hideUsernames = useUserPreference<boolean>('hideUsernames');\n\tconst displayAvatars = useUserPreference<boolean>('displayAvatars');\n\n\tconst wrapperRef = useRef<HTMLDivElement | null>(null);\n\tconst messagesBoxRef = useRef<HTMLDivElement | null>(null);\n\tconst atBottomRef = useRef(true);\n\tconst lastScrollTopRef = useRef(0);\n\n\tconst chat = useChat();\n\n\tif (!chat) {\n\t\tthrow new Error('No ChatContext provided');\n\t}\n\n\tconst [fileUploadTriggerProps, fileUploadOverlayProps] = useFileUploadDropTarget();\n\n\tconst _isAtBottom = useCallback((scrollThreshold = 0) => {\n\t\tconst wrapper = wrapperRef.current;\n\n\t\tif (!wrapper) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (isAtBottom(wrapper, scrollThreshold)) {\n\t\t\tsetHasNewMessages(false);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}, []);\n\n\tconst scrollMessageList = useScrollMessageList(wrapperRef);\n\n\tconst sendToBottom = useCallback(() => {\n\t\tscrollMessageList((wrapper) => {\n\t\t\treturn { left: 30, top: wrapper?.scrollHeight };\n\t\t});\n\n\t\tsetHasNewMessages(false);\n\t}, [scrollMessageList]);\n\n\tconst sendToBottomIfNecessary = useCallback(() => {\n\t\tif (atBottomRef.current === true) {\n\t\t\tsendToBottom();\n\t\t}\n\t}, [sendToBottom]);\n\n\tconst checkIfScrollIsAtBottom = useCallback(() => {\n\t\tatBottomRef.current = _isAtBottom(100);\n\t}, [_isAtBottom]);\n\n\tconst handleNewMessageButtonClick = useCallback(() => {\n\t\tatBottomRef.current = true;\n\t\tsendToBottomIfNecessary();\n\t\tchat.composer?.focus();\n\t}, [chat, sendToBottomIfNecessary]);\n\n\tconst handleJumpToRecentButtonClick = useCallback(() => {\n\t\tatBottomRef.current = true;\n\t\tRoomHistoryManager.clear(room._id);\n\t\tRoomHistoryManager.getMoreIfIsEmpty(room._id);\n\t}, [room._id]);\n\n\tconst [unread, setUnreadCount] = useUnreadMessages(room);\n\n\tconst uploads = useSyncExternalStore(chat.uploads.subscribe, chat.uploads.get);\n\n\tconst { hasMorePreviousMessages, hasMoreNextMessages, isLoadingMoreMessages } = useRoomMessages();\n\n\tconst allowAnonymousRead = useSetting('Accounts_AllowAnonymousRead') as boolean | undefined;\n\n\tconst canPreviewChannelRoom = usePermission('preview-c-room');\n\n\tconst subscribed = !!subscription;\n\n\tconst canPreview = useMemo(() => {\n\t\tif (room && room.t !== 'c') {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (allowAnonymousRead === true) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (canPreviewChannelRoom) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn subscribed;\n\t}, [allowAnonymousRead, canPreviewChannelRoom, room, subscribed]);\n\n\tconst useRealName = useSetting('UI_Use_Real_Name') as boolean;\n\n\tconst { data: roomLeader } = useReactiveQuery(['rooms', room._id, 'leader', { not: user?._id }], () => {\n\t\tconst leaderRoomRole = RoomRoles.findOne({\n\t\t\t'rid': room._id,\n\t\t\t'roles': 'leader',\n\t\t\t'u._id': { $ne: user?._id },\n\t\t});\n\n\t\tif (!leaderRoomRole) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\t...leaderRoomRole.u,\n\t\t\tname: useRealName ? leaderRoomRole.u.name || leaderRoomRole.u.username : leaderRoomRole.u.username,\n\t\t};\n\t});\n\n\tconst handleOpenUserCardButtonClick = useCallback(\n\t\t(event: UIEvent, username: IUser['username']) => {\n\t\t\tif (!username) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tchat?.userCard.open(username)(event);\n\t\t},\n\t\t[chat?.userCard],\n\t);\n\n\tconst handleUnreadBarJumpToButtonClick = useCallback(() => {\n\t\tconst rid = room._id;\n\t\tconst { firstUnread } = RoomHistoryManager.getRoom(rid);\n\t\tlet message = firstUnread?.get();\n\t\tif (!message) {\n\t\t\tmessage = ChatMessage.findOne({ rid, ts: { $gt: unread?.since } }, { sort: { ts: 1 }, limit: 1 });\n\t\t}\n\t\tif (!message) {\n\t\t\treturn;\n\t\t}\n\t\tsetMessageJumpQueryStringParameter(message?._id);\n\t\tsetUnreadCount(0);\n\t}, [room._id, unread?.since, setUnreadCount]);\n\n\tconst handleMarkAsReadButtonClick = useCallback(() => {\n\t\tchat.readStateManager.markAsRead();\n\t\tsetUnreadCount(0);\n\t}, [chat.readStateManager, setUnreadCount]);\n\n\tconst handleUploadProgressClose = useCallback(\n\t\t(id: Upload['id']) => {\n\t\t\tchat.uploads.cancel(id);\n\t\t},\n\t\t[chat],\n\t);\n\n\tconst retentionPolicy = useRetentionPolicy(room);\n\n\tuseGoToHomeOnRemoved(room, user?._id);\n\n\tuseEffect(() => {\n\t\tcallbacks.add(\n\t\t\t'streamNewMessage',\n\t\t\t(msg: IMessage) => {\n\t\t\t\tif (room._id !== msg.rid || isEditedMessage(msg) || msg.tmid) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (msg.u._id === user?._id) {\n\t\t\t\t\tsendToBottom();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!_isAtBottom()) {\n\t\t\t\t\tsetHasNewMessages(true);\n\t\t\t\t}\n\t\t\t},\n\t\t\tcallbacks.priority.MEDIUM,\n\t\t\troom._id,\n\t\t);\n\n\t\treturn () => {\n\t\t\tcallbacks.remove('streamNewMessage', room._id);\n\t\t};\n\t}, [_isAtBottom, room._id, sendToBottom, user?._id]);\n\n\tuseEffect(() => {\n\t\tconst messageList = wrapperRef.current?.querySelector('ul');\n\n\t\tif (!messageList) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst observer = new ResizeObserver(() => {\n\t\t\tsendToBottomIfNecessary();\n\t\t});\n\n\t\tobserver.observe(messageList);\n\n\t\treturn () => {\n\t\t\tobserver?.disconnect();\n\t\t};\n\t}, [sendToBottomIfNecessary]);\n\n\tconst router = useRouter();\n\n\tconst debouncedReadMessageRead = useMemo(\n\t\t() =>\n\t\t\twithDebouncing({ wait: 500 })(() => {\n\t\t\t\tchat.readStateManager.attemptMarkAsRead();\n\t\t\t}),\n\t\t[chat.readStateManager],\n\t);\n\n\tuseEffect(\n\t\t() =>\n\t\t\trouter.subscribeToRouteChange(() => {\n\t\t\t\tconst routeName = router.getRouteName();\n\t\t\t\tif (!routeName || !roomCoordinator.isRouteNameKnown(routeName)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdebouncedReadMessageRead();\n\t\t\t}),\n\t\t[debouncedReadMessageRead, room._id, router, subscribed, subscription?.alert, subscription?.unread],\n\t);\n\n\tuseEffect(() => {\n\t\tif (!subscribed) {\n\t\t\tsetUnreadCount(0);\n\t\t\treturn;\n\t\t}\n\n\t\tconst count = ChatMessage.find({\n\t\t\trid: room._id,\n\t\t\tts: { $lte: lastMessageDate, $gt: subscription?.ls },\n\t\t}).count();\n\n\t\tsetUnreadCount(count);\n\t}, [lastMessageDate, room._id, setUnreadCount, subscribed, subscription?.ls]);\n\n\tuseEffect(() => {\n\t\tif (!unread?.count) {\n\t\t\treturn debouncedReadMessageRead();\n\t\t}\n\t}, [debouncedReadMessageRead, room._id, unread?.count]);\n\n\tuseEffect(() => {\n\t\tconst wrapper = wrapperRef.current;\n\n\t\tif (!wrapper) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst getElementFromPoint = (topOffset = 0): Element | undefined => {\n\t\t\tconst messagesBox = messagesBoxRef.current;\n\n\t\t\tif (!messagesBox) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst messagesBoxLeft = messagesBox.getBoundingClientRect().left + window.pageXOffset;\n\t\t\tconst messagesBoxTop = messagesBox.getBoundingClientRect().top + window.pageYOffset;\n\t\t\tconst messagesBoxWidth = parseFloat(getComputedStyle(messagesBox).width);\n\n\t\t\tlet element;\n\t\t\tif (document.dir === 'rtl') {\n\t\t\t\telement = document.elementFromPoint(messagesBoxLeft + messagesBoxWidth - 1, messagesBoxTop + topOffset + 1);\n\t\t\t} else {\n\t\t\t\telement = document.elementFromPoint(messagesBoxLeft + 1, messagesBoxTop + topOffset + 1);\n\t\t\t}\n\n\t\t\tif (element?.classList.contains('rcx-message') || element?.classList.contains('rcx-message--sequential')) {\n\t\t\t\treturn element;\n\t\t\t}\n\t\t};\n\n\t\tconst updateUnreadCount = withThrottling({ wait: 300 })(() => {\n\t\t\tTracker.afterFlush(() => {\n\t\t\t\tconst lastInvisibleMessageOnScreen = getElementFromPoint(0) || getElementFromPoint(20) || getElementFromPoint(40);\n\n\t\t\t\tif (!lastInvisibleMessageOnScreen) {\n\t\t\t\t\tsetUnreadCount(0);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst lastMessage = ChatMessage.findOne(lastInvisibleMessageOnScreen.id);\n\t\t\t\tif (!lastMessage) {\n\t\t\t\t\tsetUnreadCount(0);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsetLastMessageDate(lastMessage.ts);\n\t\t\t});\n\t\t});\n\n\t\tconst handleWrapperScroll = withThrottling({ wait: 100 })((event) => {\n\t\t\tconst roomLeader = messagesBoxRef.current?.querySelector('.room-leader');\n\t\t\tif (roomLeader) {\n\t\t\t\tif (event.target.scrollTop < lastScrollTopRef.current) {\n\t\t\t\t\tsetHideLeaderHeader(false);\n\t\t\t\t} else if (_isAtBottom(100) === false && event.target.scrollTop > parseFloat(getComputedStyle(roomLeader).height)) {\n\t\t\t\t\tsetHideLeaderHeader(true);\n\t\t\t\t}\n\t\t\t}\n\t\t\tlastScrollTopRef.current = event.target.scrollTop;\n\t\t\tconst height = event.target.clientHeight;\n\t\t\tconst isLoading = RoomHistoryManager.isLoading(room._id);\n\t\t\tconst hasMore = RoomHistoryManager.hasMore(room._id);\n\t\t\tconst hasMoreNext = RoomHistoryManager.hasMoreNext(room._id);\n\n\t\t\tif ((isLoading === false && hasMore === true) || hasMoreNext === true) {\n\t\t\t\tif (hasMore === true && lastScrollTopRef.current <= height / 3) {\n\t\t\t\t\tRoomHistoryManager.getMore(room._id);\n\t\t\t\t} else if (hasMoreNext === true && Math.ceil(lastScrollTopRef.current) >= event.target.scrollHeight - height) {\n\t\t\t\t\tRoomHistoryManager.getMoreNext(room._id, atBottomRef);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\twrapper.addEventListener('scroll', updateUnreadCount);\n\t\twrapper.addEventListener('scroll', handleWrapperScroll);\n\n\t\treturn () => {\n\t\t\twrapper.removeEventListener('scroll', updateUnreadCount);\n\t\t\twrapper.removeEventListener('scroll', handleWrapperScroll);\n\t\t};\n\t}, [_isAtBottom, room._id, setUnreadCount]);\n\n\tuseEffect(() => {\n\t\tconst wrapper = wrapperRef.current;\n\n\t\tif (!wrapper) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst store = RoomManager.getStore(room._id);\n\n\t\tconst handleWrapperScroll = withThrottling({ wait: 30 })(() => {\n\t\t\tstore?.update({ scroll: wrapper.scrollTop, atBottom: isAtBottom(wrapper, 50) });\n\t\t});\n\n\t\tconst afterMessageGroup = (): void => {\n\t\t\tif (store?.scroll && !store.atBottom) {\n\t\t\t\twrapper.scrollTop = store.scroll;\n\t\t\t} else {\n\t\t\t\tsendToBottom();\n\t\t\t}\n\t\t\twrapper.removeEventListener('MessageGroup', afterMessageGroup);\n\t\t};\n\n\t\twrapper.addEventListener('scroll', handleWrapperScroll);\n\n\t\twrapper.addEventListener('MessageGroup', afterMessageGroup);\n\n\t\treturn () => {\n\t\t\twrapper.removeEventListener('MessageGroup', afterMessageGroup);\n\t\t\twrapper.removeEventListener('scroll', handleWrapperScroll);\n\t\t};\n\t}, [room._id, sendToBottom]);\n\n\tuseRestoreScrollPosition(room._id, scrollMessageList, sendToBottom);\n\n\tuseEffect(() => {\n\t\tconst wrapper = wrapperRef.current;\n\n\t\tif (!wrapper) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst handleWheel = withThrottling({ wait: 100 })(() => {\n\t\t\tcheckIfScrollIsAtBottom();\n\t\t});\n\n\t\tconst handleTouchStart = (): void => {\n\t\t\tatBottomRef.current = false;\n\t\t};\n\n\t\tlet timer1s: ReturnType<typeof setTimeout> | undefined;\n\t\tlet timer2s: ReturnType<typeof setTimeout> | undefined;\n\n\t\tconst handleTouchEnd = (): void => {\n\t\t\tcheckIfScrollIsAtBottom();\n\t\t\ttimer1s = setTimeout(() => checkIfScrollIsAtBottom(), 1000);\n\t\t\ttimer2s = setTimeout(() => checkIfScrollIsAtBottom(), 2000);\n\t\t};\n\n\t\t// wrapper.addEventListener('mousewheel', handleWheel);\n\t\t// wrapper.addEventListener('wheel', handleWheel);\n\t\twrapper.addEventListener('scroll', handleWheel);\n\t\t// wrapper.addEventListener('touchstart', handleTouchStart);\n\t\t// wrapper.addEventListener('touchend', handleTouchEnd);\n\n\t\treturn (): void => {\n\t\t\tif (timer1s) clearTimeout(timer1s);\n\t\t\tif (timer2s) clearTimeout(timer2s);\n\t\t\twrapper.removeEventListener('mousewheel', handleWheel);\n\t\t\twrapper.removeEventListener('wheel', handleWheel);\n\t\t\twrapper.removeEventListener('scroll', handleWheel);\n\t\t\twrapper.removeEventListener('touchstart', handleTouchStart);\n\t\t\twrapper.removeEventListener('touchend', handleTouchEnd);\n\t\t};\n\t}, [checkIfScrollIsAtBottom]);\n\n\tconst handleComposerResize = useCallback((): void => {\n\t\tsendToBottomIfNecessary();\n\t}, [sendToBottomIfNecessary]);\n\n\tconst handleNavigateToPreviousMessage = useCallback((): void => {\n\t\tchat.messageEditing.toPreviousMessage();\n\t}, [chat.messageEditing]);\n\n\tconst handleNavigateToNextMessage = useCallback((): void => {\n\t\tchat.messageEditing.toNextMessage();\n\t}, [chat.messageEditing]);\n\n\tconst handleUploadFiles = useCallback(\n\t\t(files: readonly File[]): void => {\n\t\t\tchat.flows.uploadFiles(files);\n\t\t},\n\t\t[chat],\n\t);\n\n\tconst replyMID = useSearchParameter('reply');\n\n\tuseEffect(() => {\n\t\tif (!replyMID) {\n\t\t\treturn;\n\t\t}\n\n\t\tchat.data.getMessageByID(replyMID).then((message) => {\n\t\t\tif (!message) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tchat.composer?.quoteMessage(message);\n\t\t});\n\t}, [chat.data, chat.composer, replyMID]);\n\n\tuseEffect(() => {\n\t\tchat.uploads.wipeFailedOnes();\n\t}, [chat]);\n\n\tconst handleCloseFlexTab: MouseEventHandler<HTMLElement> = useCallback(\n\t\t(e): void => {\n\t\t\t/*\n\t\t\t * check if the element is a button or anchor\n\t\t\t * it considers the role as well\n\t\t\t * usually, the flex tab is closed when clicking outside of it\n\t\t\t * but if the user clicks on a button or anchor, we don't want to close the flex tab\n\t\t\t * because the user could be actually trying to open the flex tab through those elements\n\t\t\t */\n\n\t\t\tconst checkElement = (element: HTMLElement | null): boolean => {\n\t\t\t\tif (!element) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (element instanceof HTMLButtonElement || element.getAttribute('role') === 'button') {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (element instanceof HTMLAnchorElement || element.getAttribute('role') === 'link') {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn checkElement(element.parentElement);\n\t\t\t};\n\n\t\t\tif (checkElement(e.target as HTMLElement)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttoolbox.closeTab();\n\t\t},\n\t\t[toolbox],\n\t);\n\n\tuseReadMessageWindowEvents();\n\n\treturn (\n\t\t<>\n\t\t\t{!isLayoutEmbedded && room.announcement && <Announcement announcement={room.announcement} announcementDetails={undefined} />}\n\t\t\t<div className='main-content-flex'>\n\t\t\t\t<section\n\t\t\t\t\tclassName={`messages-container flex-tab-main-content ${admin ? 'admin' : ''}`}\n\t\t\t\t\tid={`chat-window-${room._id}`}\n\t\t\t\t\taria-label={t('Channel')}\n\t\t\t\t\tonClick={hideFlexTab && handleCloseFlexTab}\n\t\t\t\t>\n\t\t\t\t\t<div className='messages-container-wrapper'>\n\t\t\t\t\t\t<div className='messages-container-main' {...fileUploadTriggerProps}>\n\t\t\t\t\t\t\t<DropTargetOverlay {...fileUploadOverlayProps} />\n\t\t\t\t\t\t\t<div className={['container-bars', (unread || uploads.length) && 'show'].filter(isTruthy).join(' ')}>\n\t\t\t\t\t\t\t\t{unread && (\n\t\t\t\t\t\t\t\t\t<UnreadMessagesIndicator\n\t\t\t\t\t\t\t\t\t\tcount={unread.count}\n\t\t\t\t\t\t\t\t\t\tsince={unread.since}\n\t\t\t\t\t\t\t\t\t\tonJumpButtonClick={handleUnreadBarJumpToButtonClick}\n\t\t\t\t\t\t\t\t\t\tonMarkAsReadButtonClick={handleMarkAsReadButtonClick}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t{uploads.map((upload) => (\n\t\t\t\t\t\t\t\t\t<UploadProgressIndicator\n\t\t\t\t\t\t\t\t\t\tkey={upload.id}\n\t\t\t\t\t\t\t\t\t\tid={upload.id}\n\t\t\t\t\t\t\t\t\t\tname={upload.name}\n\t\t\t\t\t\t\t\t\t\tpercentage={upload.percentage}\n\t\t\t\t\t\t\t\t\t\terror={upload.error instanceof Error ? upload.error.message : undefined}\n\t\t\t\t\t\t\t\t\t\tonClose={handleUploadProgressClose}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tref={messagesBoxRef}\n\t\t\t\t\t\t\t\tclassName={['messages-box', roomLeader && !hideLeaderHeader && 'has-leader'].filter(isTruthy).join(' ')}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<JumpToRecentMessageButton visible={hasNewMessages} onClick={handleNewMessageButtonClick} text={t('New_messages')} />\n\t\t\t\t\t\t\t\t<JumpToRecentMessageButton\n\t\t\t\t\t\t\t\t\tvisible={hasMoreNextMessages}\n\t\t\t\t\t\t\t\t\tonClick={handleJumpToRecentButtonClick}\n\t\t\t\t\t\t\t\t\ttext={t('Jump_to_recent_messages')}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{!canPreview ? (\n\t\t\t\t\t\t\t\t\t<div className='content room-not-found error-color'>\n\t\t\t\t\t\t\t\t\t\t<div>{t('You_must_join_to_view_messages_in_this_channel')}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t{roomLeader ? (\n\t\t\t\t\t\t\t\t\t<LeaderBar\n\t\t\t\t\t\t\t\t\t\t_id={roomLeader._id}\n\t\t\t\t\t\t\t\t\t\tusername={roomLeader.username}\n\t\t\t\t\t\t\t\t\t\tname={roomLeader.name}\n\t\t\t\t\t\t\t\t\t\tvisible={!hideLeaderHeader}\n\t\t\t\t\t\t\t\t\t\tonAvatarClick={handleOpenUserCardButtonClick}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName={[\n\t\t\t\t\t\t\t\t\t\t'wrapper',\n\t\t\t\t\t\t\t\t\t\thasMoreNextMessages && 'has-more-next',\n\t\t\t\t\t\t\t\t\t\thideUsernames && 'hide-usernames',\n\t\t\t\t\t\t\t\t\t\t!displayAvatars && 'hide-avatar',\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t.filter(isTruthy)\n\t\t\t\t\t\t\t\t\t\t.join(' ')}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<MessageListErrorBoundary>\n\t\t\t\t\t\t\t\t\t\t<ScrollableContentWrapper ref={wrapperRef}>\n\t\t\t\t\t\t\t\t\t\t\t<ul className='messages-list' aria-live='polite' aria-busy={isLoadingMoreMessages}>\n\t\t\t\t\t\t\t\t\t\t\t\t{canPreview ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{hasMorePreviousMessages ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li className='load-more'>{isLoadingMoreMessages ? <LoadingMessagesIndicator /> : null}</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li className='start color-info-font-color'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{retentionPolicy ? <RetentionPolicyWarning {...retentionPolicy} /> : null}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<RoomForeword user={user} room={room} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t\t\t<MessageList rid={room._id} scrollMessageList={scrollMessageList} />\n\t\t\t\t\t\t\t\t\t\t\t\t{hasMoreNextMessages ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li className='load-more'>{isLoadingMoreMessages ? <LoadingMessagesIndicator /> : null}</li>\n\t\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t</ScrollableContentWrapper>\n\t\t\t\t\t\t\t\t\t</MessageListErrorBoundary>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<RoomComposer>\n\t\t\t\t\t\t\t\t<ComposerContainer\n\t\t\t\t\t\t\t\t\tsubscription={subscription}\n\t\t\t\t\t\t\t\t\tonResize={handleComposerResize}\n\t\t\t\t\t\t\t\t\tonNavigateToPreviousMessage={handleNavigateToPreviousMessage}\n\t\t\t\t\t\t\t\t\tonNavigateToNextMessage={handleNavigateToNextMessage}\n\t\t\t\t\t\t\t\t\tonUploadFiles={handleUploadFiles}\n\t\t\t\t\t\t\t\t\t// TODO: send previewUrls param\n\t\t\t\t\t\t\t\t\t// previewUrls={}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</RoomComposer>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default memo(RoomBody);\n",null],"names":["_extends","_objectSpread","isEditedMessage","usePermission","useRole","useRouter","useSearchParameter","useSetting","useTranslation","useUser","useUserPreference","React","memo","useCallback","useEffect","useMemo","useRef","useState","useSyncExternalStore","ChatMessage","RoomRoles","RoomHistoryManager","isAtBottom","callbacks","isTruthy","withDebouncing","withThrottling","ScrollableContentWrapper","useEmbeddedLayout","useReactiveQuery","RoomManager","roomCoordinator","setMessageJumpQueryStringParameter","Announcement","MessageList","MessageListErrorBoundary","ComposerContainer","RoomComposer","useChat","useRoom","useRoomSubscription","useRoomMessages","useRoomToolbox","useScrollMessageList","DropTargetOverlay","JumpToRecentMessageButton","LeaderBar","LoadingMessagesIndicator","RetentionPolicyWarning","RoomForeword","UnreadMessagesIndicator","UploadProgressIndicator","useFileUploadDropTarget","useGoToHomeOnRemoved","useReadMessageWindowEvents","useRestoreScrollPosition","useRetentionPolicy","useUnreadMessages","module","default","v","link","exportDefault","t","isLayoutEmbedded","room","user","toolbox","admin","subscription","lastMessageDate","setLastMessageDate","hideLeaderHeader","setHideLeaderHeader","hasNewMessages","setHasNewMessages","hideFlexTab","undefined","hideUsernames","displayAvatars","wrapperRef","messagesBoxRef","atBottomRef","lastScrollTopRef","chat","Error","fileUploadTriggerProps","fileUploadOverlayProps","_isAtBottom","scrollThreshold","arguments","length","wrapper","current","scrollMessageList","sendToBottom","left","top","scrollHeight","sendToBottomIfNecessary","checkIfScrollIsAtBottom","handleNewMessageButtonClick","_chat$composer","composer","focus","handleJumpToRecentButtonClick","clear","_id","getMoreIfIsEmpty","unread","setUnreadCount","uploads","subscribe","get","hasMorePreviousMessages","hasMoreNextMessages","isLoadingMoreMessages","allowAnonymousRead","canPreviewChannelRoom","subscribed","canPreview","useRealName","data","roomLeader","not","leaderRoomRole","findOne","$ne","u","name","username","handleOpenUserCardButtonClick","event","userCard","open","handleUnreadBarJumpToButtonClick","_message","rid","firstUnread","getRoom","message","ts","$gt","since","sort","limit","handleMarkAsReadButtonClick","readStateManager","markAsRead","handleUploadProgressClose","id","cancel","retentionPolicy","add","msg","tmid","priority","MEDIUM","remove","_wrapperRef$current","messageList","querySelector","observer","ResizeObserver","observe","disconnect","router","debouncedReadMessageRead","wait","attemptMarkAsRead","subscribeToRouteChange","routeName","getRouteName","isRouteNameKnown","alert","count","find","$lte","ls","getElementFromPoint","_element","element","topOffset","messagesBox","messagesBoxLeft","getBoundingClientRect","window","pageXOffset","messagesBoxTop","pageYOffset","messagesBoxWidth","parseFloat","getComputedStyle","width","document","dir","elementFromPoint","classList","contains","_element2","updateUnreadCount","Tracker","afterFlush","lastInvisibleMessageOnScreen","lastMessage","handleWrapperScroll","_messagesBoxRef$curre","target","scrollTop","height","clientHeight","isLoading","hasMore","hasMoreNext","getMore","Math","ceil","getMoreNext","addEventListener","removeEventListener","store","getStore","update","scroll","atBottom","afterMessageGroup","timer1s","timer2s","handleWheel","handleTouchStart","handleTouchEnd","setTimeout","clearTimeout","handleComposerResize","handleNavigateToPreviousMessage","messageEditing","toPreviousMessage","handleNavigateToNextMessage","toNextMessage","handleUploadFiles","files","flows","uploadFiles","replyMID","getMessageByID","then","_chat$composer2","quoteMessage","wipeFailedOnes","handleCloseFlexTab","e","checkElement","HTMLButtonElement","getAttribute","HTMLAnchorElement","parentElement","closeTab","createElement","Fragment","announcement","announcementDetails","className","concat","onClick","filter","join","onJumpButtonClick","onMarkAsReadButtonClick","map","upload","key","percentage","error","onClose","ref","visible","text","onAvatarClick","onResize","onNavigateToPreviousMessage","onNavigateToNextMessage","onUploadFiles"],"mappings":"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"}