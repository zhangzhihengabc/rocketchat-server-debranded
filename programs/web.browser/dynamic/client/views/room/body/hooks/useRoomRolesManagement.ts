function module(e,d,t){let i,u,l,o,r,s;let a=["_id"],n=["type"];t.link("@babel/runtime/helpers/objectWithoutProperties",{default(e){i=e}},0),t.export({useRoomRolesManagement:()=>_}),t.link("@rocket.chat/ui-contexts",{useMethod(e){u=e},useStream(e){l=e}},0),t.link("react",{useEffect(e){o=e}},1),t.link("../../../../../app/models/client",{RoomRoles(e){r=e},ChatMessage(e){s=e}},2);let _=e=>{let d=u("getRoomRoles");o(()=>{d(e).then(e=>{Array.from(e).forEach(e=>{let{_id:d}=e,t=i(e,a),{rid:u,u:{_id:l}}=t;r.upsert({rid:u,"u._id":l},{$set:t})})})},[d,e]),o(()=>{let d=r.find({rid:e}).observe({added:d=>{var t;null!==(t=d.u)&&void 0!==t&&t._id&&s.update({rid:e,"u._id":d.u._id},{$addToSet:{roles:d._id}},{multi:!0})},changed:d=>{var t;null!==(t=d.u)&&void 0!==t&&t._id&&s.update({rid:e,"u._id":d.u._id},{$inc:{rerender:1}},{multi:!0})},removed:d=>{var t;null!==(t=d.u)&&void 0!==t&&t._id&&s.update({rid:e,"u._id":d.u._id},{$pull:{roles:d._id}},{multi:!0})}});return()=>{d.stop()}},[d,e]);let t=l("notify-logged");o(()=>t("roles-change",e=>{var d;let{type:t}=e,u=i(e,n);if(u.scope&&null!==(d=u.u)&&void 0!==d&&d._id)switch(t){case"added":r.upsert({rid:u.scope,"u._id":u.u._id},{$setOnInsert:{u:u.u},$addToSet:{roles:u._id}});break;case"removed":r.update({rid:u.scope,"u._id":u.u._id},{$pull:{roles:u._id}})}}),[t]),o(()=>t("Users:NameChanged",e=>{let{_id:d,name:t}=e;r.update({"u._id":d},{$set:{"u.name":t}},{multi:!0})}),[t])}}
//# sourceMappingURL=/dynamic/client/views/room/body/hooks/89b3608cdceab4ec869384e236b7b9f13b783b26.map
