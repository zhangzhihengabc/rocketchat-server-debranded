)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/hooks/useScrollMessageList.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { ComponentProps, RefObject } from 'react';\nimport { useCallback } from 'react';\n\nimport type { MessageList } from '../MessageList';\n\nexport const useScrollMessageList = (\n\twrapperRef: RefObject<HTMLDivElement>,\n): Exclude<ComponentProps<typeof MessageList>['scrollMessageList'], undefined> => {\n\t// Passing a callback instead of the values so that the wrapper is exposed\n\treturn useCallback(\n\t\t(callback) => {\n\t\t\tconst wrapper = wrapperRef.current;\n\n\t\t\tif (!wrapper) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst options = callback(wrapperRef.current);\n\n\t\t\t// allow for bailout\n\t\t\tif (!options) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\twrapper.scrollTo(options);\n\t\t},\n\t\t[wrapperRef],\n\t);\n};\n",null],"names":["useCallback","module","export","useScrollMessageList","wrapperRef","callback","wrapper","current","options","scrollTo"],"mappings":"2BACoCA,EAApCC,EAAOC,MAAE,CAAA,CAAAC,qBAA2B,IAAAA,CAAA,GAAAF,EAAAA,IAAAA,CAAAA,QAAAA,CAAAD,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAI7B,IAAMG,EACZC,GAGOJ,EACLK,IACA,IAAMC,EAAUF,EAAWG,OAAO,CAElC,GAAI,CAACD,EACJ,OAGD,IAAME,EAAUH,EAASD,EAAWG,OAAO,EAGtCC,GAILF,EAAQG,QAAQ,CAACD,EAClB,EACA,CAACJ,EAAW"}