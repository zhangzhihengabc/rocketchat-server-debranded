)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/hooks/useUserInfoActions/actions/useRemoveUserAction.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { isRoomFederated } from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { escapeHTML } from '@rocket.chat/string-helpers';\nimport { usePermission, useSetModal, useTranslation, useUser, useUserRoom, useUserSubscription } from '@rocket.chat/ui-contexts';\nimport React, { useMemo } from 'react';\n\nimport GenericModal from '../../../../../components/GenericModal';\nimport { useEndpointAction } from '../../../../../hooks/useEndpointAction';\nimport * as Federation from '../../../../../lib/federation/Federation';\nimport { roomCoordinator } from '../../../../../lib/rooms/roomCoordinator';\nimport RemoveUsersModal from '../../../../teams/contextualBar/members/RemoveUsersModal';\nimport { getRoomDirectives } from '../../../lib/getRoomDirectives';\nimport type { UserInfoAction } from '../useUserInfoActions';\n\n// TODO: Remove endpoint concatenation\nexport const useRemoveUserAction = (\n\tuser: Pick<IUser, '_id' | 'username'>,\n\trid: IRoom['_id'],\n\treload?: () => void,\n): UserInfoAction | undefined => {\n\tconst t = useTranslation();\n\tconst room = useUserRoom(rid);\n\tconst currentUser = useUser();\n\tconst subscription = useUserSubscription(rid);\n\n\tconst { _id: uid } = user;\n\n\tif (!room) {\n\t\tthrow Error('Room not provided');\n\t}\n\n\tconst hasPermissionToRemove = usePermission('remove-user', rid);\n\tconst userCanRemove = isRoomFederated(room)\n\t\t? Federation.isEditableByTheUser(currentUser || undefined, room, subscription)\n\t\t: hasPermissionToRemove;\n\tconst setModal = useSetModal();\n\tconst closeModal = useMutableCallback(() => setModal(null));\n\tconst roomName = room?.t && escapeHTML(roomCoordinator.getRoomName(room.t, room));\n\n\tconst endpointPrefix = room.t === 'p' ? '/v1/groups' : '/v1/channels';\n\tconst { roomCanRemove } = getRoomDirectives({ room, showingUserId: uid, userSubscription: subscription });\n\n\tconst removeFromTeam = useEndpointAction('POST', '/v1/teams.removeMember', {\n\t\tsuccessMessage: t('User_has_been_removed_from_team'),\n\t});\n\tconst removeFromRoom = useEndpointAction('POST', `${endpointPrefix}.kick`, {\n\t\tsuccessMessage: t('User_has_been_removed_from_s', roomName),\n\t});\n\n\tconst removeUserOptionAction = useMutableCallback(() => {\n\t\tconst handleRemoveFromTeam = async (rooms: IRoom[]): Promise<void> => {\n\t\t\tif (room.teamId) {\n\t\t\t\tconst roomKeys = Object.keys(rooms);\n\t\t\t\tawait removeFromTeam({\n\t\t\t\t\tteamId: room.teamId,\n\t\t\t\t\tuserId: uid,\n\t\t\t\t\t...(roomKeys.length && { rooms: roomKeys }),\n\t\t\t\t});\n\t\t\t\tcloseModal();\n\t\t\t\treload?.();\n\t\t\t}\n\t\t};\n\n\t\tconst handleRemoveFromRoom = async (rid: IRoom['_id'], uid: IUser['_id']): Promise<void> => {\n\t\t\tawait removeFromRoom({ roomId: rid, userId: uid });\n\t\t\tcloseModal();\n\t\t\treload?.();\n\t\t};\n\n\t\tif (room.teamMain && room.teamId) {\n\t\t\treturn setModal(\n\t\t\t\t<RemoveUsersModal teamId={room?.teamId} userId={uid} onClose={closeModal} onCancel={closeModal} onConfirm={handleRemoveFromTeam} />,\n\t\t\t);\n\t\t}\n\n\t\tsetModal(\n\t\t\t<GenericModal\n\t\t\t\tvariant='danger'\n\t\t\t\tconfirmText={t('Yes_remove_user')}\n\t\t\t\tonClose={closeModal}\n\t\t\t\tonCancel={closeModal}\n\t\t\t\tonConfirm={(): Promise<void> => handleRemoveFromRoom(rid, uid)}\n\t\t\t>\n\t\t\t\t{t('The_user_will_be_removed_from_s', roomName)}\n\t\t\t</GenericModal>,\n\t\t);\n\t});\n\n\tconst removeUserOption = useMemo(\n\t\t() =>\n\t\t\troomCanRemove && userCanRemove\n\t\t\t\t? {\n\t\t\t\t\t\tcontent: room?.teamMain ? t('Remove_from_team') : t('Remove_from_room'),\n\t\t\t\t\t\ticon: 'cross' as const,\n\t\t\t\t\t\tonClick: removeUserOptionAction,\n\t\t\t\t\t\ttype: 'moderation' as const,\n\t\t\t\t\t\tvariant: 'danger' as const,\n\t\t\t\t  }\n\t\t\t\t: undefined,\n\t\t[room, roomCanRemove, userCanRemove, removeUserOptionAction, t],\n\t);\n\n\treturn removeUserOption;\n};\n",null],"names":["_objectSpread","isRoomFederated","useMutableCallback","escapeHTML","usePermission","useSetModal","useTranslation","useUser","useUserRoom","useUserSubscription","React","useMemo","GenericModal","useEndpointAction","Federation","roomCoordinator","RemoveUsersModal","getRoomDirectives","module","link","default","export","useRemoveUserAction","v","user","rid","reload","t","room","currentUser","subscription","_id","uid","Error","hasPermissionToRemove","userCanRemove","isEditableByTheUser","undefined","setModal","closeModal","roomName","getRoomName","endpointPrefix","roomCanRemove","showingUserId","userSubscription","removeFromTeam","successMessage","removeFromRoom","concat","removeUserOptionAction","handleRemoveFromTeam","rooms","teamId","roomKeys","Object","keys","userId","length","handleRemoveFromRoom","roomId","teamMain","createElement","onClose","onCancel","onConfirm","variant","confirmText","removeUserOption","content","icon","onClick","type"],"mappings":"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"}