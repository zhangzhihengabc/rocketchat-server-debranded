function module(e,o,s){let t,c,r,i,l,n,u,a,k;s.export({useBlockUserAction:()=>b}),s.link("@rocket.chat/fuselage-hooks",{useMutableCallback(e){t=e}},0),s.link("@rocket.chat/ui-contexts",{useTranslation(e){c=e},useMethod(e){r=e},useToastMessageDispatch(e){i=e},useUserId(e){l=e},useUserSubscription(e){n=e},useUserRoom(e){u=e}},1),s.link("react",{useMemo(e){a=e}},2),s.link("../../../lib/getRoomDirectives",{getRoomDirectives(e){k=e}},3);let b=(e,o)=>{let s=c(),b=i(),d=n(o),U=l(),{_id:h}=e,m=u(o);if(!m)throw Error("Room not provided");let{roomCanBlock:g}=k({room:m,showingUserId:h,userSubscription:d}),p=null==d?void 0:d.blocker,v=r(p?"unblockUser":"blockUser"),_=t(async()=>{try{await v({rid:o,blocked:h}),b({type:"success",message:s(p?"User_is_unblocked":"User_is_blocked")})}catch(e){b({type:"error",message:e})}}),y=a(()=>g&&h!==U?{content:s(p?"Unblock":"Block"),icon:"ban",onClick:_}:void 0,[p,U,g,s,_,h]);return y}}
//# sourceMappingURL=/dynamic/client/views/room/hooks/useUserInfoActions/actions/e54c6f39c488af090cee6f97fb18bd763b386bcb.map
