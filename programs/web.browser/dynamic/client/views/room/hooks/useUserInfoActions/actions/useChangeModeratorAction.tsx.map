)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/hooks/useUserInfoActions/actions/useChangeModeratorAction.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { isRoomFederated } from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { escapeHTML } from '@rocket.chat/string-helpers';\nimport { useTranslation, usePermission, useUserRoom, useUserSubscription, useUser, useSetModal } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React, { useCallback, useMemo } from 'react';\n\nimport GenericModal from '../../../../../components/GenericModal';\nimport { useEndpointAction } from '../../../../../hooks/useEndpointAction';\nimport { roomCoordinator } from '../../../../../lib/rooms/roomCoordinator';\nimport { getRoomDirectives } from '../../../lib/getRoomDirectives';\nimport { useUserHasRoomRole } from '../../useUserHasRoomRole';\nimport type { UserInfoAction, UserInfoActionType } from '../useUserInfoActions';\n\nconst getWarningModalForFederatedRooms = (\n\tcloseModalFn: () => void,\n\thandleConfirmFn: () => void,\n\ttitle: string,\n\tconfirmText: string,\n\tbodyText: string,\n): ReactElement => (\n\t<GenericModal\n\t\tvariant='warning'\n\t\tonClose={closeModalFn}\n\t\tonConfirm={handleConfirmFn}\n\t\tonCancel={closeModalFn}\n\t\ttitle={title}\n\t\tconfirmText={confirmText}\n\t>\n\t\t{bodyText}\n\t</GenericModal>\n);\n\n// TODO: Remove endpoint concatenation\nexport const useChangeModeratorAction = (user: Pick<IUser, '_id' | 'username'>, rid: IRoom['_id']): UserInfoAction | undefined => {\n\tconst t = useTranslation();\n\tconst room = useUserRoom(rid);\n\tconst { _id: uid } = user;\n\n\tconst userCanSetModerator = usePermission('set-moderator', rid);\n\tconst isModerator = useUserHasRoomRole(uid, rid, 'moderator');\n\tconst userSubscription = useUserSubscription(rid);\n\tconst { _id: loggedUserId = '' } = useUser() || {};\n\tconst loggedUserIsModerator = useUserHasRoomRole(loggedUserId, rid, 'moderator');\n\tconst loggedUserIsOwner = useUserHasRoomRole(loggedUserId, rid, 'owner');\n\tconst setModal = useSetModal();\n\tconst closeModal = useCallback(() => setModal(null), [setModal]);\n\n\tif (!room) {\n\t\tthrow Error('Room not provided');\n\t}\n\n\tconst endpointPrefix = room.t === 'p' ? '/v1/groups' : '/v1/channels';\n\tconst { roomCanSetModerator } = getRoomDirectives({ room, showingUserId: uid, userSubscription });\n\tconst roomName = room?.t && escapeHTML(roomCoordinator.getRoomName(room.t, room));\n\n\tconst changeModeratorEndpoint = isModerator ? 'removeModerator' : 'addModerator';\n\tconst changeModeratorMessage = isModerator\n\t\t? 'User__username__removed_from__room_name__moderators'\n\t\t: 'User__username__is_now_a_moderator_of__room_name_';\n\n\tconst changeModerator = useEndpointAction('POST', `${endpointPrefix}.${changeModeratorEndpoint}`, {\n\t\tsuccessMessage: t(changeModeratorMessage, { username: user.username, room_name: roomName }),\n\t});\n\n\tconst handleConfirm = useCallback(() => {\n\t\tchangeModerator({ roomId: rid, userId: uid });\n\t\tcloseModal();\n\t}, [changeModerator, rid, uid, closeModal]);\n\n\tconst handleChangeModerator = useCallback(\n\t\t({ userId }) => {\n\t\t\tif (!isRoomFederated(room)) {\n\t\t\t\treturn changeModerator({ roomId: rid, userId: uid });\n\t\t\t}\n\n\t\t\tconst changingOwnRole = userId === loggedUserId;\n\t\t\tif (changingOwnRole && loggedUserIsModerator) {\n\t\t\t\treturn setModal(() =>\n\t\t\t\t\tgetWarningModalForFederatedRooms(\n\t\t\t\t\t\tcloseModal,\n\t\t\t\t\t\thandleConfirm,\n\t\t\t\t\t\tt('Federation_Matrix_losing_privileges'),\n\t\t\t\t\t\tt('Yes_continue'),\n\t\t\t\t\t\tt('Federation_Matrix_losing_privileges_warning'),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (changingOwnRole && loggedUserIsOwner) {\n\t\t\t\treturn setModal(() =>\n\t\t\t\t\tgetWarningModalForFederatedRooms(\n\t\t\t\t\t\tcloseModal,\n\t\t\t\t\t\thandleConfirm,\n\t\t\t\t\t\tt('Federation_Matrix_losing_privileges'),\n\t\t\t\t\t\tt('Yes_continue'),\n\t\t\t\t\t\tt('Federation_Matrix_losing_privileges_warning'),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (!changingOwnRole && loggedUserIsModerator) {\n\t\t\t\treturn setModal(() =>\n\t\t\t\t\tgetWarningModalForFederatedRooms(\n\t\t\t\t\t\tcloseModal,\n\t\t\t\t\t\thandleConfirm,\n\t\t\t\t\t\tt('Warning'),\n\t\t\t\t\t\tt('Yes_continue'),\n\t\t\t\t\t\tt('Federation_Matrix_giving_same_permission_warning'),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tchangeModerator({ roomId: rid, userId: uid });\n\t\t},\n\t\t[setModal, loggedUserId, loggedUserIsModerator, loggedUserIsOwner, t, rid, uid, changeModerator, closeModal, handleConfirm, room],\n\t);\n\n\tconst changeModeratorAction = useMutableCallback(() => handleChangeModerator({ roomId: rid, userId: uid }));\n\tconst changeModeratorOption = useMemo(\n\t\t() =>\n\t\t\t(isRoomFederated(room) && roomCanSetModerator) || (!isRoomFederated(room) && roomCanSetModerator && userCanSetModerator)\n\t\t\t\t? {\n\t\t\t\t\t\tcontent: t(isModerator ? 'Remove_as_moderator' : 'Set_as_moderator'),\n\t\t\t\t\t\ticon: 'shield-blank' as const,\n\t\t\t\t\t\tonClick: changeModeratorAction,\n\t\t\t\t\t\ttype: 'privileges' as UserInfoActionType,\n\t\t\t\t  }\n\t\t\t\t: undefined,\n\t\t[changeModeratorAction, isModerator, roomCanSetModerator, t, userCanSetModerator, room],\n\t);\n\n\treturn changeModeratorOption;\n};\n",null],"names":["isRoomFederated","useMutableCallback","escapeHTML","useTranslation","usePermission","useUserRoom","useUserSubscription","useUser","useSetModal","React","useCallback","useMemo","GenericModal","useEndpointAction","roomCoordinator","getRoomDirectives","useUserHasRoomRole","module","export","useChangeModeratorAction","default","getWarningModalForFederatedRooms","closeModalFn","handleConfirmFn","title","confirmText","bodyText","createElement","variant","onClose","onConfirm","onCancel","user","rid","t","room","_id","uid","userCanSetModerator","isModerator","userSubscription","loggedUserId","loggedUserIsModerator","loggedUserIsOwner","setModal","closeModal","Error","endpointPrefix","roomCanSetModerator","showingUserId","roomName","getRoomName","changeModeratorEndpoint","changeModeratorMessage","changeModerator","concat","successMessage","username","room_name","handleConfirm","roomId","userId","handleChangeModerator","_ref","changingOwnRole","changeModeratorAction","changeModeratorOption","content","icon","onClick","type","undefined"],"mappings":"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"}