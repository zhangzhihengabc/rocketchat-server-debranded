)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/hooks/useUserInfoActions/actions/useMuteUserAction.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRoom, IUser } from '@rocket.chat/core-typings';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { escapeHTML } from '@rocket.chat/string-helpers';\nimport {\n\tuseAllPermissions,\n\tusePermission,\n\tuseSetModal,\n\tuseMethod,\n\tuseToastMessageDispatch,\n\tuseTranslation,\n\tuseUserRoom,\n\tuseUserSubscription,\n} from '@rocket.chat/ui-contexts';\nimport React, { useMemo } from 'react';\n\nimport GenericModal from '../../../../../components/GenericModal';\nimport { roomCoordinator } from '../../../../../lib/rooms/roomCoordinator';\nimport { getRoomDirectives } from '../../../lib/getRoomDirectives';\nimport type { UserInfoAction, UserInfoActionType } from '../useUserInfoActions';\n\nconst getUserIsMuted = (\n\tuser: Pick<IUser, '_id' | 'username'>,\n\troom: IRoom | undefined,\n\tuserCanPostReadonly: boolean,\n): boolean | undefined => {\n\tif (room?.ro) {\n\t\tif (Array.isArray(room.unmuted) && room.unmuted.indexOf(user.username ?? '') !== -1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (userCanPostReadonly) {\n\t\t\treturn Array.isArray(room.muted) && room.muted.indexOf(user.username ?? '') !== -1;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn room && Array.isArray(room.muted) && room.muted.indexOf(user.username ?? '') > -1;\n};\n\nexport const useMuteUserAction = (user: Pick<IUser, '_id' | 'username'>, rid: IRoom['_id']): UserInfoAction | undefined => {\n\tconst t = useTranslation();\n\tconst room = useUserRoom(rid);\n\tconst userCanMute = usePermission('mute-user', rid);\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst setModal = useSetModal();\n\tconst closeModal = useMutableCallback(() => setModal(null));\n\tconst otherUserCanPostReadonly = useAllPermissions(\n\t\tuseMemo(() => ['post-readonly'], []),\n\t\trid,\n\t);\n\tconst userSubscription = useUserSubscription(rid);\n\n\tconst isMuted = getUserIsMuted(user, room, otherUserCanPostReadonly);\n\tconst roomName = room?.t && escapeHTML(roomCoordinator.getRoomName(room.t, room));\n\n\tif (!room) {\n\t\tthrow Error('Room not provided');\n\t}\n\n\tconst { roomCanMute } = getRoomDirectives({ room, showingUserId: user._id, userSubscription });\n\n\tconst mutedMessage = isMuted ? 'User__username__unmuted_in_room__roomName__' : 'User__username__muted_in_room__roomName__';\n\n\tconst muteUser = useMethod(isMuted ? 'unmuteUserInRoom' : 'muteUserInRoom');\n\n\tconst muteUserOption = useMemo(() => {\n\t\tconst action = (): Promise<void> | void => {\n\t\t\tconst onConfirm = async (): Promise<void> => {\n\t\t\t\ttry {\n\t\t\t\t\tif (!user.username) {\n\t\t\t\t\t\tthrow new Error('User without username');\n\t\t\t\t\t}\n\n\t\t\t\t\tawait muteUser({ rid, username: user.username });\n\n\t\t\t\t\treturn dispatchToastMessage({\n\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\tmessage: t(mutedMessage, {\n\t\t\t\t\t\t\tusername: user.username,\n\t\t\t\t\t\t\troomName,\n\t\t\t\t\t\t}),\n\t\t\t\t\t});\n\t\t\t\t} catch (error: unknown) {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t\t} finally {\n\t\t\t\t\tcloseModal();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (isMuted) {\n\t\t\t\treturn onConfirm();\n\t\t\t}\n\n\t\t\treturn setModal(\n\t\t\t\t<GenericModal variant='danger' confirmText={t('Yes_mute_user')} onClose={closeModal} onCancel={closeModal} onConfirm={onConfirm}>\n\t\t\t\t\t{t('The_user_wont_be_able_to_type_in_s', roomName)}\n\t\t\t\t</GenericModal>,\n\t\t\t);\n\t\t};\n\n\t\treturn roomCanMute && userCanMute\n\t\t\t? {\n\t\t\t\t\tcontent: t(isMuted ? 'Unmute_user' : 'Mute_user'),\n\t\t\t\t\ticon: isMuted ? ('mic' as const) : ('mic-off' as const),\n\t\t\t\t\tonClick: action,\n\t\t\t\t\ttype: 'management' as UserInfoActionType,\n\t\t\t  }\n\t\t\t: undefined;\n\t}, [\n\t\tcloseModal,\n\t\tmutedMessage,\n\t\tdispatchToastMessage,\n\t\tisMuted,\n\t\tmuteUser,\n\t\trid,\n\t\troomCanMute,\n\t\troomName,\n\t\tsetModal,\n\t\tt,\n\t\tuser.username,\n\t\tuserCanMute,\n\t]);\n\n\treturn muteUserOption;\n};\n",null],"names":["useMutableCallback","escapeHTML","useAllPermissions","usePermission","useSetModal","useMethod","useToastMessageDispatch","useTranslation","useUserRoom","useUserSubscription","React","useMemo","GenericModal","roomCoordinator","getRoomDirectives","module","export","useMuteUserAction","default","getUserIsMuted","user","room","userCanPostReadonly","_user$username3","_user$username","_user$username2","ro","Array","isArray","unmuted","indexOf","username","muted","rid","t","userCanMute","dispatchToastMessage","setModal","closeModal","otherUserCanPostReadonly","userSubscription","isMuted","roomName","getRoomName","Error","roomCanMute","showingUserId","_id","mutedMessage","muteUser","muteUserOption","content","icon","onClick","onConfirm","type","message","error","createElement","variant","confirmText","onClose","onCancel","undefined"],"mappings":"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"}