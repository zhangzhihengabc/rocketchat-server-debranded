function module(e,o,s){let r,t,n,a,i,l,u,c,d;s.export({useChangeLeaderAction:()=>_}),s.link("@rocket.chat/fuselage-hooks",{useMutableCallback(e){r=e}},0),s.link("@rocket.chat/ui-contexts",{useTranslation(e){t=e},usePermission(e){n=e},useUserRoom(e){a=e},useUserSubscription(e){i=e}},1),s.link("react",{useMemo(e){l=e}},2),s.link("../../../../../hooks/useEndpointAction",{useEndpointAction(e){u=e}},3),s.link("../../../lib/getRoomDirectives",{getRoomDirectives(e){c=e}},4),s.link("../../useUserHasRoomRole",{useUserHasRoomRole(e){d=e}},5);let _=(e,o)=>{let s=t(),_=a(o),{_id:m}=e,k=n("set-leader",o),v=i(o);if(!_)throw Error("Room not provided");let h="p"===_.t?"/v1/groups":"/v1/channels",{roomCanSetLeader:p}=c({room:_,showingUserId:m,userSubscription:v}),R=d(m,o,"leader"),g=R?"removeLeader":"addLeader",U=R?"removed__username__as__role_":"set__username__as__role_",b=u("POST","".concat(h,".").concat(g),{successMessage:s(U,{username:e.username,role:"leader"})}),f=r(()=>b({roomId:o,userId:m})),A=l(()=>p&&k?{content:s(R?"Remove_as_leader":"Set_as_leader"),icon:"shield-alt",onClick:f,type:"privileges"}:void 0,[R,p,s,k,f]);return A}}
//# sourceMappingURL=/dynamic/client/views/room/hooks/useUserInfoActions/actions/35222eb01088048b1db551ae5a6676017ffe611b.map
