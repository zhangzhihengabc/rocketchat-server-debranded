)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/hooks/useIsVisible.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useDebouncedState, useSafely } from '@rocket.chat/fuselage-hooks';\nimport type { RefObject } from 'react';\nimport { useEffect } from 'react';\n\nexport const useIsVisible = (ref: RefObject<HTMLInputElement>): [boolean] => {\n\tconst [menuVisibility, setMenuVisibility] = useSafely(useDebouncedState(!!window.DISABLE_ANIMATION, 100));\n\n\tuseEffect(() => {\n\t\tif (!ref.current) {\n\t\t\treturn;\n\t\t}\n\t\tconst observer = new IntersectionObserver((entries) => {\n\t\t\tentries.forEach((entry) => {\n\t\t\t\tsetMenuVisibility(entry.isIntersecting);\n\t\t\t});\n\t\t});\n\n\t\tobserver.observe(ref.current);\n\n\t\treturn (): void => {\n\t\t\tobserver.disconnect();\n\t\t};\n\t}, [setMenuVisibility, ref]);\n\n\treturn [menuVisibility];\n};\n",null],"names":["useDebouncedState","useSafely","useEffect","module","export","useIsVisible","ref","menuVisibility","setMenuVisibility","window","DISABLE_ANIMATION","current","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","disconnect"],"mappings":"2BAA6CA,EAAAC,EAA8BC,EAA3EC,EAAOC,MAAE,CAAA,CAAAC,aAAmB,IAAAA,CAAW,GAAoCF,EAAAA,IAAAA,CAAAA,8BAAAA,CAAAH,kBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,QAAAA,CAAAD,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAIpE,IAAMG,EAAgBC,IAC5B,GAAM,CAACC,EAAgBC,EAAkB,CAAGP,EAAUD,EAAkB,CAAC,CAACS,OAAOC,iBAAiB,CAAE,MAmBpG,OAjBAR,EAAU,KACT,GAAI,CAACI,EAAIK,OAAO,CACf,OAED,IAAMC,EAAW,IAAIC,qBAAsBC,IAC1CA,EAAQC,OAAO,CAAEC,IAChBR,EAAkBQ,EAAMC,cAAc,CACvC,EACD,GAIA,OAFAL,EAASM,OAAO,CAACZ,EAAIK,OAAO,EAErB,KACNC,EAASO,UAAU,EACpB,CACD,EAAG,CAACX,EAAmBF,EAAI,EAEpB,CAACC,EAAe,AACxB"}