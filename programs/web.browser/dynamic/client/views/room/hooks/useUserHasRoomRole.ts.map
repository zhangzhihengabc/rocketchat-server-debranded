)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/hooks/useUserHasRoomRole.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRole, IRoom, IUser } from '@rocket.chat/core-typings';\nimport { useCallback } from 'react';\n\nimport { RoomRoles } from '../../../../app/models/client';\nimport { useReactiveValue } from '../../../hooks/useReactiveValue';\n\nexport const useUserHasRoomRole = (uid: IUser['_id'], rid: IRoom['_id'], role: IRole['name']): boolean =>\n\tuseReactiveValue(useCallback(() => !!RoomRoles.findOne({ rid, 'u._id': uid, 'roles': role }), [uid, rid, role]));\n",null],"names":["useCallback","RoomRoles","useReactiveValue","module","export","useUserHasRoomRole","uid","rid","role","findOne"],"mappings":"2BACoCA,EAAAC,EAAAC,EAApCC,EAAOC,MAAE,CAAA,CAAAC,mBAAmB,IAAQA,CAAA,GAAAF,EAAAA,IAAAA,CAAAA,QAAAA,CAAAH,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,gCAAAA,CAAAF,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,kCAAAA,CAAAD,iBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAK7B,IAAMG,EAAqB,CAACC,EAAmBC,EAAmBC,IACxEN,EAAiBF,EAAY,IAAM,CAAC,CAACC,EAAUQ,OAAO,CAAC,CAAEF,IAAAA,EAAK,QAASD,EAAK,MAASE,CAAI,GAAK,CAACF,EAAKC,EAAKC,EAAK"}