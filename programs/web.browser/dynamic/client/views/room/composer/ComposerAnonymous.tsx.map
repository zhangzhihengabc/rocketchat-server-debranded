)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/composer/ComposerAnonymous.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Button, ButtonGroup } from '@rocket.chat/fuselage';\nimport {\n\tuseSessionDispatch,\n\tuseSetting,\n\tuseTranslation,\n\tuseLoginWithToken,\n\tuseToastMessageDispatch,\n\tuseMethod,\n} from '@rocket.chat/ui-contexts';\nimport { useMutation } from '@tanstack/react-query';\nimport type { ReactElement } from 'react';\nimport React from 'react';\n\nconst ComposerAnonymous = (): ReactElement => {\n\tconst isAnonymousWriteEnabled = useSetting('Accounts_AllowAnonymousWrite');\n\n\tconst dispatch = useToastMessageDispatch();\n\n\tconst loginWithToken = useLoginWithToken();\n\n\tconst anonymousUser = useMethod('registerUser');\n\n\tconst registerAnonymous = useMutation(\n\t\tasync (...params: Parameters<typeof anonymousUser>) => {\n\t\t\tconst result = await anonymousUser(...params);\n\t\t\tif (typeof result !== 'string' && result.token) {\n\t\t\t\tawait loginWithToken(result.token);\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\t\t{\n\t\t\tonError: (error) => {\n\t\t\t\tdispatch({ type: 'error', message: error });\n\t\t\t},\n\t\t},\n\t);\n\n\tconst joinAnonymous = () => {\n\t\tregisterAnonymous.mutate({ email: null });\n\t};\n\n\tconst setForceLogin = useSessionDispatch('forceLogin');\n\n\tconst t = useTranslation();\n\n\treturn (\n\t\t<ButtonGroup marginBlock={16}>\n\t\t\t<Button small primary onClick={() => setForceLogin(true)}>\n\t\t\t\t{t('Sign_in_to_start_talking')}\n\t\t\t</Button>\n\t\t\t{isAnonymousWriteEnabled && (\n\t\t\t\t<Button small secondary onClick={() => joinAnonymous()}>\n\t\t\t\t\t{t('Or_talk_as_anonymous')}\n\t\t\t\t</Button>\n\t\t\t)}\n\t\t</ButtonGroup>\n\t);\n};\n\nexport default ComposerAnonymous;\n",null],"names":["Button","ButtonGroup","useSessionDispatch","useSetting","useTranslation","useLoginWithToken","useToastMessageDispatch","useMethod","useMutation","React","module","link","default","exportDefault","isAnonymousWriteEnabled","dispatch","loginWithToken","anonymousUser","registerAnonymous","result","arguments","token","onError","error","type","message","joinAnonymous","mutate","email","setForceLogin","t","createElement","marginBlock","small","primary","onClick","secondary"],"mappings":"2BAAAA,EAASC,EAAmDC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA3CC,EAAaC,IAAAA,CAAAA,wBAA6B,CAACX,OAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAS,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAR,mBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,kBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,wBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAF,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,QAAAA,CAAAE,QAAAA,CAAAA,EAAAH,EAAAA,CAAA,CAAA,EAAA,GAA5DC,EAAOG,aAAU,CAaS,KACzB,IAAMC,EAA0BX,EAAW,gCAErCY,EAAWT,IAEXU,EAAiBX,IAEjBY,EAAgBV,EAAU,gBAE1BW,EAAoBV,EACzB,iBACC,IAAMW,EAAS,MAAMF,KAAcG,WAInC,MAHsB,UAAlB,OAAOD,GAAuBA,EAAOE,KAAK,EAC7C,MAAML,EAAeG,EAAOE,KAAK,EAE3BF,CACR,EACA,CACCG,QAAUC,IACTR,EAAS,CAAES,KAAM,QAASC,QAASF,CAAK,EACzC,IAIIG,EAAgB,KACrBR,EAAkBS,MAAM,CAAC,CAAEC,MAAO,IAAI,EACvC,EAEMC,EAAgB3B,EAAmB,cAEnC4B,EAAI1B,IAEV,OACCK,EAAAsB,aAAA,CAAC9B,EAAW,CAAC+B,YAAa,EAAG,EAC5BvB,EAAAsB,aAAA,CAAC/B,EAAM,CAACiC,MAAK,CAAA,EAACC,QAAO,CAAA,EAACC,QAAS,IAAMN,EAAc,CAAA,EAAM,EACvDC,EAAE,6BAEHhB,GACAL,EAAAsB,aAAA,CAAC/B,EAAM,CAACiC,MAAK,CAAA,EAACG,UAAS,CAAA,EAACD,QAAS,IAAMT,GAAgB,EACrDI,EAAE,yBAKR"}