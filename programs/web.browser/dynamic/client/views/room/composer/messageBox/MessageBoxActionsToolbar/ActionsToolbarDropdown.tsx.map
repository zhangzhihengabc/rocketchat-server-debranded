)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/composer/messageBox/MessageBoxActionsToolbar/ActionsToolbarDropdown.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport { Dropdown, IconButton, Option, OptionTitle, OptionIcon, OptionContent } from '@rocket.chat/fuselage';\nimport { useTranslation, useUserRoom } from '@rocket.chat/ui-contexts';\nimport type { ComponentProps, ReactNode } from 'react';\nimport React, { useRef, Fragment } from 'react';\n\nimport { messageBox } from '../../../../../../app/ui-utils/client';\nimport { useMessageboxAppsActionButtons } from '../../../../../hooks/useAppActionButtons';\nimport type { ChatAPI } from '../../../../../lib/chats/ChatAPI';\nimport { useDropdownVisibility } from '../../../../../sidebar/header/hooks/useDropdownVisibility';\nimport { useChat } from '../../../contexts/ChatContext';\nimport CreateDiscussionAction from './actions/CreateDiscussionAction';\nimport ShareLocationAction from './actions/ShareLocationAction';\nimport WebdavAction from './actions/WebdavAction';\n\ntype ActionsToolbarDropdownProps = {\n\tchatContext?: ChatAPI;\n\trid: IRoom['_id'];\n\tisRecording?: boolean;\n\ttmid?: string;\n\tactions?: ReactNode[];\n};\n\nconst ActionsToolbarDropdown = ({ isRecording, rid, tmid, actions, ...props }: ActionsToolbarDropdownProps) => {\n\tconst chatContext = useChat();\n\n\tif (!chatContext) {\n\t\tthrow new Error('useChat must be used within a ChatProvider');\n\t}\n\n\tconst t = useTranslation();\n\tconst reference = useRef(null);\n\tconst target = useRef(null);\n\n\tconst room = useUserRoom(rid);\n\n\tconst { isVisible, toggle } = useDropdownVisibility({ reference, target });\n\n\tconst apps = useMessageboxAppsActionButtons();\n\n\tconst groups = {\n\t\t...(apps.isSuccess &&\n\t\t\tapps.data.length > 0 && {\n\t\t\t\tApps: apps.data,\n\t\t\t}),\n\t\t...messageBox.actions.get(),\n\t};\n\n\tconst messageBoxActions = Object.entries(groups).map(([name, group]) => {\n\t\tconst items = group.map((item) => ({\n\t\t\ticon: item.icon,\n\t\t\tname: t(item.label),\n\t\t\ttype: 'messagebox-action',\n\t\t\tid: item.id,\n\t\t\taction: item.action,\n\t\t}));\n\n\t\treturn {\n\t\t\ttitle: t.has(name) && t(name),\n\t\t\titems,\n\t\t};\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t<IconButton\n\t\t\t\tdata-qa-id='menu-more-actions'\n\t\t\t\tdisabled={isRecording}\n\t\t\t\tsmall\n\t\t\t\tref={reference}\n\t\t\t\ticon='plus'\n\t\t\t\tonClick={() => toggle()}\n\t\t\t\t{...props}\n\t\t\t/>\n\t\t\t{isVisible && (\n\t\t\t\t<Dropdown reference={reference} ref={target} placement='bottom-start'>\n\t\t\t\t\t<OptionTitle>{t('Create_new')}</OptionTitle>\n\t\t\t\t\t{room && <CreateDiscussionAction room={room} />}\n\t\t\t\t\t{actions}\n\t\t\t\t\t<WebdavAction chatContext={chatContext} />\n\t\t\t\t\t{room && <ShareLocationAction room={room} tmid={tmid} />}\n\t\t\t\t\t{messageBoxActions?.map((actionGroup, index) => (\n\t\t\t\t\t\t<Fragment key={index}>\n\t\t\t\t\t\t\t<OptionTitle>{actionGroup.title}</OptionTitle>\n\t\t\t\t\t\t\t{actionGroup.items.map((item) => (\n\t\t\t\t\t\t\t\t<Option\n\t\t\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\t\t\tonClick={(event) =>\n\t\t\t\t\t\t\t\t\t\titem.action({\n\t\t\t\t\t\t\t\t\t\t\trid,\n\t\t\t\t\t\t\t\t\t\t\ttmid,\n\t\t\t\t\t\t\t\t\t\t\tevent: event as unknown as Event,\n\t\t\t\t\t\t\t\t\t\t\tchat: chatContext,\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tgap={!item.icon}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{item.icon && <OptionIcon name={item.icon as ComponentProps<typeof OptionIcon>['name']} />}\n\t\t\t\t\t\t\t\t\t<OptionContent>{item.name}</OptionContent>\n\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t))}\n\t\t\t\t</Dropdown>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default ActionsToolbarDropdown;\n",null],"names":["_extends","_objectSpread","_objectWithoutProperties","Dropdown","IconButton","Option","OptionTitle","OptionIcon","OptionContent","useTranslation","useUserRoom","React","useRef","Fragment","messageBox","useMessageboxAppsActionButtons","useDropdownVisibility","useChat","CreateDiscussionAction","ShareLocationAction","WebdavAction","module","link","default","v","exportDefault","_ref","isRecording","rid","tmid","actions","props","_excluded","chatContext","Error","t","reference","target","room","isVisible","toggle","apps","groups","isSuccess","data","length","Apps","get","messageBoxActions","Object","entries","map","_ref2","name","group","items","item","icon","label","type","id","action","title","has","createElement","disabled","small","ref","onClick","placement","actionGroup","index","key","event","chat","gap"],"mappings":"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"}