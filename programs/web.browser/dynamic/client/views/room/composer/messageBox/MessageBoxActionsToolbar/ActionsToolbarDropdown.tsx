function module(e,t,n){let i,a,l,o,c,r,s,u,m,d,p,k,h,b,f,E,C,g,x,A,w;let y=["isRecording","rid","tmid","actions"];n.link("@babel/runtime/helpers/extends",{default(e){i=e}},0),n.link("@babel/runtime/helpers/objectSpread2",{default(e){a=e}},1),n.link("@babel/runtime/helpers/objectWithoutProperties",{default(e){l=e}},2),n.link("@rocket.chat/fuselage",{Dropdown(e){o=e},IconButton(e){c=e},Option(e){r=e},OptionTitle(e){s=e},OptionIcon(e){u=e},OptionContent(e){m=e}},0),n.link("@rocket.chat/ui-contexts",{useTranslation(e){d=e},useUserRoom(e){p=e}},1),n.link("react",{default(e){k=e},useRef(e){h=e},Fragment(e){b=e}},2),n.link("../../../../../../app/ui-utils/client",{messageBox(e){f=e}},3),n.link("../../../../../hooks/useAppActionButtons",{useMessageboxAppsActionButtons(e){E=e}},4),n.link("../../../../../sidebar/header/hooks/useDropdownVisibility",{useDropdownVisibility(e){C=e}},5),n.link("../../../contexts/ChatContext",{useChat(e){g=e}},6),n.link("./actions/CreateDiscussionAction",{default(e){x=e}},7),n.link("./actions/ShareLocationAction",{default(e){A=e}},8),n.link("./actions/WebdavAction",{default(e){w=e}},9),n.exportDefault(e=>{let{isRecording:t,rid:n,tmid:D,actions:O}=e,v=l(e,y),B=g();if(!B)throw Error("useChat must be used within a ChatProvider");let j=d(),R=h(null),S=h(null),F=p(n),{isVisible:I,toggle:P}=C({reference:R,target:S}),T=E(),V=a(a({},T.isSuccess&&T.data.length>0&&{Apps:T.data}),f.actions.get()),W=Object.entries(V).map(e=>{let[t,n]=e,i=n.map(e=>({icon:e.icon,name:j(e.label),type:"messagebox-action",id:e.id,action:e.action}));return{title:j.has(t)&&j(t),items:i}});return k.createElement(k.Fragment,null,k.createElement(c,i({"data-qa-id":"menu-more-actions",disabled:t,small:!0,ref:R,icon:"plus",onClick:()=>P()},v)),I&&k.createElement(o,{reference:R,ref:S,placement:"bottom-start"},k.createElement(s,null,j("Create_new")),F&&k.createElement(x,{room:F}),O,k.createElement(w,{chatContext:B}),F&&k.createElement(A,{room:F,tmid:D}),null==W?void 0:W.map((e,t)=>k.createElement(b,{key:t},k.createElement(s,null,e.title),e.items.map(e=>k.createElement(r,{key:e.id,onClick:t=>e.action({rid:n,tmid:D,event:t,chat:B}),gap:!e.icon},e.icon&&k.createElement(u,{name:e.icon}),k.createElement(m,null,e.name)))))))})}
//# sourceMappingURL=/dynamic/client/views/room/composer/messageBox/MessageBoxActionsToolbar/01fda55ac7a2dd2a71bc8a7a3f9349f8aa5c9607.map
