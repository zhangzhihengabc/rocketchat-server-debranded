)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/views/room/ShareLocation/ShareLocationModal.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IMessage, IRoom } from '@rocket.chat/core-typings';\nimport { useEndpoint, useTranslation, useToastMessageDispatch } from '@rocket.chat/ui-contexts';\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\nimport type { ReactElement } from 'react';\nimport React from 'react';\n\nimport GenericModal from '../../../components/GenericModal';\nimport MapView from '../../../components/message/content/location/MapView';\nimport { getGeolocationPermission } from './getGeolocationPermission';\nimport { getGeolocationPosition } from './getGeolocationPosition';\n\ntype ShareLocationModalProps = {\n\trid: IRoom['_id'];\n\ttmid: IMessage['tmid'];\n\tonClose: () => void;\n};\n\nconst ShareLocationModal = ({ rid, tmid, onClose }: ShareLocationModalProps): ReactElement => {\n\tconst t = useTranslation();\n\tconst dispatchToast = useToastMessageDispatch();\n\tconst { data: permissionData, isLoading: permissionLoading } = useQuery(['geolocationPermission'], getGeolocationPermission);\n\tconst { data: positionData } = useQuery(['geolocationPosition', permissionData], async () => {\n\t\tif (permissionLoading || permissionData === 'prompt' || permissionData === 'denied') {\n\t\t\treturn;\n\t\t}\n\t\treturn getGeolocationPosition();\n\t});\n\n\tconst queryClient = useQueryClient();\n\n\tconst sendMessage = useEndpoint('POST', '/v1/chat.sendMessage');\n\n\tconst onConfirm = (): void => {\n\t\tif (!positionData) {\n\t\t\tthrow new Error('Failed to load position');\n\t\t}\n\t\ttry {\n\t\t\tsendMessage({\n\t\t\t\tmessage: {\n\t\t\t\t\trid,\n\t\t\t\t\ttmid,\n\t\t\t\t\tlocation: {\n\t\t\t\t\t\ttype: 'Point',\n\t\t\t\t\t\tcoordinates: [positionData.coords.longitude, positionData.coords.latitude],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tdispatchToast({ type: 'error', message: error });\n\t\t} finally {\n\t\t\tonClose();\n\t\t}\n\t};\n\n\tconst onConfirmRequestLocation = async (): Promise<void> => {\n\t\ttry {\n\t\t\tconst position = await getGeolocationPosition();\n\t\t\tqueryClient.setQueryData(['geolocationPosition', 'granted'], position);\n\t\t\tqueryClient.setQueryData(['geolocationPermission'], 'granted');\n\t\t} catch (e) {\n\t\t\tqueryClient.setQueryData(['geolocationPermission'], () => getGeolocationPermission);\n\t\t}\n\t};\n\n\tif (permissionLoading || permissionData === 'prompt') {\n\t\treturn (\n\t\t\t<GenericModal\n\t\t\t\ttitle={t('You_will_be_asked_for_permissions')}\n\t\t\t\tconfirmText={t('Continue')}\n\t\t\t\tonConfirm={onConfirmRequestLocation}\n\t\t\t\tonClose={onClose}\n\t\t\t\tonCancel={onClose}\n\t\t\t/>\n\t\t);\n\t}\n\n\tif (permissionData === 'denied' || !positionData) {\n\t\treturn (\n\t\t\t<GenericModal title={t('Cannot_share_your_location')} confirmText={t('Ok')} onConfirm={onClose} onClose={onClose}>\n\t\t\t\t{t('The_necessary_browser_permissions_for_location_sharing_are_not_granted')}\n\t\t\t</GenericModal>\n\t\t);\n\t}\n\n\treturn (\n\t\t<GenericModal title={t('Share_Location_Title')} confirmText={t('Share')} onConfirm={onConfirm} onClose={onClose} onCancel={onClose}>\n\t\t\t<MapView latitude={positionData.coords.latitude} longitude={positionData.coords.longitude} />\n\t\t</GenericModal>\n\t);\n};\n\nexport default ShareLocationModal;\n",null],"names":["useEndpoint","useTranslation","useToastMessageDispatch","useQuery","useQueryClient","React","GenericModal","MapView","getGeolocationPermission","getGeolocationPosition","module","link","v","default","exportDefault","_ref","rid","tmid","onClose","t","dispatchToast","data","permissionData","isLoading","permissionLoading","positionData","queryClient","sendMessage","onConfirmRequestLocation","position","setQueryData","e","createElement","title","confirmText","onConfirm","onCancel","Error","message","location","type","coordinates","coords","longitude","latitude","error"],"mappings":"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"}