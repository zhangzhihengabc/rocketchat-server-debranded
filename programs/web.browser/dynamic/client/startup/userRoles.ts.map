)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/startup/userRoles.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { UserRoles, ChatMessage } from '../../app/models/client';\nimport { Notifications } from '../../app/notifications/client';\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\nimport { dispatchToastMessage } from '../lib/toast';\n\nMeteor.startup(() => {\n\tTracker.autorun(() => {\n\t\tif (Meteor.userId()) {\n\t\t\tsdk\n\t\t\t\t.call('getUserRoles')\n\t\t\t\t.then((results) => {\n\t\t\t\t\tfor (const record of results) {\n\t\t\t\t\t\tUserRoles.upsert({ _id: record._id }, record);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t\t});\n\n\t\t\tNotifications.onLogged('roles-change', (role) => {\n\t\t\t\tif (role.type === 'added') {\n\t\t\t\t\tif (!role.scope) {\n\t\t\t\t\t\tif (!role.u) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tUserRoles.upsert({ _id: role.u._id }, { $addToSet: { roles: role._id }, $set: { username: role.u.username } });\n\t\t\t\t\t\tChatMessage.update({ 'u._id': role.u._id }, { $addToSet: { roles: role._id } }, { multi: true });\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (role.type === 'removed') {\n\t\t\t\t\tif (!role.scope) {\n\t\t\t\t\t\tif (!role.u) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tUserRoles.update({ _id: role.u._id }, { $pull: { roles: role._id } });\n\t\t\t\t\t\tChatMessage.update({ 'u._id': role.u._id }, { $pull: { roles: role._id } }, { multi: true });\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (role.type === 'changed') {\n\t\t\t\t\tChatMessage.update({ roles: role._id }, { $inc: { rerender: 1 } }, { multi: true });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n});\n",null],"names":["Meteor","Tracker","UserRoles","ChatMessage","Notifications","sdk","dispatchToastMessage","module","link","startup","autorun","userId","call","then","results","record","upsert","_id","catch","error","type","message","onLogged","role","scope","u","$addToSet","roles","$set","username","update","multi","$pull","$inc","rerender"],"mappings":"2BAAAA,EAAuCC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA9BC,EAAQC,IAAA,CAAM,gBAAgB,CAAAR,OAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAO,EAAAA,IAAAA,CAAAA,iBAAAA,CAAAN,QAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAM,EAAAA,IAAAA,CAAAA,0BAAAA,CAAAL,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,iCAAAA,CAAAH,cAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,uCAAAA,CAAAF,IAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,eAAAA,CAAAD,qBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAQvCN,EAAOS,OAAO,CAAC,KACdR,EAAQS,OAAO,CAAC,KACXV,EAAOW,MAAM,KAChBN,EACEO,IAAI,CAAC,gBACLC,IAAI,CAAEC,IACN,IAAK,IAAMC,KAAUD,EACpBZ,EAAUc,MAAM,CAAC,CAAEC,IAAKF,EAAOE,GAAAA,AAAG,EAAIF,EAExC,GACCG,KAAK,CAAEC,IACPb,EAAqB,CAAEc,KAAM,QAASC,QAASF,CAAK,EACrD,GAEDf,EAAckB,QAAQ,CAAC,eAAiBC,IACvC,GAAIA,AAAc,UAAdA,EAAKH,IAAI,CAAc,CAC1B,GAAI,CAACG,EAAKC,KAAK,CAAE,CAChB,GAAI,CAACD,EAAKE,CAAC,CACV,OAEDvB,EAAUc,MAAM,CAAC,CAAEC,IAAKM,EAAKE,CAAC,CAACR,GAAAA,AAAG,EAAI,CAAES,UAAW,CAAEC,MAAOJ,EAAKN,GAAAA,AAAG,EAAIW,KAAM,CAAEC,SAAUN,EAAKE,CAAC,CAACI,QAAAA,AAAQ,CAAE,GAC3G1B,EAAY2B,MAAM,CAAC,CAAE,QAASP,EAAKE,CAAC,CAACR,GAAAA,AAAG,EAAI,CAAES,UAAW,CAAEC,MAAOJ,EAAKN,GAAAA,AAAG,CAAE,EAAI,CAAEc,MAAO,CAAA,CAAI,GAG9F,OAGD,GAAIR,AAAc,YAAdA,EAAKH,IAAI,CAAgB,CAC5B,GAAI,CAACG,EAAKC,KAAK,CAAE,CAChB,GAAI,CAACD,EAAKE,CAAC,CACV,OAEDvB,EAAU4B,MAAM,CAAC,CAAEb,IAAKM,EAAKE,CAAC,CAACR,GAAAA,AAAG,EAAI,CAAEe,MAAO,CAAEL,MAAOJ,EAAKN,GAAAA,AAAG,CAAE,GAClEd,EAAY2B,MAAM,CAAC,CAAE,QAASP,EAAKE,CAAC,CAACR,GAAAA,AAAG,EAAI,CAAEe,MAAO,CAAEL,MAAOJ,EAAKN,GAAAA,AAAG,CAAE,EAAI,CAAEc,MAAO,CAAA,CAAI,GAG1F,OAGiB,YAAdR,EAAKH,IAAI,EACZjB,EAAY2B,MAAM,CAAC,CAAEH,MAAOJ,EAAKN,GAAAA,AAAG,EAAI,CAAEgB,KAAM,CAAEC,SAAU,CAAC,CAAE,EAAI,CAAEH,MAAO,CAAA,CAAI,EAElF,GAEF,EACD"}