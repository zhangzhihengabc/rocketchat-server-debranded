)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/startup/e2e.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { AtLeast, IMessage, ISubscription } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { e2e } from '../../app/e2e/client/rocketchat.e2e';\nimport { Subscriptions, ChatRoom } from '../../app/models/client';\nimport { Notifications } from '../../app/notifications/client';\nimport { settings } from '../../app/settings/client';\nimport { onClientBeforeSendMessage } from '../lib/onClientBeforeSendMessage';\nimport { onClientMessageReceived } from '../lib/onClientMessageReceived';\nimport { isLayoutEmbedded } from '../lib/utils/isLayoutEmbedded';\nimport { waitUntilFind } from '../lib/utils/waitUntilFind';\nimport { router } from '../providers/RouterProvider';\n\nMeteor.startup(() => {\n\tTracker.autorun(() => {\n\t\tif (!Meteor.userId()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!window.crypto) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst enabled = settings.get('E2E_Enable');\n\t\t// we don't care about the reactivity of this boolean\n\t\tconst adminEmbedded = isLayoutEmbedded() && router.getLocationPathname().startsWith('/admin');\n\n\t\tif (enabled && !adminEmbedded) {\n\t\t\te2e.startClient();\n\t\t\te2e.enabled.set(true);\n\t\t} else {\n\t\t\te2e.enabled.set(false);\n\t\t\te2e.closeAlert();\n\t\t}\n\t});\n\n\tlet observable: Meteor.LiveQueryHandle | null = null;\n\tlet offClientMessageReceived: undefined | (() => void);\n\tlet offClientBeforeSendMessage: undefined | (() => void);\n\tTracker.autorun(() => {\n\t\tif (!e2e.isReady()) {\n\t\t\toffClientMessageReceived?.();\n\t\t\tNotifications.unUser('e2ekeyRequest');\n\t\t\tobservable?.stop();\n\t\t\toffClientBeforeSendMessage?.();\n\t\t\treturn;\n\t\t}\n\n\t\tNotifications.onUser('e2ekeyRequest', async (roomId, keyId): Promise<void> => {\n\t\t\tconst e2eRoom = await e2e.getInstanceByRoomId(roomId);\n\t\t\tif (!e2eRoom) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\te2eRoom.provideKeyToUser(keyId);\n\t\t});\n\n\t\tobservable = Subscriptions.find().observe({\n\t\t\tchanged: async (sub: ISubscription) => {\n\t\t\t\tsetTimeout(async () => {\n\t\t\t\t\tif (!sub.encrypted && !sub.E2EKey) {\n\t\t\t\t\t\te2e.removeInstanceByRoomId(sub.rid);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst e2eRoom = await e2e.getInstanceByRoomId(sub.rid);\n\t\t\t\t\tif (!e2eRoom) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (sub.E2ESuggestedKey) {\n\t\t\t\t\t\tif (await e2eRoom.importGroupKey(sub.E2ESuggestedKey)) {\n\t\t\t\t\t\t\te2e.acceptSuggestedKey(sub.rid);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.warn('Invalid E2ESuggestedKey, rejecting', sub.E2ESuggestedKey);\n\t\t\t\t\t\t\te2e.rejectSuggestedKey(sub.rid);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tsub.encrypted ? e2eRoom.resume() : e2eRoom.pause();\n\n\t\t\t\t\t// Cover private groups and direct messages\n\t\t\t\t\tif (!e2eRoom.isSupportedRoomType(sub.t)) {\n\t\t\t\t\t\te2eRoom.disable();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (sub.E2EKey && e2eRoom.isWaitingKeys()) {\n\t\t\t\t\t\te2eRoom.keyReceived();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!e2eRoom.isReady()) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\te2eRoom.decryptSubscription();\n\t\t\t\t}, 0);\n\t\t\t},\n\t\t\tadded: async (sub: ISubscription) => {\n\t\t\t\tsetTimeout(async () => {\n\t\t\t\t\tif (!sub.encrypted && !sub.E2EKey) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\treturn e2e.getInstanceByRoomId(sub.rid);\n\t\t\t\t}, 0);\n\t\t\t},\n\t\t\tremoved: (sub: ISubscription) => {\n\t\t\t\te2e.removeInstanceByRoomId(sub.rid);\n\t\t\t},\n\t\t});\n\n\t\toffClientMessageReceived = onClientMessageReceived.use(async (msg: IMessage) => {\n\t\t\tconst e2eRoom = await e2e.getInstanceByRoomId(msg.rid);\n\t\t\tif (!e2eRoom?.shouldConvertReceivedMessages()) {\n\t\t\t\treturn msg;\n\t\t\t}\n\t\t\treturn e2e.decryptMessage(msg);\n\t\t});\n\n\t\t// Encrypt messages before sending\n\t\toffClientBeforeSendMessage = onClientBeforeSendMessage.use(async (message: AtLeast<IMessage, '_id' | 'rid' | 'msg'>) => {\n\t\t\tconst e2eRoom = await e2e.getInstanceByRoomId(message.rid);\n\n\t\t\tif (!e2eRoom) {\n\t\t\t\treturn message;\n\t\t\t}\n\n\t\t\tconst subscription = await waitUntilFind(() => ChatRoom.findOne({ _id: message.rid }));\n\n\t\t\tsubscription.encrypted ? e2eRoom.resume() : e2eRoom.pause();\n\n\t\t\tconst shouldConvertSentMessages = await e2eRoom.shouldConvertSentMessages(message);\n\n\t\t\tif (!shouldConvertSentMessages) {\n\t\t\t\treturn message;\n\t\t\t}\n\n\t\t\t// Should encrypt this message.\n\t\t\tconst msg = await e2eRoom.encrypt(message);\n\n\t\t\tmessage.msg = msg;\n\t\t\tmessage.t = 'e2e';\n\t\t\tmessage.e2e = 'pending';\n\t\t\treturn message;\n\t\t});\n\t});\n});\n",null],"names":["Meteor","Tracker","e2e","Subscriptions","ChatRoom","Notifications","settings","onClientBeforeSendMessage","onClientMessageReceived","isLayoutEmbedded","waitUntilFind","router","module","link","startup","offClientMessageReceived","offClientBeforeSendMessage","autorun","userId","window","crypto","enabled","get","adminEmbedded","getLocationPathname","startsWith","startClient","set","closeAlert","observable","isReady","_offClientMessageRece","_observable","_offClientBeforeSendM","unUser","stop","onUser","roomId","keyId","e2eRoom","getInstanceByRoomId","provideKeyToUser","find","observe","changed","sub","setTimeout","encrypted","E2EKey","removeInstanceByRoomId","rid","E2ESuggestedKey","importGroupKey","acceptSuggestedKey","console","warn","rejectSuggestedKey","resume","pause","isSupportedRoomType","t","disable","isWaitingKeys","keyReceived","decryptSubscription","added","removed","use","msg","shouldConvertReceivedMessages","decryptMessage","message","subscription","findOne","_id","shouldConvertSentMessages","encrypt"],"mappings":"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"}