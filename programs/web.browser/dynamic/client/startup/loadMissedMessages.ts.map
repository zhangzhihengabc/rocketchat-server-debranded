)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/startup/loadMissedMessages.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRoom } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { ChatMessage, ChatSubscription } from '../../app/models/client';\nimport { LegacyRoomManager, upsertMessage } from '../../app/ui-utils/client';\nimport { callWithErrorHandling } from '../lib/utils/callWithErrorHandling';\n\nconst loadMissedMessages = async function (rid: IRoom['_id']): Promise<void> {\n\tconst lastMessage = ChatMessage.findOne({ rid, _hidden: { $ne: true }, temp: { $exists: false } }, { sort: { ts: -1 }, limit: 1 });\n\n\tif (!lastMessage) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tconst result = await callWithErrorHandling('loadMissedMessages', rid, lastMessage.ts);\n\t\tif (result) {\n\t\t\tconst subscription = ChatSubscription.findOne({ rid });\n\t\t\tawait Promise.all(Array.from(result).map((msg) => upsertMessage({ msg, subscription })));\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n};\n\nMeteor.startup(() => {\n\tlet connectionWasOnline = true;\n\tTracker.autorun(() => {\n\t\tconst { connected } = Meteor.connection.status();\n\n\t\tif (connected === true && connectionWasOnline === false && LegacyRoomManager.openedRooms) {\n\t\t\tObject.keys(LegacyRoomManager.openedRooms).forEach((key) => {\n\t\t\t\tconst value = LegacyRoomManager.openedRooms[key];\n\t\t\t\tif (value.rid) {\n\t\t\t\t\tloadMissedMessages(value.rid);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tconnectionWasOnline = connected;\n\t});\n});\n",null],"names":["Meteor","Tracker","ChatMessage","ChatSubscription","LegacyRoomManager","upsertMessage","callWithErrorHandling","module","link","loadMissedMessages","rid","lastMessage","findOne","_hidden","$ne","temp","$exists","sort","ts","limit","result","subscription","Promise","all","Array","from","map","msg","error","console","startup","connectionWasOnline","autorun","connected","connection","status","openedRooms","Object","keys","forEach","key","value"],"mappings":"2BACAA,EAAuCC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA9BC,EAAQC,IAAA,CAAM,gBAAgB,CAAAR,OAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAO,EAAAA,IAAAA,CAAAA,iBAAAA,CAAAN,QAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAM,EAAAA,IAAAA,CAAAA,0BAAAA,CAAAL,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,iBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,4BAAAA,CAAAH,kBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,cAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,qCAAAA,CAAAD,sBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAOvC,IAAMG,EAAqB,eAAgBC,CAAiB,EAC3D,IAAMC,EAAcT,EAAYU,OAAO,CAAC,CAAEF,IAAAA,EAAKG,QAAS,CAAEC,IAAK,CAAA,CAAI,EAAIC,KAAM,CAAEC,QAAS,CAAA,CAAK,CAAE,EAAI,CAAEC,KAAM,CAAEC,GAAI,EAAE,EAAIC,MAAO,CAAC,GAE/H,GAAKR,EAIL,GAAI,CACH,IAAMS,EAAS,MAAMd,EAAsB,qBAAsBI,EAAKC,EAAYO,EAAE,EACpF,GAAIE,EAAQ,CACX,IAAMC,EAAelB,EAAiBS,OAAO,CAAC,CAAEF,IAAAA,CAAG,EACnD,OAAMY,QAAQC,GAAG,CAACC,MAAMC,IAAI,CAACL,GAAQM,GAAG,CAAEC,GAAQtB,EAAc,CAAEsB,IAAAA,EAAKN,aAAAA,CAAY,MAEnF,MAAOO,EAAO,CACfC,QAAQD,KAAK,CAACA,GAEhB,EAEA5B,EAAO8B,OAAO,CAAC,KACd,IAAIC,EAAsB,CAAA,EAC1B9B,EAAQ+B,OAAO,CAAC,KACf,GAAM,CAAEC,UAAAA,CAAAA,CAAW,CAAGjC,EAAOkC,UAAU,CAACC,MAAM,EAE5B,EAAA,IAAdF,GAAsBF,AAAwB,CAAA,IAAxBA,GAAiC3B,EAAkBgC,WAAW,EACvFC,OAAOC,IAAI,CAAClC,EAAkBgC,WAAW,EAAEG,OAAO,CAAEC,IACnD,IAAMC,EAAQrC,EAAkBgC,WAAW,CAACI,EAAI,AAC5CC,CAAAA,EAAM/B,GAAG,EACZD,EAAmBgC,EAAM/B,GAAG,CAE9B,GAEDqB,EAAsBE,CACvB,EACD"}