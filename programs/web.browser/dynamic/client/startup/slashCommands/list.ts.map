)]}'
{"version":3,"sources":["meteor://ðŸ’»app/client/startup/slashCommands/list.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IUser } from '@rocket.chat/core-typings';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\nimport { slashCommands } from '../../../app/utils/client';\nimport { sdk } from '../../../app/utils/client/lib/SDKClient';\n\nlet oldUserId: IUser['_id'] | null = null;\n\nTracker.autorun(async () => {\n\tconst newUserId = Meteor.userId();\n\tif (oldUserId === null && newUserId) {\n\t\tsdk.rest.get('/v1/commands.list').then((result) => {\n\t\t\tresult.commands.forEach((command) => {\n\t\t\t\tslashCommands.add(command);\n\t\t\t});\n\t\t});\n\t}\n\n\toldUserId = Meteor.userId();\n});\n",null],"names":["Meteor","Tracker","slashCommands","sdk","module","link","oldUserId","autorun","newUserId","userId","rest","get","then","result","commands","forEach","command","add"],"mappings":"2BACAA,EAAuCC,EAAAC,EAAAC,EAA9BC,EAAQC,IAAA,CAAM,gBAAgB,CAAAL,OAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,iBAAAA,CAAAH,QAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,4BAAAA,CAAAF,cAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,0CAAAA,CAAAD,IAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAMvC,IAAIG,EAAiC,KAErCL,EAAQM,OAAO,CAAC,UACf,IAAMC,EAAYR,EAAOS,MAAM,EACb,QAAdH,GAAsBE,GACzBL,EAAIO,IAAI,CAACC,GAAG,CAAC,qBAAqBC,IAAI,CAAEC,IACvCA,EAAOC,QAAQ,CAACC,OAAO,CAAEC,IACxBd,EAAce,GAAG,CAACD,EACnB,EACD,GAGDV,EAAYN,EAAOS,MAAM,EAC1B"}