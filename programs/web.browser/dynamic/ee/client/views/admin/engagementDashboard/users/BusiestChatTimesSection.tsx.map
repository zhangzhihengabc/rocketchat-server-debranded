)]}'
{"version":3,"sources":["meteor://ðŸ’»app/ee/client/views/admin/engagementDashboard/users/BusiestChatTimesSection.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Select } from '@rocket.chat/fuselage';\nimport { useTranslation } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React, { useMemo, useState } from 'react';\n\nimport EngagementDashboardCardFilter from '../EngagementDashboardCardFilter';\nimport ContentForDays from './ContentForDays';\nimport ContentForHours from './ContentForHours';\n\ntype TimeUnit = 'hours' | 'days';\n\ntype BusiestChatTimesSectionProps = {\n\ttimezone: 'utc' | 'local';\n};\n\nconst BusiestChatTimesSection = ({ timezone }: BusiestChatTimesSectionProps): ReactElement => {\n\tconst t = useTranslation();\n\n\tconst [timeUnit, setTimeUnit] = useState<TimeUnit>('hours');\n\tconst timeUnitOptions = useMemo<[timeUnit: TimeUnit, label: string][]>(\n\t\t() => [\n\t\t\t['hours', t('Hours')],\n\t\t\t['days', t('Days')],\n\t\t],\n\t\t[t],\n\t);\n\n\tconst [displacement, setDisplacement] = useState(0);\n\n\tconst handleTimeUnitChange = (timeUnit: string): void => {\n\t\tsetTimeUnit(timeUnit as TimeUnit);\n\t\tsetDisplacement(0);\n\t};\n\n\tconst handlePreviousDateClick = (): void => setDisplacement((displacement) => displacement + 1);\n\tconst handleNextDateClick = (): void => setDisplacement((displacement) => displacement - 1);\n\n\tconst Content = (\n\t\t{\n\t\t\thours: ContentForHours,\n\t\t\tdays: ContentForDays,\n\t\t} as const\n\t)[timeUnit];\n\n\treturn (\n\t\t<>\n\t\t\t<EngagementDashboardCardFilter>\n\t\t\t\t<Select options={timeUnitOptions} value={timeUnit} onChange={(value) => handleTimeUnitChange(String(value))} />\n\t\t\t</EngagementDashboardCardFilter>\n\t\t\t<Content\n\t\t\t\tdisplacement={displacement}\n\t\t\t\tonPreviousDateClick={handlePreviousDateClick}\n\t\t\t\tonNextDateClick={handleNextDateClick}\n\t\t\t\ttimezone={timezone}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default BusiestChatTimesSection;\n",null],"names":["Select","useTranslation","React","useMemo","useState","EngagementDashboardCardFilter","ContentForDays","ContentForHours","module","link","default","exportDefault","_ref","timezone","t","timeUnit","setTimeUnit","timeUnitOptions","displacement","setDisplacement","handleTimeUnitChange","Content","hours","days","createElement","Fragment","options","value","onChange","String","onPreviousDateClick","onNextDateClick"],"mappings":"2BAAAA,EAA+CC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAtCC,EAAQC,IAAA,CAAM,wBAAwB,CAAAT,OAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAQ,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAP,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAO,EAAAA,IAAAA,CAAAA,QAAAA,CAAAE,QAAAA,CAAAA,EAAAR,EAAAA,CAAA,EAAAC,QAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,mCAAAA,CAAAE,QAAAA,CAAAA,EAAAL,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,mBAAAA,CAAAE,QAAAA,CAAAA,EAAAJ,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,oBAAAA,CAAAE,QAAAA,CAAAA,EAAAH,EAAAA,CAAA,CAAA,EAAA,GAA/CC,EAAOG,aAAU,CAeeC,IAA6D,GAA5D,CAAEC,SAAAA,CAAAA,CAAwC,CAAAD,EACpEE,EAAIb,IAEJ,CAACc,EAAUC,EAAY,CAAGZ,EAAmB,SAC7Ca,EAAkBd,EACvB,IAAM,CACL,CAAC,QAASW,EAAE,SAAS,CACrB,CAAC,OAAQA,EAAE,QAAQ,CACnB,CACD,CAACA,EAAE,EAGE,CAACI,EAAcC,EAAgB,CAAGf,EAAS,GAE3CgB,EAAwBL,IAC7BC,EAAYD,GACZI,EAAgB,EACjB,EAKME,EACL,CACCC,MAAOf,EACPgB,KAAMjB,EAEP,CAACS,EAAS,CAEX,OACCb,EAAAsB,aAAA,CAAAtB,EAAAuB,QAAA,CAAA,KACCvB,EAAAsB,aAAA,CAACnB,EAA6B,KAC7BH,EAAAsB,aAAA,CAACxB,EAAM,CAAC0B,QAAST,EAAiBU,MAAOZ,EAAUa,SAAWD,GAAUP,EAAqBS,OAAOF,GAAQ,IAE7GzB,EAAAsB,aAAA,CAACH,EAAO,CACPH,aAAcA,EACdY,oBAjB6B,IAAYX,EAAiBD,GAAiBA,EAAe,GAkB1Fa,gBAjByB,IAAYZ,EAAiBD,GAAiBA,EAAe,GAkBtFL,SAAUA,CAAS,GAIvB"}