)]}'
{"version":3,"sources":["meteor://ðŸ’»app/ee/client/views/admin/engagementDashboard/EngagementDashboardRoute.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { usePermission, useRouter, useSetModal, useCurrentModal, useTranslation, useRouteParameter } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React, { useEffect } from 'react';\n\nimport { getURL } from '../../../../../app/utils/client/getURL';\nimport GenericUpsellModal from '../../../../../client/components/GenericUpsellModal';\nimport { useUpsellActions } from '../../../../../client/components/GenericUpsellModal/hooks';\nimport PageSkeleton from '../../../../../client/components/PageSkeleton';\nimport { useEndpointAction } from '../../../../../client/hooks/useEndpointAction';\nimport NotAuthorizedPage from '../../../../../client/views/notAuthorized/NotAuthorizedPage';\nimport { useHasLicenseModule } from '../../../hooks/useHasLicenseModule';\nimport EngagementDashboardPage from './EngagementDashboardPage';\n\nconst isValidTab = (tab: string | undefined): tab is 'users' | 'messages' | 'channels' =>\n\ttypeof tab === 'string' && ['users', 'messages', 'channels'].includes(tab);\n\nconst EngagementDashboardRoute = (): ReactElement | null => {\n\tconst t = useTranslation();\n\tconst canViewEngagementDashboard = usePermission('view-engagement-dashboard');\n\tconst setModal = useSetModal();\n\tconst isModalOpen = useCurrentModal() !== null;\n\n\tconst router = useRouter();\n\tconst tab = useRouteParameter('tab');\n\tconst eventStats = useEndpointAction('POST', '/v1/statistics.telemetry');\n\n\tconst hasEngagementDashboard = useHasLicenseModule('engagement-dashboard') as boolean;\n\n\tconst { shouldShowUpsell, handleManageSubscription } = useUpsellActions(hasEngagementDashboard);\n\n\tuseEffect(() => {\n\t\tif (shouldShowUpsell) {\n\t\t\tsetModal(\n\t\t\t\t<GenericUpsellModal\n\t\t\t\t\ttitle={t('Engagement_Dashboard')}\n\t\t\t\t\timg={getURL('images/engagement.png')}\n\t\t\t\t\tsubtitle={t('Analyze_practical_usage')}\n\t\t\t\t\tdescription={t('Enrich_your_workspace')}\n\t\t\t\t\tonClose={() => setModal(null)}\n\t\t\t\t\tonConfirm={handleManageSubscription}\n\t\t\t\t\tonCancel={() => setModal(null)}\n\t\t\t\t/>,\n\t\t\t);\n\t\t}\n\n\t\trouter.subscribeToRouteChange(() => {\n\t\t\tif (!isValidTab(tab)) {\n\t\t\t\trouter.navigate(\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: '/admin/engagement/:tab?',\n\t\t\t\t\t\tparams: { tab: 'users' },\n\t\t\t\t\t},\n\t\t\t\t\t{ replace: true },\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}, [shouldShowUpsell, router, tab, setModal, t, handleManageSubscription]);\n\n\tif (isModalOpen) {\n\t\treturn <PageSkeleton />;\n\t}\n\n\tif (!canViewEngagementDashboard || !hasEngagementDashboard) {\n\t\treturn <NotAuthorizedPage />;\n\t}\n\n\teventStats({\n\t\tparams: [{ eventName: 'updateCounter', settingsId: 'Engagement_Dashboard_Load_Count' }],\n\t});\n\n\treturn (\n\t\t<EngagementDashboardPage\n\t\t\ttab={tab as 'users' | 'messages' | 'channels'}\n\t\t\tonSelectTab={(tab) =>\n\t\t\t\trouter.navigate({\n\t\t\t\t\tpattern: '/admin/engagement/:tab?',\n\t\t\t\t\tparams: { tab },\n\t\t\t\t})\n\t\t\t}\n\t\t/>\n\t);\n};\n\nexport default EngagementDashboardRoute;\n",null],"names":["usePermission","useRouter","useSetModal","useCurrentModal","useTranslation","useRouteParameter","React","useEffect","getURL","GenericUpsellModal","useUpsellActions","PageSkeleton","useEndpointAction","NotAuthorizedPage","useHasLicenseModule","EngagementDashboardPage","module","v","default","isValidTab","tab","includes","exportDefault","t","canViewEngagementDashboard","setModal","isModalOpen","router","eventStats","hasEngagementDashboard","shouldShowUpsell","handleManageSubscription","createElement","title","img","subtitle","description","onClose","onConfirm","onCancel","subscribeToRouteChange","navigate","pattern","params","replace","eventName","settingsId","onSelectTab"],"mappings":"2BAAAA,EAASC,EAAeC,EAAWC,EAAaC,EAAiBC,EAAoEC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAApDC,EAAAA,IAAmB,CAAA,2BAAM,CAAAhB,cAA2BiB,CAAA,EAAAjB,EAAAA,CAAA,EAAAC,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,gBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,kBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAW,EAAAA,IAAAA,CAAAA,QAAAA,CAAAE,QAAAA,CAAAA,EAAAZ,EAAAA,CAAA,EAAAC,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAS,EAAAA,IAAAA,CAAAA,yCAAAA,CAAAR,OAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAQ,EAAAA,IAAAA,CAAAA,sDAAAA,CAAAE,QAAAA,CAAAA,EAAAT,EAAAA,CAAA,CAAA,EAAA,GAAAO,EAAAA,IAAAA,CAAAA,4DAAAA,CAAAN,iBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAM,EAAAA,IAAAA,CAAAA,gDAAAA,CAAAE,QAAAA,CAAAA,EAAAP,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,gDAAAA,CAAAJ,kBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,8DAAAA,CAAAE,QAAAA,CAAAA,EAAAL,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,qCAAAA,CAAAF,oBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,4BAAAA,CAAAE,QAAAA,CAAAA,EAAAH,EAAAA,CAAA,CAAA,EAAA,GAarI,IAAMI,EAAcC,GACnB,AAAe,UAAf,OAAOA,GAAoB,CAAC,QAAS,WAAY,WAAW,CAACC,QAAQ,CAACD,GAdvEJ,EAAOM,aAAE,CAgBwB,KAChC,IAAMC,EAAInB,IACJoB,EAA6BxB,EAAc,6BAC3CyB,EAAWvB,IACXwB,EAAcvB,AAAsB,OAAtBA,IAEdwB,EAAS1B,IACTmB,EAAMf,EAAkB,OACxBuB,EAAahB,EAAkB,OAAQ,4BAEvCiB,EAAyBf,EAAoB,wBAE7C,CAAEgB,iBAAAA,CAAgB,CAAEC,yBAAAA,CAAAA,CAA0B,CAAGrB,EAAiBmB,SA8BxE,CA5BAtB,EAAU,KACLuB,GACHL,EACCnB,EAAA0B,aAAA,CAACvB,EAAkB,CAClBwB,MAAOV,EAAE,wBACTW,IAAK1B,EAAO,yBACZ2B,SAAUZ,EAAE,2BACZa,YAAab,EAAE,yBACfc,QAAS,IAAMZ,EAAS,MACxBa,UAAWP,EACXQ,SAAU,IAAMd,EAAS,KAAM,IAKlCE,EAAOa,sBAAsB,CAAC,KACxBrB,EAAWC,IACfO,EAAOc,QAAQ,CACd,CACCC,QAAS,0BACTC,OAAQ,CAAEvB,IAAK,OAAO,GAEvB,CAAEwB,QAAS,CAAA,CAAI,EAGlB,EACD,EAAG,CAACd,EAAkBH,EAAQP,EAAKK,EAAUF,EAAGQ,EAAyB,EAErEL,GACIpB,EAAA0B,aAAA,CAACrB,EAAY,MAGjB,AAACa,GAA+BK,GAIpCD,EAAW,CACVe,OAAQ,CAAC,CAAEE,UAAW,gBAAiBC,WAAY,iCAAiC,EAAE,GAItFxC,EAAA0B,aAAA,CAACjB,EAAuB,CACvBK,IAAKA,EACL2B,YAAc3B,GACbO,EAAOc,QAAQ,CAAC,CACfC,QAAS,0BACTC,OAAQ,CAAEvB,IAAAA,CAAG,GAEd,IAfKd,EAAA0B,aAAA,CAACnB,EAAiB,KAkB3B"}