)]}'
{"version":3,"sources":["meteor://ðŸ’»app/ee/client/views/admin/engagementDashboard/channels/ChannelsOverview.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Box, Icon, Margins, Pagination, Skeleton, Table, TableBody, TableCell, TableHead, TableRow, Tile } from '@rocket.chat/fuselage';\nimport { useTranslation } from '@rocket.chat/ui-contexts';\nimport moment from 'moment';\nimport type { ReactElement } from 'react';\nimport React, { useMemo, useState } from 'react';\n\nimport Growth from '../../../../../../client/components/dataView/Growth';\nimport DownloadDataButton from '../../../../components/dashboards/DownloadDataButton';\nimport PeriodSelector from '../../../../components/dashboards/PeriodSelector';\nimport { usePeriodSelectorState } from '../../../../components/dashboards/usePeriodSelectorState';\nimport EngagementDashboardCardFilter from '../EngagementDashboardCardFilter';\nimport { useChannelsList } from './useChannelsList';\n\nconst ChannelsOverview = (): ReactElement => {\n\tconst [period, periodSelectorProps] = usePeriodSelectorState('last 7 days', 'last 30 days', 'last 90 days');\n\n\tconst t = useTranslation();\n\n\tconst [current, setCurrent] = useState(0);\n\tconst [itemsPerPage, setItemsPerPage] = useState<25 | 50 | 100>(25);\n\n\tconst { data } = useChannelsList({\n\t\tperiod,\n\t\toffset: current,\n\t\tcount: itemsPerPage,\n\t});\n\n\tconst channels = useMemo(() => {\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn data?.channels?.map(({ room: { t, name, usernames, ts, _updatedAt }, messages, diffFromLastWeek }) => ({\n\t\t\tt,\n\t\t\tname: name || usernames?.join(' Ã— '),\n\t\t\tcreatedAt: ts,\n\t\t\tupdatedAt: _updatedAt,\n\t\t\tmessagesCount: messages,\n\t\t\tmessagesVariation: diffFromLastWeek,\n\t\t}));\n\t}, [data]);\n\n\treturn (\n\t\t<>\n\t\t\t<EngagementDashboardCardFilter>\n\t\t\t\t<PeriodSelector {...periodSelectorProps} />\n\t\t\t\t<DownloadDataButton\n\t\t\t\t\tattachmentName={`Channels_start_${data?.start}_end_${data?.end}`}\n\t\t\t\t\theaders={['Room type', 'Name', 'Messages', 'Last Update Date', 'Creation Date']}\n\t\t\t\t\tdataAvailable={!!data}\n\t\t\t\t\tdataExtractor={(): unknown[][] | undefined =>\n\t\t\t\t\t\tdata?.channels?.map(({ room: { t, name, usernames, ts, _updatedAt }, messages }) => [\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\tname || usernames?.join(' Ã— '),\n\t\t\t\t\t\t\tmessages,\n\t\t\t\t\t\t\t_updatedAt,\n\t\t\t\t\t\t\tts,\n\t\t\t\t\t\t])\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</EngagementDashboardCardFilter>\n\t\t\t<Box>\n\t\t\t\t{channels && !channels.length && (\n\t\t\t\t\t<Tile fontScale='p1' color='hint' style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t{t('No_data_found')}\n\t\t\t\t\t</Tile>\n\t\t\t\t)}\n\t\t\t\t{(!channels || channels.length) && (\n\t\t\t\t\t<Table>\n\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<TableCell>#</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{t('Channel')}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{t('Created')}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{t('Last_active')}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{t('Messages_sent')}</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t{channels?.map(({ t, name, createdAt, updatedAt, messagesCount, messagesVariation }, i) => (\n\t\t\t\t\t\t\t\t<TableRow key={i}>\n\t\t\t\t\t\t\t\t\t<TableCell>{i + 1}.</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Margins inlineEnd={4}>\n\t\t\t\t\t\t\t\t\t\t\t{(t === 'd' && <Icon name='at' />) || (t === 'p' && <Icon name='lock' />) || (t === 'c' && <Icon name='hashtag' />)}\n\t\t\t\t\t\t\t\t\t\t</Margins>\n\t\t\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>{moment(createdAt).format('L')}</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>{moment(updatedAt).format('L')}</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t{messagesCount} <Growth>{messagesVariation}</Growth>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t{!channels &&\n\t\t\t\t\t\t\t\tArray.from({ length: 5 }, (_, i) => (\n\t\t\t\t\t\t\t\t\t<TableRow key={i}>\n\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<Skeleton width='100%' />\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<Skeleton width='100%' />\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<Skeleton width='100%' />\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<Skeleton width='100%' />\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<Skeleton width='100%' />\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t\t)}\n\t\t\t\t<Pagination\n\t\t\t\t\tcurrent={current}\n\t\t\t\t\titemsPerPage={itemsPerPage}\n\t\t\t\t\titemsPerPageLabel={(): string => t('Items_per_page:')}\n\t\t\t\t\tshowingResultsLabel={({ count, current, itemsPerPage }): string =>\n\t\t\t\t\t\tt('Showing_results_of', current + 1, Math.min(current + itemsPerPage, count), count)\n\t\t\t\t\t}\n\t\t\t\t\tcount={data?.total || 0}\n\t\t\t\t\tonSetItemsPerPage={setItemsPerPage}\n\t\t\t\t\tonSetCurrent={setCurrent}\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t</>\n\t);\n};\n\nexport default ChannelsOverview;\n",null],"names":["Box","Icon","Margins","Pagination","Skeleton","Table","TableCell","TableHead","TableRow","Tile","useTranslation","moment","React","useMemo","useState","Growth","DownloadDataButton","PeriodSelector","usePeriodSelectorState","EngagementDashboardCardFilter","useChannelsList","module","v","TableBody","default","exportDefault","period","periodSelectorProps","t","current","setCurrent","itemsPerPage","setItemsPerPage","data","offset","count","channels","_data$channels","map","_ref","room","name","usernames","ts","_updatedAt","messages","diffFromLastWeek","join","createdAt","updatedAt","messagesCount","messagesVariation","createElement","Fragment","attachmentName","concat","start","end","headers","dataAvailable","dataExtractor","_data$channels2","_ref2","length","fontScale","color","style","textAlign","_ref3","i","key","inlineEnd","format","Array","from","_","width","itemsPerPageLabel","showingResultsLabel","_ref4","Math","min","total","onSetItemsPerPage","onSetCurrent"],"mappings":"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"}