)]}'
{"version":3,"sources":["meteor://ðŸ’»app/ee/client/views/account/deviceManagement/DeviceManagementAccountTable/DeviceManagementAccountRow.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Box, Button } from '@rocket.chat/fuselage';\nimport { useMediaQuery } from '@rocket.chat/fuselage-hooks';\nimport { useTranslation } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React from 'react';\n\nimport { GenericTableCell, GenericTableRow } from '../../../../../../client/components/GenericTable';\nimport { useFormatDateAndTime } from '../../../../../../client/hooks/useFormatDateAndTime';\nimport DeviceIcon from '../../../../components/deviceManagement/DeviceIcon';\nimport { useDeviceLogout } from '../../../../hooks/useDeviceLogout';\n\ntype DevicesRowProps = {\n\t_id: string;\n\tdeviceName?: string;\n\tdeviceType?: string;\n\tdeviceOSName?: string;\n\tloginAt: string;\n\tonReload: () => void;\n};\n\nconst DeviceManagementAccountRow = ({\n\t_id,\n\tdeviceName,\n\tdeviceType = 'browser',\n\tdeviceOSName,\n\tloginAt,\n\tonReload,\n}: DevicesRowProps): ReactElement => {\n\tconst t = useTranslation();\n\tconst formatDateAndTime = useFormatDateAndTime();\n\tconst mediaQuery = useMediaQuery('(min-width: 1024px)');\n\n\tconst handleDeviceLogout = useDeviceLogout(_id, '/v1/sessions/logout.me');\n\n\treturn (\n\t\t<GenericTableRow key={_id}>\n\t\t\t<GenericTableCell>\n\t\t\t\t<Box display='flex' alignItems='center'>\n\t\t\t\t\t<DeviceIcon deviceType={deviceType} />\n\t\t\t\t\t{deviceName && <Box withTruncatedText>{deviceName}</Box>}\n\t\t\t\t</Box>\n\t\t\t</GenericTableCell>\n\t\t\t<GenericTableCell>{deviceOSName || ''}</GenericTableCell>\n\t\t\t<GenericTableCell>{formatDateAndTime(loginAt)}</GenericTableCell>\n\t\t\t{mediaQuery && <GenericTableCell>{_id}</GenericTableCell>}\n\t\t\t<GenericTableCell align='end'>\n\t\t\t\t<Button onClick={(): void => handleDeviceLogout(onReload)}>{t('Logout')}</Button>\n\t\t\t</GenericTableCell>\n\t\t</GenericTableRow>\n\t);\n};\n\nexport default DeviceManagementAccountRow;\n",null],"names":["Box","Button","useMediaQuery","useTranslation","React","GenericTableCell","GenericTableRow","useFormatDateAndTime","DeviceIcon","useDeviceLogout","module","link","default","exportDefault","_ref","_id","deviceName","deviceType","deviceOSName","loginAt","onReload","t","formatDateAndTime","mediaQuery","handleDeviceLogout","createElement","key","display","alignItems","withTruncatedText","align","onClick"],"mappings":"2BAAAA,EAAOC,EAA6CC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAtCC,EAAQC,IAAAA,CAAAA,wBAA6B,CAACX,IAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,OAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAS,EAAAA,IAAAA,CAAAA,8BAAAA,CAAAR,cAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAQ,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAP,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAO,EAAAA,IAAAA,CAAAA,QAAAA,CAAAE,QAAAA,CAAAA,EAAAR,EAAAA,CAAA,CAAA,EAAA,GAAAM,EAAAA,IAAAA,CAAAA,mDAAAA,CAAAL,iBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,gBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,sDAAAA,CAAAH,qBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,qDAAAA,CAAAE,QAAAA,CAAAA,EAAAJ,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,oCAAAA,CAAAD,gBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAApDC,EAAOG,aAAa,CAoBeC,IAOC,GAPA,CACnCC,IAAAA,CAAG,CACHC,WAAAA,CAAU,CACVC,WAAAA,EAAa,SAAS,CACtBC,aAAAA,CAAY,CACZC,QAAAA,CAAO,CACPC,SAAAA,CAAAA,CACiB,CAAAN,EACXO,EAAIlB,IACJmB,EAAoBf,IACpBgB,EAAarB,EAAc,uBAE3BsB,EAAqBf,EAAgBM,EAAK,0BAEhD,OACCX,EAAAqB,aAAA,CAACnB,EAAe,CAACoB,IAAKX,CAAI,EACzBX,EAAAqB,aAAA,CAACpB,EAAgB,KAChBD,EAAAqB,aAAA,CAACzB,EAAG,CAAC2B,QAAQ,OAAOC,WAAW,QAAQ,EACtCxB,EAAAqB,aAAA,CAACjB,EAAU,CAACS,WAAYA,CAAW,GAClCD,GAAcZ,EAAAqB,aAAA,CAACzB,EAAG,CAAC6B,kBAAiB,CAAA,CAAA,EAAEb,KAGzCZ,EAAAqB,aAAA,CAACpB,EAAgB,KAAEa,GAAgB,IACnCd,EAAAqB,aAAA,CAACpB,EAAgB,KAAEiB,EAAkBH,IACpCI,GAAcnB,EAAAqB,aAAA,CAACpB,EAAgB,KAAEU,GAClCX,EAAAqB,aAAA,CAACpB,EAAgB,CAACyB,MAAM,KAAK,EAC5B1B,EAAAqB,aAAA,CAACxB,EAAM,CAAC8B,QAAS,IAAYP,EAAmBJ,EAAU,EAAEC,EAAE,YAIlE"}