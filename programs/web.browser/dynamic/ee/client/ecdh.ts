function module(e,n,t){let o,i,c;t.link("meteor/meteor",{Meteor(e){o=e}},0),t.link("../../app/utils/client/lib/SDKClient",{sdk(e){i=e}},1);let a=new Promise(e=>{c=e});(async function e(){if(!window.ECDH_Enabled)return o.connection._stream.allowConnection(),c();let{ClientSession:e}=await t.dynamicImport("../app/ecdh/client/ClientSession"),n=new e,i=await n.init();try{let e=await fetch("/api/ecdh_proxy/initEncryptedSession",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({clientPublicKey:i})});if(200!==e.status)return c(),o.connection._stream.allowConnection();let t=await e.json();if(!1===t.success)return c(),o.connection._stream.allowConnection();await n.setServerKey(t.publicKeyString),c(n),function(e){o.connection._stream.allowConnection();let n=o.connection._stream.socket._didMessage.bind(o.connection._stream.socket),t=o.connection._stream.socket.send.bind(o.connection._stream.socket);o.connection._stream.socket._didMessage=async t=>{let o=await e.decrypt(t);o.split("\n").forEach(e=>n(e))},o.connection._stream.socket.send=async n=>{t(await e.encrypt(n))}}(n)}catch(e){console.log(e),c(),o.connection._stream.allowConnection()}})(),i.rest.use(async(e,n)=>{let t=await a;if(!t)return n(...e);let o=await (await n(...e)).text(),i=await t.decrypt(o),c=JSON.parse(i);return c})}
//# sourceMappingURL=/dynamic/ee/client/dfd96afa7670d99c358801e06e139e91db9f598f.map
