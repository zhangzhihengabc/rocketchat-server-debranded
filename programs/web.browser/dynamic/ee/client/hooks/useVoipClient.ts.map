)]}'
{"version":3,"sources":["meteor://ðŸ’»app/ee/client/hooks/useVoipClient.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { IRegistrationInfo } from '@rocket.chat/core-typings';\nimport { WorkflowTypes } from '@rocket.chat/core-typings';\nimport { useSafely } from '@rocket.chat/fuselage-hooks';\nimport { useUser, useSetting, useEndpoint, useStream } from '@rocket.chat/ui-contexts';\nimport { KJUR } from 'jsrsasign';\nimport { useEffect, useState } from 'react';\n\nimport { VoIPUser } from '../../../client/lib/voip/VoIPUser';\nimport { useWebRtcServers } from '../../../client/providers/CallProvider/hooks/useWebRtcServers';\nimport { EEVoipClient } from '../lib/voip/EEVoipClient';\nimport { useHasLicenseModule } from './useHasLicenseModule';\n\ntype UseVoipClientResult = {\n\tvoipClient?: VoIPUser;\n\tregistrationInfo?: IRegistrationInfo;\n\terror?: Error | unknown;\n};\n\nconst empty = {};\n\nconst isSignedResponse = (data: any): data is { result: string } => typeof data?.result === 'string';\n\n// Currently we only support the websocket connection and the SIP proxy connection being from the same host,\n// we need to add a new setting for SIP proxy if we want to support different hosts for them.\nexport const useVoipClient = (): UseVoipClientResult => {\n\tconst settingVoipEnabled = Boolean(useSetting('VoIP_Enabled'));\n\n\tconst [voipConnectorEnabled, setVoipConnectorEnabled] = useSafely(useState(true));\n\n\tconst voipRetryCount = useSetting('VoIP_Retry_Count');\n\tconst enableKeepAlive = useSetting('VoIP_Enable_Keep_Alive_For_Unstable_Networks');\n\tconst registrationInfo = useEndpoint('GET', '/v1/connector.extension.getRegistrationInfoByUserId');\n\tconst membership = useEndpoint('GET', '/v1/voip/queues.getMembershipSubscription');\n\tconst user = useUser();\n\tconst subscribeToNotifyLoggedIn = useStream('notify-logged');\n\tconst iceServers = useWebRtcServers();\n\tconst [result, setResult] = useSafely(useState<UseVoipClientResult>({}));\n\n\tconst isEE = useHasLicenseModule('voip-enterprise');\n\tconst voipEnabled = settingVoipEnabled && voipConnectorEnabled;\n\n\tuseEffect(\n\t\t() =>\n\t\t\tsubscribeToNotifyLoggedIn(`voip.statuschanged`, (enabled: boolean): void => {\n\t\t\t\tsetVoipConnectorEnabled(enabled);\n\t\t\t}),\n\t\t[setResult, setVoipConnectorEnabled, subscribeToNotifyLoggedIn],\n\t);\n\n\tuseEffect(() => {\n\t\tconst uid = user?._id;\n\t\tconst userExtension = user?.extension;\n\n\t\tif (!uid || !userExtension || !voipEnabled) {\n\t\t\tsetResult(empty);\n\t\t\treturn;\n\t\t}\n\t\tlet client: VoIPUser;\n\t\tregistrationInfo({ id: uid }).then(\n\t\t\t(data) => {\n\t\t\t\tlet parsedData: IRegistrationInfo;\n\t\t\t\tif (isSignedResponse(data)) {\n\t\t\t\t\tconst result = KJUR.jws.JWS.parse(data.result);\n\t\t\t\t\tparsedData = (result.payloadObj as any)?.context as IRegistrationInfo;\n\t\t\t\t} else {\n\t\t\t\t\tparsedData = data;\n\t\t\t\t}\n\n\t\t\t\tconst {\n\t\t\t\t\textensionDetails: { extension, password },\n\t\t\t\t\tcallServerConfig: { websocketPath },\n\t\t\t\t} = parsedData;\n\n\t\t\t\t(async (): Promise<void> => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst wsURL = new URL(websocketPath);\n\t\t\t\t\t\tconst subscription = await membership({ extension });\n\n\t\t\t\t\t\tconst config = {\n\t\t\t\t\t\t\tauthUserName: extension,\n\t\t\t\t\t\t\tauthPassword: password,\n\t\t\t\t\t\t\tsipRegistrarHostnameOrIP: wsURL.host,\n\t\t\t\t\t\t\twebSocketURI: websocketPath,\n\t\t\t\t\t\t\tenableVideo: true,\n\t\t\t\t\t\t\ticeServers,\n\t\t\t\t\t\t\tconnectionRetryCount: Number(voipRetryCount),\n\t\t\t\t\t\t\tenableKeepAliveUsingOptionsForUnstableNetworks: Boolean(enableKeepAlive),\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tclient = await (isEE ? EEVoipClient.create(config) : VoIPUser.create(config));\n\n\t\t\t\t\t\t// Today we are hardcoding workflow mode.\n\t\t\t\t\t\t// In future, this should be ready from configuration\n\t\t\t\t\t\tclient.setWorkflowMode(WorkflowTypes.CONTACT_CENTER_USER);\n\t\t\t\t\t\tclient.setMembershipSubscription(subscription);\n\t\t\t\t\t\tsetResult({ voipClient: client, registrationInfo: parsedData });\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tsetResult({ error });\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t},\n\t\t\t(error: Error) => {\n\t\t\t\tsetResult({ error });\n\t\t\t},\n\t\t);\n\t\treturn (): void => {\n\t\t\tif (client) {\n\t\t\t\tclient.clear();\n\t\t\t}\n\t\t};\n\t}, [iceServers, registrationInfo, setResult, membership, voipEnabled, user?._id, user?.extension, voipRetryCount, enableKeepAlive, isEE]);\n\n\treturn result;\n};\n\nexport const isOutboundClient = (client: VoIPUser | undefined): client is EEVoipClient => client instanceof EEVoipClient;\n",null],"names":["WorkflowTypes","useSafely","useUser","useSetting","useEndpoint","useStream","KJUR","useEffect","useState","VoIPUser","useWebRtcServers","EEVoipClient","useHasLicenseModule","module","export","useVoipClient","isOutboundClient","empty","isSignedResponse","data","result","settingVoipEnabled","Boolean","voipConnectorEnabled","setVoipConnectorEnabled","voipRetryCount","enableKeepAlive","registrationInfo","membership","user","subscribeToNotifyLoggedIn","iceServers","setResult","isEE","voipEnabled","enabled","client","uid","_id","userExtension","extension","id","then","parsedData","_result$payloadObj","jws","JWS","parse","payloadObj","context","extensionDetails","password","callServerConfig","websocketPath","wsURL","URL","subscription","config","authUserName","authPassword","sipRegistrarHostnameOrIP","host","webSocketURI","enableVideo","connectionRetryCount","Number","enableKeepAliveUsingOptionsForUnstableNetworks","create","setWorkflowMode","CONTACT_CENTER_USER","setMembershipSubscription","voipClient","error","clear"],"mappings":"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"}