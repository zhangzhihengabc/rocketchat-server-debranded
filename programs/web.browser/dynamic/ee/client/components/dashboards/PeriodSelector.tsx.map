)]}'
{"version":3,"sources":["meteor://ðŸ’»app/ee/client/components/dashboards/PeriodSelector.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Select } from '@rocket.chat/fuselage';\nimport { useTranslation } from '@rocket.chat/ui-contexts';\nimport type { ReactElement } from 'react';\nimport React, { useMemo } from 'react';\n\nimport type { Period } from './periods';\nimport { getPeriod } from './periods';\n\ntype PeriodSelectorProps<TPeriod extends Period['key']> = {\n\tperiods: TPeriod[];\n\tvalue: TPeriod;\n\tname?: string;\n\tonChange: (value: TPeriod) => void;\n};\n\nconst PeriodSelector = <TPeriod extends Period['key']>({ periods, value, name, onChange }: PeriodSelectorProps<TPeriod>): ReactElement => {\n\tconst t = useTranslation();\n\n\tconst options = useMemo<[string, string][]>(() => periods.map((period) => [period, t(...getPeriod(period).label)]), [periods, t]);\n\n\treturn <Select name={name} options={options} value={value} onChange={(value): void => onChange(value as TPeriod)} />;\n};\n\nexport default PeriodSelector;\n",null],"names":["Select","useTranslation","React","useMemo","getPeriod","module","link","default","exportDefault","_ref","periods","value","name","onChange","t","options","map","period","label","createElement"],"mappings":"2BAAAA,EAA+CC,EAAAC,EAAAC,EAAAC,EAAtCC,EAAQC,IAAA,CAAM,wBAAwB,CAAAN,OAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAJ,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,QAAAA,CAAAE,QAAAA,CAAAA,EAAAL,EAAAA,CAAA,EAAAC,QAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,YAAAA,CAAAD,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAA/CC,EAAOG,aAAU,CAeMC,IAAkH,GAAlF,CAAEC,QAAAA,CAAO,CAAEC,MAAAA,CAAK,CAAEC,KAAAA,CAAI,CAAEC,SAAAA,CAAAA,CAAwC,CAAAJ,EAChHK,EAAIb,IAEJc,EAAUZ,EAA4B,IAAMO,EAAQM,GAAG,CAAEC,GAAW,CAACA,EAAQH,KAAKV,EAAUa,GAAQC,KAAK,EAAE,EAAG,CAACR,EAASI,EAAE,EAEhI,OAAOZ,EAAAiB,aAAA,CAACnB,EAAM,CAACY,KAAMA,EAAMG,QAASA,EAASJ,MAAOA,EAAOE,SAAWF,GAAgBE,EAASF,EAAkB,EAClH"}