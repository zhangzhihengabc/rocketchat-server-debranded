function module(t,e,a){let r,s,n,i,p,l;a.link("@babel/runtime/helpers/objectSpread2",{default(t){r=t}},0),a.export({AppClientOrchestratorInstance:()=>o}),a.link("@rocket.chat/apps-engine/client/AppClientManager",{AppClientManager(t){s=t}},0),a.link("../../../app/authorization/client",{hasAtLeastOnePermission(t){n=t}},1),a.link("../../../app/utils/client/lib/SDKClient",{sdk(t){i=t}},2),a.link("../../../client/lib/toast",{dispatchToastMessage(t){p=t}},3),a.link("./RealAppsEngineUIHost",{RealAppsEngineUIHost(t){l=t}},4);let o=new class t{constructor(){this._appClientUIHost=void 0,this._manager=void 0,this._isLoaded=void 0,this._appClientUIHost=new l,this._manager=new s(this._appClientUIHost),this._isLoaded=!1}async load(){this._isLoaded||(this._isLoaded=!0)}getAppClientManager(){return this._manager}handleError(t){n(["manage-apps"])&&p({type:"error",message:t})}async getInstalledApps(){let t=await i.rest.get("/apps/installed");if("apps"in t)return t.apps;throw Error("Invalid response from API")}async getAppsFromMarketplace(t){let e=await i.rest.get("/apps/marketplace",{isAdminUser:t?t.toString():"false"});if(!Array.isArray(e))throw Error("Invalid response from API");return e.map(t=>{let{latest:e,appRequestStats:a,price:s,pricingPlans:n,purchaseType:i,isEnterpriseOnly:p,modifiedAt:l,bundledIn:o,requestedEndUser:c}=t;return r(r({},e),{},{appRequestStats:a,price:s,pricingPlans:n,purchaseType:i,isEnterpriseOnly:p,modifiedAt:l,bundledIn:o,requestedEndUser:c})})}async getAppsOnBundle(t){let{apps:e}=await i.rest.get("/apps/bundles/".concat(t,"/apps"));return e}async getApp(t){let{app:e}=await i.rest.get("/apps/".concat(t));return e}async setAppSettings(t,e){await i.rest.post("/apps/".concat(t,"/settings"),{settings:e})}async installApp(t,e,a){let{app:r}=await i.rest.post("/apps/",{appId:t,marketplace:!0,version:e,permissionsGranted:a});return r}async updateApp(t,e,a){let r=await i.rest.post("/apps/".concat(t),{appId:t,marketplace:!0,version:e,permissionsGranted:a});if("app"in r)return r.app;throw Error("App not found")}async buildExternalUrl(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"buy",a=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=await i.rest.get("/apps/buildExternalUrl",{appId:t,purchaseType:e,details:"".concat(a)});if("url"in r)return r;throw Error("Failed to build external url")}async buildExternalAppRequest(t){let e=await i.rest.get("/apps/buildExternalAppRequest",{appId:t});if("url"in e)return e;throw Error("Failed to build App Request external url")}async buildIncompatibleExternalUrl(t,e,a){let r=await i.rest.get("/apps/incompatibleModal",{appId:t,appVersion:e,action:a});if("url"in r)return r;throw Error("Failed to build external url")}async getCategories(){let t=await i.rest.get("/apps/categories");if(Array.isArray(t))return t;throw Error("Failed to get categories")}}}
//# sourceMappingURL=/dynamic/ee/client/apps/f73530bd3106a17aa0f370f1d6f6790d80bf7f9f.map
