)]}'
{"version":3,"sources":["meteor://ðŸ’»app/ee/client/apps/orchestrator.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { AppClientManager } from '@rocket.chat/apps-engine/client/AppClientManager';\nimport type { IPermission } from '@rocket.chat/apps-engine/definition/permissions/IPermission';\nimport type { ISetting } from '@rocket.chat/apps-engine/definition/settings';\nimport type { Serialized } from '@rocket.chat/core-typings';\n\nimport { hasAtLeastOnePermission } from '../../../app/authorization/client';\nimport { sdk } from '../../../app/utils/client/lib/SDKClient';\nimport { dispatchToastMessage } from '../../../client/lib/toast';\nimport type { App } from '../../../client/views/marketplace/types';\nimport type { IAppExternalURL, ICategory } from './@types/IOrchestrator';\nimport { RealAppsEngineUIHost } from './RealAppsEngineUIHost';\n\nclass AppClientOrchestrator {\n\tprivate _appClientUIHost: RealAppsEngineUIHost;\n\n\tprivate _manager: AppClientManager;\n\n\tprivate _isLoaded: boolean;\n\n\tconstructor() {\n\t\tthis._appClientUIHost = new RealAppsEngineUIHost();\n\t\tthis._manager = new AppClientManager(this._appClientUIHost);\n\t\tthis._isLoaded = false;\n\t}\n\n\tpublic async load(): Promise<void> {\n\t\tif (!this._isLoaded) {\n\t\t\tthis._isLoaded = true;\n\t\t}\n\t}\n\n\tpublic getAppClientManager(): AppClientManager {\n\t\treturn this._manager;\n\t}\n\n\tpublic handleError(error: unknown): void {\n\t\tif (hasAtLeastOnePermission(['manage-apps'])) {\n\t\t\tdispatchToastMessage({\n\t\t\t\ttype: 'error',\n\t\t\t\tmessage: error,\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic async getInstalledApps(): Promise<App[]> {\n\t\tconst result = await sdk.rest.get<'/apps/installed'>('/apps/installed');\n\n\t\tif ('apps' in result) {\n\t\t\t// TODO: chapter day: multiple results are returned, but we only need one\n\t\t\treturn result.apps as App[];\n\t\t}\n\t\tthrow new Error('Invalid response from API');\n\t}\n\n\tpublic async getAppsFromMarketplace(isAdminUser?: boolean): Promise<App[]> {\n\t\tconst result = await sdk.rest.get('/apps/marketplace', { isAdminUser: isAdminUser ? isAdminUser.toString() : 'false' });\n\n\t\tif (!Array.isArray(result)) {\n\t\t\t// TODO: chapter day: multiple results are returned, but we only need one\n\t\t\tthrow new Error('Invalid response from API');\n\t\t}\n\n\t\treturn (result as App[]).map((app: App) => {\n\t\t\tconst { latest, appRequestStats, price, pricingPlans, purchaseType, isEnterpriseOnly, modifiedAt, bundledIn, requestedEndUser } = app;\n\t\t\treturn {\n\t\t\t\t...latest,\n\t\t\t\tappRequestStats,\n\t\t\t\tprice,\n\t\t\t\tpricingPlans,\n\t\t\t\tpurchaseType,\n\t\t\t\tisEnterpriseOnly,\n\t\t\t\tmodifiedAt,\n\t\t\t\tbundledIn,\n\t\t\t\trequestedEndUser,\n\t\t\t};\n\t\t});\n\t}\n\n\tpublic async getAppsOnBundle(bundleId: string): Promise<App[]> {\n\t\tconst { apps } = await sdk.rest.get(`/apps/bundles/${bundleId}/apps`);\n\t\treturn apps;\n\t}\n\n\tpublic async getApp(appId: string): Promise<App> {\n\t\tconst { app } = await sdk.rest.get(`/apps/${appId}` as any);\n\t\treturn app;\n\t}\n\n\tpublic async setAppSettings(appId: string, settings: ISetting[]): Promise<void> {\n\t\tawait sdk.rest.post(`/apps/${appId}/settings`, { settings });\n\t}\n\n\tpublic async installApp(appId: string, version: string, permissionsGranted?: IPermission[]): Promise<App> {\n\t\tconst { app } = await sdk.rest.post<'/apps/'>('/apps/', {\n\t\t\tappId,\n\t\t\tmarketplace: true,\n\t\t\tversion,\n\t\t\tpermissionsGranted,\n\t\t});\n\t\treturn app;\n\t}\n\n\tpublic async updateApp(appId: string, version: string, permissionsGranted?: IPermission[]): Promise<App> {\n\t\tconst result = await sdk.rest.post<'/apps/:id'>(`/apps/${appId}`, {\n\t\t\tappId,\n\t\t\tmarketplace: true,\n\t\t\tversion,\n\t\t\tpermissionsGranted,\n\t\t});\n\n\t\tif ('app' in result) {\n\t\t\treturn result.app;\n\t\t}\n\t\tthrow new Error('App not found');\n\t}\n\n\tpublic async buildExternalUrl(appId: string, purchaseType: 'buy' | 'subscription' = 'buy', details = false): Promise<IAppExternalURL> {\n\t\tconst result = await sdk.rest.get('/apps/buildExternalUrl', {\n\t\t\tappId,\n\t\t\tpurchaseType,\n\t\t\tdetails: `${details}`,\n\t\t});\n\n\t\tif ('url' in result) {\n\t\t\treturn result;\n\t\t}\n\n\t\tthrow new Error('Failed to build external url');\n\t}\n\n\tpublic async buildExternalAppRequest(appId: string) {\n\t\tconst result = await sdk.rest.get('/apps/buildExternalAppRequest', {\n\t\t\tappId,\n\t\t});\n\n\t\tif ('url' in result) {\n\t\t\treturn result;\n\t\t}\n\t\tthrow new Error('Failed to build App Request external url');\n\t}\n\n\tpublic async buildIncompatibleExternalUrl(appId: string, appVersion: string, action: string): Promise<IAppExternalURL> {\n\t\tconst result = await sdk.rest.get('/apps/incompatibleModal', {\n\t\t\tappId,\n\t\t\tappVersion,\n\t\t\taction,\n\t\t});\n\n\t\tif ('url' in result) {\n\t\t\treturn result;\n\t\t}\n\n\t\tthrow new Error('Failed to build external url');\n\t}\n\n\tpublic async getCategories(): Promise<Serialized<ICategory[]>> {\n\t\tconst result = await sdk.rest.get('/apps/categories');\n\n\t\tif (Array.isArray(result)) {\n\t\t\t// TODO: chapter day: multiple results are returned, but we only need one\n\t\t\treturn result as Serialized<ICategory>[];\n\t\t}\n\t\tthrow new Error('Failed to get categories');\n\t}\n}\n\nexport const AppClientOrchestratorInstance = new AppClientOrchestrator();\n",null],"names":["_objectSpread","AppClientManager","hasAtLeastOnePermission","sdk","dispatchToastMessage","RealAppsEngineUIHost","module","link","default","v","export","AppClientOrchestratorInstance","AppClientOrchestrator","constructor","_appClientUIHost","_manager","_isLoaded","load","getAppClientManager","handleError","error","type","message","getInstalledApps","result","rest","get","apps","Error","getAppsFromMarketplace","isAdminUser","toString","Array","isArray","map","app","latest","appRequestStats","price","pricingPlans","purchaseType","isEnterpriseOnly","modifiedAt","bundledIn","requestedEndUser","getAppsOnBundle","bundleId","concat","getApp","appId","setAppSettings","settings","post","installApp","version","permissionsGranted","marketplace","updateApp","buildExternalUrl","details","arguments","length","undefined","buildExternalAppRequest","buildIncompatibleExternalUrl","appVersion","action","getCategories"],"mappings":"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"}