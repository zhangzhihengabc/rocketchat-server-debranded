)]}'
{"version":3,"sources":["meteor://ðŸ’»app/ee/client/omnichannel/reports/hooks/useStatusSection.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import type { TranslationContextValue, TranslationKey } from '@rocket.chat/ui-contexts';\nimport { useEndpoint, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useQuery } from '@tanstack/react-query';\nimport { useMemo } from 'react';\n\nimport { getPeriodRange } from '../../../components/dashboards/periods';\nimport { usePeriodSelectorStorage } from '../../../components/dashboards/usePeriodSelectorStorage';\nimport { COLORS, PERIOD_OPTIONS } from '../components/constants';\nimport { formatPeriodDescription } from '../utils/formatPeriodDescription';\nimport { round } from '../utils/round';\nimport { useDefaultDownload } from './useDefaultDownload';\n\nconst STATUSES: Record<string, { label: TranslationKey; color: string }> = {\n\tOpen: { label: 'Omnichannel_Reports_Status_Open', color: COLORS.success },\n\tQueued: { label: 'Queued', color: COLORS.warning2 },\n\tOn_Hold: { label: 'On_Hold', color: COLORS.warning },\n\tClosed: { label: 'Omnichannel_Reports_Status_Closed', color: COLORS.danger },\n};\n\nconst formatChartData = (data: { label: string; value: number }[] | undefined = [], total = 0, t: TranslationContextValue['translate']) => {\n\treturn data.map((item) => {\n\t\tconst status = STATUSES[item.label];\n\t\tconst percentage = total > 0 ? round((item.value / total) * 100) : 0;\n\t\tconst label = t(status.label);\n\t\treturn {\n\t\t\t...item,\n\t\t\tid: item.label,\n\t\t\tlabel: `${label} ${item.value} (${percentage}%)`,\n\t\t\trawLabel: label,\n\t\t\tcolor: status.color,\n\t\t};\n\t});\n};\n\nexport const useStatusSection = () => {\n\tconst t = useTranslation();\n\tconst [period, periodSelectorProps] = usePeriodSelectorStorage('reports-status-period', PERIOD_OPTIONS);\n\tconst getConversationsByStatus = useEndpoint('GET', '/v1/livechat/analytics/dashboards/conversations-by-status');\n\tconst { start, end } = getPeriodRange(period);\n\n\tconst {\n\t\tdata: { data, total } = { data: [], total: 0 },\n\t\tisLoading,\n\t\tisError,\n\t\tisSuccess,\n\t\trefetch,\n\t} = useQuery(\n\t\t['omnichannel-reports', 'conversations-by-status', period, t],\n\t\tasync () => {\n\t\t\tconst response = await getConversationsByStatus({ start: start.toISOString(), end: end.toISOString() });\n\n\t\t\treturn { ...response, data: formatChartData(response.data, response.total, t) };\n\t\t},\n\t\t{\n\t\t\trefetchInterval: 5 * 60 * 1000,\n\t\t},\n\t);\n\n\tconst title = t('Conversations_by_status');\n\tconst subtitle = t('__count__conversations__period__', {\n\t\tcount: total ?? 0,\n\t\tperiod: formatPeriodDescription(period, t),\n\t});\n\tconst emptyStateSubtitle = t('Omnichannel_Reports_Status_Empty_Subtitle');\n\n\tconst downloadProps = useDefaultDownload({ columnName: t('Status'), title, data, period });\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\tid: 'conversations-by-status',\n\t\t\ttitle,\n\t\t\tsubtitle,\n\t\t\temptyStateSubtitle,\n\t\t\tdata,\n\t\t\ttotal,\n\t\t\tperiod,\n\t\t\tperiodSelectorProps,\n\t\t\tdownloadProps,\n\t\t\tisLoading,\n\t\t\tisError,\n\t\t\tisDataFound: isSuccess && data.length > 0,\n\t\t\tonRetry: refetch,\n\t\t}),\n\t\t[title, subtitle, emptyStateSubtitle, data, total, period, periodSelectorProps, downloadProps, isLoading, isError, isSuccess, refetch],\n\t);\n};\n",null],"names":["_objectSpread","useEndpoint","useTranslation","useQuery","useMemo","getPeriodRange","usePeriodSelectorStorage","COLORS","PERIOD_OPTIONS","formatPeriodDescription","round","useDefaultDownload","module","link","default","v","export","useStatusSection","STATUSES","Open","label","color","success","Queued","warning2","On_Hold","warning","Closed","danger","formatChartData","data","total","arguments","length","undefined","t","map","item","status","percentage","value","id","concat","rawLabel","period","periodSelectorProps","getConversationsByStatus","start","end","isLoading","isError","isSuccess","refetch","response","toISOString","refetchInterval","title","subtitle","count","emptyStateSubtitle","downloadProps","columnName","isDataFound","onRetry"],"mappings":"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"}