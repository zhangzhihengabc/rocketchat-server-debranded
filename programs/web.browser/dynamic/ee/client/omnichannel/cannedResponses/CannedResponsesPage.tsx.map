)]}'
{"version":3,"sources":["meteor://ðŸ’»app/ee/client/omnichannel/cannedResponses/CannedResponsesPage.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Button, ButtonGroup } from '@rocket.chat/fuselage';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useRoute, useRouteParameter, useTranslation } from '@rocket.chat/ui-contexts';\nimport { useQueryClient } from '@tanstack/react-query';\nimport React from 'react';\n\nimport Page from '../../../../client/components/Page';\nimport CannedResponseEditWithData from './CannedResponseEditWithData';\nimport CannedResponseNew from './CannedResponseNew';\nimport CannedResponsesTable from './CannedResponsesTable';\n\nconst CannedResponsesPage = () => {\n\tconst t = useTranslation();\n\tconst cannedResponseRoute = useRoute('omnichannel-canned-responses');\n\tconst queryClient = useQueryClient();\n\n\tconst handleClick = useMutableCallback(() =>\n\t\tcannedResponseRoute.push({\n\t\t\tcontext: 'new',\n\t\t}),\n\t);\n\n\tconst context = useRouteParameter('context');\n\tconst id = useRouteParameter('id');\n\n\tconst reload = useMutableCallback(() => queryClient.invalidateQueries(['canned-responses']));\n\n\tif (context === 'edit' && id) {\n\t\treturn <CannedResponseEditWithData reload={reload} totalDataReload={reload} cannedResponseId={id} />;\n\t}\n\n\tif (context === 'new') {\n\t\treturn <CannedResponseNew reload={reload} totalDataReload={reload} />;\n\t}\n\n\treturn (\n\t\t<Page>\n\t\t\t<Page.Header title={t('Canned_Responses')}>\n\t\t\t\t<ButtonGroup>\n\t\t\t\t\t<Button onClick={handleClick}>{t('Create_canned_response')}</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</Page.Header>\n\t\t\t<Page.Content>\n\t\t\t\t<CannedResponsesTable />\n\t\t\t</Page.Content>\n\t\t</Page>\n\t);\n};\n\nexport default CannedResponsesPage;\n",null],"names":["Button","ButtonGroup","useMutableCallback","useRoute","useRouteParameter","useTranslation","useQueryClient","React","Page","CannedResponseEditWithData","CannedResponseNew","CannedResponsesTable","module","link","default","exportDefault","t","cannedResponseRoute","queryClient","handleClick","push","context","id","reload","invalidateQueries","createElement","totalDataReload","cannedResponseId","Header","title","onClick","Content"],"mappings":"2BAAAA,EAASC,EAAmDC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA3CC,EAAaC,IAAAA,CAAAA,wBAA6B,CAACb,OAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAW,EAAAA,IAAAA,CAAAA,8BAAAA,CAAAV,mBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAU,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAT,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,kBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAO,EAAAA,IAAAA,CAAAA,wBAAAA,CAAAN,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAM,EAAAA,IAAAA,CAAAA,QAAAA,CAAAE,QAAAA,CAAAA,EAAAP,EAAAA,CAAA,CAAA,EAAA,GAAAK,EAAAA,IAAAA,CAAAA,qCAAAA,CAAAE,QAAAA,CAAAA,EAAAN,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,+BAAAA,CAAAE,QAAAA,CAAAA,EAAAL,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,sBAAAA,CAAAE,QAAAA,CAAAA,EAAAJ,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,yBAAAA,CAAAE,QAAAA,CAAAA,EAAAH,EAAAA,CAAA,CAAA,EAAA,GAA5DC,EAAOG,aAAU,CAWW,KAC3B,IAAMC,EAAIX,IACJY,EAAsBd,EAAS,gCAC/Be,EAAcZ,IAEda,EAAcjB,EAAmB,IACtCe,EAAoBG,IAAI,CAAC,CACxBC,QAAS,SAILA,EAAUjB,EAAkB,WAC5BkB,EAAKlB,EAAkB,MAEvBmB,EAASrB,EAAmB,IAAMgB,EAAYM,iBAAiB,CAAC,CAAC,mBAAmB,SAE1F,AAAIH,AAAY,SAAZA,GAAsBC,EAClBf,EAAAkB,aAAA,CAAChB,EAA0B,CAACc,OAAQA,EAAQG,gBAAiBH,EAAQI,iBAAkBL,CAAG,GAG9FD,AAAY,QAAZA,EACId,EAAAkB,aAAA,CAACf,EAAiB,CAACa,OAAQA,EAAQG,gBAAiBH,CAAO,GAIlEhB,EAAAkB,aAAA,CAACjB,EAAI,KACJD,EAAAkB,aAAA,CAACjB,EAAKoB,MAAM,CAAA,CAACC,MAAOb,EAAE,mBAAoB,EACzCT,EAAAkB,aAAA,CAACxB,EAAW,KACXM,EAAAkB,aAAA,CAACzB,EAAM,CAAC8B,QAASX,CAAY,EAAEH,EAAE,6BAGnCT,EAAAkB,aAAA,CAACjB,EAAKuB,OAAO,CAAA,KACZxB,EAAAkB,aAAA,CAACd,EAAoB,OAIzB"}