)]}'
{"version":3,"sources":["meteor://ðŸ’»app/ee/client/omnichannel/cannedResponses/RemoveCannedResponseButton.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { IconButton } from '@rocket.chat/fuselage';\nimport { useMutableCallback } from '@rocket.chat/fuselage-hooks';\nimport { useSetModal, useToastMessageDispatch, useRoute, useMethod, useTranslation } from '@rocket.chat/ui-contexts';\nimport type { FC } from 'react';\nimport React from 'react';\n\nimport GenericModal from '../../../../client/components/GenericModal';\nimport { GenericTableCell } from '../../../../client/components/GenericTable';\n\ntype RemoveCannedResponseButtonProps = {\n\t_id: string;\n\treload: () => void;\n};\n\nconst RemoveCannedResponseButton: FC<RemoveCannedResponseButtonProps> = ({ _id, reload }) => {\n\tconst t = useTranslation();\n\tconst setModal = useSetModal();\n\tconst dispatchToastMessage = useToastMessageDispatch();\n\tconst cannedResponsesRoute = useRoute('omnichannel-canned-responses');\n\n\tconst removeCannedResponse = useMethod('removeCannedResponse');\n\n\tconst handleDelete = useMutableCallback((e) => {\n\t\te.stopPropagation();\n\t\tconst onDeleteCannedResponse: () => Promise<void> = async () => {\n\t\t\ttry {\n\t\t\t\tawait removeCannedResponse(_id);\n\t\t\t\treload();\n\t\t\t\tcannedResponsesRoute.push({});\n\t\t\t\tdispatchToastMessage({ type: 'success', message: t('Canned_Response_Removed') });\n\t\t\t} catch (error) {\n\t\t\t\tdispatchToastMessage({ type: 'error', message: error });\n\t\t\t} finally {\n\t\t\t\tsetModal(null);\n\t\t\t}\n\t\t};\n\n\t\tsetModal(\n\t\t\t<GenericModal\n\t\t\t\tvariant='danger'\n\t\t\t\tonConfirm={onDeleteCannedResponse}\n\t\t\t\tonCancel={(): void => setModal(null)}\n\t\t\t\tonClose={(): void => setModal(null)}\n\t\t\t\tconfirmText={t('Delete')}\n\t\t\t></GenericModal>,\n\t\t);\n\t});\n\n\treturn (\n\t\t<GenericTableCell fontScale='p2' color='hint' withTruncatedText>\n\t\t\t<IconButton icon='trash' small title={t('Remove')} onClick={handleDelete} />\n\t\t</GenericTableCell>\n\t);\n};\n\nexport default RemoveCannedResponseButton;\n",null],"names":["IconButton","useMutableCallback","useSetModal","useToastMessageDispatch","useRoute","useMethod","useTranslation","React","GenericModal","GenericTableCell","module","link","default","exportDefault","_ref","_id","reload","t","setModal","dispatchToastMessage","cannedResponsesRoute","removeCannedResponse","handleDelete","e","stopPropagation","onDeleteCannedResponse","push","type","message","error","createElement","variant","onConfirm","onCancel","onClose","confirmText","fontScale","color","withTruncatedText","icon","small","title","onClick"],"mappings":"2BAAAA,EAAmDC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA1CC,EAAYC,IAAA,CAAM,wBAAwB,CAAAX,WAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAU,EAAAA,IAAAA,CAAAA,8BAAAA,CAAAT,mBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAS,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAR,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,wBAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,QAAAA,CAAAE,QAAAA,CAAAA,EAAAL,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,6CAAAA,CAAAE,QAAAA,CAAAA,EAAAJ,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,6CAAAA,CAAAD,iBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAnDC,EAAOG,aAAY,CAcqDC,IAAoB,GAAnB,CAAEC,IAAAA,CAAG,CAAEC,OAAAA,CAAAA,CAAQ,CAAAF,EACjFG,EAAIX,IACJY,EAAWhB,IACXiB,EAAuBhB,IACvBiB,EAAuBhB,EAAS,gCAEhCiB,EAAuBhB,EAAU,wBAEjCiB,EAAerB,EAAoBsB,IACxCA,EAAEC,eAAe,GACjB,IAAMC,EAA8C,UACnD,GAAI,CACH,MAAMJ,EAAqBN,GAC3BC,IACAI,EAAqBM,IAAI,CAAC,CAAA,GAC1BP,EAAqB,CAAEQ,KAAM,UAAWC,QAASX,EAAE,0BAA0B,GAC5E,MAAOY,EAAO,CACfV,EAAqB,CAAEQ,KAAM,QAASC,QAASC,CAAK,UAC3C,CACTX,EAAS,MAEX,EAEAA,EACCX,EAAAuB,aAAA,CAACtB,EAAY,CACZuB,QAAQ,SACRC,UAAWP,EACXQ,SAAU,IAAYf,EAAS,MAC/BgB,QAAS,IAAYhB,EAAS,MAC9BiB,YAAalB,EAAE,SAAU,GAG5B,GAEA,OACCV,EAAAuB,aAAA,CAACrB,EAAgB,CAAC2B,UAAU,KAAKC,MAAM,OAAOC,kBAAiB,CAAA,CAAA,EAC9D/B,EAAAuB,aAAA,CAAC9B,EAAU,CAACuC,KAAK,QAAQC,MAAK,CAAA,EAACC,MAAOxB,EAAE,UAAWyB,QAASpB,CAAa,GAG5E"}