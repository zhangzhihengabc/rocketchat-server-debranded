)]}'
{"version":3,"sources":["meteor://ðŸ’»app/ee/client/voip/modal/DialPad/hooks/useDialPad.tsx","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { useTranslation } from '@rocket.chat/ui-contexts';\nimport type { ChangeEvent, RefCallback } from 'react';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\n\nimport { useDialModal } from '../../../../../../client/hooks/useDialModal';\nimport { useOutboundDialer } from '../../../../hooks/useOutboundDialer';\nimport type { PadDigit } from '../Pad';\n\ntype DialPadStateHandlers = {\n\tinputName: string;\n\tinputRef: RefCallback<HTMLInputElement>;\n\tinputError: string | undefined;\n\tisButtonDisabled: boolean;\n\thandleOnChange: (e: ChangeEvent<HTMLInputElement>) => void;\n\thandleBackspaceClick: () => void;\n\thandlePadButtonClick: (digit: PadDigit[0]) => void;\n\thandlePadButtonLongPressed: (digit: PadDigit[1]) => void;\n\thandleCallButtonClick: () => void;\n};\n\ntype DialPadProps = {\n\tinitialValue?: string;\n\tinitialErrorMessage?: string;\n};\n\nexport const useDialPad = ({ initialValue, initialErrorMessage }: DialPadProps): DialPadStateHandlers => {\n\tconst t = useTranslation();\n\tconst outboundClient = useOutboundDialer();\n\tconst { closeDialModal } = useDialModal();\n\n\tconst {\n\t\tsetFocus,\n\t\tregister,\n\t\tsetValue,\n\t\tsetError,\n\t\tclearErrors,\n\t\twatch,\n\t\tformState: { errors, isDirty },\n\t} = useForm<{ PhoneInput: string }>({\n\t\tdefaultValues: {\n\t\t\tPhoneInput: initialValue || '',\n\t\t},\n\t});\n\n\tconst { ref, onChange } = register('PhoneInput');\n\n\tconst value = watch('PhoneInput');\n\n\tconst [disabled, setDisabled] = useState(true);\n\n\tconst handleBackspaceClick = useCallback((): void => {\n\t\tclearErrors();\n\t\tsetValue('PhoneInput', value.slice(0, -1), { shouldDirty: true });\n\t}, [clearErrors, setValue, value]);\n\n\tconst handlePadButtonClick = useCallback(\n\t\t(digit: PadDigit[0]): void => {\n\t\t\tclearErrors();\n\n\t\t\tsetValue('PhoneInput', value + digit, { shouldDirty: true });\n\t\t},\n\t\t[clearErrors, setValue, value],\n\t);\n\n\tconst handlePadButtonLongPressed = useCallback(\n\t\t(digit: PadDigit[1]): void => {\n\t\t\tif (digit !== '+') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsetValue('PhoneInput', value + digit);\n\t\t},\n\t\t[setValue, value],\n\t);\n\n\tconst handleCallButtonClick = useCallback((): void => {\n\t\tif (!outboundClient) {\n\t\t\treturn setError('PhoneInput', { message: t('Something_went_wrong_try_again_later') });\n\t\t}\n\n\t\toutboundClient.makeCall(value);\n\t\tcloseDialModal();\n\t}, [outboundClient, setError, t, value, closeDialModal]);\n\n\tconst handleOnChange = useCallback((e) => onChange(e), [onChange]);\n\n\tuseEffect(() => {\n\t\tsetDisabled(!value);\n\t}, [value]);\n\n\tuseEffect(() => {\n\t\tsetFocus('PhoneInput');\n\t}, [setFocus]);\n\n\treturn {\n\t\tinputName: 'PhoneInput',\n\t\tinputRef: ref,\n\t\tinputError: isDirty ? errors.PhoneInput?.message : initialErrorMessage,\n\t\tisButtonDisabled: disabled,\n\t\thandleOnChange,\n\t\thandleBackspaceClick,\n\t\thandlePadButtonClick,\n\t\thandlePadButtonLongPressed,\n\t\thandleCallButtonClick,\n\t};\n};\n",null],"names":["useTranslation","useCallback","useEffect","useState","useForm","useDialModal","useOutboundDialer","module","export","useDialPad","_ref","_errors$PhoneInput","initialValue","initialErrorMessage","t","outboundClient","closeDialModal","setFocus","register","setValue","setError","clearErrors","watch","formState","errors","isDirty","defaultValues","PhoneInput","ref","onChange","value","disabled","setDisabled","handleBackspaceClick","slice","shouldDirty","handlePadButtonClick","digit","handlePadButtonLongPressed","handleCallButtonClick","message","makeCall","handleOnChange","e","inputName","inputRef","inputError","isButtonDisabled"],"mappings":"2BAA+BA,EAA2BC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAA1DC,EAAOC,MAAE,CAAA,CAAAC,WAAgB,IAAAA,CAAM,GAA2BF,EAAAA,IAAAA,CAAAA,2BAAAA,CAAAP,eAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAO,EAAAA,IAAAA,CAAAA,QAAAA,CAAAN,YAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,UAAAA,CAAAA,EAAAA,EAAAA,CAAA,EAAAC,SAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAI,EAAAA,IAAAA,CAAAA,kBAAAA,CAAAH,QAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,8CAAAA,CAAAF,aAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAE,EAAAA,IAAAA,CAAAA,sCAAAA,CAAAD,kBAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GA0BnD,IAAMG,EAAaC,IAA8E,IAAAC,EAAA,GAA7E,CAAEC,aAAAA,CAAY,CAAEC,oBAAAA,CAAAA,CAAmC,CAAAH,EACvEI,EAAId,IACJe,EAAiBT,IACjB,CAAEU,eAAAA,CAAAA,CAAgB,CAAGX,IAErB,CACLY,SAAAA,CAAQ,CACRC,SAAAA,CAAQ,CACRC,SAAAA,CAAQ,CACRC,SAAAA,CAAQ,CACRC,YAAAA,CAAW,CACXC,MAAAA,CAAK,CACLC,UAAW,CAAEC,OAAAA,CAAM,CAAEC,QAAAA,CAAAA,CAAO,CAC5B,CAAGrB,EAAgC,CACnCsB,cAAe,CACdC,WAAYf,GAAgB,MAIxB,CAAEgB,IAAAA,CAAG,CAAEC,SAAAA,CAAAA,CAAU,CAAGX,EAAS,cAE7BY,EAAQR,EAAM,cAEd,CAACS,EAAUC,EAAY,CAAG7B,EAAS,CAAA,GAEnC8B,EAAuBhC,EAAY,KACxCoB,IACAF,EAAS,aAAcW,EAAMI,KAAK,CAAC,EAAG,IAAK,CAAEC,YAAa,CAAA,CAAI,EAC/D,EAAG,CAACd,EAAaF,EAAUW,EAAM,EAE3BM,EAAuBnC,EAC3BoC,IACAhB,IAEAF,EAAS,aAAcW,EAAQO,EAAO,CAAEF,YAAa,CAAA,CAAI,EAC1D,EACA,CAACd,EAAaF,EAAUW,EAAM,EAGzBQ,EAA6BrC,EACjCoC,IACc,MAAVA,GAIJlB,EAAS,aAAcW,EAAQO,EAChC,EACA,CAAClB,EAAUW,EAAM,EAGZS,EAAwBtC,EAAY,KACzC,GAAI,CAACc,EACJ,OAAOK,EAAS,aAAc,CAAEoB,QAAS1B,EAAE,uCAAuC,GAGnFC,EAAe0B,QAAQ,CAACX,GACxBd,GACD,EAAG,CAACD,EAAgBK,EAAUN,EAAGgB,EAAOd,EAAe,EAEjD0B,EAAiBzC,EAAa0C,GAAMd,EAASc,GAAI,CAACd,EAAS,EAUjE,OARA3B,EAAU,KACT8B,EAAY,CAACF,EACd,EAAG,CAACA,EAAM,EAEV5B,EAAU,KACTe,EAAS,aACV,EAAG,CAACA,EAAS,EAEN,CACN2B,UAAW,aACXC,SAAUjB,EACVkB,WAAYrB,EAAO,AAAoB,OAApBd,CAAAA,EAAGa,EAAOG,UAAU,AAAVA,GAAUhB,AAAA,KAAA,IAAAA,EAAA,KAAA,EAAjBA,EAAmB6B,OAAO,CAAG3B,EACnDkC,iBAAkBhB,EAClBW,eAAAA,EACAT,qBAAAA,EACAG,qBAAAA,EACAE,2BAAAA,EACAC,sBAAAA,EAEF"}