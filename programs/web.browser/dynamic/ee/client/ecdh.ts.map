)]}'
{"version":3,"sources":["meteor://ðŸ’»app/ee/client/ecdh.ts","meteor://ðŸ’»app/<anon>"],"sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nimport { sdk } from '../../app/utils/client/lib/SDKClient';\nimport type { ClientSession } from '../app/ecdh/client/ClientSession';\n\nlet resolveSession: (value: ClientSession | void) => void;\nconst sessionPromise = new Promise<ClientSession | void>((resolve) => {\n\tresolveSession = resolve;\n});\n\nfunction init(session: ClientSession): void {\n\tMeteor.connection._stream.allowConnection();\n\n\tconst _didMessage = Meteor.connection._stream.socket._didMessage.bind(Meteor.connection._stream.socket);\n\tconst send = Meteor.connection._stream.socket.send.bind(Meteor.connection._stream.socket);\n\n\tMeteor.connection._stream.socket._didMessage = async (data): Promise<void> => {\n\t\tconst decryptedData = await session.decrypt(data);\n\t\tdecryptedData.split('\\n').forEach((d) => _didMessage(d));\n\t};\n\n\tMeteor.connection._stream.socket.send = async (data): Promise<void> => {\n\t\tsend(await session.encrypt(data));\n\t};\n}\n\nasync function initEncryptedSession(): Promise<void> {\n\tif (!window.ECDH_Enabled) {\n\t\tMeteor.connection._stream.allowConnection();\n\t\treturn resolveSession();\n\t}\n\tconst { ClientSession } = await import('../app/ecdh/client/ClientSession');\n\tconst session = new ClientSession();\n\tconst clientPublicKey = await session.init();\n\n\ttry {\n\t\tconst response = await fetch('/api/ecdh_proxy/initEncryptedSession', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({ clientPublicKey }),\n\t\t});\n\n\t\tif (response.status !== 200) {\n\t\t\tresolveSession();\n\t\t\treturn Meteor.connection._stream.allowConnection();\n\t\t}\n\n\t\tconst data = await response.json();\n\n\t\tif (data.success === false) {\n\t\t\tresolveSession();\n\t\t\treturn Meteor.connection._stream.allowConnection();\n\t\t}\n\n\t\tawait session.setServerKey(data.publicKeyString);\n\t\tresolveSession(session);\n\t\tinit(session);\n\t} catch (e) {\n\t\tconsole.log(e);\n\t\tresolveSession();\n\t\tMeteor.connection._stream.allowConnection();\n\t}\n}\n\ninitEncryptedSession();\nsdk.rest.use(async (request, next) => {\n\tconst session = await sessionPromise;\n\n\tif (!session) {\n\t\treturn next(...request);\n\t}\n\tconst result = await (await next(...request)).text();\n\tconst decrypted = await session.decrypt(result);\n\tconst parsed = JSON.parse(decrypted);\n\treturn parsed;\n});\n",null],"names":["Meteor","sdk","resolveSession","module","link","sessionPromise","Promise","resolve","initEncryptedSession","window","ECDH_Enabled","connection","_stream","allowConnection","ClientSession","dynamicImport","session","clientPublicKey","init","response","fetch","method","headers","body","JSON","stringify","status","data","json","success","setServerKey","publicKeyString","_didMessage","socket","bind","send","decryptedData","decrypt","split","forEach","d","encrypt","e","console","log","rest","use","request","next","result","text","decrypted","parsed","parse"],"mappings":"2BAAAA,EAAuCC,EAKnCC,EALKC,EAAQC,IAAA,CAAM,gBAAgB,CAAAJ,OAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAAAG,EAAAA,IAAAA,CAAAA,uCAAAA,CAAAF,IAAAA,CAAAA,EAAAA,EAAAA,CAAA,CAAA,EAAA,GAMvC,IAAMI,EAAiB,IAAIC,QAA+BC,IACzDL,EAAiBK,CAClB,GA0DAC,AAxCA,CAAA,eAAeA,IACd,GAAI,CAACC,OAAOC,YAAY,CAEvB,OADAV,EAAOW,UAAU,CAACC,OAAO,CAACC,eAAe,GAClCX,IAER,GAAM,CAAEY,cAAAA,CAAAA,CAAe,CAAG,MAAMX,EAAAY,aAAA,CAAO,oCACjCC,EAAU,IAAIF,EACdG,EAAkB,MAAMD,EAAQE,IAAI,GAE1C,GAAI,CACH,IAAMC,EAAW,MAAMC,MAAM,uCAAwC,CACpEC,OAAQ,OACRC,QAAS,CACR,eAAgB,oBAEjBC,KAAMC,KAAKC,SAAS,CAAC,CAAER,gBAAAA,CAAe,KAGvC,GAAIE,AAAoB,MAApBA,EAASO,MAAM,CAElB,OADAxB,IACOF,EAAOW,UAAU,CAACC,OAAO,CAACC,eAAe,GAGjD,IAAMc,EAAO,MAAMR,EAASS,IAAI,GAEhC,GAAID,AAAiB,CAAA,IAAjBA,EAAKE,OAAO,CAEf,OADA3B,IACOF,EAAOW,UAAU,CAACC,OAAO,CAACC,eAAe,EAGjD,OAAMG,EAAQc,YAAY,CAACH,EAAKI,eAAe,EAC/C7B,EAAec,GACfE,AAhDF,SAAcF,CAAsB,EACnChB,EAAOW,UAAU,CAACC,OAAO,CAACC,eAAe,GAEzC,IAAMmB,EAAchC,EAAOW,UAAU,CAACC,OAAO,CAACqB,MAAM,CAACD,WAAW,CAACE,IAAI,CAAClC,EAAOW,UAAU,CAACC,OAAO,CAACqB,MAAM,EAChGE,EAAOnC,EAAOW,UAAU,CAACC,OAAO,CAACqB,MAAM,CAACE,IAAI,CAACD,IAAI,CAAClC,EAAOW,UAAU,CAACC,OAAO,CAACqB,MAAM,CAExFjC,CAAAA,EAAOW,UAAU,CAACC,OAAO,CAACqB,MAAM,CAACD,WAAW,CAAG,MAAOL,IACrD,IAAMS,EAAgB,MAAMpB,EAAQqB,OAAO,CAACV,GAC5CS,EAAcE,KAAK,CAAC,MAAMC,OAAO,CAAEC,GAAMR,EAAYQ,GACtD,EAEAxC,EAAOW,UAAU,CAACC,OAAO,CAACqB,MAAM,CAACE,IAAI,CAAG,MAAOR,IAC9CQ,EAAK,MAAMnB,EAAQyB,OAAO,CAACd,GAC5B,CACD,EAkCOX,GACJ,MAAO0B,EAAG,CACXC,QAAQC,GAAG,CAACF,GACZxC,IACAF,EAAOW,UAAU,CAACC,OAAO,CAACC,eAAe,GAE3C,CAAA,IAGAZ,EAAI4C,IAAI,CAACC,GAAG,CAAC,MAAOC,EAASC,KAC5B,IAAMhC,EAAU,MAAMX,EAEtB,GAAI,CAACW,EACJ,OAAOgC,KAAQD,GAEhB,IAAME,EAAS,MAAM,AAAC,CAAA,MAAMD,KAAQD,EAAO,EAAGG,IAAI,GAC5CC,EAAY,MAAMnC,EAAQqB,OAAO,CAACY,GAClCG,EAAS5B,KAAK6B,KAAK,CAACF,GAC1B,OAAOC,CACR"}