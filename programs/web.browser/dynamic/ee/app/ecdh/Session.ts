function module(t,r,e){let i,s,a;e.export({Session:()=>o}),e.link("sodium-plus",{SodiumPlus(t){i=t},X25519PublicKey(t){s=t}},0);class o{constructor(){this.stringFormatKey="base64",this.stringFormatEncryptedData="base64",this.stringFormatRawData="base64",this.decryptKey=void 0,this.encryptKey=void 0,this.secretKey=void 0,this.publicKey=void 0}async sodium(){return a||i.auto()}get publicKeyString(){return this.publicKey.toString(this.stringFormatKey)}publicKeyFromString(t){return new s(Buffer.from(t,this.stringFormatKey))}async encryptToBuffer(t){let r=await this.sodium(),e=await r.randombytes_buf(24),i=await r.crypto_secretbox(Buffer.from(t).toString(this.stringFormatRawData),e,this.encryptKey);return Buffer.concat([e,i])}async encrypt(t){let r=await this.encryptToBuffer(t);return r.toString(this.stringFormatEncryptedData)}async decryptToBuffer(t){let r=await this.sodium(),e=Buffer.from(Buffer.isBuffer(t)?t.toString():t,this.stringFormatEncryptedData),i=await r.crypto_secretbox_open(e.slice(24),e.slice(0,24),this.decryptKey);return Buffer.from(i.toString(),this.stringFormatRawData)}async decrypt(t){let r=await this.decryptToBuffer(t);return r.toString()}}}
//# sourceMappingURL=/dynamic/ee/app/ecdh/49f96325248c326b7064025d04ed125c337ef31e.map
