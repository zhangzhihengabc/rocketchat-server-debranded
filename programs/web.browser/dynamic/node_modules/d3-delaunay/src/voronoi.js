function module(t,e,i){let n,l;i.export({default:()=>s}),i.link("./path.js",{default(t){n=t}},0),i.link("./polygon.js",{default(t){l=t}},1);class s{constructor(t,[e,i,n,l]=[0,0,960,500]){if(!((n=+n)>=(e=+e))||!((l=+l)>=(i=+i)))throw Error("invalid bounds");this.delaunay=t,this._circumcenters=new Float64Array(2*t.points.length),this.vectors=new Float64Array(2*t.points.length),this.xmax=n,this.xmin=e,this.ymax=l,this.ymin=i,this._init()}update(){return this.delaunay.update(),this._init(),this}_init(){let{delaunay:{points:t,hull:e,triangles:i},vectors:n}=this,l=this.circumcenters=this._circumcenters.subarray(0,i.length/3*2);for(let e=0,n=0,s=i.length,h,r;e<s;e+=3,n+=2){let s=2*i[e],a=2*i[e+1],o=2*i[e+2],m=t[s],u=t[s+1],x=t[a],c=t[a+1],f=t[o],g=t[o+1],y=x-m,d=c-u,_=f-m,p=g-u,v=y*y+d*d,b=_*_+p*p,w=(y*p-d*_)*2;if(w){if(1e-8>Math.abs(w))h=(m+f)/2,r=(u+g)/2;else{let t=1/w;h=m+(p*v-d*b)*t,r=u+(y*b-_*v)*t}}else h=(m+f)/2-1e8*p,r=(u+g)/2+1e8*_;l[n]=h,l[n+1]=r}let s=e[e.length-1],h,r=4*s,a,o=t[2*s],m,u=t[2*s+1];n.fill(0);for(let i=0;i<e.length;++i)s=e[i],h=r,a=o,m=u,r=4*s,o=t[2*s],u=t[2*s+1],n[h+2]=n[r]=m-u,n[h+3]=n[r+1]=o-a}render(t){let e=null==t?t=new n:void 0,{delaunay:{halfedges:i,inedges:l,hull:s},circumcenters:h,vectors:r}=this;if(s.length<=1)return null;for(let e=0,n=i.length;e<n;++e){let n=i[e];if(n<e)continue;let l=2*Math.floor(e/3),s=2*Math.floor(n/3),r=h[l],a=h[l+1],o=h[s],m=h[s+1];this._renderSegment(r,a,o,m,t)}let a,o=s[s.length-1];for(let e=0;e<s.length;++e){a=o,o=s[e];let i=2*Math.floor(l[o]/3),n=h[i],m=h[i+1],u=4*a,x=this._project(n,m,r[u+2],r[u+3]);x&&this._renderSegment(n,m,x[0],x[1],t)}return e&&e.value()}renderBounds(t){let e=null==t?t=new n:void 0;return t.rect(this.xmin,this.ymin,this.xmax-this.xmin,this.ymax-this.ymin),e&&e.value()}renderCell(t,e){let i=null==e?e=new n:void 0,l=this._clip(t);if(null===l||!l.length)return;e.moveTo(l[0],l[1]);let s=l.length;for(;l[0]===l[s-2]&&l[1]===l[s-1]&&s>1;)s-=2;for(let t=2;t<s;t+=2)(l[t]!==l[t-2]||l[t+1]!==l[t-1])&&e.lineTo(l[t],l[t+1]);return e.closePath(),i&&i.value()}*cellPolygons(){let{delaunay:{points:t}}=this;for(let e=0,i=t.length/2;e<i;++e){let t=this.cellPolygon(e);t&&(t.index=e,yield t)}}cellPolygon(t){let e=new l;return this.renderCell(t,e),e.value()}_renderSegment(t,e,i,n,l){let s;let h=this._regioncode(t,e),r=this._regioncode(i,n);0===h&&0===r?(l.moveTo(t,e),l.lineTo(i,n)):(s=this._clipSegment(t,e,i,n,h,r))&&(l.moveTo(s[0],s[1]),l.lineTo(s[2],s[3]))}contains(t,e,i){return(e=+e)==e&&(i=+i)==i&&this.delaunay._step(t,e,i)===t}*neighbors(t){let e=this._clip(t);if(e)for(let i of this.delaunay.neighbors(t)){let t=this._clip(i);if(t){t:for(let n=0,l=e.length;n<l;n+=2)for(let s=0,h=t.length;s<h;s+=2)if(e[n]==t[s]&&e[n+1]==t[s+1]&&e[(n+2)%l]==t[(s+h-2)%h]&&e[(n+3)%l]==t[(s+h-1)%h]){yield i;break t}}}}_cell(t){let{circumcenters:e,delaunay:{inedges:i,halfedges:n,triangles:l}}=this,s=i[t];if(-1===s)return null;let h=[],r=s;do{let i=Math.floor(r/3);if(h.push(e[2*i],e[2*i+1]),l[r=r%3==2?r-2:r+1]!==t)break;r=n[r]}while(r!==s&&-1!==r);return h}_clip(t){if(0===t&&1===this.delaunay.hull.length)return[this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax,this.xmin,this.ymin];let e=this._cell(t);if(null===e)return null;let{vectors:i}=this,n=4*t;return i[n]||i[n+1]?this._clipInfinite(t,e,i[n],i[n+1],i[n+2],i[n+3]):this._clipFinite(t,e)}_clipFinite(t,e){let i,n;let l=e.length,s=null,h,r,a=e[l-2],o=e[l-1],m,u=this._regioncode(a,o);for(let x=0;x<l;x+=2)if(h=a,r=o,a=e[x],o=e[x+1],m=u,u=this._regioncode(a,o),0===m&&0===u)i=n,n=0,s?s.push(a,o):s=[a,o];else{let e,l,x,c,f;if(0===m){if(null===(e=this._clipSegment(h,r,a,o,m,u)))continue;[l,x,c,f]=e}else{if(null===(e=this._clipSegment(a,o,h,r,u,m)))continue;[c,f,l,x]=e,i=n,n=this._edgecode(l,x),i&&n&&this._edge(t,i,n,s,s.length),s?s.push(l,x):s=[l,x]}i=n,n=this._edgecode(c,f),i&&n&&this._edge(t,i,n,s,s.length),s?s.push(c,f):s=[c,f]}if(s)i=n,n=this._edgecode(s[0],s[1]),i&&n&&this._edge(t,i,n,s,s.length);else if(this.contains(t,(this.xmin+this.xmax)/2,(this.ymin+this.ymax)/2))return[this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax,this.xmin,this.ymin];return s}_clipSegment(t,e,i,n,l,s){for(;;){if(0===l&&0===s)return[t,e,i,n];if(l&s)return null;let h,r,a=l||s;8&a?(h=t+(i-t)*(this.ymax-e)/(n-e),r=this.ymax):4&a?(h=t+(i-t)*(this.ymin-e)/(n-e),r=this.ymin):2&a?(r=e+(n-e)*(this.xmax-t)/(i-t),h=this.xmax):(r=e+(n-e)*(this.xmin-t)/(i-t),h=this.xmin),l?(t=h,e=r,l=this._regioncode(t,e)):(i=h,n=r,s=this._regioncode(i,n))}}_clipInfinite(t,e,i,n,l,s){let h=Array.from(e),r;if((r=this._project(h[0],h[1],i,n))&&h.unshift(r[0],r[1]),(r=this._project(h[h.length-2],h[h.length-1],l,s))&&h.push(r[0],r[1]),h=this._clipFinite(t,h))for(let e=0,i=h.length,n,l=this._edgecode(h[i-2],h[i-1]);e<i;e+=2)n=l,l=this._edgecode(h[e],h[e+1]),n&&l&&(e=this._edge(t,n,l,h,e),i=h.length);else this.contains(t,(this.xmin+this.xmax)/2,(this.ymin+this.ymax)/2)&&(h=[this.xmin,this.ymin,this.xmax,this.ymin,this.xmax,this.ymax,this.xmin,this.ymax]);return h}_edge(t,e,i,n,l){for(;e!==i;){let i,s;switch(e){case 5:e=4;continue;case 4:e=6,i=this.xmax,s=this.ymin;break;case 6:e=2;continue;case 2:e=10,i=this.xmax,s=this.ymax;break;case 10:e=8;continue;case 8:e=9,i=this.xmin,s=this.ymax;break;case 9:e=1;continue;case 1:e=5,i=this.xmin,s=this.ymin}(n[l]!==i||n[l+1]!==s)&&this.contains(t,i,s)&&(n.splice(l,0,i,s),l+=2)}if(n.length>4)for(let t=0;t<n.length;t+=2){let e=(t+2)%n.length,i=(t+4)%n.length;(n[t]===n[e]&&n[e]===n[i]||n[t+1]===n[e+1]&&n[e+1]===n[i+1])&&(n.splice(e,2),t-=2)}return l}_project(t,e,i,n){let l=1/0,s,h,r;if(n<0){if(e<=this.ymin)return null;(s=(this.ymin-e)/n)<l&&(r=this.ymin,h=t+(l=s)*i)}else if(n>0){if(e>=this.ymax)return null;(s=(this.ymax-e)/n)<l&&(r=this.ymax,h=t+(l=s)*i)}if(i>0){if(t>=this.xmax)return null;(s=(this.xmax-t)/i)<l&&(h=this.xmax,r=e+(l=s)*n)}else if(i<0){if(t<=this.xmin)return null;(s=(this.xmin-t)/i)<l&&(h=this.xmin,r=e+(l=s)*n)}return[h,r]}_edgecode(t,e){return(t===this.xmin?1:t===this.xmax?2:0)|(e===this.ymin?4:e===this.ymax?8:0)}_regioncode(t,e){return(t<this.xmin?1:t>this.xmax?2:0)|(e<this.ymin?4:e>this.ymax?8:0)}}}
//# sourceMappingURL=/dynamic/node_modules/d3-delaunay/src/f3ff9d8f837a86a37bbb8ee65edc5db2326d16fc.map
