function module(e,t,l){let n,r,i,h;l.export({default:()=>d}),l.link("delaunator",{default(e){n=e}},0),l.link("./path.js",{default(e){r=e}},1),l.link("./polygon.js",{default(e){i=e}},2),l.link("./voronoi.js",{default(e){h=e}},3);let o=2*Math.PI,a=Math.pow;function s(e){return e[0]}function u(e){return e[1]}class d{static from(e,t=s,l=u,n){return new d("length"in e?function(e,t,l,n){let r=e.length,i=new Float64Array(2*r);for(let h=0;h<r;++h){let r=e[h];i[2*h]=t.call(n,r,h,e),i[2*h+1]=l.call(n,r,h,e)}return i}(e,t,l,n):Float64Array.from(function*(e,t,l,n){let r=0;for(let i of e)yield t.call(n,i,r,e),yield l.call(n,i,r,e),++r}(e,t,l,n)))}constructor(e){this._delaunator=new n(e),this.inedges=new Int32Array(e.length/2),this._hullIndex=new Int32Array(e.length/2),this.points=this._delaunator.coords,this._init()}update(){return this._delaunator.update(),this._init(),this}_init(){let e=this._delaunator,t=this.points;if(e.hull&&e.hull.length>2&&function(e){let{triangles:t,coords:l}=e;for(let e=0;e<t.length;e+=3){let n=2*t[e],r=2*t[e+1],i=2*t[e+2],h=(l[i]-l[n])*(l[r+1]-l[n+1])-(l[r]-l[n])*(l[i+1]-l[n+1]);if(h>1e-10)return!1}return!0}(e)){this.collinear=Int32Array.from({length:t.length/2},(e,t)=>t).sort((e,l)=>t[2*e]-t[2*l]||t[2*e+1]-t[2*l+1]);let e=this.collinear[0],i=this.collinear[this.collinear.length-1],h=[t[2*e],t[2*e+1],t[2*i],t[2*i+1]],o=1e-8*Math.hypot(h[3]-h[1],h[2]-h[0]);for(let e=0,n=t.length/2;e<n;++e){var l,r;let n=[(l=t[2*e])+Math.sin(l+(r=t[2*e+1]))*o,r+Math.cos(l-r)*o];t[2*e]=n[0],t[2*e+1]=n[1]}this._delaunator=new n(t)}else delete this.collinear;let i=this.halfedges=this._delaunator.halfedges,h=this.hull=this._delaunator.hull,o=this.triangles=this._delaunator.triangles,a=this.inedges.fill(-1),s=this._hullIndex.fill(-1);for(let e=0,t=i.length;e<t;++e){let t=o[e%3==2?e-2:e+1];(-1===i[e]||-1===a[t])&&(a[t]=e)}for(let e=0,t=h.length;e<t;++e)s[h[e]]=e;h.length<=2&&h.length>0&&(this.triangles=new Int32Array(3).fill(-1),this.halfedges=new Int32Array(3).fill(-1),this.triangles[0]=h[0],this.triangles[1]=h[1],this.triangles[2]=h[1],a[h[0]]=1,2===h.length&&(a[h[1]]=0))}voronoi(e){return new h(this,e)}*neighbors(e){let{inedges:t,hull:l,_hullIndex:n,halfedges:r,triangles:i,collinear:h}=this;if(h){let t=h.indexOf(e);t>0&&(yield h[t-1]),t<h.length-1&&(yield h[t+1]);return}let o=t[e];if(-1===o)return;let a=o,s=-1;do{if(yield s=i[a],i[a=a%3==2?a-2:a+1]!==e)return;if(-1===(a=r[a])){let t=l[(n[e]+1)%l.length];t!==s&&(yield t);return}}while(a!==o)}find(e,t,l=0){let n;if((e=+e)!=e||(t=+t)!=t)return -1;let r=l;for(;(n=this._step(l,e,t))>=0&&n!==l&&n!==r;)l=n;return n}_step(e,t,l){let{inedges:n,hull:r,_hullIndex:i,halfedges:h,triangles:o,points:s}=this;if(-1===n[e]||!s.length)return(e+1)%(s.length>>1);let u=e,d=a(t-s[2*e],2)+a(l-s[2*e+1],2),f=n[e],g=f;do{let n=o[g],f=a(t-s[2*n],2)+a(l-s[2*n+1],2);if(f<d&&(d=f,u=n),o[g=g%3==2?g-2:g+1]!==e)break;if(-1===(g=h[g])){if((g=r[(i[e]+1)%r.length])!==n&&a(t-s[2*g],2)+a(l-s[2*g+1],2)<d)return g;break}}while(g!==f);return u}render(e){let t=null==e?e=new r:void 0,{points:l,halfedges:n,triangles:i}=this;for(let t=0,r=n.length;t<r;++t){let r=n[t];if(r<t)continue;let h=2*i[t],o=2*i[r];e.moveTo(l[h],l[h+1]),e.lineTo(l[o],l[o+1])}return this.renderHull(e),t&&t.value()}renderPoints(e,t=2){let l=null==e?e=new r:void 0,{points:n}=this;for(let l=0,r=n.length;l<r;l+=2){let r=n[l],i=n[l+1];e.moveTo(r+t,i),e.arc(r,i,t,0,o)}return l&&l.value()}renderHull(e){let t=null==e?e=new r:void 0,{hull:l,points:n}=this,i=2*l[0],h=l.length;e.moveTo(n[i],n[i+1]);for(let t=1;t<h;++t){let r=2*l[t];e.lineTo(n[r],n[r+1])}return e.closePath(),t&&t.value()}hullPolygon(){let e=new i;return this.renderHull(e),e.value()}renderTriangle(e,t){let l=null==t?t=new r:void 0,{points:n,triangles:i}=this,h=2*i[e*=3],o=2*i[e+1],a=2*i[e+2];return t.moveTo(n[h],n[h+1]),t.lineTo(n[o],n[o+1]),t.lineTo(n[a],n[a+1]),t.closePath(),l&&l.value()}*trianglePolygons(){let{triangles:e}=this;for(let t=0,l=e.length/3;t<l;++t)yield this.trianglePolygon(t)}trianglePolygon(e){let t=new i;return this.renderTriangle(e,t),t.value()}}}
//# sourceMappingURL=/dynamic/node_modules/d3-delaunay/src/3945a450123f1d2946dbdab949a4c8bae7602169.map
