function module(e,t,n){n.export({createKeybindingsHandler:()=>u,parseKeybinding:()=>a});var o=["Shift","Meta","Alt","Control"],r="object"==typeof navigator&&/Mac|iPod|iPhone|iPad/.test(navigator.platform)?"Meta":"Control";function i(e,t){return"function"==typeof e.getModifierState&&e.getModifierState(t)}function a(e){return e.trim().split(" ").map(function(e){var t=e.split(/\b\+/),n=t.pop();return[t=t.map(function(e){return"$mod"===e?r:e}),n]})}function u(e,t){void 0===t&&(t={});var n,r=null!=(n=t.timeout)?n:1e3,u=Object.keys(e).map(function(t){return[a(t),e[t]]}),c=new Map,f=null;return function(e){e instanceof KeyboardEvent&&(u.forEach(function(t){var n,r=t[0],a=t[1],u=c.get(r)||r;(n=u[0])[1].toUpperCase()!==e.key.toUpperCase()&&n[1]!==e.code||n[0].find(function(t){return!i(e,t)})||o.find(function(t){return!n[0].includes(t)&&n[1]!==t&&i(e,t)})?i(e,e.key)||c.delete(r):u.length>1?c.set(r,u.slice(1)):(c.delete(r),a(e))}),f&&clearTimeout(f),f=setTimeout(c.clear.bind(c),r))}}n.exportDefault(function(e,t,n){void 0===n&&(n={});var o,r=null!=(o=n.event)?o:"keydown",i=u(t,n);return e.addEventListener(r,i),function(){e.removeEventListener(r,i)}})}
//# sourceMappingURL=/dynamic/node_modules/tinykeys/dist/bb724ad4719cb5b4ecfbc0b1c818b9219468ee8c.map
