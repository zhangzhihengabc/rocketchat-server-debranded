function module(e,s){"use strict";let t=e("path"),r="win32"===process.platform,{REGEX_BACKSLASH:a,REGEX_REMOVE_BACKSLASH:n,REGEX_SPECIAL_CHARS:o,REGEX_SPECIAL_CHARS_GLOBAL:i}=e("./constants");s.isObject=e=>null!==e&&"object"==typeof e&&!Array.isArray(e),s.hasRegexChars=e=>o.test(e),s.isRegexChar=e=>1===e.length&&s.hasRegexChars(e),s.escapeRegex=e=>e.replace(i,"\\$1"),s.toPosixSlashes=e=>e.replace(a,"/"),s.removeBackslashes=e=>e.replace(n,e=>"\\"===e?"":e),s.supportsLookbehinds=()=>{let e=process.version.slice(1).split(".").map(Number);return 3===e.length&&e[0]>=9||8===e[0]&&e[1]>=10},s.isWindows=e=>e&&"boolean"==typeof e.windows?e.windows:!0===r||"\\"===t.sep,s.escapeLast=(e,t,r)=>{let a=e.lastIndexOf(t,r);return -1===a?e:"\\"===e[a-1]?s.escapeLast(e,t,a-1):`${e.slice(0,a)}\\${e.slice(a)}`},s.removePrefix=(e,s={})=>{let t=e;return t.startsWith("./")&&(t=t.slice(2),s.prefix="./"),t},s.wrapOutput=(e,s={},t={})=>{let r=t.contains?"":"^",a=t.contains?"":"$",n=`${r}(?:${e})${a}`;return!0===s.negated&&(n=`(?:^(?!${n}).*$)`),n}}
//# sourceMappingURL=/dynamic/node_modules/picomatch/lib/4d36a6de039e0be2ba3d0e418d86cae2a70877e6.map
