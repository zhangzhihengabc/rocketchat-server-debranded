function module(t,f,e){"use strict";var i=t("minimalistic-assert");function r(t){this.options=t,this.type=this.options.type,this.blockSize=8,this._init(),this.buffer=Array(this.blockSize),this.bufferOff=0}e.exports=r,r.prototype._init=function t(){},r.prototype.update=function t(t){return 0===t.length?[]:"decrypt"===this.type?this._updateDecrypt(t):this._updateEncrypt(t)},r.prototype._buffer=function t(t,f){for(var e=Math.min(this.buffer.length-this.bufferOff,t.length-f),i=0;i<e;i++)this.buffer[this.bufferOff+i]=t[f+i];return this.bufferOff+=e,e},r.prototype._flushBuffer=function t(t,f){return this._update(this.buffer,0,t,f),this.bufferOff=0,this.blockSize},r.prototype._updateEncrypt=function t(t){var f=0,e=0,i=Array(((this.bufferOff+t.length)/this.blockSize|0)*this.blockSize);0!==this.bufferOff&&(f+=this._buffer(t,f),this.bufferOff===this.buffer.length&&(e+=this._flushBuffer(i,e)));for(var r=t.length-(t.length-f)%this.blockSize;f<r;f+=this.blockSize)this._update(t,f,i,e),e+=this.blockSize;for(;f<t.length;f++,this.bufferOff++)this.buffer[this.bufferOff]=t[f];return i},r.prototype._updateDecrypt=function t(t){for(var f=0,e=0,i=Math.ceil((this.bufferOff+t.length)/this.blockSize)-1,r=Array(i*this.blockSize);i>0;i--)f+=this._buffer(t,f),e+=this._flushBuffer(r,e);return f+=this._buffer(t,f),r},r.prototype.final=function t(t){var f,e;return(t&&(f=this.update(t)),e="encrypt"===this.type?this._finalEncrypt():this._finalDecrypt(),f)?f.concat(e):e},r.prototype._pad=function t(t,f){if(0===f)return!1;for(;f<t.length;)t[f++]=0;return!0},r.prototype._finalEncrypt=function t(){if(!this._pad(this.buffer,this.bufferOff))return[];var t=Array(this.blockSize);return this._update(this.buffer,0,t,0),t},r.prototype._unpad=function t(t){return t},r.prototype._finalDecrypt=function t(){i.equal(this.bufferOff,this.blockSize,"Not enough data to decrypt");var t=Array(this.blockSize);return this._flushBuffer(t,0),this._unpad(t)}}
//# sourceMappingURL=/dynamic/node_modules/des.js/lib/des/bcd33e6996889bef5a9d21f5bfd95866c37d14d8.map
