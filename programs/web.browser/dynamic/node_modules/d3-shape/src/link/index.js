function module(n,t,e){let i,r,u,l,o,a;function c(n){return n.source}function f(n){return n.target}function p(n){var t=c,e=f,a=l,p=o,s=null;function h(){var u,l=r.call(arguments),o=t.apply(this,l),c=e.apply(this,l);if(s||(s=u=i()),n(s,+a.apply(this,(l[0]=o,l)),+p.apply(this,l),+a.apply(this,(l[0]=c,l)),+p.apply(this,l)),u)return s=null,u+""||null}return h.source=function(n){return arguments.length?(t=n,h):t},h.target=function(n){return arguments.length?(e=n,h):e},h.x=function(n){return arguments.length?(a="function"==typeof n?n:u(+n),h):a},h.y=function(n){return arguments.length?(p="function"==typeof n?n:u(+n),h):p},h.context=function(n){return arguments.length?(s=null==n?null:n,h):s},h}function s(n,t,e,i,r){n.moveTo(t,e),n.bezierCurveTo(t=(t+i)/2,e,t,r,i,r)}function h(n,t,e,i,r){n.moveTo(t,e),n.bezierCurveTo(t,e=(e+r)/2,i,e,i,r)}function y(n,t,e,i,r){var u=a(t,e),l=a(t,e=(e+r)/2),o=a(i,e),c=a(i,r);n.moveTo(u[0],u[1]),n.bezierCurveTo(l[0],l[1],o[0],o[1],c[0],c[1])}function v(){return p(s)}function d(){return p(h)}function g(){var n=p(y);return n.angle=n.x,delete n.x,n.radius=n.y,delete n.y,n}e.export({linkHorizontal:()=>v,linkVertical:()=>d,linkRadial:()=>g}),e.link("d3-path",{path(n){i=n}},0),e.link("../array.js",{slice(n){r=n}},1),e.link("../constant.js",{default(n){u=n}},2),e.link("../point.js",{x(n){l=n},y(n){o=n}},3),e.link("../pointRadial.js",{default(n){a=n}},4)}
//# sourceMappingURL=/dynamic/node_modules/d3-shape/src/link/1e298e7b681429a219c7548b32820b0dfc39b1eb.map
