function module(t,e,i){let s,r;i.export({Subscription:()=>a}),i.link("./emitter",{EmitterImpl(t){s=t}},0),i.link("./subscription-state",{SubscriptionState(t){r=t}},1);class a{constructor(t,e={}){this._disposed=!1,this._state=r.Initial,this._logger=t.getLogger("sip.Subscription"),this._stateEventEmitter=new s,this._userAgent=t,this.delegate=e.delegate}dispose(){return this._disposed||(this._disposed=!0,this._stateEventEmitter.removeAllListeners()),Promise.resolve()}get dialog(){return this._dialog}get disposed(){return this._disposed}get state(){return this._state}get stateChange(){return this._stateEventEmitter}stateTransition(t){let e=()=>{throw Error(`Invalid state transition from ${this._state} to ${t}`)};switch(this._state){case r.Initial:t!==r.NotifyWait&&t!==r.Terminated&&e();break;case r.NotifyWait:t!==r.Subscribed&&t!==r.Terminated&&e();break;case r.Subscribed:t!==r.Terminated&&e();break;case r.Terminated:e();break;default:throw Error("Unrecognized state.")}this._state!==t&&(this._state=t,this._logger.log(`Subscription ${this._dialog?this._dialog.id:void 0} transitioned to ${this._state}`),this._stateEventEmitter.emit(this._state),t===r.Terminated&&this.dispose())}}}
//# sourceMappingURL=/dynamic/node_modules/sip.js/lib/api/33bc5265093480040b552c9eb03ad6bd413b0173.map
