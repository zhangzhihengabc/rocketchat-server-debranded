function module(e,s,i){let t,r,n,o,a,d,h,l;i.export({Inviter:()=>c}),i.link("../core",{C(e){t=e},Grammar(e){r=e},SignalingState(e){n=e}},0),i.link("../core/messages/utils",{getReasonPhrase(e){o=e},newTag(e){a=e}},1),i.link("./session",{Session(e){d=e}},2),i.link("./session-state",{SessionState(e){h=e}},3),i.link("./user-agent-options",{SIPExtension(e){l=e}},4);class c extends d{constructor(e,s,i={}){super(e,i),this.disposed=!1,this.earlyMedia=!1,this.earlyMediaSessionDescriptionHandlers=new Map,this.isCanceled=!1,this.inviteWithoutSdp=!1,this.logger=e.getLogger("sip.Inviter"),this.earlyMedia=void 0!==i.earlyMedia?i.earlyMedia:this.earlyMedia,this.fromTag=a(),this.inviteWithoutSdp=void 0!==i.inviteWithoutSdp?i.inviteWithoutSdp:this.inviteWithoutSdp;let n=Object.assign({},i);n.params=Object.assign({},i.params);let o=i.anonymous||!1,d=e.contact.toString({anonymous:o,outbound:o?!e.contact.tempGruu:!e.contact.pubGruu});o&&e.configuration.uri&&(n.params.fromDisplayName="Anonymous",n.params.fromUri="sip:anonymous@anonymous.invalid");let h=e.userAgentCore.configuration.aor;if(n.params.fromUri&&(h="string"==typeof n.params.fromUri?r.URIParse(n.params.fromUri):n.params.fromUri),!h)throw TypeError("Invalid from URI: "+n.params.fromUri);let c=s;if(n.params.toUri&&(c="string"==typeof n.params.toUri?r.URIParse(n.params.toUri):n.params.toUri),!c)throw TypeError("Invalid to URI: "+n.params.toUri);let g=Object.assign({},n.params);g.fromTag=this.fromTag;let p=(n.extraHeaders||[]).slice();o&&e.configuration.uri&&(p.push("P-Preferred-Identity: "+e.configuration.uri.toString()),p.push("Privacy: id")),p.push("Contact: "+d),p.push("Allow: "+["ACK","CANCEL","INVITE","MESSAGE","BYE","OPTIONS","INFO","NOTIFY","REFER"].toString()),e.configuration.sipExtension100rel===l.Required&&p.push("Require: 100rel"),e.configuration.sipExtensionReplaces===l.Required&&p.push("Require: replaces"),n.extraHeaders=p,this.outgoingRequestMessage=e.userAgentCore.makeOutgoingRequestMessage(t.INVITE,s,h,c,g,p,void 0),this._contact=d,this._referralInviterOptions=n,this._renderbody=i.renderbody,this._rendertype=i.rendertype,i.sessionDescriptionHandlerModifiers&&(this.sessionDescriptionHandlerModifiers=i.sessionDescriptionHandlerModifiers),i.sessionDescriptionHandlerOptions&&(this.sessionDescriptionHandlerOptions=i.sessionDescriptionHandlerOptions),i.sessionDescriptionHandlerModifiersReInvite&&(this.sessionDescriptionHandlerModifiersReInvite=i.sessionDescriptionHandlerModifiersReInvite),i.sessionDescriptionHandlerOptionsReInvite&&(this.sessionDescriptionHandlerOptionsReInvite=i.sessionDescriptionHandlerOptionsReInvite),this._id=this.outgoingRequestMessage.callId+this.fromTag,this.userAgent._sessions[this._id]=this}dispose(){if(this.disposed)return Promise.resolve();switch(this.disposed=!0,this.disposeEarlyMedia(),this.state){case h.Initial:case h.Establishing:return this.cancel().then(()=>super.dispose());case h.Established:case h.Terminating:case h.Terminated:return super.dispose();default:throw Error("Unknown state.")}}get body(){return this.outgoingRequestMessage.body}get localIdentity(){return this.outgoingRequestMessage.from}get remoteIdentity(){return this.outgoingRequestMessage.to}get request(){return this.outgoingRequestMessage}cancel(e={}){if(this.logger.log("Inviter.cancel"),this.state!==h.Initial&&this.state!==h.Establishing){let e=Error(`Invalid session state ${this.state}`);return this.logger.error(e.message),Promise.reject(e)}if(this.isCanceled=!0,this.stateTransition(h.Terminating),this.outgoingInviteRequest){let s;e.statusCode&&e.reasonPhrase&&(s=function(e,s){if(e&&e<200||e>699)throw TypeError("Invalid statusCode: "+e);if(e){let i=o(e)||s;return"SIP;cause="+e+';text="'+i+'"'}}(e.statusCode,e.reasonPhrase)),this.outgoingInviteRequest.cancel(s,e)}else this.logger.warn("Canceled session before INVITE was sent"),this.stateTransition(h.Terminated);return Promise.resolve()}invite(e={}){if(this.logger.log("Inviter.invite"),this.state!==h.Initial)return super.invite(e);if(e.sessionDescriptionHandlerModifiers&&(this.sessionDescriptionHandlerModifiers=e.sessionDescriptionHandlerModifiers),e.sessionDescriptionHandlerOptions&&(this.sessionDescriptionHandlerOptions=e.sessionDescriptionHandlerOptions),e.withoutSdp||this.inviteWithoutSdp)return this._renderbody&&this._rendertype&&(this.outgoingRequestMessage.body={contentType:this._rendertype,body:this._renderbody}),this.stateTransition(h.Establishing),Promise.resolve(this.sendInvite(e));let s={sessionDescriptionHandlerModifiers:this.sessionDescriptionHandlerModifiers,sessionDescriptionHandlerOptions:this.sessionDescriptionHandlerOptions};return this.getOffer(s).then(s=>(this.outgoingRequestMessage.body={body:s.content,contentType:s.contentType},this.stateTransition(h.Establishing),this.sendInvite(e))).catch(e=>{throw this.logger.log(e.message),this.stateTransition(h.Terminated),e})}sendInvite(e={}){return this.outgoingInviteRequest=this.userAgent.userAgentCore.invite(this.outgoingRequestMessage,{onAccept:s=>{if(this.dialog){this.logger.log("Additional confirmed dialog, sending ACK and BYE"),this.ackAndBye(s);return}if(this.isCanceled){this.logger.log("Canceled session accepted, sending ACK and BYE"),this.ackAndBye(s),this.stateTransition(h.Terminated);return}this.notifyReferer(s),this.onAccept(s).then(()=>{this.disposeEarlyMedia()}).catch(()=>{this.disposeEarlyMedia()}).then(()=>{e.requestDelegate&&e.requestDelegate.onAccept&&e.requestDelegate.onAccept(s)})},onProgress:s=>{this.isCanceled||(this.notifyReferer(s),this.onProgress(s).catch(()=>{this.disposeEarlyMedia()}).then(()=>{e.requestDelegate&&e.requestDelegate.onProgress&&e.requestDelegate.onProgress(s)}))},onRedirect:s=>{this.notifyReferer(s),this.onRedirect(s),e.requestDelegate&&e.requestDelegate.onRedirect&&e.requestDelegate.onRedirect(s)},onReject:s=>{this.notifyReferer(s),this.onReject(s),e.requestDelegate&&e.requestDelegate.onReject&&e.requestDelegate.onReject(s)},onTrying:s=>{this.notifyReferer(s),this.onTrying(s),e.requestDelegate&&e.requestDelegate.onTrying&&e.requestDelegate.onTrying(s)}}),this.outgoingInviteRequest}disposeEarlyMedia(){this.earlyMediaSessionDescriptionHandlers.forEach(e=>{e.close()}),this.earlyMediaSessionDescriptionHandlers.clear()}notifyReferer(e){if(!this._referred)return;if(!(this._referred instanceof d))throw Error("Referred session not instance of session");if(!this._referred.dialog)return;if(!e.message.statusCode)throw Error("Status code undefined.");if(!e.message.reasonPhrase)throw Error("Reason phrase undefined.");let s=e.message.statusCode,i=e.message.reasonPhrase,t=`SIP/2.0 ${s} ${i}`.trim(),r=this._referred.dialog.notify(void 0,{extraHeaders:["Event: refer","Subscription-State: terminated"],body:{contentDisposition:"render",contentType:"message/sipfrag",content:t}});r.delegate={onReject:()=>{this._referred=void 0}}}onAccept(e){if(this.logger.log("Inviter.onAccept"),this.state!==h.Establishing)return this.logger.error(`Accept received while in state ${this.state}, dropping response`),Promise.reject(Error(`Invalid session state ${this.state}`));let s=e.message,i=e.session;switch(s.hasHeader("P-Asserted-Identity")&&(this._assertedIdentity=r.nameAddrHeaderParse(s.getHeader("P-Asserted-Identity"))),i.delegate={onAck:e=>this.onAckRequest(e),onBye:e=>this.onByeRequest(e),onInfo:e=>this.onInfoRequest(e),onInvite:e=>this.onInviteRequest(e),onMessage:e=>this.onMessageRequest(e),onNotify:e=>this.onNotifyRequest(e),onPrack:e=>this.onPrackRequest(e),onRefer:e=>this.onReferRequest(e)},this._dialog=i,i.signalingState){case n.Initial:case n.HaveLocalOffer:return this.logger.error("Received 2xx response to INVITE without a session description"),this.ackAndBye(e,400,"Missing session description"),this.stateTransition(h.Terminated),Promise.reject(Error("Bad Media Description"));case n.HaveRemoteOffer:{if(!this._dialog.offer)throw Error(`Session offer undefined in signaling state ${this._dialog.signalingState}.`);let s={sessionDescriptionHandlerModifiers:this.sessionDescriptionHandlerModifiers,sessionDescriptionHandlerOptions:this.sessionDescriptionHandlerOptions};return this.setOfferAndGetAnswer(this._dialog.offer,s).then(s=>{e.ack({body:s}),this.stateTransition(h.Established)}).catch(s=>{throw this.ackAndBye(e,488,"Invalid session description"),this.stateTransition(h.Terminated),s})}case n.Stable:{if(this.earlyMediaSessionDescriptionHandlers.size>0){let s=this.earlyMediaSessionDescriptionHandlers.get(i.id);if(!s)throw Error("Session description handler undefined.");return this.setSessionDescriptionHandler(s),this.earlyMediaSessionDescriptionHandlers.delete(i.id),e.ack(),this.stateTransition(h.Established),Promise.resolve()}if(this.earlyMediaDialog){if(this.earlyMediaDialog!==i){this.earlyMedia&&this.logger.error("You have set the 'earlyMedia' option to 'true' which requires that your INVITE requests do not fork and yet this INVITE request did in fact fork. Consequentially and not surprisingly the end point which accepted the INVITE (confirmed dialog) does not match the end point with which early media has been setup (early dialog) and thus this session is unable to proceed. In accordance with the SIP specifications, the SIP servers your end point is connected to determine if an INVITE forks and the forking behavior of those servers cannot be controlled by this library. If you wish to use early media with this library you must configure those servers accordingly. Alternatively you may set the 'earlyMedia' to 'false' which will allow this library to function with any INVITE requests which do fork.");let s=Error("Early media dialog does not equal confirmed dialog, terminating session");return this.logger.error(s.message),this.ackAndBye(e,488,"Not Acceptable Here"),this.stateTransition(h.Terminated),Promise.reject(s)}return e.ack(),this.stateTransition(h.Established),Promise.resolve()}let s=i.answer;if(!s)throw Error("Answer is undefined.");let t={sessionDescriptionHandlerModifiers:this.sessionDescriptionHandlerModifiers,sessionDescriptionHandlerOptions:this.sessionDescriptionHandlerOptions};return this.setAnswer(s,t).then(()=>{let s;this._renderbody&&this._rendertype&&(s={body:{contentDisposition:"render",contentType:this._rendertype,content:this._renderbody}}),e.ack(s),this.stateTransition(h.Established)}).catch(s=>{throw this.logger.error(s.message),this.ackAndBye(e,488,"Not Acceptable Here"),this.stateTransition(h.Terminated),s})}case n.Closed:return Promise.reject(Error("Terminated."));default:throw Error("Unknown session signaling state.")}}onProgress(e){var s;if(this.logger.log("Inviter.onProgress"),this.state!==h.Establishing)return this.logger.error(`Progress received while in state ${this.state}, dropping response`),Promise.reject(Error(`Invalid session state ${this.state}`));if(!this.outgoingInviteRequest)throw Error("Outgoing INVITE request undefined.");let i=e.message,t=e.session;i.hasHeader("P-Asserted-Identity")&&(this._assertedIdentity=r.nameAddrHeaderParse(i.getHeader("P-Asserted-Identity")));let o=i.getHeader("require"),a=i.getHeader("rseq"),d=o&&o.includes("100rel")&&a?Number(a):void 0,l=!!d,c=[];switch(l&&c.push("RAck: "+i.getHeader("rseq")+" "+i.getHeader("cseq")),t.signalingState){case n.Initial:return l&&(this.logger.warn("First reliable provisional response received MUST contain an offer when INVITE does not contain an offer."),e.prack({extraHeaders:c})),Promise.resolve();case n.HaveLocalOffer:return l&&e.prack({extraHeaders:c}),Promise.resolve();case n.HaveRemoteOffer:if(!l)return this.logger.warn("Non-reliable provisional response MUST NOT contain an initial offer, discarding response."),Promise.resolve();{let r=this.sessionDescriptionHandlerFactory(this,this.userAgent.configuration.sessionDescriptionHandlerFactoryOptions||{});return(null===(s=this.delegate)||void 0===s?void 0:s.onSessionDescriptionHandler)&&this.delegate.onSessionDescriptionHandler(r,!0),this.earlyMediaSessionDescriptionHandlers.set(t.id,r),r.setDescription(i.body,this.sessionDescriptionHandlerOptions,this.sessionDescriptionHandlerModifiers).then(()=>r.getDescription(this.sessionDescriptionHandlerOptions,this.sessionDescriptionHandlerModifiers)).then(s=>{let i={contentDisposition:"session",contentType:s.contentType,content:s.body};e.prack({extraHeaders:c,body:i})}).catch(e=>{throw this.stateTransition(h.Terminated),e})}case n.Stable:if(l&&e.prack({extraHeaders:c}),this.earlyMedia&&!this.earlyMediaDialog){this.earlyMediaDialog=t;let e=t.answer;if(!e)throw Error("Answer is undefined.");let s={sessionDescriptionHandlerModifiers:this.sessionDescriptionHandlerModifiers,sessionDescriptionHandlerOptions:this.sessionDescriptionHandlerOptions};return this.setAnswer(e,s).catch(e=>{throw this.stateTransition(h.Terminated),e})}return Promise.resolve();case n.Closed:return Promise.reject(Error("Terminated."));default:throw Error("Unknown session signaling state.")}}onRedirect(e){if(this.logger.log("Inviter.onRedirect"),this.state!==h.Establishing&&this.state!==h.Terminating){this.logger.error(`Redirect received while in state ${this.state}, dropping response`);return}this.stateTransition(h.Terminated)}onReject(e){if(this.logger.log("Inviter.onReject"),this.state!==h.Establishing&&this.state!==h.Terminating){this.logger.error(`Reject received while in state ${this.state}, dropping response`);return}this.stateTransition(h.Terminated)}onTrying(e){if(this.logger.log("Inviter.onTrying"),this.state!==h.Establishing){this.logger.error(`Trying received while in state ${this.state}, dropping response`);return}}}}
//# sourceMappingURL=/dynamic/node_modules/sip.js/lib/api/efcc97a60fc7f59fe92603d1aa34ac0adc7cb38a.map
