function module(t,e,i){let s,h;function n(t){return s.hashStr(t)}i.export({DigestAuthentication:()=>o}),i.link("./md5",{Md5(t){s=t}},0),i.link("./utils",{createRandomToken(t){h=t}},1);class o{constructor(t,e,i,s){this.logger=t.getLogger("sipjs.digestauthentication"),this.username=i,this.password=s,this.ha1=e,this.nc=0,this.ncHex="00000000"}authenticate(t,e,i){if(this.algorithm=e.algorithm,this.realm=e.realm,this.nonce=e.nonce,this.opaque=e.opaque,this.stale=e.stale,this.algorithm){if("MD5"!==this.algorithm)return this.logger.warn("challenge with Digest algorithm different than 'MD5', authentication aborted"),!1}else this.algorithm="MD5";if(!this.realm)return this.logger.warn("challenge without Digest realm, authentication aborted"),!1;if(!this.nonce)return this.logger.warn("challenge without Digest nonce, authentication aborted"),!1;if(e.qop){if(e.qop.indexOf("auth")>-1)this.qop="auth";else{if(!(e.qop.indexOf("auth-int")>-1))return this.logger.warn("challenge without Digest qop different than 'auth' or 'auth-int', authentication aborted"),!1;this.qop="auth-int"}}else this.qop=void 0;return this.method=t.method,this.uri=t.ruri,this.cnonce=h(12),this.nc+=1,this.updateNcHex(),4294967296===this.nc&&(this.nc=1,this.ncHex="00000001"),this.calculateResponse(i),!0}toString(){let t=[];if(!this.response)throw Error("response field does not exist, cannot generate Authorization header");return t.push("algorithm="+this.algorithm),t.push('username="'+this.username+'"'),t.push('realm="'+this.realm+'"'),t.push('nonce="'+this.nonce+'"'),t.push('uri="'+this.uri+'"'),t.push('response="'+this.response+'"'),this.opaque&&t.push('opaque="'+this.opaque+'"'),this.qop&&(t.push("qop="+this.qop),t.push('cnonce="'+this.cnonce+'"'),t.push("nc="+this.ncHex)),"Digest "+t.join(", ")}updateNcHex(){let t=Number(this.nc).toString(16);this.ncHex="00000000".substr(0,8-t.length)+t}calculateResponse(t){let e,i;(""===(e=this.ha1)||void 0===e)&&(e=n(this.username+":"+this.realm+":"+this.password)),"auth"===this.qop?(i=n(this.method+":"+this.uri),this.response=n(e+":"+this.nonce+":"+this.ncHex+":"+this.cnonce+":auth:"+i)):"auth-int"===this.qop?(i=n(this.method+":"+this.uri+":"+n(t||"")),this.response=n(e+":"+this.nonce+":"+this.ncHex+":"+this.cnonce+":auth-int:"+i)):void 0===this.qop&&(i=n(this.method+":"+this.uri),this.response=n(e+":"+this.nonce+":"+i))}}}
//# sourceMappingURL=/dynamic/node_modules/sip.js/lib/core/messages/5b2cf3984af2e8c05a5130b081acf54c1c12693c.map
