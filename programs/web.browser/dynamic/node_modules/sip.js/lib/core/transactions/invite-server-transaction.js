function module(e,t,s){let r,i,o,n;s.export({InviteServerTransaction:()=>a}),s.link("../messages",{C(e){r=e}},0),s.link("../timers",{Timers(e){i=e}},1),s.link("./server-transaction",{ServerTransaction(e){o=e}},2),s.link("./transaction-state",{TransactionState(e){n=e}},3);class a extends o{constructor(e,t,s){super(e,t,s,n.Proceeding,"sip.transaction.ist")}dispose(){this.stopProgressExtensionTimer(),this.H&&(clearTimeout(this.H),this.H=void 0),this.I&&(clearTimeout(this.I),this.I=void 0),this.L&&(clearTimeout(this.L),this.L=void 0),super.dispose()}get kind(){return"ist"}receiveRequest(e){switch(this.state){case n.Proceeding:if(e.method===r.INVITE){this.lastProvisionalResponse&&this.send(this.lastProvisionalResponse).catch(e=>{this.logTransportError(e,"Failed to send retransmission of provisional response.")});return}break;case n.Accepted:if(e.method===r.INVITE)return;break;case n.Completed:if(e.method===r.INVITE){if(!this.lastFinalResponse)throw Error("Last final response undefined.");this.send(this.lastFinalResponse).catch(e=>{this.logTransportError(e,"Failed to send retransmission of final response.")});return}if(e.method===r.ACK){this.stateTransition(n.Confirmed);return}break;case n.Confirmed:case n.Terminated:if(e.method===r.INVITE||e.method===r.ACK)return;break;default:throw Error(`Invalid state ${this.state}`)}let t=`INVITE server transaction received unexpected ${e.method} request while in state ${this.state}.`;this.logger.warn(t)}receiveResponse(e,t){if(e<100||e>699)throw Error(`Invalid status code ${e}`);switch(this.state){case n.Proceeding:if(e>=100&&e<=199){this.lastProvisionalResponse=t,e>100&&this.startProgressExtensionTimer(),this.send(t).catch(e=>{this.logTransportError(e,"Failed to send 1xx response.")});return}if(e>=200&&e<=299){this.lastFinalResponse=t,this.stateTransition(n.Accepted),this.send(t).catch(e=>{this.logTransportError(e,"Failed to send 2xx response.")});return}if(e>=300&&e<=699){this.lastFinalResponse=t,this.stateTransition(n.Completed),this.send(t).catch(e=>{this.logTransportError(e,"Failed to send non-2xx final response.")});return}break;case n.Accepted:if(e>=200&&e<=299){this.send(t).catch(e=>{this.logTransportError(e,"Failed to send 2xx response.")});return}break;case n.Completed:case n.Confirmed:case n.Terminated:break;default:throw Error(`Invalid state ${this.state}`)}let s=`INVITE server transaction received unexpected ${e} response from TU while in state ${this.state}.`;throw this.logger.error(s),Error(s)}retransmitAcceptedResponse(){this.state===n.Accepted&&this.lastFinalResponse&&this.send(this.lastFinalResponse).catch(e=>{this.logTransportError(e,"Failed to send 2xx response.")})}onTransportError(e){this.user.onTransportError&&this.user.onTransportError(e)}typeToString(){return"INVITE server transaction"}stateTransition(e){let t=()=>{throw Error(`Invalid state transition from ${this.state} to ${e}`)};switch(e){case n.Proceeding:t();break;case n.Accepted:case n.Completed:this.state!==n.Proceeding&&t();break;case n.Confirmed:this.state!==n.Completed&&t();break;case n.Terminated:this.state!==n.Accepted&&this.state!==n.Completed&&this.state!==n.Confirmed&&t();break;default:t()}this.stopProgressExtensionTimer(),e===n.Accepted&&(this.L=setTimeout(()=>this.timerL(),i.TIMER_L)),e===n.Completed&&(this.H=setTimeout(()=>this.timerH(),i.TIMER_H)),e===n.Confirmed&&(this.I=setTimeout(()=>this.timerI(),i.TIMER_I)),e===n.Terminated&&this.dispose(),this.setState(e)}startProgressExtensionTimer(){void 0===this.progressExtensionTimer&&(this.progressExtensionTimer=setInterval(()=>{if(this.logger.debug(`Progress extension timer expired for INVITE server transaction ${this.id}.`),!this.lastProvisionalResponse)throw Error("Last provisional response undefined.");this.send(this.lastProvisionalResponse).catch(e=>{this.logTransportError(e,"Failed to send retransmission of provisional response.")})},i.PROVISIONAL_RESPONSE_INTERVAL))}stopProgressExtensionTimer(){void 0!==this.progressExtensionTimer&&(clearInterval(this.progressExtensionTimer),this.progressExtensionTimer=void 0)}timerG(){}timerH(){this.logger.debug(`Timer H expired for INVITE server transaction ${this.id}.`),this.state===n.Completed&&(this.logger.warn("ACK to negative final response was never received, terminating transaction."),this.stateTransition(n.Terminated))}timerI(){this.logger.debug(`Timer I expired for INVITE server transaction ${this.id}.`),this.stateTransition(n.Terminated)}timerL(){this.logger.debug(`Timer L expired for INVITE server transaction ${this.id}.`),this.state===n.Accepted&&this.stateTransition(n.Terminated)}}}
//# sourceMappingURL=/dynamic/node_modules/sip.js/lib/core/transactions/e7d15b360130a4032362ef9427b47daa7a0191cb.map
