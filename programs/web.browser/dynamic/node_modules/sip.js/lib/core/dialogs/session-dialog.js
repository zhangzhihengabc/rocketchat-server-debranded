function module(e,t,i){let s,r,n,a,o,g,l,h,c,d,f,u,v,m,T,I,S,k,p,A,w,x,E,C,b,y,N,q;i.export({SessionDialog:()=>U}),i.link("../messages",{C(e){s=e},getBody(e){r=e},IncomingRequestMessage(e){n=e},IncomingResponseMessage(e){a=e},isBody(e){o=e},NameAddrHeader(e){g=e},OutgoingRequestMessage(e){l=e}},0),i.link("../session",{SessionState(e){h=e},SignalingState(e){c=e}},1),i.link("../timers",{Timers(e){d=e}},2),i.link("../transactions",{InviteClientTransaction(e){f=e},InviteServerTransaction(e){u=e},TransactionState(e){v=e}},3),i.link("../user-agents/bye-user-agent-client",{ByeUserAgentClient(e){m=e}},4),i.link("../user-agents/bye-user-agent-server",{ByeUserAgentServer(e){T=e}},5),i.link("../user-agents/info-user-agent-client",{InfoUserAgentClient(e){I=e}},6),i.link("../user-agents/info-user-agent-server",{InfoUserAgentServer(e){S=e}},7),i.link("../user-agents/message-user-agent-client",{MessageUserAgentClient(e){k=e}},8),i.link("../user-agents/message-user-agent-server",{MessageUserAgentServer(e){p=e}},9),i.link("../user-agents/notify-user-agent-client",{NotifyUserAgentClient(e){A=e}},10),i.link("../user-agents/notify-user-agent-server",{NotifyUserAgentServer(e){w=e}},11),i.link("../user-agents/prack-user-agent-client",{PrackUserAgentClient(e){x=e}},12),i.link("../user-agents/prack-user-agent-server",{PrackUserAgentServer(e){E=e}},13),i.link("../user-agents/re-invite-user-agent-client",{ReInviteUserAgentClient(e){C=e}},14),i.link("../user-agents/re-invite-user-agent-server",{ReInviteUserAgentServer(e){b=e}},15),i.link("../user-agents/refer-user-agent-client",{ReferUserAgentClient(e){y=e}},16),i.link("../user-agents/refer-user-agent-server",{ReferUserAgentServer(e){N=e}},17),i.link("./dialog",{Dialog(e){q=e}},18);class U extends q{constructor(e,t,i,s){super(t,i),this.initialTransaction=e,this._signalingState=c.Initial,this.ackWait=!1,this.ackProcessing=!1,this.delegate=s,e instanceof u&&(this.ackWait=!0),this.early||this.start2xxRetransmissionTimer(),this.signalingStateTransition(e.request),this.logger=t.loggerFactory.getLogger("sip.invite-dialog"),this.logger.log(`INVITE dialog ${this.id} constructed`)}dispose(){super.dispose(),this._signalingState=c.Closed,this._offer=void 0,this._answer=void 0,this.invite2xxTimer&&(clearTimeout(this.invite2xxTimer),this.invite2xxTimer=void 0),this.logger.log(`INVITE dialog ${this.id} destroyed`)}get sessionState(){return this.early?h.Early:this.ackWait?h.AckWait:this._signalingState===c.Closed?h.Terminated:h.Confirmed}get signalingState(){return this._signalingState}get offer(){return this._offer}get answer(){return this._answer}confirm(){this.early&&this.start2xxRetransmissionTimer(),super.confirm()}reConfirm(){this.reinviteUserAgentServer&&this.startReInvite2xxRetransmissionTimer()}ack(e={}){let t;if(this.logger.log(`INVITE dialog ${this.id} sending ACK request`),this.reinviteUserAgentClient){if(!(this.reinviteUserAgentClient.transaction instanceof f))throw Error("Transaction not instance of InviteClientTransaction.");t=this.reinviteUserAgentClient.transaction,this.reinviteUserAgentClient=void 0}else{if(!(this.initialTransaction instanceof f))throw Error("Initial transaction not instance of InviteClientTransaction.");t=this.initialTransaction}let i=this.createOutgoingRequestMessage(s.ACK,{cseq:t.request.cseq,extraHeaders:e.extraHeaders,body:e.body});return t.ackResponse(i),this.signalingStateTransition(i),{message:i}}bye(e,t){if(this.logger.log(`INVITE dialog ${this.id} sending BYE request`),this.initialTransaction instanceof u){if(this.early)throw Error("UAS MUST NOT send a BYE on early dialogs.");if(this.ackWait&&this.initialTransaction.state!==v.Terminated)throw Error("UAS MUST NOT send a BYE on a confirmed dialog until it has received an ACK for its 2xx response or until the server transaction times out.")}return new m(this,e,t)}info(e,t){if(this.logger.log(`INVITE dialog ${this.id} sending INFO request`),this.early)throw Error("Dialog not confirmed.");return new I(this,e,t)}invite(e,t){if(this.logger.log(`INVITE dialog ${this.id} sending INVITE request`),this.early)throw Error("Dialog not confirmed.");if(this.reinviteUserAgentClient)throw Error("There is an ongoing re-INVITE client transaction.");if(this.reinviteUserAgentServer)throw Error("There is an ongoing re-INVITE server transaction.");return new C(this,e,t)}message(e,t){if(this.logger.log(`INVITE dialog ${this.id} sending MESSAGE request`),this.early)throw Error("Dialog not confirmed.");let i=this.createOutgoingRequestMessage(s.MESSAGE,t);return new k(this.core,i,e)}notify(e,t){if(this.logger.log(`INVITE dialog ${this.id} sending NOTIFY request`),this.early)throw Error("Dialog not confirmed.");return new A(this,e,t)}prack(e,t){return this.logger.log(`INVITE dialog ${this.id} sending PRACK request`),new x(this,e,t)}refer(e,t){if(this.logger.log(`INVITE dialog ${this.id} sending REFER request`),this.early)throw Error("Dialog not confirmed.");return new y(this,e,t)}receiveRequest(e){if(this.logger.log(`INVITE dialog ${this.id} received ${e.method} request`),e.method===s.ACK){if(this.ackWait){if(this.initialTransaction instanceof f||this.initialTransaction.request.cseq!==e.cseq){this.logger.warn(`INVITE dialog ${this.id} received unexpected ${e.method} request, dropping.`);return}this.ackWait=!1}else{if(!this.reinviteUserAgentServer||this.reinviteUserAgentServer.transaction.request.cseq!==e.cseq){this.logger.warn(`INVITE dialog ${this.id} received unexpected ${e.method} request, dropping.`);return}this.reinviteUserAgentServer=void 0}if(this.signalingStateTransition(e),this.delegate&&this.delegate.onAck){let t=this.delegate.onAck({message:e});t instanceof Promise&&(this.ackProcessing=!0,t.then(()=>this.ackProcessing=!1).catch(()=>this.ackProcessing=!1))}return}if(!this.sequenceGuard(e)){this.logger.log(`INVITE dialog ${this.id} rejected out of order ${e.method} request.`);return}if(super.receiveRequest(e),e.method===s.INVITE){let t=[`Retry-After: ${Math.floor(10*Math.random())+1}`];if(this.ackProcessing||this.ackWait&&this.signalingState!==c.Stable){this.core.replyStateless(e,{statusCode:500,extraHeaders:t}),(()=>{let e=this.ackWait?"waiting for initial ACK":"processing initial ACK";this.logger.warn(`INVITE dialog ${this.id} received re-INVITE while ${e}`);let t="RFC 5407 suggests the following to avoid this race condition... ";t+=" Note: Implementation issues are outside the scope of this document, but the following tip is provided for avoiding race conditions of this type.  The caller can delay sending re-INVITE F6 for some period of time (2 seconds, perhaps), after which the caller can reasonably assume that its ACK has been received.  Implementors can decouple the actions of the user (e.g., pressing the hold button) from the actions of the protocol (the sending of re-INVITE F6), so that the UA can behave like this.  In this case, it is the implementor's choice as to how long to wait.  In most cases, such an implementation may be useful to prevent the type of race condition shown in this section. This document expresses no preference about whether or not they should wait for an ACK to be delivered.  After considering the impact on user experience, implementors should decide whether or not to wait for a while, because the user experience depends on the implementation and has no direct bearing on protocol behavior.",this.logger.warn(t)})();return}if(this.reinviteUserAgentServer){this.core.replyStateless(e,{statusCode:500,extraHeaders:t});return}if(this.reinviteUserAgentClient){this.core.replyStateless(e,{statusCode:491});return}}if(e.method===s.INVITE){let t=e.parseHeader("contact");if(!t)throw Error("Contact undefined.");if(!(t instanceof g))throw Error("Contact not instance of NameAddrHeader.");this.dialogState.remoteTarget=t.uri}switch(e.method){case s.BYE:{let t=new T(this,e);this.delegate&&this.delegate.onBye?this.delegate.onBye(t):t.accept(),this.dispose()}break;case s.INFO:{let t=new S(this,e);this.delegate&&this.delegate.onInfo?this.delegate.onInfo(t):t.reject({statusCode:469,extraHeaders:["Recv-Info:"]})}break;case s.INVITE:{let t=new b(this,e);this.signalingStateTransition(e),this.delegate&&this.delegate.onInvite?this.delegate.onInvite(t):t.reject({statusCode:488})}break;case s.MESSAGE:{let t=new p(this.core,e);this.delegate&&this.delegate.onMessage?this.delegate.onMessage(t):t.accept()}break;case s.NOTIFY:{let t=new w(this,e);this.delegate&&this.delegate.onNotify?this.delegate.onNotify(t):t.accept()}break;case s.PRACK:{let t=new E(this,e);this.delegate&&this.delegate.onPrack?this.delegate.onPrack(t):t.accept()}break;case s.REFER:{let t=new N(this,e);this.delegate&&this.delegate.onRefer?this.delegate.onRefer(t):t.reject()}break;default:this.logger.log(`INVITE dialog ${this.id} received unimplemented ${e.method} request`),this.core.replyStateless(e,{statusCode:501})}}reliableSequenceGuard(e){let t=e.statusCode;if(!t)throw Error("Status code undefined");if(t>100&&t<200){let t=e.getHeader("require"),i=e.getHeader("rseq"),s=t&&t.includes("100rel")&&i?Number(i):void 0;if(s){if(this.rseq&&this.rseq+1!==s)return!1;this.rseq=this.rseq?this.rseq+1:s}}return!0}signalingStateRollback(){(this._signalingState===c.HaveLocalOffer||this.signalingState===c.HaveRemoteOffer)&&this._rollbackOffer&&this._rollbackAnswer&&(this._signalingState=c.Stable,this._offer=this._rollbackOffer,this._answer=this._rollbackAnswer)}signalingStateTransition(e){let t=r(e);if(t&&"session"===t.contentDisposition){if(this._signalingState===c.Stable&&(this._rollbackOffer=this._offer,this._rollbackAnswer=this._answer),e instanceof n||e instanceof a)switch(this._signalingState){case c.Initial:case c.Stable:this._signalingState=c.HaveRemoteOffer,this._offer=t,this._answer=void 0;break;case c.HaveLocalOffer:this._signalingState=c.Stable,this._answer=t;break;case c.HaveRemoteOffer:case c.Closed:break;default:throw Error("Unexpected signaling state.")}if(e instanceof l||o(e))switch(this._signalingState){case c.Initial:case c.Stable:this._signalingState=c.HaveLocalOffer,this._offer=t,this._answer=void 0;break;case c.HaveLocalOffer:break;case c.HaveRemoteOffer:this._signalingState=c.Stable,this._answer=t;break;case c.Closed:break;default:throw Error("Unexpected signaling state.")}}}start2xxRetransmissionTimer(){if(this.initialTransaction instanceof u){let e=this.initialTransaction,t=d.T1,i=()=>{if(!this.ackWait){this.invite2xxTimer=void 0;return}this.logger.log("No ACK for 2xx response received, attempting retransmission"),e.retransmitAcceptedResponse(),t=Math.min(2*t,d.T2),this.invite2xxTimer=setTimeout(i,t)};this.invite2xxTimer=setTimeout(i,t);let s=()=>{e.state===v.Terminated&&(e.removeStateChangeListener(s),this.invite2xxTimer&&(clearTimeout(this.invite2xxTimer),this.invite2xxTimer=void 0),this.ackWait&&(this.delegate&&this.delegate.onAckTimeout?this.delegate.onAckTimeout():this.bye()))};e.addStateChangeListener(s)}}startReInvite2xxRetransmissionTimer(){if(this.reinviteUserAgentServer&&this.reinviteUserAgentServer.transaction instanceof u){let e=this.reinviteUserAgentServer.transaction,t=d.T1,i=()=>{if(!this.reinviteUserAgentServer){this.invite2xxTimer=void 0;return}this.logger.log("No ACK for 2xx response received, attempting retransmission"),e.retransmitAcceptedResponse(),t=Math.min(2*t,d.T2),this.invite2xxTimer=setTimeout(i,t)};this.invite2xxTimer=setTimeout(i,t);let s=()=>{e.state===v.Terminated&&(e.removeStateChangeListener(s),this.invite2xxTimer&&(clearTimeout(this.invite2xxTimer),this.invite2xxTimer=void 0),this.reinviteUserAgentServer)};e.addStateChangeListener(s)}}}}
//# sourceMappingURL=/dynamic/node_modules/sip.js/lib/core/dialogs/3cd8db98460a5e330862f354b28a7977563879b1.map
