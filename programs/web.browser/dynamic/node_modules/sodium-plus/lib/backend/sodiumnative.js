function module(e,t,r){(function(t){let o,s=!1;try{o=e("sodium-native"),s=!0}catch(e){o={}}let a=e("../backend"),i=e("../cryptography-key"),u=e("../sodium-error"),f=e("../util"),c=e("typedarray-to-buffer");"undefined"==typeof Buffer&&e("buffer/").Buffer,r.exports=class e extends a{constructor(e){super(e),this.sodium=e,this.backendName="SodiumNativeBackend"}static async init(){if(!s)throw new u("sodium-native not installed");return new e(o)}async crypto_aead_xchacha20poly1305_ietf_decrypt(e,t,r,o){let s=Buffer.alloc(e.length-16,0);return this.sodium.crypto_aead_xchacha20poly1305_ietf_decrypt(s,null,await f.toBuffer(e),await f.toBuffer(t),await f.toBuffer(r),o.getBuffer()),s}async crypto_aead_xchacha20poly1305_ietf_encrypt(e,t,r,o){let s=Buffer.alloc(e.length+16,0);return this.sodium.crypto_aead_xchacha20poly1305_ietf_encrypt(s,await f.toBuffer(e),await f.toBuffer(t),null,await f.toBuffer(r),o.getBuffer()),s}async crypto_auth(e,t){let r=Buffer.alloc(32);return this.sodium.crypto_auth(r,await f.toBuffer(e),t.getBuffer()),c(r)}async crypto_auth_verify(e,t,r){return this.sodium.crypto_auth_verify(e,await f.toBuffer(t),r.getBuffer())}async crypto_box(e,t,r,o){let s=Buffer.alloc(e.length+16);return this.sodium.crypto_box_easy(s,await f.toBuffer(e),t,o.getBuffer(),r.getBuffer()),f.toBuffer(s)}async crypto_box_open(e,t,r,o){let s=Buffer.alloc(e.length-16),a=this.sodium.crypto_box_open_easy(s,e,t,o.getBuffer(),r.getBuffer());if(!a)throw new u("Decryption failed");return f.toBuffer(s)}async crypto_box_seal(e,t){let r=Buffer.alloc(e.length+48);return this.sodium.crypto_box_seal(r,await f.toBuffer(e),t.getBuffer()),f.toBuffer(r)}async crypto_box_seal_open(e,t,r){let o=Buffer.alloc(e.length-48),s=this.sodium.crypto_box_seal_open(o,await f.toBuffer(e),t.getBuffer(),r.getBuffer());if(!s)throw new u("Decryption failed");return f.toBuffer(o)}async crypto_box_keypair(){let e=Buffer.alloc(32,0),t=Buffer.alloc(32,0);return this.sodium.crypto_box_keypair(e,t),new i(Buffer.concat([t,e]))}async crypto_generichash(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:32,o=Buffer.alloc(r);return t?this.sodium.crypto_generichash(o,await f.toBuffer(e),t.getBuffer()):this.sodium.crypto_generichash(o,await f.toBuffer(e)),o}async crypto_generichash_init(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,r=Buffer.alloc(this.CRYPTO_GENERICHASH_STATEBYTES);return e?this.sodium.crypto_generichash_init(r,e.getBuffer(),t):this.sodium.crypto_generichash_init(r,null,t),r}async crypto_generichash_update(e,t){return this.sodium.crypto_generichash_update(e,await f.toBuffer(t)),e}async crypto_generichash_final(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,r=Buffer.alloc(t);return this.sodium.crypto_generichash_final(e,r),r}async crypto_kdf_derive_from_key(e,t,r,o){let s=Buffer.alloc(e,0);return this.sodium.crypto_kdf_derive_from_key(s,0|t,await f.toBuffer(r),o.getBuffer()),new i(s)}async crypto_kx_client_session_keys(e,t,r){let o=Buffer.alloc(this.CRYPTO_KX_SESSIONKEYBYTES),s=Buffer.alloc(this.CRYPTO_KX_SESSIONKEYBYTES);return this.sodium.crypto_kx_client_session_keys(o,s,e.getBuffer(),t.getBuffer(),r.getBuffer()),[new i(o),new i(s)]}async crypto_kx_server_session_keys(e,t,r){let o=Buffer.alloc(this.CRYPTO_KX_SESSIONKEYBYTES),s=Buffer.alloc(this.CRYPTO_KX_SESSIONKEYBYTES);return this.sodium.crypto_kx_server_session_keys(o,s,e.getBuffer(),t.getBuffer(),r.getBuffer()),[new i(o),new i(s)]}async crypto_onetimeauth(e,t){let r=Buffer.alloc(16);return this.sodium.crypto_onetimeauth(r,await f.toBuffer(e),t.getBuffer()),r}async crypto_onetimeauth_verify(e,t,r){return this.sodium.crypto_onetimeauth_verify(r,await f.toBuffer(e),t.getBuffer())}async crypto_pwhash(e,t,r,o,s,a){let i=Buffer.alloc(e,0),u=await f.toBuffer(t),c=await f.toBuffer(r);return await new Promise((e,t)=>{this.sodium.crypto_pwhash_async(i,u,c,o,s,a,(r,o)=>r?t(r):e(o))}),i}async crypto_pwhash_str(e,t,r){let o=Buffer.alloc(128,0),s=await f.toBuffer(e);return await new Promise((e,a)=>{this.sodium.crypto_pwhash_str_async(o,s,t,r,(t,r)=>t?a(t):e(r))}),o.toString()}async crypto_pwhash_str_verify(e,t){let r=Buffer.alloc(128,0);(await f.toBuffer(t)).copy(r,0,0);let o=await f.toBuffer(e);return new Promise((e,t)=>{this.sodium.crypto_pwhash_str_verify_async(r,o,(r,o)=>r?t(r):e(o))})}async crypto_pwhash_str_needs_rehash(e,t,r){let o=Buffer.alloc(128,0);return(await f.toBuffer(e)).copy(o,0,0),this.sodium.crypto_pwhash_str_needs_rehash(o,t,r)}async crypto_scalarmult(e,t){let r=Buffer.alloc(32);return this.sodium.crypto_scalarmult(r,e.getBuffer(),t.getBuffer()),new i(await f.toBuffer(r))}async crypto_scalarmult_base(e){let t=Buffer.alloc(32);return this.sodium.crypto_scalarmult_base(t,e.getBuffer()),t}async crypto_secretbox(e,t,r){let o=Buffer.alloc(e.length+16);return this.sodium.crypto_secretbox_easy(o,await f.toBuffer(e),t,r.getBuffer()),o}async crypto_shorthash(e,t){let r=Buffer.alloc(8);return this.sodium.crypto_shorthash(r,await f.toBuffer(e),t.getBuffer()),r}async crypto_secretbox_open(e,t,r){let o=Buffer.alloc(e.length-16);if(!this.sodium.crypto_secretbox_open_easy(o,e,t,r.getBuffer()))throw new u("Decryption failure");return o}async crypto_secretstream_xchacha20poly1305_init_push(e){let t=Buffer.alloc(this.CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_STATEBYTES),r=Buffer.alloc(this.CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_HEADERBYTES);return this.sodium.randombytes_buf(r),this.sodium.crypto_secretstream_xchacha20poly1305_init_push(t,r,e.getBuffer()),[t,r]}async crypto_secretstream_xchacha20poly1305_init_pull(e,t){if(e.length!==this.CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_HEADERBYTES)throw new u("Header must be ".concat(this.CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_HEADERBYTES," bytes long"));let r=Buffer.alloc(this.CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_STATEBYTES);return this.sodium.crypto_secretstream_xchacha20poly1305_init_pull(r,e,t.getBuffer()),r}async crypto_secretstream_xchacha20poly1305_push(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=Buffer.alloc(t.length+this.CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_ABYTES);return this.sodium.crypto_secretstream_xchacha20poly1305_push(e,s,await f.toBuffer(t),r.length>0?await f.toBuffer(r):null,Buffer.from([o])),s}async crypto_secretstream_xchacha20poly1305_pull(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;if(t.length<this.CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_ABYTES)throw new u("Invalid ciphertext size");let s=Buffer.alloc(t.length-this.CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_ABYTES);return this.sodium.crypto_secretstream_xchacha20poly1305_pull(e,s,Buffer.from([o]),t,r.length>0?await f.toBuffer(r):null),s}async crypto_secretstream_xchacha20poly1305_rekey(e){this.sodium.crypto_secretstream_xchacha20poly1305_rekey(e)}async crypto_sign(e,t){let r=Buffer.alloc(e.length+64);return this.sodium.crypto_sign(r,await f.toBuffer(e),t.getBuffer()),r}async crypto_sign_open(e,t){let r=Buffer.alloc(e.length-64);return this.sodium.crypto_sign_open(r,await f.toBuffer(e),t.getBuffer()),r}async crypto_sign_detached(e,t){let r=Buffer.alloc(64);return this.sodium.crypto_sign_detached(r,await f.toBuffer(e),t.getBuffer()),r}async crypto_sign_verify_detached(e,t,r){return this.sodium.crypto_sign_verify_detached(r,await f.toBuffer(e),t.getBuffer())}async crypto_sign_keypair(){let e=Buffer.alloc(64,0),t=Buffer.alloc(32,0);return this.sodium.crypto_sign_keypair(t,e),new i(Buffer.concat([e,t]))}async crypto_sign_seed_keypair(e){let t=Buffer.alloc(64,0),r=Buffer.alloc(32,0);return this.sodium.crypto_sign_seed_keypair(r,t,e),new i(Buffer.concat([t,r]))}async crypto_sign_ed25519_sk_to_curve25519(e){let t=Buffer.alloc(32);return this.sodium.crypto_sign_ed25519_sk_to_curve25519(t,e.getBuffer()),t}async crypto_sign_ed25519_pk_to_curve25519(e){let t=Buffer.alloc(32);return this.sodium.crypto_sign_ed25519_pk_to_curve25519(t,e.getBuffer()),t}async crypto_stream(e,t,r){let o=Buffer.alloc(e);return this.sodium.crypto_stream(o,await f.toBuffer(t),r.getBuffer()),o}async crypto_stream_xor(e,t,r){let o=Buffer.alloc(e.length);return this.sodium.crypto_stream_xor(o,await f.toBuffer(e),await f.toBuffer(t),r.getBuffer()),o}async randombytes_buf(e){let t=Buffer.alloc(e);return this.sodium.randombytes_buf(t),t}async randombytes_uniform(e){return this.sodium.randombytes_uniform(e)}async sodium_add(e,t){let r=await f.cloneBuffer(e);return this.sodium.sodium_add(r,t),r}async sodium_bin2hex(e){let t="",r,o,s;for(let a=0;a<e.length;a++)t+=String.fromCharCode(255&(s=87+(o=15&e[a])+(o-10>>8&-39)<<8|87+(r=e[a]>>>4)+(r-10>>8&-39)))+String.fromCharCode(s>>>8);return t}async sodium_compare(e,t){return this.sodium.sodium_compare(e,t)}async sodium_hex2bin(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=0,o=0,s=0,a=0,i=0,u=0,f=0,c=0,n=0,_=0,l=Buffer.alloc(e.length>>1,0);for(;o<e.length;){if(((f=(c=48^(s=e.charCodeAt(o)))-10>>8)|(i=((u=(-33&s)-55)-10^u-16)>>8))==0){if(t&&0===_&&t.indexOf(s)>=0){o++;continue}break}n=f&c|i&u,0===_?a=16*n:l[r++]=a|n,_=~_,o++}return l}async sodium_increment(e){return this.sodium.sodium_increment(e)}async sodium_is_zero(e,t){return this.sodium.sodium_is_zero(e,t)}async sodium_memcmp(e,t){return this.sodium.sodium_memcmp(e,t)}async sodium_memzero(e){this.sodium.sodium_memzero(e)}async sodium_pad(e,t){let r=(e=await f.toBuffer(e)).length+e.length%t;r<t&&(r+=t);let o=Buffer.alloc(r+100);e.copy(o,0,0);let s=this.sodium.sodium_pad(o,e.length,t);return o.slice(0,s)}async sodium_unpad(e,t){let r=this.sodium.sodium_unpad(e,e.length,t);return e.slice(0,r)}}}).call(this,r)}
//# sourceMappingURL=/dynamic/node_modules/sodium-plus/lib/backend/a43dcc5edf3fe5277de9f053814c9a694cc021a8.map
